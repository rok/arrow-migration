{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13183513",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513",
    "key": "ARROW-3184",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3184/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172\n \n \n   Apparently CMake really does not want you to do `make $TARGET install` out of the box; I searched various threads about this and there's no great solutions. For expert users, this provides that option of installing only targets that have been built, while others will be ignored. \r\n   \r\n   Because the possibility of users shooting themselves in the foot is so high with this, it doesn't make sense to enable by default. In the hands of an expert though, this can significantly reduce build times and make it possible to build libraries and unit tests for only a part of the project, then only install those libraries. \r\n   \r\n   This will install all header files regardless of what libraries are built; I didn't see any easy way to work that out since you have to have knowledge of what headers are used by what library. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T03:53:09.087+0000",
                    "updated": "2018-12-14T03:53:09.087+0000",
                    "started": "2018-12-14T03:53:09.087+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175180",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447206417\n \n \n   Hm I spoke too soon about the ARROW_GANDIVA_BUILD_TESTS option -- because `gandiva` target depends on `arrow` target, the tests for both targets will get built. Ultimately we need to give the tests their own target. This can be worked around using the crude `ARROW_TEST_INCLUDE_LABELS` option that was added a while back for the Python build\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T04:04:09.048+0000",
                    "updated": "2018-12-14T04:04:09.048+0000",
                    "started": "2018-12-14T04:04:09.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175182",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447206721\n \n \n   See https://issues.apache.org/jira/browse/ARROW-4026\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T04:06:28.167+0000",
                    "updated": "2018-12-14T04:06:28.167+0000",
                    "started": "2018-12-14T04:06:28.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175183",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447224374\n \n \n   Found a problem with ARROW_TEST_INCLUDE_LABELS. The build times should improve some. I'm headed to bed but will get this passing in the morning\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T06:06:28.460+0000",
                    "updated": "2018-12-14T06:06:28.460+0000",
                    "started": "2018-12-14T06:06:28.460+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175212",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447359889\n \n \n   @pravindra @praveenbingo I changed the default for `-DARROW_GANDIVA_JAVA` to be `OFF`, since we were building the bindings in several places in CI where we didn't need to\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T15:32:19.274+0000",
                    "updated": "2018-12-14T15:32:19.274+0000",
                    "started": "2018-12-14T15:32:19.273+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175397",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447360615\n \n \n   @pitrou @xhochy if you wouldn't mind reviewing, I'm going to continue making improvements to the build system so would like to get this in as soon as possible\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T15:34:37.075+0000",
                    "updated": "2018-12-14T15:34:37.075+0000",
                    "started": "2018-12-14T15:34:37.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175400",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#discussion_r241795834\n \n \n\n ##########\n File path: cpp/CMakeLists.txt\n ##########\n @@ -98,6 +98,10 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   set(ARROW_CXXFLAGS \"\" CACHE STRING\n     \"Compiler flags to append when compiling Arrow\")\n \n+  option(ARROW_OPTIONAL_INSTALL\n+    \"If enabled install ONLY targets that have already been built\"\n \n Review comment:\n   Can you add a comment that this is a kind of dangerous option? In the normal case, I would expect users to have turned features off completely via CMake flags; this is only something I would expect a core developer to use.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T15:41:17.287+0000",
                    "updated": "2018-12-14T15:41:17.287+0000",
                    "started": "2018-12-14T15:41:17.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175403",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#discussion_r241798238\n \n \n\n ##########\n File path: cpp/CMakeLists.txt\n ##########\n @@ -98,6 +98,10 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   set(ARROW_CXXFLAGS \"\" CACHE STRING\n     \"Compiler flags to append when compiling Arrow\")\n \n+  option(ARROW_OPTIONAL_INSTALL\n+    \"If enabled install ONLY targets that have already been built\"\n \n Review comment:\n   Done\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T15:47:24.077+0000",
                    "updated": "2018-12-14T15:47:24.077+0000",
                    "started": "2018-12-14T15:47:24.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175409",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447380211\n \n \n   Apparently there are already targets such as `src/plasma/install`:\r\n   ```\r\n   $ ninja src/plasma/install\r\n   [0/1] Install the project...\r\n   -- Install configuration: \"DEBUG\"\r\n   -- Installing: /home/antoine/miniconda3/envs/pyarrow/lib/libplasma.so.12.0.0\r\n   -- Set runtime path of \"/home/antoine/miniconda3/envs/pyarrow/lib/libplasma.so.12.0.0\" to \"\"\r\n   -- Installing: /home/antoine/miniconda3/envs/pyarrow/bin/plasma_store_server\r\n   -- Set runtime path of \"/home/antoine/miniconda3/envs/pyarrow/bin/plasma_store_server\" to \"/home/antoine/miniconda3/envs/pyarrow/lib\"\r\n   ```\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T16:38:22.952+0000",
                    "updated": "2018-12-14T16:38:22.952+0000",
                    "started": "2018-12-14T16:38:22.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175440",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#discussion_r241814772\n \n \n\n ##########\n File path: cpp/src/arrow/CMakeLists.txt\n ##########\n @@ -244,28 +243,7 @@ foreach(LIB_TARGET ${ARROW_LIBRARIES})\n endforeach()\n \n # Headers: top level\n-install(FILES\n-  allocator.h\n-  api.h\n-  array.h\n-  buffer.h\n-  builder.h\n-  compare.h\n-  memory_pool.h\n-  pretty_print.h\n-  record_batch.h\n-  status.h\n-  stl.h\n-  table.h\n-  table_builder.h\n-  tensor.h\n-  type.h\n-  type_fwd.h\n-  type_traits.h\n-  test-util.h\n-  visitor.h\n-  visitor_inline.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow\")\n \n Review comment:\n   IIRC in some cases we don't want to install all targets (some of them are private). Though I don't think we have been very consistent about this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T16:38:43.431+0000",
                    "updated": "2018-12-14T16:38:43.431+0000",
                    "started": "2018-12-14T16:38:43.430+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175442",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#discussion_r241826817\n \n \n\n ##########\n File path: cpp/src/arrow/CMakeLists.txt\n ##########\n @@ -244,28 +243,7 @@ foreach(LIB_TARGET ${ARROW_LIBRARIES})\n endforeach()\n \n # Headers: top level\n-install(FILES\n-  allocator.h\n-  api.h\n-  array.h\n-  buffer.h\n-  builder.h\n-  compare.h\n-  memory_pool.h\n-  pretty_print.h\n-  record_batch.h\n-  status.h\n-  stl.h\n-  table.h\n-  table_builder.h\n-  tensor.h\n-  type.h\n-  type_fwd.h\n-  type_traits.h\n-  test-util.h\n-  visitor.h\n-  visitor_inline.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow\")\n \n Review comment:\n   This is true. Perhaps we can come up with a naming convention for private headers so that they can be automatically excluded by this function\r\n   \r\n   I opened https://issues.apache.org/jira/browse/ARROW-4029\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T17:12:27.729+0000",
                    "updated": "2018-12-14T17:12:27.729+0000",
                    "started": "2018-12-14T17:12:27.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175467",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447391023\n \n \n   > Apparently there are already targets such as src/plasma/install\r\n   \r\n   Ah, thanks, I was not aware of this. I think we can continue to refine and document the developer workflow as the codebase grows in size\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T17:15:25.419+0000",
                    "updated": "2018-12-14T17:15:25.419+0000",
                    "started": "2018-12-14T17:15:25.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175469",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175546",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447421822\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=h1) Report\n   > Merging [#3172](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/b3bc3384f3068edebe69f1084518ccfb85a368f8?src=pr&el=desc) will **increase** coverage by `18.4%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3172/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #3172      +/-   ##\n   =========================================\n   + Coverage      68%   86.4%   +18.4%     \n   =========================================\n     Files          58     495     +437     \n     Lines        3766   69417   +65651     \n   =========================================\n   + Hits         2561   59983   +57422     \n   - Misses       1108    9333    +8225     \n   - Partials       97     101       +4\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/math/int64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2F2eDJfYW1kNjQuZ28=) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | `0% <0%> (-100%)` | :arrow_down: |\n   | [go/arrow/memory/memory\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hbWQ2NC5nbw==) | `28.57% <0%> (-14.29%)` | :arrow_down: |\n   | [go/arrow/math/math\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9tYXRoX2FtZDY0Lmdv) | `31.57% <0%> (-5.27%)` | :arrow_down: |\n   | [go/arrow/math/float64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9mbG9hdDY0X2FtZDY0Lmdv) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | `33.33% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | `67.53% <0%> (\u00f8)` | |\n   | ... and [440 more](https://codecov.io/gh/apache/arrow/pull/3172/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=footer). Last update [b3bc338...583a916](https://codecov.io/gh/apache/arrow/pull/3172?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T19:01:03.674+0000",
                    "updated": "2018-12-14T19:01:03.674+0000",
                    "started": "2018-12-14T19:01:03.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175546",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172#issuecomment-447422862\n \n \n   Merging. This builds about 80 fewer targets in the Python build now. Didn't improve overall runtime too much but it's something =) \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T19:04:08.515+0000",
                    "updated": "2018-12-14T19:04:08.515+0000",
                    "started": "2018-12-14T19:04:08.513+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175547",
                    "issueId": "13183513"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/worklog/175548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3172: ARROW-3184: [C++] Enable modular builds and installs with ARROW_OPTIONAL_INSTALL option. Remove ARROW_GANDIVA_BUILD_TESTS\nURL: https://github.com/apache/arrow/pull/3172\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/.travis.yml b/.travis.yml\nindex d1fc6dba35..d22a4e7df0 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -109,6 +109,12 @@ matrix:\n     jdk: openjdk8\n     env:\n     - ARROW_TRAVIS_GANDIVA=1\n+    - ARROW_TRAVIS_GANDIVA_JAVA=1\n+    - ARROW_TRAVIS_GANDIVA_TESTS=1\n+    - ARROW_TRAVIS_OPTIONAL_INSTALL=1\n+    - ARROW_CPP_BUILD_TARGETS=\"gandiva\"\n+    # TODO(wesm): Remove this after ARROW-4026\n+    - ARROW_TRAVIS_CPP_TEST_INCLUDE_LABELS=\"gandiva\"\n     - ARROW_TRAVIS_USE_TOOLCHAIN=1\n     # ARROW-3979 temporarily disabled.\n     - ARROW_TRAVIS_VALGRIND=0\n@@ -155,6 +161,12 @@ matrix:\n     addons:\n     env:\n     - ARROW_TRAVIS_GANDIVA=1\n+    - ARROW_TRAVIS_GANDIVA_JAVA=1\n+    - ARROW_TRAVIS_GANDIVA_TESTS=1\n+    - ARROW_TRAVIS_OPTIONAL_INSTALL=1\n+    - ARROW_CPP_BUILD_TARGETS=\"gandiva\"\n+    # TODO(wesm): Remove this after ARROW-4026\n+    - ARROW_TRAVIS_CPP_TEST_INCLUDE_LABELS=\"gandiva\"\n     - ARROW_TRAVIS_USE_TOOLCHAIN=1\n     - ARROW_BUILD_WARNING_LEVEL=CHECKIN\n     before_script:\ndiff --git a/ci/travis_before_script_cpp.sh b/ci/travis_before_script_cpp.sh\nindex 5f398e8c6e..6cb7d6074f 100755\n--- a/ci/travis_before_script_cpp.sh\n+++ b/ci/travis_before_script_cpp.sh\n@@ -42,6 +42,7 @@ fi\n \n CMAKE_COMMON_FLAGS=\"\\\n -DCMAKE_INSTALL_PREFIX=$ARROW_CPP_INSTALL \\\n+-DARROW_TEST_INCLUDE_LABELS=$ARROW_TRAVIS_CPP_TEST_INCLUDE_LABELS \\\n -DARROW_NO_DEPRECATED_API=ON \\\n -DARROW_EXTRA_ERROR_CONTEXT=ON\"\n CMAKE_LINUX_FLAGS=\"\"\n@@ -98,8 +99,11 @@ fi\n \n if [ $ARROW_TRAVIS_GANDIVA == \"1\" ]; then\n   CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_GANDIVA=ON\"\n-  if [ $only_library_mode == \"no\" ]; then\n-    CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_GANDIVA_BUILD_TESTS=ON\"\n+  if [ $ARROW_TRAVIS_GANDIVA_JAVA == \"1\" ]; then\n+      CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_GANDIVA_JAVA=ON\"\n+  fi\n+  if [ $ARROW_TRAVIS_GANDIVA_TESTS == \"1\" ]; then\n+    CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_BUILD_TESTS=ON\"\n   fi\n fi\n \n@@ -119,6 +123,10 @@ if [ $ARROW_TRAVIS_USE_VENDORED_BOOST == \"1\" ]; then\n   CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_BOOST_VENDORED=ON\"\n fi\n \n+if [ $ARROW_TRAVIS_OPTIONAL_INSTALL == \"1\" ]; then\n+  CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_OPTIONAL_INSTALL=ON\"\n+fi\n+\n if [ $TRAVIS_OS_NAME == \"linux\" ]; then\n     cmake $CMAKE_COMMON_FLAGS \\\n           $CMAKE_LINUX_FLAGS \\\n@@ -139,8 +147,10 @@ else\n           $ARROW_CPP_DIR\n fi\n \n-# Build and install libraries\n-$TRAVIS_MAKE -j4\n+# Build and install libraries. Configure ARROW_CPP_BUILD_TARGETS environment\n+# variable to only build certain targets. If you use this, you must also set\n+# the environment variable ARROW_TRAVIS_OPTIONAL_INSTALL=1\n+$TRAVIS_MAKE -j4 $ARROW_CPP_BUILD_TARGETS\n $TRAVIS_MAKE install\n \n popd\ndiff --git a/ci/travis_script_python.sh b/ci/travis_script_python.sh\nindex 25bec262d8..6d96ebe2df 100755\n--- a/ci/travis_script_python.sh\n+++ b/ci/travis_script_python.sh\n@@ -86,19 +86,23 @@ rm -rf *\n # XXX Can we simply reuse CMAKE_COMMON_FLAGS from travis_before_script_cpp.sh?\n CMAKE_COMMON_FLAGS=\"-DARROW_EXTRA_ERROR_CONTEXT=ON\"\n \n+PYTHON_CPP_BUILD_TARGETS=\"arrow_python plasma\"\n+\n if [ $ARROW_TRAVIS_COVERAGE == \"1\" ]; then\n   CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_GENERATE_COVERAGE=ON\"\n fi\n \n if [ $ARROW_TRAVIS_PYTHON_GANDIVA == \"1\" ]; then\n   CMAKE_COMMON_FLAGS=\"$CMAKE_COMMON_FLAGS -DARROW_GANDIVA=ON -DARROW_GANDIVA_BUILD_TESTS=OFF\"\n+  PYTHON_CPP_BUILD_TARGETS=\"$PYTHON_CPP_BUILD_TARGETS gandiva\"\n fi\n \n cmake -GNinja \\\n       $CMAKE_COMMON_FLAGS \\\n-      -DARROW_BUILD_TESTS=on \\\n+      -DARROW_BUILD_TESTS=ON \\\n       -DARROW_TEST_INCLUDE_LABELS=python \\\n-      -DARROW_BUILD_UTILITIES=off \\\n+      -DARROW_BUILD_UTILITIES=OFF \\\n+      -DARROW_OPTIONAL_INSTALL=ON \\\n       -DARROW_PLASMA=on \\\n       -DARROW_TENSORFLOW=on \\\n       -DARROW_PYTHON=on \\\n@@ -107,7 +111,7 @@ cmake -GNinja \\\n       -DCMAKE_INSTALL_PREFIX=$ARROW_HOME \\\n       $ARROW_CPP_DIR\n \n-ninja\n+ninja $PYTHON_CPP_BUILD_TARGETS\n ninja install\n \n popd\ndiff --git a/cpp/CMakeLists.txt b/cpp/CMakeLists.txt\nindex a83b9dd6d9..54daaf96e8 100644\n--- a/cpp/CMakeLists.txt\n+++ b/cpp/CMakeLists.txt\n@@ -130,26 +130,62 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n     \"Linkage of Arrow libraries with unit tests executables. \\\n static|shared (default shared)\")\n \n-  set(ARROW_TEST_INCLUDE_LABELS \"\" CACHE STRING\n-    \"Only build unit tests having the indicated label or labels. \\\n-Pass multiple labels by dividing with semicolons\")\n-\n   option(ARROW_NO_DEPRECATED_API\n     \"Exclude deprecated APIs from build\"\n     OFF)\n \n-  option(ARROW_COMPUTE\n-    \"Build the Arrow Compute Modules\"\n+  option(ARROW_FUZZING\n+    \"Build Arrow Fuzzing executables\"\n+    OFF)\n+\n+  # Disable this option to exercise non-SIMD fallbacks\n+  option(ARROW_USE_SIMD\n+    \"Build with SIMD optimizations\"\n     ON)\n \n-  option(ARROW_EXTRA_ERROR_CONTEXT\n-    \"Compile with extra error context (line numbers, code)\"\n+  option(ARROW_ALTIVEC\n+    \"Build Arrow with Altivec\"\n+    ON)\n+\n+  option(ARROW_BUILD_UTILITIES\n+    \"Build Arrow commandline utilities\"\n+    ON)\n+\n+  option(ARROW_RPATH_ORIGIN\n+    \"Build Arrow libraries with RATH set to \\$ORIGIN\"\n+    OFF)\n+\n+  option(ARROW_INSTALL_NAME_RPATH\n+    \"Build Arrow libraries with install_name set to @rpath\"\n+    ON)\n+\n+  option(ARROW_GENERATE_COVERAGE\n+    \"Build with C++ code coverage enabled\"\n+    OFF)\n+\n+  option(ARROW_VERBOSE_LINT\n+    \"If off, 'quiet' flags will be passed to linting tools\"\n     OFF)\n \n+  #----------------------------------------------------------------------\n+  # Project components to enable / disable building\n+\n+  option(ARROW_COMPUTE\n+    \"Build the Arrow Compute Modules\"\n+    ON)\n+\n   option(ARROW_FLIGHT\n     \"Build the Arrow Flight RPC System (requires GRPC, Protocol Buffers)\"\n     OFF)\n \n+  option(ARROW_GANDIVA\n+    \"Build the Gandiva libraries\"\n+    OFF)\n+\n+  option(ARROW_PARQUET\n+    \"Build the Parquet libraries\"\n+    OFF)\n+\n   option(ARROW_IPC\n     \"Build the Arrow IPC extensions\"\n     ON)\n@@ -174,58 +210,44 @@ Pass multiple labels by dividing with semicolons\")\n     \"Build the Arrow HDFS bridge\"\n     ON)\n \n-  option(ARROW_BOOST_USE_SHARED\n-    \"Rely on boost shared libraries where relevant\"\n-    ON)\n-\n-  option(ARROW_BOOST_VENDORED\n-    \"Use vendored Boost instead of existing Boost\"\n-    OFF)\n-\n-  option(ARROW_PROTOBUF_USE_SHARED\n-    \"Rely on Protocol Buffers shared libraries where relevant\"\n-    OFF)\n-\n   option(ARROW_PYTHON\n     \"Build the Arrow CPython extensions\"\n     OFF)\n \n-  option(ARROW_FUZZING\n-    \"Build Arrow Fuzzing executables\"\n+  option(ARROW_HIVESERVER2\n+    \"Build the HiveServer2 client and Arrow adapter\"\n     OFF)\n \n-  # Disable this option to exercise non-SIMD fallbacks\n-  option(ARROW_USE_SIMD\n-    \"Build with SIMD optimizations\"\n-    ON)\n+  option(ARROW_PLASMA\n+    \"Build the plasma object store along with Arrow\"\n+    OFF)\n \n-  option(ARROW_ALTIVEC\n-    \"Build Arrow with Altivec\"\n-    ON)\n+  option(ARROW_PLASMA_JAVA_CLIENT\n+    \"Build the plasma object store java client\"\n+    OFF)\n \n-  option(ARROW_BUILD_UTILITIES\n-    \"Build Arrow commandline utilities\"\n-    ON)\n+  #----------------------------------------------------------------------\n+  # Thirdparty toolchain options\n \n-  option(ARROW_RPATH_ORIGIN\n-    \"Build Arrow libraries with RATH set to \\$ORIGIN\"\n+  option(ARROW_VERBOSE_THIRDPARTY_BUILD\n+    \"If off, output from ExternalProjects will be logged to files rather than shown\"\n     OFF)\n \n-  option(ARROW_INSTALL_NAME_RPATH\n-    \"Build Arrow libraries with install_name set to @rpath\"\n+  option(ARROW_BOOST_USE_SHARED\n+    \"Rely on boost shared libraries where relevant\"\n     ON)\n \n-  option(ARROW_HIVESERVER2\n-    \"Build the HiveServer2 client and Arrow adapter\"\n+  option(ARROW_BOOST_VENDORED\n+    \"Use vendored Boost instead of existing Boost\"\n     OFF)\n \n-  option(ARROW_PLASMA\n-    \"Build the plasma object store along with Arrow\"\n+  option(ARROW_PROTOBUF_USE_SHARED\n+    \"Rely on Protocol Buffers shared libraries where relevant\"\n     OFF)\n \n-  option(ARROW_PLASMA_JAVA_CLIENT\n-    \"Build the plasma object store java client\"\n-    OFF)\n+  option(ARROW_USE_GLOG\n+    \"Build libraries with glog support for pluggable logging\"\n+    ON)\n \n   option(ARROW_WITH_BROTLI\n     \"Build with Brotli compression\"\n@@ -257,21 +279,8 @@ Pass multiple labels by dividing with semicolons\")\n     \"Build with zstd compression\"\n     ${ARROW_WITH_ZSTD_DEFAULT})\n \n-  option(ARROW_GENERATE_COVERAGE\n-    \"Build with C++ code coverage enabled\"\n-    OFF)\n-\n-  option(ARROW_VERBOSE_THIRDPARTY_BUILD\n-    \"If off, output from ExternalProjects will be logged to files rather than shown\"\n-    OFF)\n-\n-  option(ARROW_VERBOSE_LINT\n-    \"If off, 'quiet' flags will be passed to linting tools\"\n-    OFF)\n-\n-  option(ARROW_USE_GLOG\n-    \"Build libraries with glog support for pluggable logging\"\n-    ON)\n+  #----------------------------------------------------------------------\n+  # Windows options\n \n   if (MSVC)\n     option(ARROW_USE_CLCACHE\n@@ -292,10 +301,8 @@ Pass multiple labels by dividing with semicolons\")\n       OFF)\n   endif()\n \n-  # Parquet-related build options\n-  option(ARROW_PARQUET\n-    \"Build the Parquet libraries\"\n-    OFF)\n+  #----------------------------------------------------------------------\n+  # Parquet build options\n \n   option(PARQUET_MINIMAL_DEPENDENCY\n     \"Depend only on Thirdparty headers to build libparquet. \\\n@@ -310,9 +317,11 @@ Always OFF if building binaries\"\n     \"Build the Parquet examples. Requires static libraries to be built.\"\n     OFF)\n \n-  # Gandiva related build options\n-  option(ARROW_GANDIVA\n-    \"Build the Gandiva libraries\"\n+  #----------------------------------------------------------------------\n+  # Gandiva build options\n+\n+  option(ARROW_GANDIVA_JAVA\n+    \"Build the Gandiva JNI wrappers\"\n     OFF)\n \n   # ARROW-3860: Temporary workaround\n@@ -320,16 +329,30 @@ Always OFF if building binaries\"\n     \"Include -static-libstdc++ -static-libgcc when linking with Gandiva static libraries\"\n     OFF)\n \n-  option(ARROW_GANDIVA_JAVA\n-    \"Build the Gandiva JNI wrappers\"\n-    ON)\n+  #----------------------------------------------------------------------\n+  # Advanced developer options\n \n-  option(ARROW_GANDIVA_BUILD_TESTS\n-    \"Build the Gandiva googletest unit tests\"\n+  set(ARROW_TEST_INCLUDE_LABELS \"\" CACHE STRING\n+    \"Only build unit tests having the indicated label or labels. \\\n+Pass multiple labels by dividing with semicolons\")\n+\n+  option(ARROW_EXTRA_ERROR_CONTEXT\n+    \"Compile with extra error context (line numbers, code)\"\n     OFF)\n \n+  option(ARROW_OPTIONAL_INSTALL\n+    \"If enabled install ONLY targets that have already been built. Please be \\\n+advised that if this is enabled 'install' will fail silently on components \\\n+that have not been built\"\n+    OFF)\n endif()\n \n+if (ARROW_OPTIONAL_INSTALL)\n+  # Don't make the \"install\" target depend on the \"all\" target\n+  set(CMAKE_SKIP_INSTALL_ALL_DEPENDENCY true)\n+\n+  set(INSTALL_IS_OPTIONAL OPTIONAL)\n+endif()\n \n ############################################################\n # \"make lint\" target\ndiff --git a/cpp/README.md b/cpp/README.md\nindex d1d76c1787..1f12117e8d 100644\n--- a/cpp/README.md\n+++ b/cpp/README.md\n@@ -101,6 +101,19 @@ unit tests, and benchmarks (if enabled):\n * `make gandiva` for Gandiva (LLVM expression compiler) libraries\n * `make plasma` for Plasma libraries, server\n \n+If you wish to only build and install one or more project subcomponents, we\n+have provided the CMake option `ARROW_OPTIONAL_INSTALL` to only install targets\n+that have been built. For example, if you only wish to build the Parquet\n+libraries, its tests, and its dependencies, you can run:\n+\n+```\n+cmake .. -DARROW_PARQUET=ON -DARROW_OPTIONAL_INSTALL=ON -DARROW_BUILD_TESTS=ON\n+make parquet\n+make install\n+```\n+\n+If you omit an explicit target when invoking `make`, all targets will be built.\n+\n ## Parquet Development Notes\n \n To build the C++ libraries for Apache Parquet, add the flag\n@@ -269,7 +282,7 @@ The optional `gandiva` libraries and tests can be built by passing\n `-DARROW_GANDIVA=on`.\n \n ```shell\n-cmake .. -DARROW_GANDIVA=ON -DARROW_GANDIVA_BUILD_TESTS=ON\n+cmake .. -DARROW_GANDIVA=ON -DARROW_BUILD_TESTS=ON\n make\n ctest -L gandiva\n ```\ndiff --git a/cpp/cmake_modules/BuildUtils.cmake b/cpp/cmake_modules/BuildUtils.cmake\nindex d5978e1d21..1abe97eecc 100644\n--- a/cpp/cmake_modules/BuildUtils.cmake\n+++ b/cpp/cmake_modules/BuildUtils.cmake\n@@ -226,6 +226,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n     endif()\n \n     install(TARGETS ${LIB_NAME}_shared\n+      ${INSTALL_IS_OPTIONAL}\n       EXPORT ${PROJECT_NAME}-targets\n       RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR}\n       LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n@@ -272,6 +273,7 @@ function(ADD_ARROW_LIB LIB_NAME)\n       LINK_PUBLIC ${ARG_STATIC_LINK_LIBS})\n \n     install(TARGETS ${LIB_NAME}_static\n+      ${INSTALL_IS_OPTIONAL}\n       EXPORT ${PROJECT_NAME}-targets\n       RUNTIME DESTINATION ${RUNTIME_INSTALL_DIR}\n       LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}\n@@ -401,7 +403,7 @@ function(ADD_TEST_CASE REL_TEST_NAME)\n \n   if (NOT \"${ARROW_TEST_INCLUDE_LABELS}\" STREQUAL \"\")\n     set(_SKIP_TEST TRUE)\n-    foreach (_INCLUDED_LABEL ${ARG_LABELS})\n+    foreach (_INCLUDED_LABEL ${ARROW_TEST_INCLUDE_LABELS})\n       if (\"${ARG_LABELS}\" MATCHES \"${_INCLUDED_LABEL}\")\n         set(_SKIP_TEST FALSE)\n       endif()\n@@ -569,3 +571,19 @@ function(ADD_ARROW_FUZZING REL_FUZZING_NAME)\n       PROPERTIES\n       LINK_FLAGS \"-fsanitize=fuzzer\")\n endfunction()\n+\n+###################################################\n+\n+function(ARROW_INSTALL_ALL_HEADERS PATH)\n+  set(options)\n+  set(one_value_args)\n+  set(multi_value_args PATTERN)\n+  cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n+  if (NOT ARG_PATTERN)\n+    set(ARG_PATTERN \"*.h\")\n+  endif()\n+  file(GLOB CURRENT_DIRECTORY_HEADERS ${ARG_PATTERN})\n+  install(FILES\n+    ${CURRENT_DIRECTORY_HEADERS}\n+    DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/${PATH}\")\n+endfunction()\ndiff --git a/cpp/src/arrow/CMakeLists.txt b/cpp/src/arrow/CMakeLists.txt\nindex 2d043a9a27..e12d2d2ee2 100644\n--- a/cpp/src/arrow/CMakeLists.txt\n+++ b/cpp/src/arrow/CMakeLists.txt\n@@ -213,8 +213,7 @@ if (ARROW_BUILD_STATIC AND WIN32)\n   target_compile_definitions(arrow_static PUBLIC ARROW_STATIC)\n endif()\n \n-if (ARROW_BUILD_TESTS OR ARROW_GANDIVA_BUILD_TESTS\n-    OR ARROW_BUILD_BENCHMARKS)\n+if (ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n   # that depend on gtest\n   ADD_ARROW_LIB(arrow_testing\n     SOURCES test-util.cc\n@@ -244,28 +243,7 @@ foreach(LIB_TARGET ${ARROW_LIBRARIES})\n endforeach()\n \n # Headers: top level\n-install(FILES\n-  allocator.h\n-  api.h\n-  array.h\n-  buffer.h\n-  builder.h\n-  compare.h\n-  memory_pool.h\n-  pretty_print.h\n-  record_batch.h\n-  status.h\n-  stl.h\n-  table.h\n-  table_builder.h\n-  tensor.h\n-  type.h\n-  type_fwd.h\n-  type_traits.h\n-  test-util.h\n-  visitor.h\n-  visitor_inline.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow\")\n \n # pkg-config support\n configure_file(arrow.pc.in\ndiff --git a/cpp/src/arrow/adapters/tensorflow/CMakeLists.txt b/cpp/src/arrow/adapters/tensorflow/CMakeLists.txt\nindex db4264b59a..5bb5b72591 100644\n--- a/cpp/src/arrow/adapters/tensorflow/CMakeLists.txt\n+++ b/cpp/src/arrow/adapters/tensorflow/CMakeLists.txt\n@@ -15,7 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-# Headers: top level\n-install(FILES\n-        convert.h\n-        DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/adapters/tensorflow\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/adapters/tensorflow\")\ndiff --git a/cpp/src/arrow/compute/CMakeLists.txt b/cpp/src/arrow/compute/CMakeLists.txt\nindex d4369ed27b..242937005c 100644\n--- a/cpp/src/arrow/compute/CMakeLists.txt\n+++ b/cpp/src/arrow/compute/CMakeLists.txt\n@@ -15,12 +15,7 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-# Headers: top level\n-install(FILES\n-  api.h\n-  context.h\n-  kernel.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/compute\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/compute\")\n \n # pkg-config support\n configure_file(arrow-compute.pc.in\ndiff --git a/cpp/src/arrow/csv/CMakeLists.txt b/cpp/src/arrow/csv/CMakeLists.txt\nindex db23d6feff..2a72dceada 100644\n--- a/cpp/src/arrow/csv/CMakeLists.txt\n+++ b/cpp/src/arrow/csv/CMakeLists.txt\n@@ -29,9 +29,4 @@ ADD_ARROW_BENCHMARK(converter-benchmark\n ADD_ARROW_BENCHMARK(parser-benchmark\n   PREFIX \"arrow-csv\")\n \n-# Headers: top level\n-file(GLOB_RECURSE ARROW_CSV_HEADERS \"*.h\")\n-\n-install(FILES\n-  ${ARROW_CSV_HEADERS}\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/csv\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/csv\")\ndiff --git a/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt b/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\nindex eb4446f05d..9fd7f924d3 100644\n--- a/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\n+++ b/cpp/src/arrow/dbi/hiveserver2/CMakeLists.txt\n@@ -18,15 +18,7 @@\n add_custom_target(arrow_hiveserver2)\n \n # Headers: top level\n-install(FILES\n-  api.h\n-  columnar-row-set.h\n-  operation.h\n-  service.h\n-  session.h\n-  types.h\n-  util.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/dbi/hiveserver2\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/dbi/hiveserver2\")\n \n set(ARROW_HIVESERVER2_SRCS\n   columnar-row-set.cc\n@@ -115,7 +107,9 @@ if (ARROW_BUILD_TESTS)\n     STATIC_LINK_LIBS \"${ARROW_HIVESERVER2_TEST_LINK_LIBS}\"\n     LABELS \"arrow_hiveserver2\"\n   )\n-  set_property(TARGET arrow-hiveserver2-test\n-    APPEND_STRING PROPERTY COMPILE_FLAGS\n-    \" -Wno-shadow-field\")\n+  if (TARGET arrow-hiveserver2-test)\n+    set_property(TARGET arrow-hiveserver2-test\n+      APPEND_STRING PROPERTY COMPILE_FLAGS\n+      \" -Wno-shadow-field\")\n+  endif()\n endif(ARROW_BUILD_TESTS)\ndiff --git a/cpp/src/arrow/gpu/CMakeLists.txt b/cpp/src/arrow/gpu/CMakeLists.txt\nindex 60407acb0a..c37779aefa 100644\n--- a/cpp/src/arrow/gpu/CMakeLists.txt\n+++ b/cpp/src/arrow/gpu/CMakeLists.txt\n@@ -63,12 +63,7 @@ install(FILES\n   \"${CMAKE_CURRENT_BINARY_DIR}/cuda_version.h\"\n   DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/gpu\")\n \n-install(FILES\n-  cuda_api.h\n-  cuda_arrow_ipc.h\n-  cuda_context.h\n-  cuda_memory.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/gpu\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/gpu\")\n \n # pkg-config support\n configure_file(arrow-cuda.pc.in\ndiff --git a/cpp/src/arrow/ipc/CMakeLists.txt b/cpp/src/arrow/ipc/CMakeLists.txt\nindex 44c56f0332..c44f7b9fe1 100644\n--- a/cpp/src/arrow/ipc/CMakeLists.txt\n+++ b/cpp/src/arrow/ipc/CMakeLists.txt\n@@ -88,16 +88,7 @@ add_custom_command(\n add_custom_target(metadata_fbs DEPENDS ${FBS_OUTPUT_FILES})\n \n # Headers: top level\n-install(FILES\n-  api.h\n-  dictionary.h\n-  feather.h\n-  json.h\n-  json-simple.h\n-  message.h\n-  reader.h\n-  writer.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/ipc\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/ipc\")\n \n if (ARROW_BUILD_STATIC)\n   set(ARROW_UTIL_LIB arrow_static)\ndiff --git a/cpp/src/arrow/python/CMakeLists.txt b/cpp/src/arrow/python/CMakeLists.txt\nindex 7f4603ae5d..4913083537 100644\n--- a/cpp/src/arrow/python/CMakeLists.txt\n+++ b/cpp/src/arrow/python/CMakeLists.txt\n@@ -91,29 +91,7 @@ if (\"${COMPILER_FAMILY}\" STREQUAL \"clang\")\n     COMPILE_FLAGS -Wno-parentheses-equality)\n endif()\n \n-install(FILES\n-  api.h\n-  arrow_to_pandas.h\n-  benchmark.h\n-  common.h\n-  config.h\n-  decimal.h\n-  deserialize.h\n-  helpers.h\n-  inference.h\n-  init.h\n-  io.h\n-  iterators.h\n-  numpy_convert.h\n-  numpy_interop.h\n-  numpy_to_arrow.h\n-  python_to_arrow.h\n-  platform.h\n-  pyarrow.h\n-  serialize.h\n-  type_traits.h\n-  visibility.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/python\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/python\")\n \n # pkg-config support\n configure_file(arrow-python.pc.in\ndiff --git a/cpp/src/arrow/util/CMakeLists.txt b/cpp/src/arrow/util/CMakeLists.txt\nindex 4f515b52e8..a097971832 100644\n--- a/cpp/src/arrow/util/CMakeLists.txt\n+++ b/cpp/src/arrow/util/CMakeLists.txt\n@@ -20,45 +20,7 @@\n #######################################\n \n # Headers: top level\n-install(FILES\n-  bit-stream-utils.h\n-  bit-util.h\n-  bpacking.h\n-  checked_cast.h\n-  compiler-util.h\n-  compression.h\n-  compression_brotli.h\n-  compression_bz2.h\n-  compression_lz4.h\n-  compression_snappy.h\n-  compression_zlib.h\n-  compression_zstd.h\n-  cpu-info.h\n-  date.h\n-  decimal.h\n-  hash-util.h\n-  hashing.h\n-  io-util.h\n-  key_value_metadata.h\n-  lazy.h\n-  logging.h\n-  macros.h\n-  memory.h\n-  neon-util.h\n-  parallel.h\n-  rle-encoding.h\n-  sse-util.h\n-  stl.h\n-  stopwatch.h\n-  string.h\n-  string_view.h\n-  thread-pool.h\n-  type_traits.h\n-  utf8.h\n-  variant.h\n-  visibility.h\n-  windows_compatibility.h\n-  DESTINATION include/arrow/util)\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/util\")\n \n #######################################\n # arrow_test_main\ndiff --git a/cpp/src/gandiva/CMakeLists.txt b/cpp/src/gandiva/CMakeLists.txt\nindex 5ef573875b..9763f297b0 100644\n--- a/cpp/src/gandiva/CMakeLists.txt\n+++ b/cpp/src/gandiva/CMakeLists.txt\n@@ -92,31 +92,8 @@ add_dependencies(gandiva ${GANDIVA_LIBRARIES})\n # install for gandiva\n include(GNUInstallDirs)\n \n-# install libgandiva\n-install(\n-  TARGETS gandiva_shared gandiva_static\n-  DESTINATION ${CMAKE_INSTALL_LIBDIR}\n-)\n-\n # install the header files.\n-install(FILES\n-  arrow.h\n-  condition.h\n-  configuration.h\n-  expression.h\n-  expression_registry.h\n-  filter.h\n-  func_descriptor.h\n-  function_signature.h\n-  gandiva_aliases.h\n-  literal_holder.h\n-  logging.h\n-  node.h\n-  node_visitor.h\n-  projector.h\n-  selection_vector.h\n-  tree_expr_builder.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/gandiva\")\n+ARROW_INSTALL_ALL_HEADERS(\"gandiva\")\n \n # pkg-config support\n configure_file(gandiva.pc.in\n@@ -141,6 +118,10 @@ function(ADD_GANDIVA_TEST REL_TEST_NAME)\n   set(multi_value_args)\n   cmake_parse_arguments(ARG \"${options}\" \"${one_value_args}\" \"${multi_value_args}\" ${ARGN})\n \n+  if (NO_TESTS)\n+    return()\n+  endif()\n+\n   set(TEST_ARGUMENTS\n     ENABLED\n     PREFIX \"gandiva\"\n@@ -159,39 +140,35 @@ function(ADD_GANDIVA_TEST REL_TEST_NAME)\n       STATIC_LINK_LIBS ${GANDIVA_SHARED_TEST_LINK_LIBS})\n   endif()\n \n-  if(${REL_TEST_NAME} MATCHES \"llvm\" OR\n-     ${REL_TEST_NAME} MATCHES \"expression_registry\")\n+  set(TARGET_NAME gandiva-${REL_TEST_NAME})\n+\n+  if((TARGET ${TARGET_NAME}) AND\n+      (${REL_TEST_NAME} MATCHES \"llvm\" OR\n+       ${REL_TEST_NAME} MATCHES \"expression_registry\"))\n     # If the unit test has llvm in its name, include llvm.\n-    add_dependencies(gandiva-${REL_TEST_NAME} LLVM::LLVM_INTERFACE)\n-    target_link_libraries(gandiva-${REL_TEST_NAME} PRIVATE LLVM::LLVM_INTERFACE)\n+    add_dependencies(${TARGET_NAME} LLVM::LLVM_INTERFACE)\n+    target_link_libraries(${TARGET_NAME} PRIVATE LLVM::LLVM_INTERFACE)\n   endif()\n endfunction()\n \n-if (ARROW_GANDIVA_BUILD_TESTS)\n-  ADD_GANDIVA_TEST(bitmap_accumulator_test)\n-  ADD_GANDIVA_TEST(engine_llvm_test)\n-  ADD_GANDIVA_TEST(function_signature_test)\n-  ADD_GANDIVA_TEST(function_registry_test)\n-  ADD_GANDIVA_TEST(llvm_types_test)\n-  ADD_GANDIVA_TEST(llvm_generator_test)\n-  ADD_GANDIVA_TEST(annotator_test)\n-  ADD_GANDIVA_TEST(tree_expr_test)\n-  ADD_GANDIVA_TEST(expr_decomposer_test)\n-  ADD_GANDIVA_TEST(expression_registry_test)\n-  ADD_GANDIVA_TEST(selection_vector_test)\n-  ADD_GANDIVA_TEST(lru_cache_test)\n-  ADD_GANDIVA_TEST(to_date_holder_test)\n-  ADD_GANDIVA_TEST(simple_arena_test)\n-endif()\n+ADD_GANDIVA_TEST(bitmap_accumulator_test)\n+ADD_GANDIVA_TEST(engine_llvm_test)\n+ADD_GANDIVA_TEST(function_signature_test)\n+ADD_GANDIVA_TEST(function_registry_test)\n+ADD_GANDIVA_TEST(llvm_types_test)\n+ADD_GANDIVA_TEST(llvm_generator_test)\n+ADD_GANDIVA_TEST(annotator_test)\n+ADD_GANDIVA_TEST(tree_expr_test)\n+ADD_GANDIVA_TEST(expr_decomposer_test)\n+ADD_GANDIVA_TEST(expression_registry_test)\n+ADD_GANDIVA_TEST(selection_vector_test)\n+ADD_GANDIVA_TEST(lru_cache_test)\n+ADD_GANDIVA_TEST(to_date_holder_test)\n+ADD_GANDIVA_TEST(simple_arena_test)\n \n if (ARROW_GANDIVA_JAVA)\n   add_subdirectory(jni)\n endif()\n-add_subdirectory(precompiled)\n-\n-if (ARROW_GANDIVA_BUILD_TESTS)\n-  include(CTest)\n-  enable_testing()\n \n-  add_subdirectory(tests)\n-endif()\n+add_subdirectory(precompiled)\n+add_subdirectory(tests)\ndiff --git a/cpp/src/gandiva/precompiled/CMakeLists.txt b/cpp/src/gandiva/precompiled/CMakeLists.txt\nindex 886fdced88..0792fd6421 100644\n--- a/cpp/src/gandiva/precompiled/CMakeLists.txt\n+++ b/cpp/src/gandiva/precompiled/CMakeLists.txt\n@@ -69,7 +69,7 @@ function(add_precompiled_unit_test REL_TEST_NAME)\n endfunction(add_precompiled_unit_test REL_TEST_NAME)\n \n # testing\n-if (ARROW_GANDIVA_BUILD_TESTS)\n+if (ARROW_BUILD_TESTS)\n   add_precompiled_unit_test(bitmap_test.cc bitmap.cc)\n   add_precompiled_unit_test(epoch_time_point_test.cc)\n   add_precompiled_unit_test(time_test.cc time.cc timestamp_arithmetic.cc ../context_helper.cc)\ndiff --git a/cpp/src/parquet/CMakeLists.txt b/cpp/src/parquet/CMakeLists.txt\nindex 246f69dcc0..6b7846b709 100644\n--- a/cpp/src/parquet/CMakeLists.txt\n+++ b/cpp/src/parquet/CMakeLists.txt\n@@ -238,26 +238,7 @@ add_subdirectory(api)\n add_subdirectory(arrow)\n add_subdirectory(util)\n \n-# Headers: top level\n-install(FILES\n-  bloom_filter.h\n-  column_reader.h\n-  column_page.h\n-  column_scanner.h\n-  column_writer.h\n-  encoding.h\n-  exception.h\n-  file_reader.h\n-  file_writer.h\n-  hasher.h\n-  metadata.h\n-  murmur3.h\n-  printer.h\n-  properties.h\n-  schema.h\n-  statistics.h\n-  types.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/parquet\")\n+ARROW_INSTALL_ALL_HEADERS(\"parquet\")\n \n configure_file(parquet_version.h.in\n   \"${CMAKE_CURRENT_BINARY_DIR}/parquet_version.h\"\ndiff --git a/cpp/src/parquet/api/CMakeLists.txt b/cpp/src/parquet/api/CMakeLists.txt\nindex 79fc716952..48fddb9d61 100644\n--- a/cpp/src/parquet/api/CMakeLists.txt\n+++ b/cpp/src/parquet/api/CMakeLists.txt\n@@ -16,9 +16,4 @@\n # under the License.\n \n # Headers: public api\n-install(FILES\n-  io.h\n-  reader.h\n-  writer.h\n-  schema.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/parquet/api\")\n+ARROW_INSTALL_ALL_HEADERS(\"parquet/api\")\ndiff --git a/cpp/src/parquet/arrow/CMakeLists.txt b/cpp/src/parquet/arrow/CMakeLists.txt\nindex 429dadcd37..9372c3110a 100644\n--- a/cpp/src/parquet/arrow/CMakeLists.txt\n+++ b/cpp/src/parquet/arrow/CMakeLists.txt\n@@ -22,9 +22,4 @@ ADD_ARROW_BENCHMARK(reader-writer-benchmark\n   PREFIX \"parquet-arrow\"\n   EXTRA_LINK_LIBS ${PARQUET_BENCHMARK_LINK_LIBRARIES})\n \n-# Headers: top level\n-install(FILES\n-  reader.h\n-  schema.h\n-  writer.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/parquet/arrow\")\n+ARROW_INSTALL_ALL_HEADERS(\"parquet/arrow\")\ndiff --git a/cpp/src/parquet/util/CMakeLists.txt b/cpp/src/parquet/util/CMakeLists.txt\nindex 72d4ca28f9..b5718b1601 100644\n--- a/cpp/src/parquet/util/CMakeLists.txt\n+++ b/cpp/src/parquet/util/CMakeLists.txt\n@@ -16,12 +16,7 @@\n # under the License.\n \n # Headers: util\n-install(FILES\n-  comparison.h\n-  macros.h\n-  memory.h\n-  visibility.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/parquet/util\")\n+ARROW_INSTALL_ALL_HEADERS(\"parquet/util\")\n \n ADD_PARQUET_TEST(comparison-test)\n ADD_PARQUET_TEST(memory-test)\ndiff --git a/cpp/src/plasma/CMakeLists.txt b/cpp/src/plasma/CMakeLists.txt\nindex 4ea4b76066..317835bb7a 100644\n--- a/cpp/src/plasma/CMakeLists.txt\n+++ b/cpp/src/plasma/CMakeLists.txt\n@@ -127,6 +127,7 @@ endif()\n # be copied around and used in different locations.\n add_executable(plasma_store_server store.cc)\n target_link_libraries(plasma_store_server plasma_static ${PLASMA_STATIC_LINK_LIBS})\n+add_dependencies(plasma plasma_store_server)\n \n if (ARROW_RPATH_ORIGIN)\n   if (APPLE)\n@@ -138,7 +139,6 @@ if (ARROW_RPATH_ORIGIN)\n       INSTALL_RPATH ${_lib_install_rpath})\n endif()\n \n-# Headers: top level\n install(FILES\n   common.h\n   compat.h\n@@ -149,7 +149,9 @@ install(FILES\n \n # Plasma store\n set_target_properties(plasma_store_server PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)\n-install(TARGETS plasma_store_server DESTINATION ${CMAKE_INSTALL_BINDIR})\n+install(TARGETS plasma_store_server\n+  ${INSTALL_IS_OPTIONAL}\n+  DESTINATION ${CMAKE_INSTALL_BINDIR})\n \n # pkg-config support\n configure_file(plasma.pc.in\ndiff --git a/cpp/tools/parquet/CMakeLists.txt b/cpp/tools/parquet/CMakeLists.txt\nindex 47aea28ff6..bbbec29c13 100644\n--- a/cpp/tools/parquet/CMakeLists.txt\n+++ b/cpp/tools/parquet/CMakeLists.txt\n@@ -26,7 +26,9 @@ if (PARQUET_BUILD_EXECUTABLES)\n     target_link_libraries(${TOOL} parquet_static)\n     # Avoid unsetting RPATH when installing\n     set_target_properties(${TOOL} PROPERTIES INSTALL_RPATH_USE_LINK_PATH TRUE)\n-    install(TARGETS ${TOOL} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n+    install(TARGETS ${TOOL}\n+      ${INSTALL_IS_OPTIONAL}\n+      RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR})\n   endforeach(TOOL)\n \n   add_dependencies(parquet ${PARQUET_TOOLS})\ndiff --git a/dev/tasks/gandiva-jars/build-cpp.sh b/dev/tasks/gandiva-jars/build-cpp.sh\nindex 21289dee5a..ae13f9c019 100755\n--- a/dev/tasks/gandiva-jars/build-cpp.sh\n+++ b/dev/tasks/gandiva-jars/build-cpp.sh\n@@ -27,6 +27,7 @@ pushd arrow/cpp\n   pushd build\n     cmake -DCMAKE_BUILD_TYPE=Release \\\n           -DARROW_GANDIVA=ON \\\n+          -DARROW_GANDIVA_JAVA=ON \\\n           -DARROW_GANDIVA_STATIC_LIBSTDCPP=ON \\\n           -DARROW_BUILD_UTILITIES=OFF \\\n           -DARROW_BOOST_USE_SHARED=OFF \\\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T19:06:06.784+0000",
                    "updated": "2018-12-14T19:06:06.784+0000",
                    "started": "2018-12-14T19:06:06.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175548",
                    "issueId": "13183513"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7d5a5e33[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39c26f44[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@eb2eba3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@24200d7e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@255215d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30e2a61c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2914bc50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@dfb0ff1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38b2572f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1d45c463[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@113f0da7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@44ee1cf6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 14 19:05:56 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-14T19:05:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3184/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-06T22:24:28.000+0000",
        "updated": "2018-12-14T19:06:06.000+0000",
        "timeoriginalestimate": null,
        "description": "This will make it easier to build and install only part of the project",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add modular build targets, \"all\" target, and require explicit target when invoking make or ninja",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/comment/16624884",
                    "id": "16624884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "This would be nice but is not urgent for 0.11",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-09-23T01:23:45.214+0000",
                    "updated": "2018-09-23T01:23:45.214+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13183513/comment/16721708",
                    "id": "16721708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3172\n[https://github.com/apache/arrow/pull/3172]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-14T19:05:56.116+0000",
                    "updated": "2018-12-14T19:05:56.116+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|i3xtmf:",
        "customfield_12314139": null
    }
}