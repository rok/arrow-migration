{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13106813",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813",
    "key": "ARROW-1638",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "columnar-format-1.0",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12516447",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12516447",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13106808",
                    "key": "ARROW-1636",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106808",
                    "fields": {
                        "summary": "[Format] Integration tests for null type",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
                            "name": "Blocker",
                            "id": "1"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 33600,
            "total": 33600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1638/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 57,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/299394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164\n \n \n   Related to [ARROW-1638](https://issues.apache.org/jira/browse/ARROW-1638).\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-22T12:25:00.126+0000",
                    "updated": "2019-08-22T12:25:00.126+0000",
                    "started": "2019-08-22T12:25:00.126+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299394",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/299948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r316980764\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n ##########\n @@ -0,0 +1,269 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.compare.VectorVisitor;\n+import org.apache.arrow.vector.complex.impl.NullReader;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * A null type vector.\n+ */\n+public class NullVector implements FieldVector {\n+\n+  private int valueCount;\n+\n+  public NullVector() {\n+  }\n+\n+  @Override\n+  public void close() {\n+  }\n+\n+  @Override\n+  public void clear() {\n+  }\n+\n+  @Override\n+  public void reset() {\n+  }\n+\n+  @Override\n+  public Field getField() {\n+    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new ArrowType.Null()), null);\n+  }\n+\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.NULL;\n+  }\n+\n+\n+  @Override\n+  public TransferPair getTransferPair(BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public Iterator<ValueVector> iterator() {\n+    return Collections.emptyIterator();\n+  }\n+\n+  @Override\n+  public int getBufferSize() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getBufferSizeFor(final int valueCount) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public ArrowBuf[] getBuffers(boolean clear) {\n+    return new ArrowBuf[0];\n+  }\n+\n+  @Override\n+  public void allocateNew() throws OutOfMemoryException {\n+    allocateNewSafe();\n+  }\n+\n+  @Override\n+  public boolean allocateNewSafe() {\n+    return true;\n+  }\n+\n+  @Override\n+  public void reAlloc() {\n+  }\n+\n+  @Override\n+  public BufferAllocator getAllocator() {\n+    throw new UnsupportedOperationException(\"Tried to get allocator from NullVector\");\n+  }\n+\n+  @Override\n+  public void setInitialCapacity(int numRecords) {\n+  }\n+\n+  @Override\n+  public int getValueCapacity() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector target) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public FieldReader getReader() {\n+    return NullReader.INSTANCE;\n+  }\n+\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (!children.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no children\");\n+    }\n+  }\n+\n+  @Override\n+  public List<FieldVector> getChildrenFromFields() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (!ownBuffers.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no buffers\");\n+    }\n+  }\n+\n+  @Override\n+  public List<ArrowBuf> getFieldBuffers() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<BufferBacked> getFieldInnerVectors() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getValidityBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getDataBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getOffsetBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getValidityBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getDataBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getOffsetBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public int getValueCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public void setValueCount(int valueCount) {\n+    this.valueCount = valueCount;\n+  }\n+\n+  @Override\n+  public Object getObject(int index) {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getNullCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public boolean isNull(int index) {\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n+    return visitor.visit(this, value);\n+  }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  protected final TransferPair defaultPair = new TransferPair() {\n+    @Override\n+    public void transfer() {\n+    }\n+\n+    @Override\n+    public void splitAndTransfer(int startIndex, int length) {\n+    }\n+\n+    @Override\n+    public ValueVector getTo() {\n+      return NullVector.this;\n+    }\n+\n+    @Override\n+    public void copyValueSafe(int from, int to) {\n \n Review comment:\n   this should ensure the size is reset?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T05:41:45.912+0000",
                    "updated": "2019-08-23T05:41:45.912+0000",
                    "started": "2019-08-23T05:41:45.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "299948",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r316980827\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n ##########\n @@ -0,0 +1,269 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.compare.VectorVisitor;\n+import org.apache.arrow.vector.complex.impl.NullReader;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * A null type vector.\n+ */\n+public class NullVector implements FieldVector {\n+\n+  private int valueCount;\n+\n+  public NullVector() {\n+  }\n+\n+  @Override\n+  public void close() {\n+  }\n+\n+  @Override\n+  public void clear() {\n+  }\n+\n+  @Override\n+  public void reset() {\n+  }\n+\n+  @Override\n+  public Field getField() {\n+    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new ArrowType.Null()), null);\n+  }\n+\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.NULL;\n+  }\n+\n+\n+  @Override\n+  public TransferPair getTransferPair(BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public Iterator<ValueVector> iterator() {\n+    return Collections.emptyIterator();\n+  }\n+\n+  @Override\n+  public int getBufferSize() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getBufferSizeFor(final int valueCount) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public ArrowBuf[] getBuffers(boolean clear) {\n+    return new ArrowBuf[0];\n+  }\n+\n+  @Override\n+  public void allocateNew() throws OutOfMemoryException {\n+    allocateNewSafe();\n+  }\n+\n+  @Override\n+  public boolean allocateNewSafe() {\n+    return true;\n+  }\n+\n+  @Override\n+  public void reAlloc() {\n+  }\n+\n+  @Override\n+  public BufferAllocator getAllocator() {\n+    throw new UnsupportedOperationException(\"Tried to get allocator from NullVector\");\n+  }\n+\n+  @Override\n+  public void setInitialCapacity(int numRecords) {\n+  }\n+\n+  @Override\n+  public int getValueCapacity() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector target) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public FieldReader getReader() {\n+    return NullReader.INSTANCE;\n+  }\n+\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (!children.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no children\");\n+    }\n+  }\n+\n+  @Override\n+  public List<FieldVector> getChildrenFromFields() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (!ownBuffers.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no buffers\");\n+    }\n+  }\n+\n+  @Override\n+  public List<ArrowBuf> getFieldBuffers() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<BufferBacked> getFieldInnerVectors() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getValidityBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getDataBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getOffsetBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getValidityBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getDataBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getOffsetBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public int getValueCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public void setValueCount(int valueCount) {\n+    this.valueCount = valueCount;\n+  }\n+\n+  @Override\n+  public Object getObject(int index) {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getNullCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public boolean isNull(int index) {\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n+    return visitor.visit(this, value);\n+  }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n \n Review comment:\n   should these be defined for other null vectors?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T05:48:52.663+0000",
                    "updated": "2019-08-23T05:48:52.663+0000",
                    "started": "2019-08-23T05:48:52.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300043",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r316980907\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/VectorLoader.java\n ##########\n @@ -70,6 +70,7 @@ private void loadBuffers(\n       Field field,\n       Iterator<ArrowBuf> buffers,\n       Iterator<ArrowFieldNode> nodes) {\n+\n \n Review comment:\n   remove this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T05:48:52.667+0000",
                    "updated": "2019-08-23T05:48:52.667+0000",
                    "started": "2019-08-23T05:48:52.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300044",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r316984983\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n ##########\n @@ -0,0 +1,269 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.compare.VectorVisitor;\n+import org.apache.arrow.vector.complex.impl.NullReader;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * A null type vector.\n+ */\n+public class NullVector implements FieldVector {\n+\n+  private int valueCount;\n+\n+  public NullVector() {\n+  }\n+\n+  @Override\n+  public void close() {\n+  }\n+\n+  @Override\n+  public void clear() {\n+  }\n+\n+  @Override\n+  public void reset() {\n+  }\n+\n+  @Override\n+  public Field getField() {\n+    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new ArrowType.Null()), null);\n+  }\n+\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.NULL;\n+  }\n+\n+\n+  @Override\n+  public TransferPair getTransferPair(BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public Iterator<ValueVector> iterator() {\n+    return Collections.emptyIterator();\n+  }\n+\n+  @Override\n+  public int getBufferSize() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getBufferSizeFor(final int valueCount) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public ArrowBuf[] getBuffers(boolean clear) {\n+    return new ArrowBuf[0];\n+  }\n+\n+  @Override\n+  public void allocateNew() throws OutOfMemoryException {\n+    allocateNewSafe();\n+  }\n+\n+  @Override\n+  public boolean allocateNewSafe() {\n+    return true;\n+  }\n+\n+  @Override\n+  public void reAlloc() {\n+  }\n+\n+  @Override\n+  public BufferAllocator getAllocator() {\n+    throw new UnsupportedOperationException(\"Tried to get allocator from NullVector\");\n+  }\n+\n+  @Override\n+  public void setInitialCapacity(int numRecords) {\n+  }\n+\n+  @Override\n+  public int getValueCapacity() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector target) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public FieldReader getReader() {\n+    return NullReader.INSTANCE;\n+  }\n+\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (!children.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no children\");\n+    }\n+  }\n+\n+  @Override\n+  public List<FieldVector> getChildrenFromFields() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (!ownBuffers.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no buffers\");\n+    }\n+  }\n+\n+  @Override\n+  public List<ArrowBuf> getFieldBuffers() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<BufferBacked> getFieldInnerVectors() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getValidityBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getDataBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getOffsetBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getValidityBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getDataBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getOffsetBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public int getValueCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public void setValueCount(int valueCount) {\n+    this.valueCount = valueCount;\n+  }\n+\n+  @Override\n+  public Object getObject(int index) {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getNullCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public boolean isNull(int index) {\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n+    return visitor.visit(this, value);\n+  }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n \n Review comment:\n   IMO, what does this mean?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:06:43.834+0000",
                    "updated": "2019-08-23T06:06:43.834+0000",
                    "started": "2019-08-23T06:06:43.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300062",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524186005\n \n \n   Sorry, In my opinion.\n   \n   On Thu, Aug 22, 2019 at 11:06 PM tianchen92 <notifications@github.com>\n   wrote:\n   \n   > *@tianchen92* commented on this pull request.\n   > ------------------------------\n   >\n   > In java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n   > <https://github.com/apache/arrow/pull/5164#discussion_r316984983>:\n   >\n   > > +    return true;\n   > +  }\n   > +\n   > +  @Override\n   > +  public int hashCode(int index) {\n   > +    return 0;\n   > +  }\n   > +\n   > +  @Override\n   > +  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n   > +    return visitor.visit(this, value);\n   > +  }\n   > +\n   > +  @Override\n   > +  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n   > +    throw new UnsupportedOperationException();\n   >\n   > IMO, what does this mean?\n   >\n   > \u2014\n   > You are receiving this because you commented.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/5164?email_source=notifications&email_token=AEIKYDTUEFSKVISAPXJCDPDQF5475A5CNFSM4IOUMBG2YY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCCPEYTQ#discussion_r316984983>,\n   > or mute the thread\n   > <https://github.com/notifications/unsubscribe-auth/AEIKYDR7XJMVNHEZ4F7D4CLQF5475ANCNFSM4IOUMBGQ>\n   > .\n   >\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:10:35.202+0000",
                    "updated": "2019-08-23T06:10:35.202+0000",
                    "started": "2019-08-23T06:10:35.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300069",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524190227\n \n \n   > Sorry, In my opinion.\r\n   \r\n   Something is wrong?\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:29:40.935+0000",
                    "updated": "2019-08-23T06:29:40.935+0000",
                    "started": "2019-08-23T06:29:40.934+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300082",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524191613\n \n \n   Nothing wrong, I was apologizing for using the abbreviation.\n   \n   On Thu, Aug 22, 2019 at 11:29 PM tianchen92 <notifications@github.com>\n   wrote:\n   \n   > Sorry, In my opinion.\n   >\n   > Something is wrong?\n   >\n   > \u2014\n   > You are receiving this because you commented.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/5164?email_source=notifications&email_token=AEIKYDVQVE5RYZJUN3CW3ILQF57WHA5CNFSM4IOUMBG2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD47IEEY#issuecomment-524190227>,\n   > or mute the thread\n   > <https://github.com/notifications/unsubscribe-auth/AEIKYDRSOGNUQDTBAPN7WZTQF57WHANCNFSM4IOUMBGQ>\n   > .\n   >\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:35:14.128+0000",
                    "updated": "2019-08-23T06:35:14.128+0000",
                    "started": "2019-08-23T06:35:14.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300083",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300084",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524192535\n \n \n   > Nothing wrong, I was apologizing for using the abbreviation.\r\n   \r\n   Sorry for misleading, I just want to ask what do your mean by \"should these be defined for other null vectors?\" above, forgive me for poor English :)\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:38:44.202+0000",
                    "updated": "2019-08-23T06:38:44.202+0000",
                    "started": "2019-08-23T06:38:44.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300084",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r316984983\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n ##########\n @@ -0,0 +1,269 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.compare.VectorVisitor;\n+import org.apache.arrow.vector.complex.impl.NullReader;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * A null type vector.\n+ */\n+public class NullVector implements FieldVector {\n+\n+  private int valueCount;\n+\n+  public NullVector() {\n+  }\n+\n+  @Override\n+  public void close() {\n+  }\n+\n+  @Override\n+  public void clear() {\n+  }\n+\n+  @Override\n+  public void reset() {\n+  }\n+\n+  @Override\n+  public Field getField() {\n+    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new ArrowType.Null()), null);\n+  }\n+\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.NULL;\n+  }\n+\n+\n+  @Override\n+  public TransferPair getTransferPair(BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public Iterator<ValueVector> iterator() {\n+    return Collections.emptyIterator();\n+  }\n+\n+  @Override\n+  public int getBufferSize() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getBufferSizeFor(final int valueCount) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public ArrowBuf[] getBuffers(boolean clear) {\n+    return new ArrowBuf[0];\n+  }\n+\n+  @Override\n+  public void allocateNew() throws OutOfMemoryException {\n+    allocateNewSafe();\n+  }\n+\n+  @Override\n+  public boolean allocateNewSafe() {\n+    return true;\n+  }\n+\n+  @Override\n+  public void reAlloc() {\n+  }\n+\n+  @Override\n+  public BufferAllocator getAllocator() {\n+    throw new UnsupportedOperationException(\"Tried to get allocator from NullVector\");\n+  }\n+\n+  @Override\n+  public void setInitialCapacity(int numRecords) {\n+  }\n+\n+  @Override\n+  public int getValueCapacity() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector target) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public FieldReader getReader() {\n+    return NullReader.INSTANCE;\n+  }\n+\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (!children.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no children\");\n+    }\n+  }\n+\n+  @Override\n+  public List<FieldVector> getChildrenFromFields() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (!ownBuffers.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no buffers\");\n+    }\n+  }\n+\n+  @Override\n+  public List<ArrowBuf> getFieldBuffers() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<BufferBacked> getFieldInnerVectors() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getValidityBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getDataBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getOffsetBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getValidityBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getDataBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getOffsetBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public int getValueCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public void setValueCount(int valueCount) {\n+    this.valueCount = valueCount;\n+  }\n+\n+  @Override\n+  public Object getObject(int index) {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getNullCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public boolean isNull(int index) {\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n+    return visitor.visit(this, value);\n+  }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n \n Review comment:\n   IMO, what does this mean?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T06:38:59.268+0000",
                    "updated": "2019-08-23T06:38:59.268+0000",
                    "started": "2019-08-23T06:38:59.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300085",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524358331\n \n \n   PR updated, I am not quite familiar with this part, please let me know if you have other comments, thanks\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T15:26:54.212+0000",
                    "updated": "2019-08-23T15:26:54.212+0000",
                    "started": "2019-08-23T15:26:54.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300328",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r317186122\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/NullVector.java\n ##########\n @@ -0,0 +1,269 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n+\n+import java.util.Collections;\n+import java.util.Iterator;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.compare.VectorVisitor;\n+import org.apache.arrow.vector.complex.impl.NullReader;\n+import org.apache.arrow.vector.complex.reader.FieldReader;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.Types;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.CallBack;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+import io.netty.buffer.ArrowBuf;\n+\n+/**\n+ * A null type vector.\n+ */\n+public class NullVector implements FieldVector {\n+\n+  private int valueCount;\n+\n+  public NullVector() {\n+  }\n+\n+  @Override\n+  public void close() {\n+  }\n+\n+  @Override\n+  public void clear() {\n+  }\n+\n+  @Override\n+  public void reset() {\n+  }\n+\n+  @Override\n+  public Field getField() {\n+    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new ArrowType.Null()), null);\n+  }\n+\n+  @Override\n+  public Types.MinorType getMinorType() {\n+    return Types.MinorType.NULL;\n+  }\n+\n+\n+  @Override\n+  public TransferPair getTransferPair(BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public Iterator<ValueVector> iterator() {\n+    return Collections.emptyIterator();\n+  }\n+\n+  @Override\n+  public int getBufferSize() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public int getBufferSizeFor(final int valueCount) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public ArrowBuf[] getBuffers(boolean clear) {\n+    return new ArrowBuf[0];\n+  }\n+\n+  @Override\n+  public void allocateNew() throws OutOfMemoryException {\n+    allocateNewSafe();\n+  }\n+\n+  @Override\n+  public boolean allocateNewSafe() {\n+    return true;\n+  }\n+\n+  @Override\n+  public void reAlloc() {\n+  }\n+\n+  @Override\n+  public BufferAllocator getAllocator() {\n+    throw new UnsupportedOperationException(\"Tried to get allocator from NullVector\");\n+  }\n+\n+  @Override\n+  public void setInitialCapacity(int numRecords) {\n+  }\n+\n+  @Override\n+  public int getValueCapacity() {\n+    return 0;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair getTransferPair(String ref, BufferAllocator allocator, CallBack callBack) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public TransferPair makeTransferPair(ValueVector target) {\n+    return defaultPair;\n+  }\n+\n+  @Override\n+  public FieldReader getReader() {\n+    return NullReader.INSTANCE;\n+  }\n+\n+  @Override\n+  public void initializeChildrenFromFields(List<Field> children) {\n+    if (!children.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no children\");\n+    }\n+  }\n+\n+  @Override\n+  public List<FieldVector> getChildrenFromFields() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public void loadFieldBuffers(ArrowFieldNode fieldNode, List<ArrowBuf> ownBuffers) {\n+    if (!ownBuffers.isEmpty()) {\n+      throw new IllegalArgumentException(\"Null vector has no buffers\");\n+    }\n+  }\n+\n+  @Override\n+  public List<ArrowBuf> getFieldBuffers() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public List<BufferBacked> getFieldInnerVectors() {\n+    return Collections.emptyList();\n+  }\n+\n+  @Override\n+  public long getValidityBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getDataBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public long getOffsetBufferAddress() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getValidityBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getDataBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public ArrowBuf getOffsetBuffer() {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public int getValueCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public void setValueCount(int valueCount) {\n+    this.valueCount = valueCount;\n+  }\n+\n+  @Override\n+  public Object getObject(int index) {\n+    return null;\n+  }\n+\n+  @Override\n+  public int getNullCount() {\n+    return this.valueCount;\n+  }\n+\n+  @Override\n+  public boolean isNull(int index) {\n+    return true;\n+  }\n+\n+  @Override\n+  public int hashCode(int index) {\n+    return 0;\n+  }\n+\n+  @Override\n+  public <OUT, IN> OUT accept(VectorVisitor<OUT, IN> visitor, IN value) {\n+    return visitor.visit(this, value);\n+  }\n+\n+  @Override\n+  public void copyFrom(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public void copyFromSafe(int fromIndex, int thisIndex, ValueVector from) {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  protected final TransferPair defaultPair = new TransferPair() {\n+    @Override\n+    public void transfer() {\n+    }\n+\n+    @Override\n+    public void splitAndTransfer(int startIndex, int length) {\n+    }\n+\n+    @Override\n+    public ValueVector getTo() {\n+      return NullVector.this;\n+    }\n+\n+    @Override\n+    public void copyValueSafe(int from, int to) {\n \n Review comment:\n   seems here only copies value and not set valueCount. transfer and splitAndTransfer changes valueCount.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T15:29:46.801+0000",
                    "updated": "2019-08-23T15:29:46.801+0000",
                    "started": "2019-08-23T15:29:46.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300331",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/300612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524490353\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=h1) Report\n   > Merging [#5164](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f413c8f6b4fb9d79da9078c0f8795f83e98b5b6c?src=pr&el=desc) will **increase** coverage by `2.12%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5164/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5164      +/-   ##\n   ==========================================\n   + Coverage   87.63%   89.75%   +2.12%     \n   ==========================================\n     Files        1022      682     -340     \n     Lines      146258   101876   -44382     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       128177    91442   -36735     \n   + Misses      17719    10434    -7285     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/python/python\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vcHl0aG9uX3Rlc3QuY2M=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_schema.py](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zY2hlbWEucHk=) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | ... and [342 more](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=footer). Last update [f413c8f...edaeef1](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-23T23:18:33.825+0000",
                    "updated": "2019-08-23T23:18:33.825+0000",
                    "started": "2019-08-23T23:18:33.824+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "300612",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/301013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#discussion_r317443866\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/ZeroVector.java\n ##########\n @@ -17,132 +17,48 @@\n \n package org.apache.arrow.vector;\n \n-import static org.apache.arrow.vector.complex.BaseRepeatedValueVector.DATA_VECTOR_NAME;\n-\n-import java.util.Collections;\n-import java.util.Iterator;\n-import java.util.List;\n-\n import org.apache.arrow.memory.BufferAllocator;\n-import org.apache.arrow.memory.OutOfMemoryException;\n-import org.apache.arrow.vector.compare.VectorVisitor;\n-import org.apache.arrow.vector.complex.impl.NullReader;\n-import org.apache.arrow.vector.complex.reader.FieldReader;\n-import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n-import org.apache.arrow.vector.types.Types.MinorType;\n-import org.apache.arrow.vector.types.pojo.ArrowType.Null;\n-import org.apache.arrow.vector.types.pojo.Field;\n-import org.apache.arrow.vector.types.pojo.FieldType;\n import org.apache.arrow.vector.util.CallBack;\n import org.apache.arrow.vector.util.TransferPair;\n \n-import io.netty.buffer.ArrowBuf;\n-\n /**\n  * A zero length vector of any type.\n  */\n-public class ZeroVector implements FieldVector {\n+public class ZeroVector extends NullVector {\n   public static final ZeroVector INSTANCE = new ZeroVector();\n \n-  private final TransferPair defaultPair = new TransferPair() {\n-    @Override\n-    public void transfer() {\n-    }\n-\n-    @Override\n-    public void splitAndTransfer(int startIndex, int length) {\n-    }\n-\n-    @Override\n-    public ValueVector getTo() {\n-      return ZeroVector.this;\n-    }\n-\n-    @Override\n-    public void copyValueSafe(int from, int to) {\n-    }\n-  };\n-\n-\n   public ZeroVector() {\n   }\n \n   @Override\n-  public void close() {\n+  public int getValueCount() {\n+    return 0;\n   }\n \n   @Override\n-  public void clear() {\n+  public void setValueCount(int valueCount) {\n   }\n \n   @Override\n-  public void reset() {\n+  public int getNullCount() {\n+    return 0;\n   }\n \n   @Override\n-  public Field getField() {\n-    return new Field(DATA_VECTOR_NAME, FieldType.nullable(new Null()), null);\n+  public boolean isNull(int index) {\n+    return false;\n \n Review comment:\n   this seems like a bug in the original implementation, it seems that this should probably thow an index out of bounds exception?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-26T04:00:22.675+0000",
                    "updated": "2019-08-26T04:00:22.675+0000",
                    "started": "2019-08-26T04:00:22.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301013",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/301017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524707431\n \n \n   @tianchen92 the real test for this would be adding it to the python integration test (integration/integration_test.py)  if you don't feel comfortable doing so i can make the change and push to your branch in the next few days.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-26T04:06:53.324+0000",
                    "updated": "2019-08-26T04:06:53.324+0000",
                    "started": "2019-08-26T04:06:53.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301017",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/301020",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524708574\n \n \n   > @tianchen92 the real test for this would be adding it to the python integration test (integration/integration_test.py) if you don't feel comfortable doing so i can make the change and push to your branch in the next few days.\r\n   \r\n   Really appreciate for your help, I have invited you as collaborator(https://github.com/tianchen92/arrow/invitations), thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-26T04:14:23.452+0000",
                    "updated": "2019-08-26T04:14:23.452+0000",
                    "started": "2019-08-26T04:14:23.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "301020",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/302359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-525463815\n \n \n   So one question that's come up in the context of ARROW-4511 is what should be the buffer layout for null type. In C++ we are sending a single zero-length buffer. But maybe we shouldn't send any buffers at all? I don't think this is big thing as far as the columnar specification is concerned so long as it's written down and clear\r\n   \r\n   cc @pitrou \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T20:12:41.787+0000",
                    "updated": "2019-08-27T20:12:41.787+0000",
                    "started": "2019-08-27T20:12:41.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302359",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/302364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-525465539\n \n \n   Right. There should simply be a clear and unambiguous specification.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T20:17:22.886+0000",
                    "updated": "2019-08-27T20:17:22.886+0000",
                    "started": "2019-08-27T20:17:22.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302364",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/302365",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-525465539\n \n \n   Right. There should simply be a clear and unambiguous specification. It shouldn't allow for different interpretations or variations.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-27T20:17:50.649+0000",
                    "updated": "2019-08-27T20:17:50.649+0000",
                    "started": "2019-08-27T20:17:50.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "302365",
                    "issueId": "13106813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/worklog/305295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5164: ARROW-1638: [Java] IPC roundtrip for null type\nURL: https://github.com/apache/arrow/pull/5164#issuecomment-524490353\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=h1) Report\n   > Merging [#5164](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/149d4cb5223b643189b6ff414314d80cbc71d9d1?src=pr&el=desc) will **increase** coverage by `2.03%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5164/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5164      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.68%   +2.03%     \n   ==========================================\n     Files        1033      693     -340     \n     Lines      148767   104167   -44600     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       130392    93422   -36970     \n   + Misses      18013    10745    -7268     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `70.75% <0%> (-0.95%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [332 more](https://codecov.io/gh/apache/arrow/pull/5164/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=footer). Last update [149d4cb...12bd0e5](https://codecov.io/gh/apache/arrow/pull/5164?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-02T17:29:49.914+0000",
                    "updated": "2019-09-02T17:29:49.914+0000",
                    "started": "2019-09-02T17:29:49.913+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "305295",
                    "issueId": "13106813"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 33600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@cea2233[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38f58d84[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5575288b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@41f8160c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44fb49b3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@577bea1c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bb6a108[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2a7f8a04[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3457e829[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3cf4dfb5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@225487c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@74ad0626[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 33600,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Oct 12 05:06:31 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-12T05:06:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1638/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-03T21:32:22.000+0000",
        "updated": "2019-10-12T05:06:31.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "9h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 33600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] IPC roundtrip for null type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/comment/16214554",
                    "id": "16214554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Moving to 0.9.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-10-23T02:43:17.458+0000",
                    "updated": "2017-10-23T02:43:17.458+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/comment/16510237",
                    "id": "16510237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~siddteotia] [~jnadeau] it would be useful to test this; if someone could pick up the Java side I can help add integration tests",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-12T21:34:34.624+0000",
                    "updated": "2018-06-12T21:34:34.624+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/comment/16527752",
                    "id": "16527752",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I added a new label \"columnar-format-1.0\" to this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-29T14:49:08.692+0000",
                    "updated": "2018-06-29T14:49:08.692+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106813/comment/16949911",
                    "id": "16949911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5164\n[https://github.com/apache/arrow/pull/5164]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-12T05:06:31.800+0000",
                    "updated": "2019-10-12T05:06:31.800+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3kufj:",
        "customfield_12314139": null
    }
}