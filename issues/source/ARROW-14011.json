{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13401480",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480",
    "key": "ARROW-14011",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=augustoasilva",
            "name": "augustoasilva",
            "key": "augustoasilva",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Augusto Alves Silva",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 21000,
            "total": 21000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14011/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 35,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/651389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva opened a new pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166\n\n\n   Return string at index number. For example elt(2,'hello','world') returns 'world'. Returns NULL if N is less than 1 or greater than the number of arguments.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T23:37:42.124+0000",
                    "updated": "2021-09-15T23:37:42.124+0000",
                    "started": "2021-09-15T23:37:42.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651389",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/651390",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#issuecomment-920462894\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-15T23:38:05.414+0000",
                    "updated": "2021-09-15T23:38:05.414+0000",
                    "started": "2021-09-15T23:38:05.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "651390",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/674417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r741663325\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       Why does this need the flags kNeedsContext and kCanReturnErrors?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       elt is a function with variable number of arguments - there is no expectation for the arguments to be concatenated using a ',' separator. This code assumes that\r\n   \r\n   Please implement elt(int, string1, string2) - elt that works on 2 string arguments and\r\n   elt(int, string1, string2, string3) and elt(int, string1, string2, string3, string4) and elt(int, string1, string2, string3, string4, string5)\r\n   \r\n   If the query has more arguments, the query needs to be modified\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T07:25:40.866+0000",
                    "updated": "2021-11-03T07:25:40.866+0000",
                    "started": "2021-11-03T07:25:40.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674417",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675013",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r742404778\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T22:56:20.302+0000",
                    "updated": "2021-11-03T22:56:20.302+0000",
                    "started": "2021-11-03T22:56:20.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675013",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r742404778\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output and need the context to tag the error with it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T22:56:56.146+0000",
                    "updated": "2021-11-03T22:56:56.146+0000",
                    "started": "2021-11-03T22:56:56.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675015",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r742405646\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       It was the only way that I've found to simulate a variadic function in Gandiva, but I changed for your approach.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T22:57:30.537+0000",
                    "updated": "2021-11-03T22:57:30.537+0000",
                    "started": "2021-11-03T22:57:30.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675016",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r741663325\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       Why does this need the flags kNeedsContext and kCanReturnErrors?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       elt is a function with variable number of arguments - there is no expectation for the arguments to be concatenated using a ',' separator. This code assumes that\r\n   \r\n   Please implement elt(int, string1, string2) - elt that works on 2 string arguments and\r\n   elt(int, string1, string2, string3) and elt(int, string1, string2, string3, string4) and elt(int, string1, string2, string3, string4, string5)\r\n   \r\n   If the query has more arguments, the query needs to be modified\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:14:04.672+0000",
                    "updated": "2021-11-04T00:14:04.672+0000",
                    "started": "2021-11-04T00:14:04.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675121",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r742404778\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output and need the context to tag the error with it\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       It was the only way that I've found to simulate a variadic function in Gandiva, but I changed for your approach.\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output and need the context to tag the error with it\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       It was the only way that I've found to simulate a variadic function in Gandiva, but I changed for your approach.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:36:23.680+0000",
                    "updated": "2021-11-04T00:36:23.680+0000",
                    "started": "2021-11-04T00:36:23.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675284",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r741663325\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       Why does this need the flags kNeedsContext and kCanReturnErrors?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       elt is a function with variable number of arguments - there is no expectation for the arguments to be concatenated using a ',' separator. This code assumes that\r\n   \r\n   Please implement elt(int, string1, string2) - elt that works on 2 string arguments and\r\n   elt(int, string1, string2, string3) and elt(int, string1, string2, string3, string4) and elt(int, string1, string2, string3, string4, string5)\r\n   \r\n   If the query has more arguments, the query needs to be modified\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:10:41.968+0000",
                    "updated": "2021-11-04T01:10:41.968+0000",
                    "started": "2021-11-04T01:10:41.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675629",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675840",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r741663325\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       Why does this need the flags kNeedsContext and kCanReturnErrors?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       elt is a function with variable number of arguments - there is no expectation for the arguments to be concatenated using a ',' separator. This code assumes that\r\n   \r\n   Please implement elt(int, string1, string2) - elt that works on 2 string arguments and\r\n   elt(int, string1, string2, string3) and elt(int, string1, string2, string3, string4) and elt(int, string1, string2, string3, string4, string5)\r\n   \r\n   If the query has more arguments, the query needs to be modified\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:33:42.922+0000",
                    "updated": "2021-11-04T01:33:42.922+0000",
                    "started": "2021-11-04T01:33:42.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675840",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/675981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r742404778\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,10 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_utf8\",\n+                     NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n\nReview comment:\n       It can return an error if it could not alocate the memory for the output and need the context to tag the error with it\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,54 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_utf8(int64_t context, int32_t pos, const char* data,\n\nReview comment:\n       It was the only way that I've found to simulate a variadic function in Gandiva, but I changed for your approach.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:47:04.223+0000",
                    "updated": "2021-11-04T01:47:04.223+0000",
                    "started": "2021-11-04T01:47:04.223+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675981",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743385126\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -19,6 +19,7 @@\n \n #include <utf8proc.h>\n \n+#include <list>\n\nReview comment:\n       Is this include required?\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,23 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8\",\n+                     NativeFunction::kNeedsContext),\n+\n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8_utf8\",\n\nReview comment:\n       I dont think this can be a NULL_IF_NULL function since the output can be null if the position is invalid. This would have to be a NullInternal function\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n+    *out_len = word1_len;\n+    selected = word1;\n+  }\n+\n+  if (pos == 2) {\n+    *out_len = word2_len;\n+    selected = word2;\n+  }\n+\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  memcpy(out, selected, *out_len);\n+  return out;\n+}\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8_utf8(int64_t context, int32_t pos,\n+                                            const char* word1, int32_t word1_len,\n+                                            const char* word2, int32_t word2_len,\n+                                            const char* word3, int32_t word3_len,\n+                                            int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 3) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Same comment - lets use switch case and reduce the number of if-statements in the code\n\n##########\nFile path: cpp/src/gandiva/tests/projector_test.cc\n##########\n@@ -1606,4 +1606,46 @@ TEST_F(TestProjector, TestCastNullableIntYearInterval) {\n   EXPECT_ARROW_ARRAY_EQUALS(out_int64, outputs.at(1));\n }\n \n+TEST_F(TestProjector, TestEltFunction) {\n\nReview comment:\n       You should add a test here to verify that the validity bit is false when the pos is out of range.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Please change this to a switch case statement:\r\n   \r\n   switch (pos) {\r\n     case 1:\r\n     case 2:\r\n     default: // handle the case where pos is invalid\r\n   }\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n\nReview comment:\n       This should return null. With this implementation, it will return a string of length 0. Please check NullInternal functions\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T04:45:32.662+0000",
                    "updated": "2021-11-05T04:45:32.662+0000",
                    "started": "2021-11-05T04:45:32.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676885",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743569956\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -19,6 +19,7 @@\n \n #include <utf8proc.h>\n \n+#include <list>\n\nReview comment:\n       Not anymore, removed it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:08:27.497+0000",
                    "updated": "2021-11-05T11:08:27.497+0000",
                    "started": "2021-11-05T11:08:27.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676978",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743570328\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,23 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8\",\n+                     NativeFunction::kNeedsContext),\n+\n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8_utf8\",\n\nReview comment:\n       Ok, I've looked to see an example of NullInternal, and it makes sense now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:09:04.285+0000",
                    "updated": "2021-11-05T11:09:04.285+0000",
                    "started": "2021-11-05T11:09:04.285+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676980",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743570500\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n\nReview comment:\n       Sure, fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:09:27.537+0000",
                    "updated": "2021-11-05T11:09:27.537+0000",
                    "started": "2021-11-05T11:09:27.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676981",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743570664\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Ok, I've changed to switch statement\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:09:40.662+0000",
                    "updated": "2021-11-05T11:09:40.662+0000",
                    "started": "2021-11-05T11:09:40.662+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676982",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676983",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743570760\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n+    *out_len = word1_len;\n+    selected = word1;\n+  }\n+\n+  if (pos == 2) {\n+    *out_len = word2_len;\n+    selected = word2;\n+  }\n+\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  memcpy(out, selected, *out_len);\n+  return out;\n+}\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8_utf8(int64_t context, int32_t pos,\n+                                            const char* word1, int32_t word1_len,\n+                                            const char* word2, int32_t word2_len,\n+                                            const char* word3, int32_t word3_len,\n+                                            int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 3) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:09:53.815+0000",
                    "updated": "2021-11-05T11:09:53.815+0000",
                    "started": "2021-11-05T11:09:53.815+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676983",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/676997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743600815\n\n\n\n##########\nFile path: cpp/src/gandiva/tests/projector_test.cc\n##########\n@@ -1606,4 +1606,46 @@ TEST_F(TestProjector, TestCastNullableIntYearInterval) {\n   EXPECT_ARROW_ARRAY_EQUALS(out_int64, outputs.at(1));\n }\n \n+TEST_F(TestProjector, TestEltFunction) {\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T11:57:32.890+0000",
                    "updated": "2021-11-05T11:57:32.890+0000",
                    "started": "2021-11-05T11:57:32.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676997",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/677311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743385126\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -19,6 +19,7 @@\n \n #include <utf8proc.h>\n \n+#include <list>\n\nReview comment:\n       Is this include required?\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,23 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8\",\n+                     NativeFunction::kNeedsContext),\n+\n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8_utf8\",\n\nReview comment:\n       I dont think this can be a NULL_IF_NULL function since the output can be null if the position is invalid. This would have to be a NullInternal function\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n+    *out_len = word1_len;\n+    selected = word1;\n+  }\n+\n+  if (pos == 2) {\n+    *out_len = word2_len;\n+    selected = word2;\n+  }\n+\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  memcpy(out, selected, *out_len);\n+  return out;\n+}\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8_utf8(int64_t context, int32_t pos,\n+                                            const char* word1, int32_t word1_len,\n+                                            const char* word2, int32_t word2_len,\n+                                            const char* word3, int32_t word3_len,\n+                                            int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 3) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Same comment - lets use switch case and reduce the number of if-statements in the code\n\n##########\nFile path: cpp/src/gandiva/tests/projector_test.cc\n##########\n@@ -1606,4 +1606,46 @@ TEST_F(TestProjector, TestCastNullableIntYearInterval) {\n   EXPECT_ARROW_ARRAY_EQUALS(out_int64, outputs.at(1));\n }\n \n+TEST_F(TestProjector, TestEltFunction) {\n\nReview comment:\n       You should add a test here to verify that the validity bit is false when the pos is out of range.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Please change this to a switch case statement:\r\n   \r\n   switch (pos) {\r\n     case 1:\r\n     case 2:\r\n     default: // handle the case where pos is invalid\r\n   }\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n\nReview comment:\n       This should return null. With this implementation, it will return a string of length 0. Please check NullInternal functions\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:36:33.784+0000",
                    "updated": "2021-11-05T19:36:33.784+0000",
                    "started": "2021-11-05T19:36:33.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677311",
                    "issueId": "13401480"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/worklog/677401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11166:\nURL: https://github.com/apache/arrow/pull/11166#discussion_r743569956\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -19,6 +19,7 @@\n \n #include <utf8proc.h>\n \n+#include <list>\n\nReview comment:\n       Not anymore, removed it\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -88,6 +88,23 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      \"gdv_fn_initcap_utf8\",\n                      NativeFunction::kNeedsContext | NativeFunction::kCanReturnErrors),\n \n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8\",\n+                     NativeFunction::kNeedsContext),\n+\n+      NativeFunction(\"elt\", {}, DataTypeVector{int32(), utf8(), utf8(), utf8()}, utf8(),\n+                     kResultNullIfNull, \"gdv_fn_elt_int32_utf8_utf8_utf8\",\n\nReview comment:\n       Ok, I've looked to see an example of NullInternal, and it makes sense now.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n\nReview comment:\n       Sure, fixed.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Ok, I've changed to switch statement\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -794,6 +795,162 @@ const char* gdv_fn_initcap_utf8(int64_t context, const char* data, int32_t data_\n   *out_len = out_idx;\n   return out;\n }\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8(int64_t context, int32_t pos, const char* word1,\n+                                       int32_t word1_len, const char* word2,\n+                                       int32_t word2_len, int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 2) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n+    *out_len = word1_len;\n+    selected = word1;\n+  }\n+\n+  if (pos == 2) {\n+    *out_len = word2_len;\n+    selected = word2;\n+  }\n+\n+  char* out = reinterpret_cast<char*>(gdv_fn_context_arena_malloc(context, *out_len));\n+  if (out == nullptr) {\n+    gdv_fn_context_set_error_msg(context, \"Could not allocate memory for output string\");\n+    *out_len = 0;\n+    return \"\";\n+  }\n+  memcpy(out, selected, *out_len);\n+  return out;\n+}\n+\n+GANDIVA_EXPORT\n+const char* gdv_fn_elt_int32_utf8_utf8_utf8(int64_t context, int32_t pos,\n+                                            const char* word1, int32_t word1_len,\n+                                            const char* word2, int32_t word2_len,\n+                                            const char* word3, int32_t word3_len,\n+                                            int32_t* out_len) {\n+  const char* selected;\n+  if (pos < 1 || pos > 3) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (pos == 1) {\n\nReview comment:\n       Done\n\n##########\nFile path: cpp/src/gandiva/tests/projector_test.cc\n##########\n@@ -1606,4 +1606,46 @@ TEST_F(TestProjector, TestCastNullableIntYearInterval) {\n   EXPECT_ARROW_ARRAY_EQUALS(out_int64, outputs.at(1));\n }\n \n+TEST_F(TestProjector, TestEltFunction) {\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:48:18.908+0000",
                    "updated": "2021-11-05T19:48:18.908+0000",
                    "started": "2021-11-05T19:48:18.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677401",
                    "issueId": "13401480"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 21000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@11b772a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b070ac[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a0308d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@38b43a2f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2be24dc8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@172b346c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35ccf3ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2c30d21e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1585465d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5bc388d5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9c372c4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2349f1c0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 21000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 23 08:37:25 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-23T08:37:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14011/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-15T23:34:54.000+0000",
        "updated": "2021-12-14T23:41:35.000+0000",
        "timeoriginalestimate": null,
        "description": "Return string at index number. For example elt(2,'hello','world') returns 'world'. Returns NULL if N is less than 1 or greater than the number of arguments.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 21000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Add elt hive function to gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13401480/comment/17447837",
                    "id": "17447837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 11166\n[https://github.com/apache/arrow/pull/11166]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-11-23T08:37:25.155+0000",
                    "updated": "2021-11-23T08:37:25.155+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uz4g:",
        "customfield_12314139": null
    }
}