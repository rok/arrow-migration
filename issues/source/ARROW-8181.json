{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13293109",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109",
    "key": "ARROW-8181",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12583693",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12583693",
                "type": {
                    "id": "10020",
                    "name": "Cloners",
                    "inward": "is cloned by",
                    "outward": "is a clone of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"
                },
                "inwardIssue": {
                    "id": "13293180",
                    "key": "ARROW-8183",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293180",
                    "fields": {
                        "summary": "[c++][FlightRPC] Expose transport error metadata",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
                            "id": "3",
                            "description": "A task that needs to be done.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
                            "name": "Task",
                            "subtask": false,
                            "avatarId": 21148
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rymurr",
            "name": "rymurr",
            "key": "rymurr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Ryan Murray",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8181/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 29,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682\n \n \n   Add a class to act as a container for metadata (akin to gRPC `Metadata`) and expose this metatada on `FlightRuntimeException`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T16:25:11.725+0000",
                    "updated": "2020-03-21T16:25:11.725+0000",
                    "started": "2020-03-21T16:25:11.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407463",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#issuecomment-602069038\n \n \n   https://issues.apache.org/jira/browse/ARROW-8181\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T16:31:41.272+0000",
                    "updated": "2020-03-21T16:31:41.272+0000",
                    "started": "2020-03-21T16:31:41.272+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407465",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407482",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396011411\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/FlightMetadata.java\n ##########\n @@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Function;\n+\n+import com.google.common.collect.Maps;\n+\n+/**\n+ * Holder class for metadata associated with errors exposed via underlying transport.\n+ */\n+public class FlightMetadata {\n \n Review comment:\n   What do you think about implementing the `CallHeaders` interface, and extending or adding to that interface as appropriate?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T17:27:52.315+0000",
                    "updated": "2020-03-21T17:27:52.315+0000",
                    "started": "2020-03-21T17:27:52.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407482",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396011603\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.StatusProto;\n+import io.grpc.protobuf.lite.ProtoLiteUtils;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<PerfOuterClass.Perf> marshaller =\n+      ProtoLiteUtils.metadataMarshaller(PerfOuterClass.Perf.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      client.getStream(new Ticket(\"abs\".getBytes()));\n+    } catch (FlightRuntimeException fre) {\n+      FlightMetadata metadata = fre.status().metadata();\n+      Assert.assertNotNull(metadata);\n+      Assert.assertEquals(1, metadata.size());\n+      Assert.assertTrue(metadata.containsKey(\"Testing 1 2 3\"));\n+      Assert.assertEquals(perf, metadata.get(\"Testing 1 2 3\", marshaller::parseBytes));\n+    } catch (Exception e) {\n \n Review comment:\n   You might find it easier to just declare the test `throws Exception`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T17:32:49.927+0000",
                    "updated": "2020-03-21T17:32:49.927+0000",
                    "started": "2020-03-21T17:32:49.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407483",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396011578\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.StatusProto;\n+import io.grpc.protobuf.lite.ProtoLiteUtils;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<PerfOuterClass.Perf> marshaller =\n+      ProtoLiteUtils.metadataMarshaller(PerfOuterClass.Perf.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      client.getStream(new Ticket(\"abs\".getBytes()));\n \n Review comment:\n   This should `Assert.fail` if the method call doesn't throw.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T17:32:49.930+0000",
                    "updated": "2020-03-21T17:32:49.930+0000",
                    "started": "2020-03-21T17:32:49.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407484",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396011731\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/FlightMetadata.java\n ##########\n @@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Function;\n+\n+import com.google.common.collect.Maps;\n+\n+/**\n+ * Holder class for metadata associated with errors exposed via underlying transport.\n+ */\n+public class FlightMetadata {\n+  private final Map<String, byte[]> metadata = Maps.newHashMap();\n+\n+  public FlightMetadata() {\n+  }\n+\n+  public byte[] get(String key) {\n+    return metadata.get(key);\n+  }\n+\n+  public void put(String key, byte[] value) {\n+    metadata.put(key, value);\n+  }\n+\n+  public Set<String> keys() {\n+    return metadata.keySet();\n+  }\n+\n+  public boolean containsKey(String key) {\n+    return metadata.containsKey(key);\n+  }\n+\n+  public <T> T get(String key, Function<byte[], T> transform) {\n \n Review comment:\n   Is this convenience method worth it? It doesn't seem to bring much benefit.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T17:32:50.015+0000",
                    "updated": "2020-03-21T17:32:50.015+0000",
                    "started": "2020-03-21T17:32:50.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407485",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396015245\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/FlightMetadata.java\n ##########\n @@ -0,0 +1,58 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Function;\n+\n+import com.google.common.collect.Maps;\n+\n+/**\n+ * Holder class for metadata associated with errors exposed via underlying transport.\n+ */\n+public class FlightMetadata {\n+  private final Map<String, byte[]> metadata = Maps.newHashMap();\n+\n+  public FlightMetadata() {\n+  }\n+\n+  public byte[] get(String key) {\n+    return metadata.get(key);\n+  }\n+\n+  public void put(String key, byte[] value) {\n+    metadata.put(key, value);\n+  }\n+\n+  public Set<String> keys() {\n+    return metadata.keySet();\n+  }\n+\n+  public boolean containsKey(String key) {\n+    return metadata.containsKey(key);\n+  }\n+\n+  public <T> T get(String key, Function<byte[], T> transform) {\n \n Review comment:\n   your probably right, I was trying to mimic some of the Metadata methods. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T18:12:26.958+0000",
                    "updated": "2020-03-21T18:12:26.958+0000",
                    "started": "2020-03-21T18:12:26.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407494",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396015366\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.StatusProto;\n+import io.grpc.protobuf.lite.ProtoLiteUtils;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<PerfOuterClass.Perf> marshaller =\n+      ProtoLiteUtils.metadataMarshaller(PerfOuterClass.Perf.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      client.getStream(new Ticket(\"abs\".getBytes()));\n+    } catch (FlightRuntimeException fre) {\n+      FlightMetadata metadata = fre.status().metadata();\n+      Assert.assertNotNull(metadata);\n+      Assert.assertEquals(1, metadata.size());\n+      Assert.assertTrue(metadata.containsKey(\"Testing 1 2 3\"));\n+      Assert.assertEquals(perf, metadata.get(\"Testing 1 2 3\", marshaller::parseBytes));\n+    } catch (Exception e) {\n \n Review comment:\n   :+1: \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T18:13:26.672+0000",
                    "updated": "2020-03-21T18:13:26.672+0000",
                    "started": "2020-03-21T18:13:26.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407495",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396015445\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,79 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.StatusProto;\n+import io.grpc.protobuf.lite.ProtoLiteUtils;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<PerfOuterClass.Perf> marshaller =\n+      ProtoLiteUtils.metadataMarshaller(PerfOuterClass.Perf.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      client.getStream(new Ticket(\"abs\".getBytes()));\n \n Review comment:\n   :+1: \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T18:14:21.260+0000",
                    "updated": "2020-03-21T18:14:21.260+0000",
                    "started": "2020-03-21T18:14:21.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407496",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on issue #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#issuecomment-602084441\n \n \n   > Thanks for this, this will be useful for richer error data.\r\n   > \r\n   > My main questions are:\r\n   > \r\n   > * How/whether we should unify FlightMetadata and CallHeaders, since they're very similar interfaces differing mostly on whether they choose String or byte[] as the representation\r\n   > * Are we going to expose this to Python/C++?\r\n   \r\n   I think we should merge them. Tbh i didnt even see `CallHeaders`! My preference would be to call the class `FlightMetadata` or something similar as I don't want to use `CallHeaders` for the metadata that technically is coming from the trailing metadata in gRPC. My intended use case for this class is to expose protobuf objects stored in the trailer (as per googles status grpc object) so I have a preference towards `byte[]` however `String` is going to be much more widely applicable.\r\n   \r\n   Re C++/Java: I hope to. Will take a look at that now and create a separate PR in the next day or so.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T18:33:42.606+0000",
                    "updated": "2020-03-21T18:33:42.606+0000",
                    "started": "2020-03-21T18:33:42.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407497",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on issue #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#issuecomment-602097354\n \n \n   Hey @lidavidm my most recent push is a first attempt at what joining `CallHeaders` and `FlightMetadata` might look like. I am not overly excited about the result and would be curious to get your thoughts.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-21T20:09:55.255+0000",
                    "updated": "2020-03-21T20:09:55.255+0000",
                    "started": "2020-03-21T20:09:55.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407509",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on issue #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#issuecomment-602195958\n \n \n   Instead of a generic, what about just duplicating methods for bytes? (And possibly deprecating the string variants.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T12:54:16.256+0000",
                    "updated": "2020-03-22T12:54:16.256+0000",
                    "started": "2020-03-22T12:54:16.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407577",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396090629\n \n \n\n ##########\n File path: java/flight/flight-core/pom.xml\n ##########\n @@ -125,6 +125,12 @@\n       <groupId>javax.annotation</groupId>\n       <artifactId>javax.annotation-api</artifactId>\n      </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.api.grpc</groupId>\n+      <artifactId>proto-google-common-protos</artifactId>\n+      <version>1.12.0</version>\n \n Review comment:\n   This should be marked as a test-scoped dependency.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T12:57:18.300+0000",
                    "updated": "2020-03-22T12:57:18.300+0000",
                    "started": "2020-03-22T12:57:18.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407580",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396090442\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.ProtoUtils;\n+import io.grpc.protobuf.StatusProto;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<Status> marshaller =\n+          ProtoUtils.metadataMarshaller(Status.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() throws Exception {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      FlightStream stream = client.getStream(new Ticket(\"abs\".getBytes()));\n+      stream.next();\n+      Assert.fail();\n+    } catch (FlightRuntimeException fre) {\n+      PerfOuterClass.Perf newPerf = null;\n+      ErrorFlightMetadata metadata = fre.status().metadata();\n+      Assert.assertNotNull(metadata);\n+      Assert.assertEquals(2, metadata.keys().size());\n+      Assert.assertTrue(metadata.containsKey(\"grpc-status-details-bin\"));\n+      Status status = marshaller.parseBytes(metadata.get(\"grpc-status-details-bin\"));\n+      for (Any details : status.getDetailsList()) {\n+        if (details.is(PerfOuterClass.Perf.class)) {\n+          try {\n+            newPerf = details.unpack(PerfOuterClass.Perf.class);\n+          } catch (InvalidProtocolBufferException e) {\n+            Assert.fail();\n+          }\n+        }\n+      }\n+      if (newPerf == null) {\n \n Review comment:\n   This can be `Assert.assertNotNull`, or better yet, this assert is redundant with the one below, since `perf` is non-null.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T12:57:18.303+0000",
                    "updated": "2020-03-22T12:57:18.303+0000",
                    "started": "2020-03-22T12:57:18.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407581",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396098607\n \n \n\n ##########\n File path: java/flight/flight-core/pom.xml\n ##########\n @@ -125,6 +125,12 @@\n       <groupId>javax.annotation</groupId>\n       <artifactId>javax.annotation-api</artifactId>\n      </dependency>\n+\n+    <dependency>\n+      <groupId>com.google.api.grpc</groupId>\n+      <artifactId>proto-google-common-protos</artifactId>\n+      <version>1.12.0</version>\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:17:10.175+0000",
                    "updated": "2020-03-22T14:17:10.175+0000",
                    "started": "2020-03-22T14:17:10.174+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407598",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396098613\n \n \n\n ##########\n File path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestErrorMetadata.java\n ##########\n @@ -0,0 +1,94 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import org.apache.arrow.flight.perf.impl.PerfOuterClass;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.protobuf.Any;\n+import com.google.protobuf.InvalidProtocolBufferException;\n+import com.google.rpc.Status;\n+\n+import io.grpc.Metadata;\n+import io.grpc.StatusRuntimeException;\n+import io.grpc.protobuf.ProtoUtils;\n+import io.grpc.protobuf.StatusProto;\n+\n+public class TestErrorMetadata {\n+  private static final Metadata.BinaryMarshaller<Status> marshaller =\n+          ProtoUtils.metadataMarshaller(Status.getDefaultInstance());\n+\n+  @Test\n+  public void testMetadata() throws Exception {\n+    PerfOuterClass.Perf perf = PerfOuterClass.Perf.newBuilder()\n+                .setStreamCount(12)\n+                .setRecordsPerBatch(1000)\n+                .setRecordsPerStream(1000000L)\n+                .build();\n+    try (final BufferAllocator allocator = new RootAllocator(Long.MAX_VALUE);\n+        final FlightServer s =\n+             FlightTestUtil.getStartedServer(\n+               (location) -> FlightServer.builder(allocator, location, new TestFlightProducer(perf)).build());\n+          final FlightClient client = FlightClient.builder(allocator, s.getLocation()).build()) {\n+      FlightStream stream = client.getStream(new Ticket(\"abs\".getBytes()));\n+      stream.next();\n+      Assert.fail();\n+    } catch (FlightRuntimeException fre) {\n+      PerfOuterClass.Perf newPerf = null;\n+      ErrorFlightMetadata metadata = fre.status().metadata();\n+      Assert.assertNotNull(metadata);\n+      Assert.assertEquals(2, metadata.keys().size());\n+      Assert.assertTrue(metadata.containsKey(\"grpc-status-details-bin\"));\n+      Status status = marshaller.parseBytes(metadata.get(\"grpc-status-details-bin\"));\n+      for (Any details : status.getDetailsList()) {\n+        if (details.is(PerfOuterClass.Perf.class)) {\n+          try {\n+            newPerf = details.unpack(PerfOuterClass.Perf.class);\n+          } catch (InvalidProtocolBufferException e) {\n+            Assert.fail();\n+          }\n+        }\n+      }\n+      if (newPerf == null) {\n \n Review comment:\n   done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:17:15.074+0000",
                    "updated": "2020-03-22T14:17:15.074+0000",
                    "started": "2020-03-22T14:17:15.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407599",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407600",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rymurr commented on issue #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#issuecomment-602207559\n \n \n   > Instead of a generic, what about just duplicating methods for bytes? (And possibly deprecating the string variants.)\r\n   \r\n   I am happy with that. I think I am going to keep the name `CallHeaders` as it has been exposed externally in the`FlightServerMiddleware` class\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:18:33.890+0000",
                    "updated": "2020-03-22T14:18:33.890+0000",
                    "started": "2020-03-22T14:18:33.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407600",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396101986\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ErrorFlightMetadata.java\n ##########\n @@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.LinkedListMultimap;\n+import com.google.common.collect.Multimap;\n+\n+/**\n+ * metadata container specific to the binary metadata held in the grpc trailer.\n+ */\n+public class ErrorFlightMetadata implements CallHeaders {\n+  private final Multimap<String, byte[]> metadata = LinkedListMultimap.create();\n+\n+  public ErrorFlightMetadata() {\n+  }\n+\n+\n+  @Override\n+  public String get(String key) {\n+    return new String(getByte(key));\n \n Review comment:\n   We should explicitly specify `StandardCharsets.US_ASCII` to the String constructor so we don't get potentially different results based on where you run your program.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:51:59.003+0000",
                    "updated": "2020-03-22T14:51:59.003+0000",
                    "started": "2020-03-22T14:51:59.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407609",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396102101\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/ErrorFlightMetadata.java\n ##########\n @@ -0,0 +1,77 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.StreamSupport;\n+\n+import com.google.common.collect.Iterables;\n+import com.google.common.collect.LinkedListMultimap;\n+import com.google.common.collect.Multimap;\n+\n+/**\n+ * metadata container specific to the binary metadata held in the grpc trailer.\n+ */\n+public class ErrorFlightMetadata implements CallHeaders {\n+  private final Multimap<String, byte[]> metadata = LinkedListMultimap.create();\n+\n+  public ErrorFlightMetadata() {\n+  }\n+\n+\n+  @Override\n+  public String get(String key) {\n+    return new String(getByte(key));\n+  }\n+\n+  @Override\n+  public byte[] getByte(String key) {\n+    return Iterables.getLast(metadata.get(key));\n+  }\n+\n+  @Override\n+  public Iterable<String> getAll(String key) {\n+    return StreamSupport.stream(getAllByte(key).spliterator(), false).map(String::new).collect(Collectors.toList());\n \n Review comment:\n   The same comment about the String constructor also applies here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:51:59.007+0000",
                    "updated": "2020-03-22T14:51:59.007+0000",
                    "started": "2020-03-22T14:51:59.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407610",
                    "issueId": "13293109"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/worklog/407611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #6682: ARROW-8181: [Java][FlightRPC] Expose transport error metadata\nURL: https://github.com/apache/arrow/pull/6682#discussion_r396102206\n \n \n\n ##########\n File path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/grpc/MetadataAdapter.java\n ##########\n @@ -43,16 +44,35 @@ public String get(String key) {\n     return this.metadata.get(Key.of(key, Metadata.ASCII_STRING_MARSHALLER));\n   }\n \n+  @Override\n+  public byte[] getByte(String key) {\n+    if (key.endsWith(Metadata.BINARY_HEADER_SUFFIX)) {\n+      return this.metadata.get(Key.of(key, Metadata.BINARY_BYTE_MARSHALLER));\n+    }\n+    return get(key).getBytes();\n+  }\n+\n   @Override\n   public Iterable<String> getAll(String key) {\n     return this.metadata.getAll(Key.of(key, Metadata.ASCII_STRING_MARSHALLER));\n   }\n \n+  @Override\n+  public Iterable<byte[]> getAllByte(String key) {\n \n Review comment:\n   For consistency with `getByte`, this should also check the key and use the correct decoder instead of always deferring to getAll.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-22T14:51:59.007+0000",
                    "updated": "2020-03-22T14:51:59.007+0000",
                    "started": "2020-03-22T14:51:59.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "407611",
                    "issueId": "13293109"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4312de23[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@311b74b4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fd5b4b5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5581d92f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@570f8600[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@217af301[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33989b87[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@680b647a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@439fd0fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@358bd174[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42b830e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@71a3a478[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Mar 22 15:40:49 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-22T15:40:49.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8181/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-03-21T16:17:12.000+0000",
        "updated": "2020-06-09T16:52:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Flight currently do not make the gRPC trailer available when a FlightRuntimeException is called. This precludes using the richer error model discussed in [1][2]. The metadata in the gRPC trailer should be exposed in a protocol agnostic way. \r\n\r\nThis task is to expose error metadata without exposing transport implementation specifics.\r\n\r\n[1] https://grpc.io/docs/guides/error/#richer-error-model\r\n[2] https://cloud.google.com/apis/design/errors#error_model",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java][FlightRPC] Expose transport error metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293109/comment/17064324",
                    "id": "17064324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 6682\n[https://github.com/apache/arrow/pull/6682]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-22T15:40:49.884+0000",
                    "updated": "2020-03-22T15:40:49.884+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0crps:",
        "customfield_12314139": null
    }
}