{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13228690",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690",
    "key": "ARROW-5182",
    "fields": {
        "parent": {
            "id": "13228688",
            "key": "ARROW-5180",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13228688",
            "fields": {
                "summary": "[Rust] IPC Support",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
                    "name": "Blocker",
                    "id": "1"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5182/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/364409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107\n \n \n   This is committed on top of the PR for the stream reader, and should be merged after it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-29T21:19:54.487+0000",
                    "updated": "2019-12-29T21:19:54.487+0000",
                    "started": "2019-12-29T21:19:54.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "364409",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/364411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-569543782\n \n \n   https://issues.apache.org/jira/browse/ARROW-5182\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-12-29T21:31:48.910+0000",
                    "updated": "2019-12-29T21:31:48.910+0000",
                    "started": "2019-12-29T21:31:48.909+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "364411",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/365135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#discussion_r362307910\n \n \n\n ##########\n File path: rust/arrow/src/ipc/writer.rs\n ##########\n @@ -0,0 +1,461 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Arrow IPC File and Stream Writers\n+//!\n+//! The `FileWriter` and `StreamWriter` have similar interfaces,\n+//! however the `FileWriter` expects a reader that supports `Seek`ing\n+\n+use std::io::{BufWriter, Write};\n+\n+use flatbuffers::FlatBufferBuilder;\n+\n+use crate::array::ArrayDataRef;\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::ipc;\n+use crate::record_batch::RecordBatch;\n+\n+pub struct FileWriter<W: Write> {\n+    /// The object to write to\n+    writer: BufWriter<W>,\n+    /// A reference to the schema, used in validating record batches\n+    schema: Schema,\n+    /// The number of bytes written for the header (up to schema)\n+    header_bytes: usize,\n+    /// The number of bytes between each block of bytes, as an offset for random access\n+    block_offsets: usize,\n+    /// Dictionary blocks that will be written as part of the IPC footer\n+    dictionary_blocks: Vec<ipc::Block>,\n+    /// Record blocks that will be written as part of the IPC footer\n+    record_blocks: Vec<ipc::Block>,\n+    /// Whether the writer footer has been written, and the writer is finished\n+    finished: bool,\n+}\n+\n+impl<W: Write> FileWriter<W> {\n+    /// Try create a new writer, with the schema written as part of the header\n+    pub fn try_new(writer: W, schema: &Schema) -> Result<Self> {\n+        let mut writer = BufWriter::new(writer);\n+        // write magic to header\n+        writer.write(&super::ARROW_MAGIC[..])?;\n+        // create an 8-byte boudnary after the header\n+        writer.write(&[0, 0])?;\n+        // write the schema, set the written bytes to the schema + header\n+        let written = write_schema(&mut writer, schema)? + 8;\n+        Ok(Self {\n+            writer,\n+            schema: schema.clone(),\n+            header_bytes: written,\n+            block_offsets: written,\n+            dictionary_blocks: vec![],\n+            record_blocks: vec![],\n+            finished: false,\n+        })\n+    }\n+\n+    /// Write a record batch to the file\n+    pub fn write(&mut self, batch: &RecordBatch) -> Result<()> {\n+        if self.finished {\n+            return Err(ArrowError::IoError(\n+                \"Cannot write record batch to file writer as it is closed\".to_string(),\n+            ));\n+        }\n+        let (meta, data) = write_record_batch(&mut self.writer, batch)?;\n+        // add a record block for the footer\n+        self.record_blocks.push(ipc::Block::new(\n+            self.block_offsets as i64,\n+            (meta as i32) + 4,\n+            data as i64,\n+        ));\n+        self.block_offsets += meta + data;\n+        Ok(())\n+    }\n+\n+    /// write footer and closing tag, then mark the writer as done\n+    pub fn finish(&mut self) -> Result<()> {\n+        let mut fbb = FlatBufferBuilder::new();\n+        let dictionaries = fbb.create_vector(&self.dictionary_blocks);\n+        let record_batches = fbb.create_vector(&self.record_blocks);\n+        // TODO: this is duplicated as we otherwise mutably borrow twice\n \n Review comment:\n   I need help here, I couldn't find a way of reusing the functions in `crate::ipc::convert`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-01T07:40:54.868+0000",
                    "updated": "2020-01-01T07:40:54.868+0000",
                    "started": "2020-01-01T07:40:54.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "365135",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/365196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-570090199\n \n \n   Hi @nevi-me I am back at work tomorrow and will start reviewing this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-01T22:51:59.885+0000",
                    "updated": "2020-01-01T22:51:59.885+0000",
                    "started": "2020-01-01T22:51:59.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "365196",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/366255",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maxburke commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#discussion_r363061252\n \n \n\n ##########\n File path: rust/arrow/src/ipc/writer.rs\n ##########\n @@ -0,0 +1,461 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Arrow IPC File and Stream Writers\n+//!\n+//! The `FileWriter` and `StreamWriter` have similar interfaces,\n+//! however the `FileWriter` expects a reader that supports `Seek`ing\n+\n+use std::io::{BufWriter, Write};\n+\n+use flatbuffers::FlatBufferBuilder;\n+\n+use crate::array::ArrayDataRef;\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::ipc;\n+use crate::record_batch::RecordBatch;\n+\n+pub struct FileWriter<W: Write> {\n+    /// The object to write to\n+    writer: BufWriter<W>,\n+    /// A reference to the schema, used in validating record batches\n+    schema: Schema,\n+    /// The number of bytes written for the header (up to schema)\n+    header_bytes: usize,\n+    /// The number of bytes between each block of bytes, as an offset for random access\n+    block_offsets: usize,\n+    /// Dictionary blocks that will be written as part of the IPC footer\n+    dictionary_blocks: Vec<ipc::Block>,\n+    /// Record blocks that will be written as part of the IPC footer\n+    record_blocks: Vec<ipc::Block>,\n+    /// Whether the writer footer has been written, and the writer is finished\n+    finished: bool,\n+}\n+\n+impl<W: Write> FileWriter<W> {\n+    /// Try create a new writer, with the schema written as part of the header\n+    pub fn try_new(writer: W, schema: &Schema) -> Result<Self> {\n+        let mut writer = BufWriter::new(writer);\n+        // write magic to header\n+        writer.write(&super::ARROW_MAGIC[..])?;\n+        // create an 8-byte boudnary after the header\n+        writer.write(&[0, 0])?;\n+        // write the schema, set the written bytes to the schema + header\n+        let written = write_schema(&mut writer, schema)? + 8;\n+        Ok(Self {\n+            writer,\n+            schema: schema.clone(),\n+            header_bytes: written,\n+            block_offsets: written,\n+            dictionary_blocks: vec![],\n+            record_blocks: vec![],\n+            finished: false,\n+        })\n+    }\n+\n+    /// Write a record batch to the file\n+    pub fn write(&mut self, batch: &RecordBatch) -> Result<()> {\n+        if self.finished {\n+            return Err(ArrowError::IoError(\n+                \"Cannot write record batch to file writer as it is closed\".to_string(),\n+            ));\n+        }\n+        let (meta, data) = write_record_batch(&mut self.writer, batch)?;\n+        // add a record block for the footer\n+        self.record_blocks.push(ipc::Block::new(\n+            self.block_offsets as i64,\n+            (meta as i32) + 4,\n+            data as i64,\n+        ));\n+        self.block_offsets += meta + data;\n+        Ok(())\n+    }\n+\n+    /// write footer and closing tag, then mark the writer as done\n+    pub fn finish(&mut self) -> Result<()> {\n+        let mut fbb = FlatBufferBuilder::new();\n+        let dictionaries = fbb.create_vector(&self.dictionary_blocks);\n+        let record_batches = fbb.create_vector(&self.record_blocks);\n+        // TODO: this is duplicated as we otherwise mutably borrow twice\n \n Review comment:\n   I pulled this change down and played with it; I'm pretty excited to get the IPC writer for Rust :).  I've run into similar challenges before with flatbuffers, and sometimes there's no good way of working around it. \r\n   \r\n   Would it be worth converting schema_to_fb_offset to a macro maybe?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-04T23:56:36.759+0000",
                    "updated": "2020-01-04T23:56:36.759+0000",
                    "started": "2020-01-04T23:56:36.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "366255",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/366296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#discussion_r363076618\n \n \n\n ##########\n File path: rust/arrow/src/ipc/writer.rs\n ##########\n @@ -0,0 +1,461 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Arrow IPC File and Stream Writers\n+//!\n+//! The `FileWriter` and `StreamWriter` have similar interfaces,\n+//! however the `FileWriter` expects a reader that supports `Seek`ing\n+\n+use std::io::{BufWriter, Write};\n+\n+use flatbuffers::FlatBufferBuilder;\n+\n+use crate::array::ArrayDataRef;\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::ipc;\n+use crate::record_batch::RecordBatch;\n+\n+pub struct FileWriter<W: Write> {\n+    /// The object to write to\n+    writer: BufWriter<W>,\n+    /// A reference to the schema, used in validating record batches\n+    schema: Schema,\n+    /// The number of bytes written for the header (up to schema)\n+    header_bytes: usize,\n+    /// The number of bytes between each block of bytes, as an offset for random access\n+    block_offsets: usize,\n+    /// Dictionary blocks that will be written as part of the IPC footer\n+    dictionary_blocks: Vec<ipc::Block>,\n+    /// Record blocks that will be written as part of the IPC footer\n+    record_blocks: Vec<ipc::Block>,\n+    /// Whether the writer footer has been written, and the writer is finished\n+    finished: bool,\n+}\n+\n+impl<W: Write> FileWriter<W> {\n+    /// Try create a new writer, with the schema written as part of the header\n+    pub fn try_new(writer: W, schema: &Schema) -> Result<Self> {\n+        let mut writer = BufWriter::new(writer);\n+        // write magic to header\n+        writer.write(&super::ARROW_MAGIC[..])?;\n+        // create an 8-byte boudnary after the header\n+        writer.write(&[0, 0])?;\n+        // write the schema, set the written bytes to the schema + header\n+        let written = write_schema(&mut writer, schema)? + 8;\n+        Ok(Self {\n+            writer,\n+            schema: schema.clone(),\n+            header_bytes: written,\n+            block_offsets: written,\n+            dictionary_blocks: vec![],\n+            record_blocks: vec![],\n+            finished: false,\n+        })\n+    }\n+\n+    /// Write a record batch to the file\n+    pub fn write(&mut self, batch: &RecordBatch) -> Result<()> {\n+        if self.finished {\n+            return Err(ArrowError::IoError(\n+                \"Cannot write record batch to file writer as it is closed\".to_string(),\n+            ));\n+        }\n+        let (meta, data) = write_record_batch(&mut self.writer, batch)?;\n+        // add a record block for the footer\n+        self.record_blocks.push(ipc::Block::new(\n+            self.block_offsets as i64,\n+            (meta as i32) + 4,\n+            data as i64,\n+        ));\n+        self.block_offsets += meta + data;\n+        Ok(())\n+    }\n+\n+    /// write footer and closing tag, then mark the writer as done\n+    pub fn finish(&mut self) -> Result<()> {\n+        let mut fbb = FlatBufferBuilder::new();\n+        let dictionaries = fbb.create_vector(&self.dictionary_blocks);\n+        let record_batches = fbb.create_vector(&self.record_blocks);\n+        // TODO: this is duplicated as we otherwise mutably borrow twice\n \n Review comment:\n   I can try the macro approach if I can't find another workaround, I could do this when working on the `StreamWriter` given that it'll share most code with the `FileWriter`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-05T08:16:05.433+0000",
                    "updated": "2020-01-05T08:16:05.433+0000",
                    "started": "2020-01-05T08:16:05.432+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "366296",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/373917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maxburke commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-575817306\n \n \n   Hi! Is there anything I could be able to do to help with this merge?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-17T22:18:51.781+0000",
                    "updated": "2020-01-17T22:18:51.781+0000",
                    "started": "2020-01-17T22:18:51.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "373917",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/374003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-575864602\n \n \n   Hey @maxburke, the next release is a few days away, so I doubt this will make the cut. If you need to use the IPC writer for now, you can work from my branch in the short term. I can keep this PR updated with any other Rust changes in master.\r\n   \r\n   Do you also need a `StreamWriter`? I am holding off from working on it until we review and merge dictionary support and this file writer, but I could work on it if you need it sooner.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-18T04:12:18.166+0000",
                    "updated": "2020-01-18T04:12:18.166+0000",
                    "started": "2020-01-18T04:12:18.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374003",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/374045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#discussion_r368220148\n \n \n\n ##########\n File path: rust/arrow/src/ipc/writer.rs\n ##########\n @@ -0,0 +1,461 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+//! Arrow IPC File and Stream Writers\n+//!\n+//! The `FileWriter` and `StreamWriter` have similar interfaces,\n+//! however the `FileWriter` expects a reader that supports `Seek`ing\n+\n+use std::io::{BufWriter, Write};\n+\n+use flatbuffers::FlatBufferBuilder;\n+\n+use crate::array::ArrayDataRef;\n+use crate::buffer::{Buffer, MutableBuffer};\n+use crate::datatypes::*;\n+use crate::error::{ArrowError, Result};\n+use crate::ipc;\n+use crate::record_batch::RecordBatch;\n+\n+pub struct FileWriter<W: Write> {\n+    /// The object to write to\n+    writer: BufWriter<W>,\n+    /// A reference to the schema, used in validating record batches\n+    schema: Schema,\n+    /// The number of bytes written for the header (up to schema)\n+    header_bytes: usize,\n \n Review comment:\n   ended up not using this, will remove it as it duplicates `block_offsets`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-18T10:39:46.920+0000",
                    "updated": "2020-01-18T10:39:46.920+0000",
                    "started": "2020-01-18T10:39:46.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374045",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/374205",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "maxburke commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-575972225\n \n \n   The StreamWriter would be great to have but I've mostly worked around it for now with the FileWriter :) \r\n   \r\n   I'm actually currently working from your branch already.\r\n   \r\n   Really appreciate your help and progress on this!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-19T06:32:57.728+0000",
                    "updated": "2020-01-19T06:32:57.728+0000",
                    "started": "2020-01-19T06:32:57.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "374205",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/377405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-578521514\n \n \n   @andygrove I'm just waiting for a review\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-26T17:01:44.536+0000",
                    "updated": "2020-01-26T17:01:44.536+0000",
                    "started": "2020-01-26T17:01:44.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377405",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/377408",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-26T17:39:20.790+0000",
                    "updated": "2020-01-26T17:39:20.790+0000",
                    "started": "2020-01-26T17:39:20.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377408",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/377409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-578525205\n \n \n   @nevi-me After merging to master, I'm seeing a build failure in master:\r\n   \r\n   ```\r\n   failures:\r\n   \r\n   ---- ipc::writer::tests::read_and_rewrite_generated_files stdout ----\r\n   thread 'ipc::writer::tests::read_and_rewrite_generated_files' panicked at 'called `Result::unwrap()` on an `Err` value: Os { code: 2, kind: NotFound, message: \"No such file or directory\" }', src/libcore/result.rs:1187:5\r\n   \r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-26T17:42:34.122+0000",
                    "updated": "2020-01-26T17:42:34.122+0000",
                    "started": "2020-01-26T17:42:34.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377409",
                    "issueId": "13228690"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/worklog/377410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on issue #6107: ARROW-5182: [Rust] Arrow IPC file writer\nURL: https://github.com/apache/arrow/pull/6107#issuecomment-578525501\n \n \n   It's also happening on other PRs, I haven't had a chance to look at it. I'll look into it tomorrow morning\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-01-26T17:45:53.659+0000",
                    "updated": "2020-01-26T17:45:53.659+0000",
                    "started": "2020-01-26T17:45:53.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "377410",
                    "issueId": "13228690"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7685d618[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f19d956[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@516526e8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@40a786fb[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35f6db04[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7c915f51[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@43b744d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7857ba6f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bfa709a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@de7c363[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52a1478e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@17601b77[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Jan 26 17:39:20 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-01-26T17:39:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5182/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-04-17T19:53:55.000+0000",
        "updated": "2020-01-26T17:45:53.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Create Arrow File writer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13228690/comment/17023888",
                    "id": "17023888",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 6107\n[https://github.com/apache/arrow/pull/6107]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-01-26T17:39:20.090+0000",
                    "updated": "2020-01-26T17:39:20.090+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z01wao:",
        "customfield_12314139": null
    }
}