{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13210898",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898",
    "key": "ARROW-4318",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4318/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#issuecomment-456308327\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=h1) Report\n   > Merging [#3452](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/30422478cae9b55cb79b29115c43be683b9eb277?src=pr&el=desc) will **increase** coverage by `0.95%`.\n   > The diff coverage is `70.66%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3452/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3452      +/-   ##\n   ==========================================\n   + Coverage   88.33%   89.29%   +0.95%     \n   ==========================================\n     Files         632      503     -129     \n     Lines       79286    70370    -8916     \n     Branches     1069        0    -1069     \n   ==========================================\n   - Hits        70041    62836    -7205     \n   + Misses       9134     7534    -1600     \n   + Partials      111        0     -111\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/tensor.h](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuaA==) | `88.88% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/tensor-test.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3ItdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `75.77% <100%> (+5.5%)` | :arrow_up: |\n   | [cpp/src/arrow/tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuY2M=) | `79.81% <53.19%> (-20.19%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.45% <0%> (-1.95%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `71.09% <0%> (-0.95%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [js/src/enum.ts](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-anMvc3JjL2VudW0udHM=) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [126 more](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=footer). Last update [3042247...d99e524](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-22T08:15:33.628+0000",
                    "updated": "2019-01-22T08:15:33.628+0000",
                    "started": "2019-01-22T08:15:33.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188018",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#issuecomment-456308326\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=h1) Report\n   > Merging [#3452](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/30422478cae9b55cb79b29115c43be683b9eb277?src=pr&el=desc) will **increase** coverage by `0.95%`.\n   > The diff coverage is `70.66%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3452/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3452      +/-   ##\n   ==========================================\n   + Coverage   88.33%   89.29%   +0.95%     \n   ==========================================\n     Files         632      503     -129     \n     Lines       79286    70370    -8916     \n     Branches     1069        0    -1069     \n   ==========================================\n   - Hits        70041    62836    -7205     \n   + Misses       9134     7534    -1600     \n   + Partials      111        0     -111\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/tensor.h](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuaA==) | `88.88% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/tensor-test.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3ItdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `75.77% <100%> (+5.5%)` | :arrow_up: |\n   | [cpp/src/arrow/tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuY2M=) | `79.81% <53.19%> (-20.19%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.45% <0%> (-1.95%)` | :arrow_down: |\n   | [cpp/src/plasma/thirdparty/ae/ae.c](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGhpcmRwYXJ0eS9hZS9hZS5j) | `71.09% <0%> (-0.95%)` | :arrow_down: |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [js/src/enum.ts](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-anMvc3JjL2VudW0udHM=) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [126 more](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=footer). Last update [3042247...d99e524](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-22T08:15:34.067+0000",
                    "updated": "2019-01-22T08:15:34.067+0000",
                    "started": "2019-01-22T08:15:34.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188019",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r249792049\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,100 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace internal {\n \n Review comment:\n   Make this an anonymous namespace `namespace {` as the functions are only used in this `.cc` and should not be visible from anywhere else.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-22T14:07:10.505+0000",
                    "updated": "2019-01-22T14:07:10.505+0000",
                    "started": "2019-01-22T14:07:10.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188195",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250034936\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,100 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace internal {\n \n Review comment:\n   Fixed in 5250200\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T02:17:09.572+0000",
                    "updated": "2019-01-23T02:17:09.572+0000",
                    "started": "2019-01-23T02:17:09.571+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188608",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250191874\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n \n Review comment:\n   You may want to use `VisitTypeInline` from `visitor-inline.h` for this.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.164+0000",
                    "updated": "2019-01-23T13:35:22.164+0000",
                    "started": "2019-01-23T13:35:22.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188943",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250191575\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.h\n ##########\n @@ -102,6 +102,8 @@ class ARROW_EXPORT Tensor {\n \n   bool Equals(const Tensor& other) const;\n \n+  size_t CountNonZero() const;\n \n Review comment:\n   Please add a docstring for this. Also, this should return `int64_t` like `size()` does.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.217+0000",
                    "updated": "2019-01-23T13:35:22.217+0000",
                    "started": "2019-01-23T13:35:22.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188944",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188945",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250192799\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n+    case Type::UINT8:\n+      return TensorCountNonZero<UInt8Type>(*this);\n+    case Type::INT8:\n+      return TensorCountNonZero<Int8Type>(*this);\n+    case Type::UINT16:\n+      return TensorCountNonZero<UInt16Type>(*this);\n+    case Type::INT16:\n+      return TensorCountNonZero<Int16Type>(*this);\n+    case Type::UINT32:\n+      return TensorCountNonZero<UInt32Type>(*this);\n+    case Type::INT32:\n+      return TensorCountNonZero<Int32Type>(*this);\n+    case Type::UINT64:\n+      return TensorCountNonZero<UInt64Type>(*this);\n+    case Type::INT64:\n+      return TensorCountNonZero<Int64Type>(*this);\n+    case Type::HALF_FLOAT:\n+      return TensorCountNonZero<HalfFloatType>(*this);\n+    case Type::FLOAT:\n+      return TensorCountNonZero<FloatType>(*this);\n+    case Type::DOUBLE:\n+      return TensorCountNonZero<DoubleType>(*this);\n+    default:\n+      return 0;  // This shouldn't be unreachable\n \n Review comment:\n   I could theoretically define a tensor of timestamps, bools or decimals. I'm not sure returning 0 is the right answer here. Perhaps the method should return a `Status` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.222+0000",
                    "updated": "2019-01-23T13:35:22.222+0000",
                    "started": "2019-01-23T13:35:22.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188945",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250195101\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,6 +104,48 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n+TEST(TestTensor, CountNonZeroForZeroDimentionalTensor) {\n \n Review comment:\n   Typo: \"dimensional\".\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.232+0000",
                    "updated": "2019-01-23T13:35:22.232+0000",
                    "started": "2019-01-23T13:35:22.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188946",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250195294\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,6 +104,48 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n+TEST(TestTensor, CountNonZeroForZeroDimentionalTensor) {\n+  std::vector<int64_t> shape = {0};\n \n Review comment:\n   This is a one-dimensional tensor, not a zero-dimensional one, right? Or perhaps you meant a zero-sized tensor (which is a different thing).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.238+0000",
                    "updated": "2019-01-23T13:35:22.238+0000",
                    "started": "2019-01-23T13:35:22.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188947",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/188948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r250194849\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n \n Review comment:\n   This needn't be in this PR, but it would be interesting to define a `TensorDataVisitor` (akin to `ArrayDataVisitor`) in `visitor-inline.h`. Bonus points if there's also a `UnorderedTensorDataVisitor` that chooses the optimal iteration order depending on whether the tensor is row-major or column-major ;-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-23T13:35:22.239+0000",
                    "updated": "2019-01-23T13:35:22.239+0000",
                    "started": "2019-01-23T13:35:22.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "188948",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/190306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#issuecomment-456308327\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=h1) Report\n   > Merging [#3452](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/32f91b2c923809f8413c3a28efe0d0e0545fcc21?src=pr&el=desc) will **increase** coverage by `1.13%`.\n   > The diff coverage is `83.07%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3452/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3452      +/-   ##\n   ==========================================\n   + Coverage   88.18%   89.32%   +1.13%     \n   ==========================================\n     Files         635      503     -132     \n     Lines       79804    70368    -9436     \n     Branches     1069        0    -1069     \n   ==========================================\n   - Hits        70376    62856    -7520     \n   + Misses       9317     7512    -1805     \n   + Partials      111        0     -111\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/tensor.h](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuaA==) | `88.88% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/tensor-test.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3ItdGVzdC5jYw==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `75.77% <100%> (+1.78%)` | :arrow_up: |\n   | [cpp/src/arrow/tensor.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZW5zb3IuY2M=) | `88.88% <70.27%> (-11.12%)` | :arrow_down: |\n   | [cpp/src/arrow/util/decimal.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2RlY2ltYWwuY2M=) | `87.32% <0%> (-7.42%)` | :arrow_down: |\n   | [cpp/src/arrow/buffer-builder.h](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9idWZmZXItYnVpbGRlci5o) | `91.04% <0%> (-6.75%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_type\\_util.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfdHlwZV91dGlsLmNj) | `66.66% <0%> (-2.3%)` | :arrow_down: |\n   | [cpp/src/arrow/array/builder\\_binary.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2JpbmFyeS5jYw==) | `75.3% <0%> (-2%)` | :arrow_down: |\n   | [cpp/src/gandiva/context\\_helper.cc](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2NvbnRleHRfaGVscGVyLmNj) | `75% <0%> (-1.93%)` | :arrow_down: |\n   | ... and [334 more](https://codecov.io/gh/apache/arrow/pull/3452/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=footer). Last update [32f91b2...4dfc9bc](https://codecov.io/gh/apache/arrow/pull/3452?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-26T02:48:38.455+0000",
                    "updated": "2019-01-26T02:48:38.455+0000",
                    "started": "2019-01-26T02:48:38.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "190306",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/191264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r251601789\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n \n Review comment:\n   it's what I want!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-01-28T21:31:22.450+0000",
                    "updated": "2019-01-28T21:31:22.450+0000",
                    "started": "2019-01-28T21:31:22.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "191264",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/193301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r252993125\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.h\n ##########\n @@ -102,6 +102,8 @@ class ARROW_EXPORT Tensor {\n \n   bool Equals(const Tensor& other) const;\n \n+  size_t CountNonZero() const;\n \n Review comment:\n   Done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-01T10:01:59.086+0000",
                    "updated": "2019-02-01T10:01:59.086+0000",
                    "started": "2019-02-01T10:01:59.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "193301",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/193303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r252993831\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,6 +104,48 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n+TEST(TestTensor, CountNonZeroForZeroDimentionalTensor) {\n \n Review comment:\n   :fearful:\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-01T10:04:08.854+0000",
                    "updated": "2019-02-01T10:04:08.854+0000",
                    "started": "2019-02-01T10:04:08.853+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "193303",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/193304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r252993858\n \n \n\n ##########\n File path: cpp/src/arrow/tensor-test.cc\n ##########\n @@ -104,6 +104,48 @@ TEST(TestTensor, ZeroDimensionalTensor) {\n   ASSERT_EQ(t.strides().size(), 1);\n }\n \n+TEST(TestTensor, CountNonZeroForZeroDimentionalTensor) {\n \n Review comment:\n   Done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-01T10:04:15.294+0000",
                    "updated": "2019-02-01T10:04:15.294+0000",
                    "started": "2019-02-01T10:04:15.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "193304",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/193305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r252994051\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n \n Review comment:\n   I used `VisitTypeInline`.  Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-01T10:04:53.374+0000",
                    "updated": "2019-02-01T10:04:53.374+0000",
                    "started": "2019-02-01T10:04:53.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "193305",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/193312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r252998369\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n+    case Type::UINT8:\n+      return TensorCountNonZero<UInt8Type>(*this);\n+    case Type::INT8:\n+      return TensorCountNonZero<Int8Type>(*this);\n+    case Type::UINT16:\n+      return TensorCountNonZero<UInt16Type>(*this);\n+    case Type::INT16:\n+      return TensorCountNonZero<Int16Type>(*this);\n+    case Type::UINT32:\n+      return TensorCountNonZero<UInt32Type>(*this);\n+    case Type::INT32:\n+      return TensorCountNonZero<Int32Type>(*this);\n+    case Type::UINT64:\n+      return TensorCountNonZero<UInt64Type>(*this);\n+    case Type::INT64:\n+      return TensorCountNonZero<Int64Type>(*this);\n+    case Type::HALF_FLOAT:\n+      return TensorCountNonZero<HalfFloatType>(*this);\n+    case Type::FLOAT:\n+      return TensorCountNonZero<FloatType>(*this);\n+    case Type::DOUBLE:\n+      return TensorCountNonZero<DoubleType>(*this);\n+    default:\n+      return 0;  // This shouldn't be unreachable\n \n Review comment:\n   I agree with you about returning zero is wrong.  It, however, is prevented to create tensor with Timestamp type due to checking by `is_tensor_supported` in the constructor.  I changed the return value to `-1`, tentatively.\r\n   \r\n   What we should guarantee here is we can notice that we have to change `CountNonZero` when someone adds new tensor-supported types.  I'm considering the way to do so.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-01T10:19:01.613+0000",
                    "updated": "2019-02-01T10:19:01.613+0000",
                    "started": "2019-02-01T10:19:01.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "193312",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/195792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#issuecomment-461524216\n \n \n   Rebased.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T17:35:44.159+0000",
                    "updated": "2019-02-07T17:35:44.159+0000",
                    "started": "2019-02-07T17:35:44.158+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195792",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/195793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r254793714\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n+    case Type::UINT8:\n+      return TensorCountNonZero<UInt8Type>(*this);\n+    case Type::INT8:\n+      return TensorCountNonZero<Int8Type>(*this);\n+    case Type::UINT16:\n+      return TensorCountNonZero<UInt16Type>(*this);\n+    case Type::INT16:\n+      return TensorCountNonZero<Int16Type>(*this);\n+    case Type::UINT32:\n+      return TensorCountNonZero<UInt32Type>(*this);\n+    case Type::INT32:\n+      return TensorCountNonZero<Int32Type>(*this);\n+    case Type::UINT64:\n+      return TensorCountNonZero<UInt64Type>(*this);\n+    case Type::INT64:\n+      return TensorCountNonZero<Int64Type>(*this);\n+    case Type::HALF_FLOAT:\n+      return TensorCountNonZero<HalfFloatType>(*this);\n+    case Type::FLOAT:\n+      return TensorCountNonZero<FloatType>(*this);\n+    case Type::DOUBLE:\n+      return TensorCountNonZero<DoubleType>(*this);\n+    default:\n+      return 0;  // This shouldn't be unreachable\n \n Review comment:\n   We may not need a want to count non-zeros for some tensor types, for example dates and times. So I think returning a `Status` may be the best thing here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T17:39:23.257+0000",
                    "updated": "2019-02-07T17:39:23.257+0000",
                    "started": "2019-02-07T17:39:23.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195793",
                    "issueId": "13210898"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/worklog/195794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #3452: ARROW-4318: [C++] Add Tensor::CountNonZero\nURL: https://github.com/apache/arrow/pull/3452#discussion_r254793714\n \n \n\n ##########\n File path: cpp/src/arrow/tensor.cc\n ##########\n @@ -123,6 +123,80 @@ Type::type Tensor::type_id() const { return type_->id(); }\n \n bool Tensor::Equals(const Tensor& other) const { return TensorEquals(*this, other); }\n \n+namespace {\n+\n+template <typename TYPE>\n+size_t StridedTensorCountNonZero(int dim_index, int64_t offset, const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  c_type const zero = c_type(0);\n+  size_t nnz = 0;\n+  if (dim_index == tensor.ndim() - 1) {\n+    for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+      auto const* ptr = tensor.raw_data() + offset + i * tensor.strides()[dim_index];\n+      auto& elem = *reinterpret_cast<c_type const*>(ptr);\n+      if (elem != zero) ++nnz;\n+    }\n+    return nnz;\n+  }\n+  for (int64_t i = 0; i < tensor.shape()[dim_index]; ++i) {\n+    nnz += StridedTensorCountNonZero<TYPE>(dim_index + 1, offset, tensor);\n+    offset += tensor.strides()[dim_index];\n+  }\n+  return nnz;\n+}\n+\n+template <typename TYPE>\n+size_t ContiguousTensorCountNonZero(const Tensor& tensor) {\n+  using c_type = typename TYPE::c_type;\n+  auto* data = reinterpret_cast<c_type const*>(tensor.raw_data());\n+  return std::count_if(data, data + tensor.size(),\n+                       [](c_type const& x) { return x != 0; });\n+}\n+\n+template <typename TYPE>\n+inline size_t TensorCountNonZero(const Tensor& tensor) {\n+  if (tensor.is_contiguous()) {\n+    return ContiguousTensorCountNonZero<TYPE>(tensor);\n+  } else {\n+    return StridedTensorCountNonZero<TYPE>(0, 0, tensor);\n+  }\n+}\n+\n+}  // namespace\n+\n+size_t Tensor::CountNonZero() const {\n+  if (size() == 0) {\n+    return 0;\n+  }\n+\n+  switch (type()->id()) {\n+    case Type::UINT8:\n+      return TensorCountNonZero<UInt8Type>(*this);\n+    case Type::INT8:\n+      return TensorCountNonZero<Int8Type>(*this);\n+    case Type::UINT16:\n+      return TensorCountNonZero<UInt16Type>(*this);\n+    case Type::INT16:\n+      return TensorCountNonZero<Int16Type>(*this);\n+    case Type::UINT32:\n+      return TensorCountNonZero<UInt32Type>(*this);\n+    case Type::INT32:\n+      return TensorCountNonZero<Int32Type>(*this);\n+    case Type::UINT64:\n+      return TensorCountNonZero<UInt64Type>(*this);\n+    case Type::INT64:\n+      return TensorCountNonZero<Int64Type>(*this);\n+    case Type::HALF_FLOAT:\n+      return TensorCountNonZero<HalfFloatType>(*this);\n+    case Type::FLOAT:\n+      return TensorCountNonZero<FloatType>(*this);\n+    case Type::DOUBLE:\n+      return TensorCountNonZero<DoubleType>(*this);\n+    default:\n+      return 0;  // This shouldn't be unreachable\n \n Review comment:\n   We may not need or want to count non-zeros for some tensor types, for example dates and times. So I think returning a `Status` may be the best thing here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-02-07T17:39:35.000+0000",
                    "updated": "2019-02-07T17:39:35.000+0000",
                    "started": "2019-02-07T17:39:35.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "195794",
                    "issueId": "13210898"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2c5700c4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77879367[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34923e74[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7f458f2a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3af89cfb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@20698bb5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ad6052[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@56428312[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2823c265[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@44fbc0f7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2a3a97ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@68a2db8c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 07 19:07:16 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-02-07T19:07:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4318/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-01-22T07:43:29.000+0000",
        "updated": "2019-02-07T19:07:48.000+0000",
        "timeoriginalestimate": null,
        "description": "I would like to move CountNonZero defined in SparseTensorConverter into Tensor class, and add tests for this function.\r\n\r\nThe pull-request is [https://github.com/apache/arrow/pull/3452].",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add Tensor::CountNonZero",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13210898/comment/16762979",
                    "id": "16762979",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 3452\n[https://github.com/apache/arrow/pull/3452]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-02-07T19:07:16.856+0000",
                    "updated": "2019-02-07T19:07:16.856+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|yi05m0:",
        "customfield_12314139": null
    }
}