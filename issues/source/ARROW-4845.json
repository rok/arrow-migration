{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13221201",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201",
    "key": "ARROW-4845",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344987",
                "id": "12344987",
                "name": "0.12.1",
                "archived": false,
                "released": true,
                "releaseDate": "2019-02-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jeroenooms",
            "name": "jeroenooms",
            "key": "jeroenooms",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jeroen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jeroenooms",
            "name": "jeroenooms",
            "key": "jeroenooms",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Jeroen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4845/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/256870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T14:24:45.445+0000",
                    "updated": "2019-06-10T14:24:45.445+0000",
                    "started": "2019-06-10T14:24:45.444+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256870",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/256872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500437355\n \n \n   This did not test on win builder because I supposed we need a new build of `libarrow`, #4413 followed up on #4316 and introduced some incompatibilities. https://win-builder.r-project.org/KG75rToaX3Qd/\r\n   \r\n   How do we trigger new builds for https://github.com/rwinlib/arrow ? @jeroen @javierluraschi \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T14:28:53.897+0000",
                    "updated": "2019-06-10T14:28:53.897+0000",
                    "started": "2019-06-10T14:28:53.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256872",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/256938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500481687\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=h1) Report\n   > Merging [#4511](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/37e6183d7e17a68d53b3cf4e6d3e4fa3d3016a6c?src=pr&el=desc) will **decrease** coverage by `11.35%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4511/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4511       +/-   ##\n   ===========================================\n   - Coverage   88.27%   76.92%   -11.36%     \n   ===========================================\n     Files         846       51      -795     \n     Lines      103662     1976   -101686     \n     Branches     1253        0     -1253     \n   ===========================================\n   - Hits        91512     1520    -89992     \n   + Misses      11903      456    -11447     \n   + Partials      247        0      -247\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | `91.2% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/arrow/csv/chunker-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY2h1bmtlci10ZXN0LmNj) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/arrow/util/int-util-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2ludC11dGlsLXRlc3QuY2M=) | | |\n   | [cpp/src/arrow/python/io.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vaW8uY2M=) | | |\n   | ... and [786 more](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=footer). Last update [37e6183...8ec6d6a](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T16:24:03.244+0000",
                    "updated": "2019-06-10T16:24:03.244+0000",
                    "started": "2019-06-10T16:24:03.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256938",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500511857\n \n \n   https://issues.apache.org/jira/browse/ARROW-4845 shows lots of warnings that look to be from different lines--are you sure this is the only change needed?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-10T17:46:27.544+0000",
                    "updated": "2019-06-10T17:46:27.544+0000",
                    "started": "2019-06-10T17:46:27.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257031",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500744159\n \n \n   I'm not sure, that's why I tried to trigger a win builder build with `devtools::check_win_devel()` but it ended with this: \r\n   \r\n   ```\r\n   *** arch - i386\r\n   \"D:/RCompile/recent/R/bin/i386/Rscript.exe\" \"../tools/winlibs.R\" 0.13.0.9000\r\n   Error in download.file(sprintf(\"https://github.com/rwinlib/arrow/archive/v%s.zip\",  : \r\n     cannot open URL 'https://github.com/rwinlib/arrow/archive/v0.13.0.9000.zip'\r\n   In addition: Warning message:\r\n   In download.file(sprintf(\"https://github.com/rwinlib/arrow/archive/v%s.zip\",  :\r\n     cannot open URL 'https://github.com/rwinlib/arrow/archive/v0.13.0.9000.zip': HTTP status was '404 Not Found'\r\n   Execution halted\r\n   make: *** [winlibs] Error 1\r\n   ERROR: compilation failed for package 'arrow'\r\n   * removing 'd:/RCompile/CRANguest/R-devel/lib/arrow'\r\n   ```\r\n   \r\n   before it could show me compile errors. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T08:35:52.924+0000",
                    "updated": "2019-06-11T08:35:52.924+0000",
                    "started": "2019-06-11T08:35:52.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257518",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257551",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#discussion_r292360392\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -131,7 +131,7 @@ std::shared_ptr<arrow::RecordBatch> ipc___ReadRecordBatch__InputStream__Schema(\n arrow::Status check_consistent_array_size(\n     const std::vector<std::shared_ptr<arrow::Array>>& arrays, int64_t* num_rows) {\n   *num_rows = arrays[0]->length();\n \n Review comment:\n   What happens if there are 0 arrays?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T09:25:29.771+0000",
                    "updated": "2019-06-11T09:25:29.771+0000",
                    "started": "2019-06-11T09:25:29.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257551",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#discussion_r292360286\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -131,7 +131,7 @@ std::shared_ptr<arrow::RecordBatch> ipc___ReadRecordBatch__InputStream__Schema(\n arrow::Status check_consistent_array_size(\n     const std::vector<std::shared_ptr<arrow::Array>>& arrays, int64_t* num_rows) {\n   *num_rows = arrays[0]->length();\n-  for (int64_t i = 1; i < arrays.size(); i++) {\n+  for (size_t i = 1; i < arrays.size(); i++) {\n \n Review comment:\n   Idiomatic C++11 style would be something like this:\r\n   ```cpp\r\n   for (const auto& array : arrays) {\r\n     if (array->length() != *num_rows) {\r\n       // etc.\r\n   ```\r\n   \r\n   Which also avoids having to think about index type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T09:25:34.535+0000",
                    "updated": "2019-06-11T09:25:34.535+0000",
                    "started": "2019-06-11T09:25:34.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257552",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257562",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500767620\n \n \n   Perhaps we can use `-Wall` on travis to get some other warnings as well. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T09:40:52.302+0000",
                    "updated": "2019-06-11T09:40:52.302+0000",
                    "started": "2019-06-11T09:40:52.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257562",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#discussion_r292369614\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -131,7 +131,7 @@ std::shared_ptr<arrow::RecordBatch> ipc___ReadRecordBatch__InputStream__Schema(\n arrow::Status check_consistent_array_size(\n     const std::vector<std::shared_ptr<arrow::Array>>& arrays, int64_t* num_rows) {\n   *num_rows = arrays[0]->length();\n-  for (int64_t i = 1; i < arrays.size(); i++) {\n+  for (size_t i = 1; i < arrays.size(); i++) {\n \n Review comment:\n   Thanks. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T09:47:54.871+0000",
                    "updated": "2019-06-11T09:47:54.871+0000",
                    "started": "2019-06-11T09:47:54.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257564",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/257565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#discussion_r292369729\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -131,7 +131,7 @@ std::shared_ptr<arrow::RecordBatch> ipc___ReadRecordBatch__InputStream__Schema(\n arrow::Status check_consistent_array_size(\n     const std::vector<std::shared_ptr<arrow::Array>>& arrays, int64_t* num_rows) {\n   *num_rows = arrays[0]->length();\n \n Review comment:\n   \ud83d\ude2c thanks, updated. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-11T09:48:07.560+0000",
                    "updated": "2019-06-11T09:48:07.560+0000",
                    "started": "2019-06-11T09:48:07.559+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "257565",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/258503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-500481687\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=h1) Report\n   > Merging [#4511](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/48ee38f833a51bb46a404da10d89c4b687e952c9?src=pr&el=desc) will **decrease** coverage by `13.09%`.\n   > The diff coverage is `85.71%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4511/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #4511       +/-   ##\n   ===========================================\n   - Coverage   88.11%   75.01%    -13.1%     \n   ===========================================\n     Files         850       54      -796     \n     Lines      105774     3114   -102660     \n     Branches     1253        0     -1253     \n   ===========================================\n   - Hits        93203     2336    -90867     \n   + Misses      12326      778    -11548     \n   + Partials      245        0      -245\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/arrowExports.cpp](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dFeHBvcnRzLmNwcA==) | `72.7% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | `82.69% <85.71%> (+0.51%)` | :arrow_up: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/arrow/csv/chunker-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY2h1bmtlci10ZXN0LmNj) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/arrow/array/builder\\_decimal.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9hcnJheS9idWlsZGVyX2RlY2ltYWwuY2M=) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/arrow/util/int-util-test.cc](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL2ludC11dGlsLXRlc3QuY2M=) | | |\n   | ... and [788 more](https://codecov.io/gh/apache/arrow/pull/4511/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=footer). Last update [48ee38f...7052b9e](https://codecov.io/gh/apache/arrow/pull/4511?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T08:22:21.451+0000",
                    "updated": "2019-06-12T08:22:21.451+0000",
                    "started": "2019-06-12T08:22:21.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258503",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/258512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T08:29:46.063+0000",
                    "updated": "2019-06-12T08:29:46.063+0000",
                    "started": "2019-06-12T08:29:46.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258512",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/258574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jeroen commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-501203262\n \n \n   Once libarrow 0.14 is released you can send a PR to https://github.com/r-windows/rtools-packages and https://github.com/r-windows/rtools-backports and we can upload new binaries on rwinlib.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T09:53:52.919+0000",
                    "updated": "2019-06-12T09:53:52.919+0000",
                    "started": "2019-06-12T09:53:52.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258574",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/258744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-501288590\n \n \n   At some point we need to document the source build process on Windows rather than relying on pre-packaged binaries so that we can run it in CI, otherwise we will eventually get slammed with a Windows-only problem post-release\r\n   \r\n   https://issues.apache.org/jira/browse/ARROW-3758\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T14:04:40.901+0000",
                    "updated": "2019-06-12T14:04:40.901+0000",
                    "started": "2019-06-12T14:04:40.900+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258744",
                    "issueId": "13221201"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/worklog/258785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jeroen commented on issue #4511: ARROW-4845: [R] Compiler warnings on Windows MingW64\nURL: https://github.com/apache/arrow/pull/4511#issuecomment-501308868\n \n \n   The build process is [documented](https://github.com/r-windows/rtools-packages#building-package) and [automated](https://ci.appveyor.com/project/jeroen/rtools-backports/history). \r\n   \r\n   You can either build libarrow locally or send a PR to https://github.com/r-windows/rtools-backports and then download the binaries from appveyor, and build your R package with that.\r\n   \r\n   There is nothing special about [rwinlib](https://github.com/rwinlib), it's just a place where we host binaries for (stable) libraries. But you could host them anywhere else.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-12T14:50:15.833+0000",
                    "updated": "2019-06-12T14:50:15.833+0000",
                    "started": "2019-06-12T14:50:15.833+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "258785",
                    "issueId": "13221201"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@67d21398[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24f50dc8[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7937d8e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@75a00144[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b4817d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@27190df9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@602e091d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@15f18e7d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e9ce58d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@61854762[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71f3dcae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@68e8268b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 12 08:29:36 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-12T08:29:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4845/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-03-12T18:28:39.000+0000",
        "updated": "2019-06-12T14:50:15.000+0000",
        "timeoriginalestimate": null,
        "description": "I am seeing the warnings below when compiling the R bindings on Windows. Most of these seem easy to fix (comparing int with size_t or int32 with int64).\r\n\r\n{code}\r\narray.cpp: In function 'Rcpp::LogicalVector Array__Mask(const std::shared_ptr<arrow::Array>&)':\r\narray.cpp:102:24: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'int64_t' {aka 'long long int'} [-Wsign-compare]\r\n   for (size_t i = 0; i < array->length(); i++, bitmap_reader.Next()) {\r\n                      ~~^~~~~~~~~~~~~~~~~\r\n/mingw64/bin/g++  -std=gnu++11 -I\"C:/PROGRA~1/R/R-testing/include\" -DNDEBUG -DARROW_STATIC -I\"C:/R/library/Rcpp/include\"        -O2 -Wall  -mtune=generic -c array__to_vector.cpp -o array__to_vector.o\r\narray__to_vector.cpp: In member function 'virtual arrow::Status arrow::r::Converter_Boolean::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const':\r\narray__to_vector.cpp:254:28: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n       for (size_t i = 0; i < n; i++, data_reader.Next(), null_reader.Next(), ++p_data) {\r\n                          ~~^~~\r\narray__to_vector.cpp:258:28: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n       for (size_t i = 0; i < n; i++, data_reader.Next(), ++p_data) {\r\n                          ~~^~~\r\narray__to_vector.cpp: In member function 'virtual arrow::Status arrow::r::Converter_Decimal::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const':\r\narray__to_vector.cpp:473:28: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n       for (size_t i = 0; i < n; i++, bitmap_reader.Next(), ++p_data) {\r\n                          ~~^~~\r\narray__to_vector.cpp:478:28: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n       for (size_t i = 0; i < n; i++, ++p_data) {\r\n                          ~~^~~\r\narray__to_vector.cpp: In member function 'virtual arrow::Status arrow::r::Converter_Int64::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const':\r\narray__to_vector.cpp:515:28: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n       for (size_t i = 0; i < n; i++, bitmap_reader.Next(), ++p_data) {\r\n                          ~~^~~\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = long long int; Lambda = arrow::r::Converter_Date64::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const::<lambda(int64_t)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:366:77:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\n     for (size_t i = 0; i < n; i++, bitmap_reader.Next(), ++p_data, ++p_values) {\r\n                        ~~^~~\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = unsigned char; Lambda = arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::UInt8Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:341:47:   required from 'arrow::Status arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::UInt8Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:313:78:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = signed char; Lambda = arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int8Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:341:47:   required from 'arrow::Status arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int8Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:315:77:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = short unsigned int; Lambda = arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::UInt16Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:341:47:   required from 'arrow::Status arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::UInt16Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:317:79:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = short int; Lambda = arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int16Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:341:47:   required from 'arrow::Status arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int16Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:319:78:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = int; Lambda = arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int32Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:341:47:   required from 'arrow::Status arrow::r::Converter_Dictionary::Ingest_some_nulls_Impl(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with Type = arrow::Int32Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:321:78:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = long long int; Lambda = arrow::r::Converter_Time<value_type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with value_type = long long int; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(long long int)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:421:48:   required from 'arrow::Status arrow::r::Converter_Time<value_type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with value_type = long long int; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:415:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = int; Lambda = arrow::r::Converter_Time<value_type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with value_type = int; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(int)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:421:48:   required from 'arrow::Status arrow::r::Converter_Time<value_type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with value_type = int; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:415:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = float; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::FloatType; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<14, arrow::FloatType>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::FloatType; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = short unsigned int; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::HalfFloatType; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<14, arrow::HalfFloatType>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::HalfFloatType; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = unsigned int; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::UInt32Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<14, arrow::UInt32Type>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; Type = arrow::UInt32Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = short unsigned int; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::UInt16Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<13, arrow::UInt16Type>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::UInt16Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = short int; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::Int16Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<13, arrow::Int16Type>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::Int16Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = unsigned char; Lambda = arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::UInt8Type; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_Promotion<13, arrow::UInt8Type>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:389:46:   required from 'arrow::Status arrow::r::Converter_Promotion<RTYPE, Type>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; Type = arrow::UInt8Type; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:386:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 14; array_value_type = double; Lambda = arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_SimpleArray<14>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:152:46:   required from 'arrow::Status arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 14; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:148:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 24; array_value_type = unsigned char; Lambda = arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 24; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_SimpleArray<24>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:152:46:   required from 'arrow::Status arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 24; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:148:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In instantiation of 'arrow::Status arrow::r::SomeNull_Ingest(SEXP, R_xlen_t, R_xlen_t, const array_value_type*, const std::shared_ptr<arrow::Array>&, Lambda) [with int RTYPE = 13; array_value_type = int; Lambda = arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; SEXP = SEXPREC*; R_xlen_t = long long int]::<lambda(arrow::r::Converter_SimpleArray<13>::value_type)>; SEXP = SEXPREC*; R_xlen_t = long long int]':\r\narray__to_vector.cpp:152:46:   required from 'arrow::Status arrow::r::Converter_SimpleArray<RTYPE>::Ingest_some_nulls(SEXP, const std::shared_ptr<arrow::Array>&, R_xlen_t, R_xlen_t) const [with int RTYPE = 13; SEXP = SEXPREC*; R_xlen_t = long long int]'\r\narray__to_vector.cpp:148:10:   required from here\r\narray__to_vector.cpp:116:26: warning: comparison of integer expressions of different signedness: 'size_t' {aka 'long long unsigned int'} and 'R_xlen_t' {aka 'long long int'} [-Wsign-compare]\r\narray__to_vector.cpp: In member function 'int arrow::r::Converter_Time<value_type>::TimeUnit_multiplier(const std::shared_ptr<arrow::Array>&) const [with value_type = long long int]':\r\narray__to_vector.cpp:437:3: warning: control reaches end of non-void function [-Wreturn-type]\r\n   }\r\n   ^\r\narray__to_vector.cpp: In member function 'int arrow::r::Converter_Time<value_type>::TimeUnit_multiplier(const std::shared_ptr<arrow::Array>&) const [with value_type = int]':\r\narray__to_vector.cpp:437:3: warning: control reaches end of non-void function [-Wreturn-type]\r\n/mingw64/bin/g++  -std=gnu++11 -I\"C:/PROGRA~1/R/R-testing/include\" -DNDEBUG -DARROW_STATIC -I\"C:/R/library/Rcpp/include\"        -O2 -Wall  -mtune=generic -c array_from_vector.cpp -o array_from_vector.o\r\narray_from_vector.cpp: In instantiation of 'arrow::Status arrow::internal::int_cast(T, Target*) [with T = int; Target = long long unsigned int]':\r\narray_from_vector.cpp:301:9:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::IngestRange(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, T*, R_xlen_t, T) [with T = int; Type = arrow::UInt64Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt64Type>; R_xlen_t = long long int]'\r\narray_from_vector.cpp:277:32:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::Ingest(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, SEXP) [with Type = arrow::UInt64Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt64Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:64:   required from 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::UInt64Type; Derived = arrow::r::NumericVectorConverter<arrow::UInt64Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:10:   required from here\r\narray_from_vector.cpp:187:9: warning: comparison of integer expressions of different signedness: 'int' and 'long long unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp:187:51: warning: comparison of integer expressions of different signedness: 'int' and 'long long unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n                                                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp: In instantiation of 'arrow::Status arrow::internal::int_cast(T, Target*) [with T = long long int; Target = long long unsigned int]':\r\narray_from_vector.cpp:301:9:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::IngestRange(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, T*, R_xlen_t, T) [with T = long long int; Type = arrow::UInt64Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt64Type>; R_xlen_t = long long int]'\r\narray_from_vector.cpp:280:38:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::Ingest(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, SEXP) [with Type = arrow::UInt64Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt64Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:64:   required from 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::UInt64Type; Derived = arrow::r::NumericVectorConverter<arrow::UInt64Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:10:   required from here\r\narray_from_vector.cpp:187:9: warning: comparison of integer expressions of different signedness: 'long long int' and 'long long unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp:187:51: warning: comparison of integer expressions of different signedness: 'long long int' and 'long long unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n                                                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp: In instantiation of 'arrow::Status arrow::internal::int_cast(T, Target*) [with T = int; Target = unsigned int]':\r\narray_from_vector.cpp:301:9:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::IngestRange(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, T*, R_xlen_t, T) [with T = int; Type = arrow::UInt32Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt32Type>; R_xlen_t = long long int]'\r\narray_from_vector.cpp:277:32:   required from 'static arrow::Status arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::Ingest(arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType*, SEXP) [with Type = arrow::UInt32Type; arrow::r::Unbox<Type, typename std::enable_if<std::is_base_of<arrow::Integer, T>::value>::type>::BuilderType = arrow::NumericBuilder<arrow::UInt32Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:64:   required from 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::UInt32Type; Derived = arrow::r::NumericVectorConverter<arrow::UInt32Type>; SEXP = SEXPREC*]'\r\narray_from_vector.cpp:542:10:   required from here\r\narray_from_vector.cpp:187:9: warning: comparison of integer expressions of different signedness: 'int' and 'unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n       ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp:187:51: warning: comparison of integer expressions of different signedness: 'int' and 'unsigned int' [-Wsign-compare]\r\n   if (x < std::numeric_limits<Target>::min() || x > std::numeric_limits<Target>::max()) {\r\n                                                 ~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\narray_from_vector.cpp: In function 'int64_t arrow::r::get_time_multiplier(arrow::TimeUnit::type)':\r\narray_from_vector.cpp:569:1: warning: control reaches end of non-void function [-Wreturn-type]\r\n }\r\n ^\r\narray_from_vector.cpp: In member function 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::DoubleType; Derived = arrow::r::NumericVectorConverter<arrow::DoubleType>]':\r\narray_from_vector.cpp:333:16: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         double value;\r\n                ^~~~~\r\narray_from_vector.cpp: In member function 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::FloatType; Derived = arrow::r::NumericVectorConverter<arrow::FloatType>]':\r\narray_from_vector.cpp:378:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         float value;\r\n               ^~~~~\r\narray_from_vector.cpp:378:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\narray_from_vector.cpp: In member function 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::Int8Type; Derived = arrow::r::NumericVectorConverter<arrow::Int8Type>]':\r\narray_from_vector.cpp:300:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n         CType value;\r\n               ^~~~~\r\narray_from_vector.cpp:300:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\narray_from_vector.cpp: In member function 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::Int32Type; Derived = arrow::r::NumericVectorConverter<arrow::Int32Type>]':\r\narray_from_vector.cpp:300:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\narray_from_vector.cpp: In member function 'arrow::Status arrow::r::TypedVectorConverter<Type, Derived>::Ingest(SEXP) [with Type = arrow::Int16Type; Derived = arrow::r::NumericVectorConverter<arrow::Int16Type>]':\r\narray_from_vector.cpp:300:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\narray_from_vector.cpp:300:15: warning: 'value' may be used uninitialized in this function [-Wmaybe-uninitialized]\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Compiler warnings on Windows MingW64",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13221201/comment/16861872",
                    "id": "16861872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4511\n[https://github.com/apache/arrow/pull/4511]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-12T08:29:36.021+0000",
                    "updated": "2019-06-12T08:29:36.021+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z00mjs:",
        "customfield_12314139": null
    }
}