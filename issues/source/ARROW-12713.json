{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13377646",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646",
    "key": "ARROW-12713",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12615318",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615318",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13042654",
                    "key": "ARROW-555",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13042654",
                    "fields": {
                        "summary": "[C++] String algorithm library for StringArray/BinaryArray",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            },
            {
                "id": "12616142",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12616142",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13380329",
                    "key": "ARROW-12869",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13380329",
                    "fields": {
                        "summary": "[R] Bindings for utf8_reverse and ascii_reverse",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
            "name": "niranda",
            "key": "niranda",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Niranda Perera",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
            "name": "icook",
            "key": "icook",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
            },
            "displayName": "Ian Cook",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12713/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 42,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera opened a new pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317\n\n\n   This PR adds ascii and utf8 reverse kernels. \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T19:18:28.475+0000",
                    "updated": "2021-05-13T19:18:28.475+0000",
                    "started": "2021-05-13T19:18:28.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596320",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#issuecomment-840776704\n\n\n   https://issues.apache.org/jira/browse/ARROW-12713\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T19:18:42.535+0000",
                    "updated": "2021-05-13T19:18:42.535+0000",
                    "started": "2021-05-13T19:18:42.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596321",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632123654\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       IMO `ascii_reverse` is slightly different from the other `ascii_*` routines. If there are non-ascii chars present, they can bypass them (ex: lower, upper, etc), but in reverse, we can't do that. Therefore, I added a flag `utf8_char_found` inside the loop, and if any utf8 char is found, the `ascii_reverse` would throw an invalid status. \r\n   I am not sure, if this check is needed or not. If we can assume that the user passes an 'ascii-only' input, we can simply user `std::reverse_copy`. So, I'd like to get a second opinion on that. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T21:44:23.149+0000",
                    "updated": "2021-05-13T21:44:23.149+0000",
                    "started": "2021-05-13T21:44:23.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596384",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596385",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632123654\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       IMO `ascii_reverse` is slightly different from the other `ascii_*` routines. If there are non-ascii chars present, other routines can bypass them (ex: lower, upper, etc), but in reverse, we can't do that. Therefore, I added a flag `utf8_char_found` inside the loop, and if any utf8 char is found, the `ascii_reverse` would throw an invalid status. \r\n   I am not sure, if this check is needed or not. If we can assume that the user passes an 'ascii-only' input, we can simply user `std::reverse_copy`. So, I'd like to get a second opinion on that. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-13T21:51:55.263+0000",
                    "updated": "2021-05-13T21:51:55.263+0000",
                    "started": "2021-05-13T21:51:55.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596385",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#issuecomment-840976553\n\n\n   Learned from @cyb70289 that new kernels need to extend both C++ and Python documentation:\r\n   1. https://github.com/apache/arrow/blob/master/docs/source/cpp/compute.rst\r\n   2. https://github.com/apache/arrow/blob/master/docs/source/python/api/compute.rst\r\n   Note that kernel names are in alphabetical order.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T03:13:21.275+0000",
                    "updated": "2021-05-14T03:13:21.275+0000",
                    "started": "2021-05-14T03:13:21.275+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596494",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632245699\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string_test.cc\n##########\n@@ -91,6 +91,25 @@ TYPED_TEST(TestStringKernels, AsciiLower) {\n                    \"[\\\"aaazz\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n }\n \n+TYPED_TEST(TestStringKernels, AsciiReverse) {\n+  this->CheckUnary(\"ascii_reverse\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"ascii_reverse\", R\"([\"abcd\", null, \"\", \"bbb\"])\", this->type(),\n+                   R\"([\"dcba\", null, \"\", \"bbb\"])\");\n+\n+  Datum input = ArrayFromJSON(this->type(), \"[\\\"aAazZ\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n+  ASSERT_NOT_OK(CallFunction(\"ascii_reverse\", {input}));\n+}\n+\n+TYPED_TEST(TestStringKernels, Utf8Reverse) {\n+  this->CheckUnary(\"utf8_reverse\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"utf8_reverse\", R\"([\"abcd\", null, \"\", \"bbb\"])\", this->type(),\n+                   R\"([\"dcba\", null, \"\", \"bbb\"])\");\n+  this->CheckUnary(\"utf8_reverse\", \"[\\\"aAazZ\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\", this->type(),\n\nReview comment:\n       Can we write `R\"([\"aAazZ\u00e6\u00c6&\", null, \"\", \"bbb\"])\"` instead?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T03:13:57.062+0000",
                    "updated": "2021-05-14T03:13:57.062+0000",
                    "started": "2021-05-14T03:13:57.062+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596495",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632615943\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       IMO if the check is relatively cheap then it's good to keep. If someone is using the ASCII kernel explicitly, presumably either\r\n   1) they want an assurance their data is ASCII\r\n   2) they know data is ASCII and assume it's faster to reverse knowing this\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:37:31.148+0000",
                    "updated": "2021-05-14T15:37:31.148+0000",
                    "started": "2021-05-14T15:37:31.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596719",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632624306\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       I'm ok with the check.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:48:31.715+0000",
                    "updated": "2021-05-14T15:48:31.715+0000",
                    "started": "2021-05-14T15:48:31.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596721",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632624475\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n\nReview comment:\n       Use `bool` instead.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n\nReview comment:\n       This is potentially reading out of bounds if there is a truncated utf8 character at the end of the input.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n\nReview comment:\n       This deserves to be an inline function in `util/utf8.h`, I think (perhaps it even already exists?).\r\n   \r\n   \n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n+      i += offset;\n\nReview comment:\n       There's a problem: `offset` can be 0 in the lookup table, and then you have an infinite loop.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string_test.cc\n##########\n@@ -91,6 +91,25 @@ TYPED_TEST(TestStringKernels, AsciiLower) {\n                    \"[\\\"aaazz\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n }\n \n+TYPED_TEST(TestStringKernels, AsciiReverse) {\n+  this->CheckUnary(\"ascii_reverse\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"ascii_reverse\", R\"([\"abcd\", null, \"\", \"bbb\"])\", this->type(),\n+                   R\"([\"dcba\", null, \"\", \"bbb\"])\");\n+\n+  Datum input = ArrayFromJSON(this->type(), \"[\\\"aAazZ\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n+  ASSERT_NOT_OK(CallFunction(\"ascii_reverse\", {input}));\n+}\n+\n+TYPED_TEST(TestStringKernels, Utf8Reverse) {\n+  this->CheckUnary(\"utf8_reverse\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"utf8_reverse\", R\"([\"abcd\", null, \"\", \"bbb\"])\", this->type(),\n+                   R\"([\"dcba\", null, \"\", \"bbb\"])\");\n+  this->CheckUnary(\"utf8_reverse\", \"[\\\"aAazZ\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\", this->type(),\n+                   \"[\\\"&\u00c6\u00e6ZzaAa\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n+  this->CheckUnary(\"utf8_reverse\", \"[\\\"\u0251\u027d\u2c64\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\", this->type(),\n+                   \"[\\\"&\u00c6\u00e6\u2c64\u027d\u0251\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n+}\n\nReview comment:\n       Can you add an example of invalid UTF8? We don't care that it produces useful results, but it should not crash or access memory out of bounds.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string_test.cc\n##########\n@@ -91,6 +91,25 @@ TYPED_TEST(TestStringKernels, AsciiLower) {\n                    \"[\\\"aaazz\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n }\n \n+TYPED_TEST(TestStringKernels, AsciiReverse) {\n+  this->CheckUnary(\"ascii_reverse\", \"[]\", this->type(), \"[]\");\n+  this->CheckUnary(\"ascii_reverse\", R\"([\"abcd\", null, \"\", \"bbb\"])\", this->type(),\n+                   R\"([\"dcba\", null, \"\", \"bbb\"])\");\n+\n+  Datum input = ArrayFromJSON(this->type(), \"[\\\"aAazZ\u00e6\u00c6&\\\", null, \\\"\\\", \\\"bbb\\\"]\");\n+  ASSERT_NOT_OK(CallFunction(\"ascii_reverse\", {input}));\n\nReview comment:\n       Please test the error return more precisely, instead of only checking that it's not ok.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:52:22.704+0000",
                    "updated": "2021-05-14T15:52:22.704+0000",
                    "started": "2021-05-14T15:52:22.704+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596722",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632626972\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       Consider the case where you have a long string, would it be better to have the check inside the loop so that it stops as soon as an invalid character is found?  Perhaps using `ARROW_PREDICT_FALSE`. I understand a conditional check in a loop may break any compiler vectorization, so I would suggest verifying if this is the case.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:52:51.673+0000",
                    "updated": "2021-05-14T15:52:51.673+0000",
                    "started": "2021-05-14T15:52:51.673+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596723",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632629009\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       We don't really care about making error cases fast.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:56:05.475+0000",
                    "updated": "2021-05-14T15:56:05.475+0000",
                    "started": "2021-05-14T15:56:05.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596725",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632630010\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n\nReview comment:\n       Good eye @pitrou. Possibly add a check to ensure `input + i + offset` does not goes out-of-bounds before trying to copy. An alternative would be to add an inner loop to traverse the codepoints in a UTF8 character, but this may be less performant than using the LUT.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T15:57:39.023+0000",
                    "updated": "2021-05-14T15:57:39.023+0000",
                    "started": "2021-05-14T15:57:39.023+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596726",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632631612\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       If the ASCII version checks for invalid characters, does this means that the UTF8 version should also validate its input? Not sure if this is the case for all the other string kernels, but I think having a consistent behavior is desired.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:00:03.010+0000",
                    "updated": "2021-05-14T16:00:03.010+0000",
                    "started": "2021-05-14T16:00:03.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596731",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632632940\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n\nReview comment:\n       I used a `uint8_t` because `input[i] & 0x80` generates a `0x80`. Should I add something like\r\n   `utf8_char_found |= (input[i] & 0x80 != 0);`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:02:06.907+0000",
                    "updated": "2021-05-14T16:02:06.907+0000",
                    "started": "2021-05-14T16:02:06.907+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596732",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632635288\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n\nReview comment:\n       I see. In that case, we might have to do something like this.\r\n   ```\r\n   offset_type stride = std::min(i+offset, input_string_ncodeunits);\r\n   std::copy(input + i, input + stride, output + (input_string_ncodeunits - stride));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n\nReview comment:\n       I see. In that case, we might have to do something like this.\r\n   ```c++\r\n   offset_type stride = std::min(i+offset, input_string_ncodeunits);\r\n   std::copy(input + i, input + stride, output + (input_string_ncodeunits - stride));\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:06:15.487+0000",
                    "updated": "2021-05-14T16:06:15.487+0000",
                    "started": "2021-05-14T16:06:15.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596737",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632635689\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n\nReview comment:\n       Ah, I see. No, it's ok.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:06:48.867+0000",
                    "updated": "2021-05-14T16:06:48.867+0000",
                    "started": "2021-05-14T16:06:48.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596738",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596739",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632636762\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       The ASCII version would produce invalid output for valid (but non-ASCII) input, which is why it checks for ASCII validity. Invalid input is a different situation which we don't need to check for.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:08:25.714+0000",
                    "updated": "2021-05-14T16:08:25.714+0000",
                    "started": "2021-05-14T16:08:25.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596739",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632638764\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n\nReview comment:\n       I actually couldn't find it there. I can actually add an inline function like this\r\n   ```c++\r\n   inline uint8_t Utf8CharByteWidth(const uint8 *char_ptr);\r\n   ```\r\n   WDYT?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:11:43.868+0000",
                    "updated": "2021-05-14T16:11:43.868+0000",
                    "started": "2021-05-14T16:11:43.868+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596740",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596741",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632639816\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n\nReview comment:\n       Thanks for the clarification.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:13:29.869+0000",
                    "updated": "2021-05-14T16:13:29.869+0000",
                    "started": "2021-05-14T16:13:29.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596741",
                    "issueId": "13377646"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/worklog/596742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10317:\nURL: https://github.com/apache/arrow/pull/10317#discussion_r632640163\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_string.cc\n##########\n@@ -266,6 +266,52 @@ void EnsureLookupTablesFilled() {}\n \n #endif  // ARROW_WITH_UTF8PROC\n \n+template <typename Type>\n+struct AsciiReverse : StringTransform<Type, AsciiReverse<Type>> {\n+  using Base = StringTransform<Type, AsciiReverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    uint8_t utf8_char_found = 0;\n+    for (offset_type i = 0; i < input_string_ncodeunits; i++) {\n+      // if a utf8 char is found, report to utf8_char_found\n+      utf8_char_found |= input[i] & 0x80;\n+      output[input_string_ncodeunits - i - 1] = input[i];\n+    }\n+    //    todo: finalize if L278 check is required or not. If not required,\n+    //    simply use the following\n+    //    std::reverse_copy(input, input + input_string_ncodeunits, output);\n+    *output_written = input_string_ncodeunits;\n+    return utf8_char_found == 0;\n+  }\n+};\n+\n+/*\n+ * UTF8 codeunit size can be determined by looking at the leading 4 bits of BYTE1\n+ */\n+const std::array<uint8_t, 16> UTF8_BYTE_SIZE_LUT{1, 1, 1, 1, 1, 1, 1, 1,\n+                                                 0, 0, 0, 0, 2, 2, 3, 4};\n+\n+template <typename Type>\n+struct Utf8Reverse : StringTransform<Type, Utf8Reverse<Type>> {\n+  using Base = StringTransform<Type, Utf8Reverse<Type>>;\n+  using offset_type = typename Base::offset_type;\n+\n+  bool Transform(const uint8_t* input, offset_type input_string_ncodeunits,\n+                 uint8_t* output, offset_type* output_written) {\n+    offset_type i = 0;\n+    while (i < input_string_ncodeunits) {\n+      uint8_t offset = UTF8_BYTE_SIZE_LUT[input[i] >> 4];  // right shift leading 4 bits\n+      std::copy(input + i, input + (i + offset),\n+                output + (input_string_ncodeunits - i - offset));\n+      i += offset;\n\nReview comment:\n       Ah. Good point. so, if there is a malformed byte (`0b10xxxxxx`) outside the encoding, this could happen. I think, I should change the LUT to have 1 instead of 0, isnt it? \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-14T16:13:53.169+0000",
                    "updated": "2021-05-14T16:13:53.169+0000",
                    "started": "2021-05-14T16:13:53.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "596742",
                    "issueId": "13377646"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 25200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e725916[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b3a8d1d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59649ace[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@56b9a69a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bcbf324[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@78c6b14d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@509e671[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1e9f1d3c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a299f18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@372815c9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d585733[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1bc8c359[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 25200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 21 13:24:20 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-05-21T13:24:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12713/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-05-10T14:58:54.000+0000",
        "updated": "2021-05-25T12:15:39.000+0000",
        "timeoriginalestimate": null,
        "description": "Like SQL {{reverse}} or Python {{'string'[::-1]}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 25200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] String reverse kernel",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343572",
                    "id": "17343572",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
                        "name": "niranda",
                        "key": "niranda",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
                        },
                        "displayName": "Niranda Perera",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "[~icook] do you think it makes sense to extend 'reversing' to binary type as well?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
                        "name": "niranda",
                        "key": "niranda",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
                        },
                        "displayName": "Niranda Perera",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2021-05-12T20:42:51.556+0000",
                    "updated": "2021-05-12T20:42:51.556+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343576",
                    "id": "17343576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~niranda] I'm not sure. Maybe it could be useful on bytes. I think the more important thing is that it handles UTF8 strings. (Or maybe there would be separate {{ascii_}} and {{utf8_}} functions.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-12T20:49:16.574+0000",
                    "updated": "2021-05-12T20:50:33.201+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343585",
                    "id": "17343585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
                        "name": "niranda",
                        "key": "niranda",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
                        },
                        "displayName": "Niranda Perera",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "body": "One thing I saw was, almost all the String kernels (utf8/ ascii) are only adding impls for StringType and LargeStringType types.\r\n\r\n[https://github.com/apache/arrow/blob/1a6e90c2b0872ad16df29c8f9d0a54154c1988d7/cpp/src/arrow/compute/kernels/scalar_string.cc#L2132]\r\n\r\nWas wondering if some of these should also add BinaryType kernels?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
                        "name": "niranda",
                        "key": "niranda",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
                        },
                        "displayName": "Niranda Perera",
                        "active": true,
                        "timeZone": "America/Indiana/Indianapolis"
                    },
                    "created": "2021-05-12T21:04:31.723+0000",
                    "updated": "2021-05-12T21:04:31.723+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343595",
                    "id": "17343595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think adding a binary kernel is much less important than adding the ascii and utf8 kernels. Others' opinions might vary. cc [~jorisvandenbossche] [~apitrou]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-12T21:20:57.403+0000",
                    "updated": "2021-05-12T21:20:57.403+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343597",
                    "id": "17343597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Adding a binary kernel is generally relatively cheap in termes of developer time. In any case, I don't really understand in which circumstances it's useful to reverse a string, so I won't comment on the usefulness of reversing binary data ;-)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-05-12T21:23:06.342+0000",
                    "updated": "2021-05-12T21:23:06.342+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17343603",
                    "id": "17343603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "A common reason for reversing a string is that some regular expression challenges are easier to solve if the string is reversed",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=icook",
                        "name": "icook",
                        "key": "icook",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=icook&avatarId=29388",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=icook&avatarId=29388",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=icook&avatarId=29388",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=icook&avatarId=29388"
                        },
                        "displayName": "Ian Cook",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-12T21:31:20.380+0000",
                    "updated": "2021-05-12T21:31:20.380+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13377646/comment/17349266",
                    "id": "17349266",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10317\n[https://github.com/apache/arrow/pull/10317]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-21T13:24:20.091+0000",
                    "updated": "2021-05-21T13:24:20.091+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qw8o:",
        "customfield_12314139": null
    }
}