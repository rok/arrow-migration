{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13257786",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786",
    "key": "ARROW-6626",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6626/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#issuecomment-912438675\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T10:35:03.012+0000",
                    "updated": "2021-09-03T10:35:03.012+0000",
                    "started": "2021-09-03T10:35:03.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646252",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702057763\n\n\n\n##########\nFile path: python/pyarrow/tests/test_dataset.py\n##########\n@@ -575,7 +575,7 @@ def test_expression_construction():\n         field.isin(1)\n \n     with pytest.raises(pa.ArrowInvalid):\n-        field != {1}\n+        field != object()\n\nReview comment:\n       Previously it was using `set` because we didn't support converting sets to scalar values. For `field != [1]` the code didn't raise because we supported converting lists to scalars.\r\n   \r\n   Now we also support converting `sets`\u00a0and thus we need to use a different entity to actually trigger an invalid filter. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:25:40.122+0000",
                    "updated": "2021-09-03T17:25:40.122+0000",
                    "started": "2021-09-03T17:25:40.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646401",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702058640\n\n\n\n##########\nFile path: python/pyarrow/tests/test_convert_builtin.py\n##########\n@@ -173,15 +191,15 @@ def test_sequence_boolean(seq):\n     assert arr.to_pylist() == expected\n \n \n-@parametrize_with_iterable_types\n+@parametrize_with_sequence_types\n\nReview comment:\n       Tests that require being able to contain duplicated values (for example this tests has `expected = [np.bool_(True), None, np.bool_(False), None]` with `None` twice) can't work against all iterables because some iterable types don't allow duplicates (for example `set`)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:27:05.059+0000",
                    "updated": "2021-09-03T17:27:05.059+0000",
                    "started": "2021-09-03T17:27:05.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646405",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646407",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702058972\n\n\n\n##########\nFile path: python/pyarrow/tests/test_convert_builtin.py\n##########\n@@ -164,6 +174,14 @@ def test_sequence_types(seq):\n \n \n @parametrize_with_iterable_types\n+def test_nested_sequence_types(seq):\n+    arr1 = pa.array([seq([1, 2, 3])])\n+    arr2 = pa.array([[1, 2, 3]])\n+\n+    assert arr1.equals(arr2)\n\nReview comment:\n       This is the new test that actually tests this feature, but all other tests that remained parametrised with `parametrize_with_iterable_types` trigger the new code path too.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:27:41.927+0000",
                    "updated": "2021-09-03T17:27:41.927+0000",
                    "started": "2021-09-03T17:27:41.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646407",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702060847\n\n\n\n##########\nFile path: python/pyarrow/tests/parquet/test_dataset.py\n##########\n@@ -505,11 +505,19 @@ def test_filters_invalid_pred_op(tempdir, use_legacy_dataset):\n                                     use_legacy_dataset=use_legacy_dataset)\n         assert dataset.read().num_rows == 0\n \n-    with pytest.raises(ValueError):\n-        pq.ParquetDataset(base_path,\n-                          filesystem=fs,\n-                          filters=[('integers', '!=', {3})],\n-                          use_legacy_dataset=use_legacy_dataset)\n+    if use_legacy_dataset:\n+        with pytest.raises(ValueError):\n+            pq.ParquetDataset(base_path,\n+                              filesystem=fs,\n+                              filters=[('integers', '!=', {3})],\n+                              use_legacy_dataset=use_legacy_dataset)\n+    else:\n+        dataset = pq.ParquetDataset(base_path,\n+                                    filesystem=fs,\n+                                    filters=[('integers', '!=', {3})],\n+                                    use_legacy_dataset=use_legacy_dataset)\n+        with pytest.raises(NotImplementedError):\n+            assert dataset.read().num_rows == 0\n\nReview comment:\n       `X != {3}` isn't supported for legacy datasets because they have an explicit check when compiling the expression. They don't support _any_ container object. \r\n   \r\n   ```\r\n   elif not isinstance(f_value, str) and isinstance(f_value, Collection):\r\n               raise ValueError(\r\n                   \"Op '%s' not supported with a collection value\", op)\r\n   ```\r\n   \r\n   for new datasets api instead it was a side effect of the fact we didn't support `sets` when converting scalar values. If instead of `X != {3}` we had `X != [3]` that would have raised for the legacy datasets but would have compiled ok for new datasets.\r\n   \r\n   As now the expression compiles fine for new dataset the error changes to the fact that the `not_equal` function has no kernel that supports a `list` as the argument. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:31:09.816+0000",
                    "updated": "2021-09-03T17:31:09.816+0000",
                    "started": "2021-09-03T17:31:09.815+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646409",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702805847\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n\nReview comment:\n       Just wondering about a follow-up: could we optimize these checks somehow? \r\n   \r\n   Last time I ran the asv benchmarks the inference step had a significant overhead during the python to arrow conversions. \r\n   \r\n   @pitrou could we use a mapping or a different python API to eliminate these checks?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T10:50:42.339+0000",
                    "updated": "2021-09-06T10:50:42.339+0000",
                    "started": "2021-09-06T10:50:42.339+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646853",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702808196\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n\nReview comment:\n       It's true the list of consecutive checks started small and kept growing :-)\r\n   Using a mapping (keyed by `Py_TYPE(self)`, I suppose?) might be more efficient, but that remains to be verified. Also, you have to populate the mapping dynamically, to be sure you don't miss any cases. That is: use a mapping as a cache with an unbounded size, but fallback on this sequence of checks.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T10:54:38.570+0000",
                    "updated": "2021-09-06T10:54:38.570+0000",
                    "started": "2021-09-06T10:54:38.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646857",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702809389\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n\nReview comment:\n       Another possibility is to be opportunistic: if the current element was a `str`, then it's quite likely the next element will also be a `str`. So you can use a `switch/case` (keyed by an integer enum value?) to try to make the common case faster.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T10:56:21.628+0000",
                    "updated": "2021-09-06T10:56:21.628+0000",
                    "started": "2021-09-06T10:56:21.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646860",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646866",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702809389\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n\nReview comment:\n       Another possibility is to be opportunistic: if the current element was a `str`, then it's quite likely the next element will also be a `str`. So you can use a `switch/case` (keyed by an integer enum value?) to try to make the common case faster.\r\n   \r\n   For example:\r\n   ```c++\r\n   enum class Inference : uint8_t {\r\n     None, Bool, // etc.\r\n   };\r\n   \r\n   Status Visit(PyObject* obj, bool* keep_going) {\r\n     ++total_count_;\r\n     switch (last_inference_) {\r\n       case Inference::None:\r\n         if (ARROW_PREDICT_TRUE(InferNone(obj)) {\r\n           ++none_count_;\r\n           return Status::OK();\r\n         }\r\n         break;\r\n       }\r\n       // ...\r\n     }\r\n   \r\n     // Mispredicted: fall back on sequence of checks\r\n     if (InferNone()) {\r\n       ++none_count_;\r\n       last_inference_ = Inference::None;\r\n     } else if (PyBool_Check(obj)) {\r\n       // etc.\r\n   }\r\n   \r\n   bool InferNone(PyObject* obj) {\r\n     return obj == Py_None || (pandas_null_sentinels_ && internal::PandasObjectIsNull(obj));\r\n   }\r\n   ```\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T11:02:35.712+0000",
                    "updated": "2021-09-06T11:02:35.712+0000",
                    "started": "2021-09-06T11:02:35.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646866",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702813243\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n\nReview comment:\n       Thanks Antoine! Created a follow-up to track this: https://issues.apache.org/jira/browse/ARROW-13914\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T11:03:09.169+0000",
                    "updated": "2021-09-06T11:03:09.169+0000",
                    "started": "2021-09-06T11:03:09.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646867",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/646873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r702814361\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PySequence_Check(obj)) {\n+      // Deals with generic sequences. Including list and tuple.\n\nReview comment:\n       I'm not fond of allowing generic sequences here, it might allow all kinds of types that we don't want to convert implicitly. Explicitly checking list and tuple would be better.\n\n##########\nFile path: cpp/src/arrow/python/python_to_arrow.cc\n##########\n@@ -650,6 +652,19 @@ class PyListConverter : public ListConverter<T, PyConverter, PyConverterTrait> {\n     return this->value_converter_->Extend(value, size);\n   }\n \n+  Status AppendIterable(PyObject* value) {\n+    int64_t current_size = 0;\n+    PyObject* iterator = PyObject_GetIter(value);\n+    OwnedRef iter_ref(iterator);\n+    while (PyObject* item = PyIter_Next(iterator)) {\n+      current_size += 1;\n+      OwnedRef item_ref(item);\n+      RETURN_NOT_OK(this->value_converter_->Reserve(current_size));\n\nReview comment:\n       Are you sure you are using this right? It seems that `Reserve(current_size)` would reserve space for `current_size` elements _in addition_ to the elements already present.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T11:10:16.295+0000",
                    "updated": "2021-09-06T11:10:16.295+0000",
                    "started": "2021-09-06T11:10:16.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646873",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/649965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r707274156\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PySequence_Check(obj)) {\n+      // Deals with generic sequences. Including list and tuple.\n\nReview comment:\n       The `PySequence_Check` is necessary to ensure we support `collections.deque` which was supported at top level (`array(deque)`) but not at nested levels `array([deque])`. Using `PySequence` here adds support for deques too.\r\n   \r\n   I switched to checking explicitly the `deque` type instead of using `PySequence_Check`, so now the check should be more explicit.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T12:12:19.996+0000",
                    "updated": "2021-09-13T12:12:19.996+0000",
                    "started": "2021-09-13T12:12:19.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649965",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/649968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r707277094\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PySequence_Check(obj)) {\n+      // Deals with generic sequences. Including list and tuple.\n\nReview comment:\n       Hmm. I think trying to support common collections types is a bit of a slippery slope. We could also limit ourselves to builtins (list, set, tuple).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T12:16:28.168+0000",
                    "updated": "2021-09-13T12:16:28.168+0000",
                    "started": "2021-09-13T12:16:28.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649968",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/649973",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r707282081\n\n\n\n##########\nFile path: cpp/src/arrow/python/python_to_arrow.cc\n##########\n@@ -650,6 +652,19 @@ class PyListConverter : public ListConverter<T, PyConverter, PyConverterTrait> {\n     return this->value_converter_->Extend(value, size);\n   }\n \n+  Status AppendIterable(PyObject* value) {\n+    int64_t current_size = 0;\n+    PyObject* iterator = PyObject_GetIter(value);\n+    OwnedRef iter_ref(iterator);\n+    while (PyObject* item = PyIter_Next(iterator)) {\n+      current_size += 1;\n+      OwnedRef item_ref(item);\n+      RETURN_NOT_OK(this->value_converter_->Reserve(current_size));\n\nReview comment:\n       You were right, the argument of `Reserve` is the additional capacity to add `Status Reserve(int64_t additional_capacity)`. Changed this to avoid reserving unecessary space.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-13T12:23:25.306+0000",
                    "updated": "2021-09-13T12:23:25.306+0000",
                    "started": "2021-09-13T12:23:25.305+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649973",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r712911416\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +354,17 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PySequence_Check(obj)) {\n+      // Deals with generic sequences. Including list and tuple.\n\nReview comment:\n       Now it does check for explicitly supported types (`tuple`, `list`, `deque`) instead of `PySequence`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T10:34:20.618+0000",
                    "updated": "2021-09-21T10:34:20.618+0000",
                    "started": "2021-09-21T10:34:20.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653469",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r713177642\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +365,15 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PyList_Check(obj) || PyTuple_Check(obj) ||\n+               PyObject_IsInstance(obj, deque_type_.obj())) {\n\nReview comment:\n       I still don't understand why we want to accept deques here. I don't think it is usual to store analytical data in deques. @jorisvandenbossche What do you think?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T15:49:21.217+0000",
                    "updated": "2021-09-21T15:49:21.217+0000",
                    "started": "2021-09-21T15:49:21.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653648",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r713182216\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +365,15 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PyList_Check(obj) || PyTuple_Check(obj) ||\n+               PyObject_IsInstance(obj, deque_type_.obj())) {\n\nReview comment:\n       I personally agree it doesn't seem needed to add special case code in C++ to handle deques. \r\n   \r\n   I would actually even doubt whether we should handle sets (they are unordered, so not necessarily directly mapping to an array, the order you get from iteration / conversion to list is not deterministic/guaranteed AFAIK). But since we already support sets in non-nested situations, I understand that this is making that consistent. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T15:54:09.151+0000",
                    "updated": "2021-09-21T15:54:09.151+0000",
                    "started": "2021-09-21T15:54:09.151+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653654",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r713187369\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +365,15 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PyList_Check(obj) || PyTuple_Check(obj) ||\n+               PyObject_IsInstance(obj, deque_type_.obj())) {\n\nReview comment:\n       I supported deques just because we already support them in non nested situation. My goal was to keep the same support for nested and non-nested cases. Otherwise it seemed odd that we support `deque([1, 2, 3])` but not `[deque([1, 2, 3])]`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T15:59:35.093+0000",
                    "updated": "2021-09-21T15:59:35.093+0000",
                    "started": "2021-09-21T15:59:35.092+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653660",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r713187369\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +365,15 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PyList_Check(obj) || PyTuple_Check(obj) ||\n+               PyObject_IsInstance(obj, deque_type_.obj())) {\n\nReview comment:\n       I supported deques just because we already support them in non nested situation. My goal was to keep the same support for nested and non-nested cases. Otherwise it seemed odd that we support `deque([1, 2, 3])` but not `[deque([1, 2, 3])]`\r\n   \r\n   If you notice, `deque` as a type was already in the `parametrize_with_iterable_types` that our tests use to verify we support that container\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T16:00:57.617+0000",
                    "updated": "2021-09-21T16:00:57.617+0000",
                    "started": "2021-09-21T16:00:57.617+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653662",
                    "issueId": "13257786"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/worklog/653667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11076:\nURL: https://github.com/apache/arrow/pull/11076#discussion_r713201315\n\n\n\n##########\nFile path: cpp/src/arrow/python/inference.cc\n##########\n@@ -354,12 +365,15 @@ class TypeInferrer {\n       *keep_going = make_unions_;\n     } else if (PyArray_CheckAnyScalarExact(obj)) {\n       RETURN_NOT_OK(VisitDType(PyArray_DescrFromScalar(obj), keep_going));\n-    } else if (PyList_Check(obj)) {\n-      RETURN_NOT_OK(VisitList(obj, keep_going));\n+    } else if (PySet_Check(obj) || (Py_TYPE(obj) == &PyDictValues_Type)) {\n+      RETURN_NOT_OK(VisitSet(obj, keep_going));\n     } else if (PyArray_Check(obj)) {\n       RETURN_NOT_OK(VisitNdarray(obj, keep_going));\n     } else if (PyDict_Check(obj)) {\n       RETURN_NOT_OK(VisitDict(obj));\n+    } else if (PyList_Check(obj) || PyTuple_Check(obj) ||\n+               PyObject_IsInstance(obj, deque_type_.obj())) {\n\nReview comment:\n       I think the idea is that we support generic iterables as top-level input, so that you can for example call `pa.array` on a generator if you want to generate data lazily. It makes little sense to allow the same flexibility for inner values, though, such as values inside a list array.\r\n   ```python\r\n   >>> pa.array((x for x in (1, 2, 3)))\r\n   <pyarrow.lib.Int64Array object at 0x7f44678606e0>\r\n   [\r\n     1,\r\n     2,\r\n     3\r\n   ]\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T16:15:28.526+0000",
                    "updated": "2021-09-21T16:15:28.526+0000",
                    "started": "2021-09-21T16:15:28.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653667",
                    "issueId": "13257786"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@63a9019[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@110fc22c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b49c67a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@54387d9d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@505994e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@30d026bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45df4cca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@529c0579[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4efe3d1f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7faa17ba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40acad99[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7229df38[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 28 14:58:36 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-28T14:58:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6626/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-09-19T21:29:24.000+0000",
        "updated": "2021-09-28T20:22:58.000+0000",
        "timeoriginalestimate": null,
        "description": "See current behavior\r\n\r\n{code}\r\nIn [1]: pa.array([{1,2, 3}])                                                                   \r\n---------------------------------------------------------------------------\r\nArrowInvalid                              Traceback (most recent call last)\r\n<ipython-input-1-20fea2f9457a> in <module>\r\n----> 1 pa.array([{1,2, 3}])\r\n\r\n~/code/arrow/python/pyarrow/array.pxi in pyarrow.lib.array()\r\n\r\n~/code/arrow/python/pyarrow/array.pxi in pyarrow.lib._sequence_to_array()\r\n\r\n~/code/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status()\r\n\r\nArrowInvalid: Could not convert {1, 2, 3} with type set: did not recognize Python value type when inferring an Arrow data type\r\nIn ../src/arrow/python/iterators.h, line 70, code: func(value, static_cast<int64_t>(i), &keep_going)\r\nIn ../src/arrow/python/inference.cc, line 621, code: inferrer.VisitSequence(obj, mask)\r\nIn ../src/arrow/python/python_to_arrow.cc, line 1074, code: InferArrowType(seq, mask, options.from_pandas, &real_type)\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Handle nested \"set\" values as lists when converting to Arrow",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257786/comment/17421441",
                    "id": "17421441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 11076\n[https://github.com/apache/arrow/pull/11076]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-09-28T14:58:36.527+0000",
                    "updated": "2021-09-28T14:58:36.527+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z06tyo:",
        "customfield_12314139": null
    }
}