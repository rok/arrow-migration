{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13357413",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413",
    "key": "ARROW-11546",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tyrelr",
            "name": "tyrelr",
            "key": "tyrelr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Tyrel Rink",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11546/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr opened a new pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440\n\n\n   A few of the arrow kernels rely on macros to iterate over values using a common `.value()` function, but:\r\n   * this function is safe on some array types (string, binary), but unsafe on other array types (primitive - although it is not currently marked as such)\r\n   * this forces iteration by index, which requires unsafe code to guarantee bounds checks are avoided (which can be dangerous for multi-array operations)\r\n   \r\n   This PR is an experiment with a TypedArray trait, which provides access to array values (along with associated types describing those values).  This will NOT remove the need for downcasting, as the associated types aren't object safe.  But it should be sufficient to allow simple processing of values from multiple array types using a generic function instead of a macro.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T20:01:34.499+0000",
                    "updated": "2021-02-07T20:01:34.499+0000",
                    "started": "2021-02-07T20:01:34.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549321",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-774749915\n\n\n   https://issues.apache.org/jira/browse/ARROW-11546\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T20:01:58.520+0000",
                    "updated": "2021-02-07T20:01:58.520+0000",
                    "started": "2021-02-07T20:01:58.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549322",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549337",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571706825\n\n\n\n##########\nFile path: rust/arrow/src/array/array_binary.rs\n##########\n@@ -162,6 +163,16 @@ impl<OffsetSize: BinaryOffsetSizeTrait> GenericBinaryArray<OffsetSize> {\n     }\n }\n \n+impl<'a, OffsetSize: BinaryOffsetSizeTrait> TypedArray\n+    for &'a GenericBinaryArray<OffsetSize>\n\nReview comment:\n       I had initially hoped to make TypedArray an extension of the Array trait.  But, to use a lifetime in the 'type' declarations, I found that I needed to either make TypedArray include a generic lifetime (TypedArray<'a>), or I needed to implement it for &'a TypedArray.\r\n   \r\n   My previous attempts at this tried to use `trait TypedArray<'a> : Array`, but once I tried using it on the comparison kernels ' I hit on lifetime issues trying to prove the equivalence of NativeTypes... so I'm keeping it simple for the experiment.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:02:05.077+0000",
                    "updated": "2021-02-07T22:02:05.077+0000",
                    "started": "2021-02-07T22:02:05.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549337",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571709555\n\n\n\n##########\nFile path: rust/arrow/src/array/value_iterator.rs\n##########\n@@ -0,0 +1,305 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use super::{\n+    Array, ArrayRef, BinaryOffsetSizeTrait, BooleanArray, GenericBinaryArray,\n+    GenericListArray, GenericStringArray, OffsetSizeTrait, StringOffsetSizeTrait,\n+};\n+\n+/// an iterator that returns Some(bool) or None.\n+// Note: This implementation is based on std's [Vec]s' [IntoIter].\n+#[derive(Debug)]\n+pub struct BooleanValueIter<'a> {\n\nReview comment:\n       For all except PrimitiveArray, these effectively duplicate the existing 'iterator of options' array iterators, except they provide the raw value without validity information of any kind.  \r\n   It is to allow access for kernels that prefer to access all values (ex: if an operation is fast AND infallible, it can avoid accessing the null array just to branch so it can ignore it).  I am not sure if this need comes up very often outside of the primitive or boolean array.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:24:07.565+0000",
                    "updated": "2021-02-07T22:24:07.565+0000",
                    "started": "2021-02-07T22:24:07.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549340",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571710843\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/comparison.rs\n##########\n@@ -33,56 +33,66 @@ use crate::datatypes::{ArrowNumericType, DataType};\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Helper function to perform boolean lambda function on values from two arrays, this\n-/// version does not attempt to use SIMD.\n-macro_rules! compare_op {\n-    ($left: expr, $right:expr, $op:expr) => {{\n-        if $left.len() != $right.len() {\n+fn infallible_compare_operation_scalar<'a,A,S,F>(left:&'a A, right: S, predicate:F) -> Result<BooleanArray>\n\nReview comment:\n       This function name is misleading, should probably rename it back to the name the macro used.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:33:30.566+0000",
                    "updated": "2021-02-07T22:33:30.566+0000",
                    "started": "2021-02-07T22:33:30.566+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549343",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571710980\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/comparison.rs\n##########\n@@ -33,56 +33,66 @@ use crate::datatypes::{ArrowNumericType, DataType};\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Helper function to perform boolean lambda function on values from two arrays, this\n-/// version does not attempt to use SIMD.\n-macro_rules! compare_op {\n-    ($left: expr, $right:expr, $op:expr) => {{\n-        if $left.len() != $right.len() {\n+fn infallible_compare_operation_scalar<'a,A,S,F>(left:&'a A, right: S, predicate:F) -> Result<BooleanArray>\n+where &'a A : TypedArray,\n+    A: Array,\n+    S: Copy,\n+    F: FnMut(\n+        <&'a A as TypedArray>::ValueRef,\n+        S\n+        )->bool\n+{\n+    let null_bit_buffer = left.data().null_buffer().cloned();\n+\n+    let bool_buf = {\n+        let mut predicate_ref = predicate;\n+        left.iter_values().map(|left|predicate_ref(left,right)).collect()\n+    };\n+\n+    let data = ArrayData::new(\n+        DataType::Boolean,\n+        left.len(),\n+        None,\n+        null_bit_buffer,\n+        0,\n+        vec![bool_buf],\n+        vec![],\n+    );\n+    Ok(BooleanArray::from(Arc::new(data)))\n+}\n+\n+fn infallible_compare_operation<'a,A,F>(left:&'a A, right:&'a A, predicate:F) -> Result<BooleanArray>\n\nReview comment:\n       same as above\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:34:33.929+0000",
                    "updated": "2021-02-07T22:34:33.929+0000",
                    "started": "2021-02-07T22:34:33.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549344",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571711119\n\n\n\n##########\nFile path: rust/arrow/src/array/array_boolean.rs\n##########\n@@ -100,6 +100,14 @@ impl Array for BooleanArray {\n     }\n }\n \n+impl<'a> TypedArray for &'a BooleanArray {\n\nReview comment:\n       I don't believe anything is actually using this right now\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:35:47.351+0000",
                    "updated": "2021-02-07T22:35:47.351+0000",
                    "started": "2021-02-07T22:35:47.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549345",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571711119\n\n\n\n##########\nFile path: rust/arrow/src/array/array_boolean.rs\n##########\n@@ -100,6 +100,14 @@ impl Array for BooleanArray {\n     }\n }\n \n+impl<'a> TypedArray for &'a BooleanArray {\n\nReview comment:\n       I don't believe anything is actually using this impl right now\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:41:10.763+0000",
                    "updated": "2021-02-07T22:41:10.763+0000",
                    "started": "2021-02-07T22:41:10.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549346",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571711899\n\n\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -181,6 +181,14 @@ impl<OffsetSize: 'static + OffsetSizeTrait> Array for GenericListArray<OffsetSiz\n     }\n }\n \n+impl<'a, OffsetSize: OffsetSizeTrait> TypedArray for &'a GenericListArray<OffsetSize> {\n\nReview comment:\n       I don't believe anything is actually using this impl right now\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T22:41:33.745+0000",
                    "updated": "2021-02-07T22:41:33.745+0000",
                    "started": "2021-02-07T22:41:33.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549347",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/549350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-774786663\n\n\n   Just for some vague performance numbers... from before I squashed a couple simple commits look good.  15% difference seems to be beneficial or neutral for the comparison kernels.\r\n   \r\n   I can't explain the buffer collection regressions as they should be completely unrelated (but they did reproduce for both my test runs).\r\n   The buffer_bit & cast look like noise.\r\n   \r\n   ```\r\n   group                             2master-a321cded                       2value_iteration-7c21fa33              master-a321cded                        value_iteration-7c21fa33\r\n   -----                             ----------------                       -------------------------              ---------------                        ------------------------\r\n   Buffer::from_iter bool            1.00      6.1\u00b10.01ms        ? B/sec    1.73     10.6\u00b10.04ms        ? B/sec    1.03      6.3\u00b10.01ms        ? B/sec    1.47      9.0\u00b10.02ms        ? B/sec\r\n   MutableBuffer::from_iter bool     1.00      6.1\u00b10.01ms        ? B/sec    1.42      8.7\u00b10.01ms        ? B/sec    1.03      6.3\u00b10.01ms        ? B/sec    1.46      8.9\u00b10.02ms        ? B/sec\r\n   array_from_vec 128                1.06    419.7\u00b12.63ns        ? B/sec    1.04    414.6\u00b10.76ns        ? B/sec    1.00    397.0\u00b11.55ns        ? B/sec    1.16    459.0\u00b11.41ns        ? B/sec\r\n   buffer_bit_ops and                1.31    320.2\u00b10.33ns        ? B/sec    1.00    243.7\u00b10.27ns        ? B/sec    1.32    321.0\u00b10.61ns        ? B/sec    1.31    318.3\u00b10.70ns        ? B/sec\r\n   buffer_bit_ops or                 1.00    277.1\u00b10.31ns        ? B/sec    1.06    292.1\u00b10.54ns        ? B/sec    1.37    378.3\u00b10.41ns        ? B/sec    1.00    276.6\u00b10.94ns        ? B/sec\r\n   cast date32 to date64 512         1.00    522.8\u00b11.51ns        ? B/sec    1.00    523.2\u00b10.65ns        ? B/sec    1.17    610.1\u00b10.61ns        ? B/sec    1.18    615.5\u00b10.83ns        ? B/sec\r\n   cast time32s to time32ms 512      1.00    343.6\u00b10.74ns        ? B/sec    1.25    428.8\u00b10.41ns        ? B/sec    1.24    426.6\u00b10.42ns        ? B/sec    1.01    346.8\u00b11.42ns        ? B/sec\r\n   eq Float32                        1.50     90.5\u00b10.14\u00b5s        ? B/sec    1.00     60.2\u00b10.09\u00b5s        ? B/sec    1.50     90.5\u00b10.13\u00b5s        ? B/sec    1.00     60.2\u00b10.07\u00b5s        ? B/sec\r\n   eq scalar Float32                 1.35     79.6\u00b10.18\u00b5s        ? B/sec    1.00     59.2\u00b10.13\u00b5s        ? B/sec    1.35     79.8\u00b10.09\u00b5s        ? B/sec    1.00     59.1\u00b10.09\u00b5s        ? B/sec\r\n   from_slice                        1.81    900.0\u00b11.74\u00b5s        ? B/sec    1.00    497.0\u00b10.98\u00b5s        ? B/sec    1.76    875.2\u00b11.17\u00b5s        ? B/sec    1.02    508.3\u00b10.88\u00b5s        ? B/sec\r\n   gt Float32                        1.56     86.0\u00b10.10\u00b5s        ? B/sec    1.00     55.0\u00b10.07\u00b5s        ? B/sec    1.56     86.0\u00b10.10\u00b5s        ? B/sec    1.00     55.1\u00b10.24\u00b5s        ? B/sec\r\n   gt scalar Float32                 1.38     72.3\u00b10.14\u00b5s        ? B/sec    1.00     52.3\u00b10.05\u00b5s        ? B/sec    1.38     72.3\u00b10.19\u00b5s        ? B/sec    1.00     52.2\u00b10.04\u00b5s        ? B/sec\r\n   gt_eq Float32                     1.55     75.4\u00b10.15\u00b5s        ? B/sec    1.00     48.6\u00b10.09\u00b5s        ? B/sec    1.55     75.5\u00b10.09\u00b5s        ? B/sec    1.00     48.7\u00b10.08\u00b5s        ? B/sec\r\n   gt_eq scalar Float32              1.32     62.8\u00b10.07\u00b5s        ? B/sec    1.00     47.5\u00b10.07\u00b5s        ? B/sec    1.33     63.0\u00b10.07\u00b5s        ? B/sec    1.00     47.5\u00b10.06\u00b5s        ? B/sec\r\n   limit 512, 512                    1.00    116.3\u00b10.18ns        ? B/sec    1.15    133.9\u00b10.26ns        ? B/sec    1.00    116.3\u00b10.22ns        ? B/sec    1.08    126.0\u00b10.23ns        ? B/sec\r\n   lt Float32                        1.56     85.8\u00b10.08\u00b5s        ? B/sec    1.00     55.0\u00b10.09\u00b5s        ? B/sec    1.56     86.1\u00b10.19\u00b5s        ? B/sec    1.00     55.1\u00b10.16\u00b5s        ? B/sec\r\n   lt scalar Float32                 1.35     71.7\u00b10.11\u00b5s        ? B/sec    1.00     53.1\u00b10.06\u00b5s        ? B/sec    1.35     71.7\u00b10.18\u00b5s        ? B/sec    1.00     53.0\u00b10.05\u00b5s        ? B/sec\r\n   lt_eq Float32                     1.55     75.7\u00b10.09\u00b5s        ? B/sec    1.00     48.8\u00b10.09\u00b5s        ? B/sec    1.55     75.7\u00b10.13\u00b5s        ? B/sec    1.00     48.7\u00b10.06\u00b5s        ? B/sec\r\n   lt_eq scalar Float32              1.35     62.0\u00b10.06\u00b5s        ? B/sec    1.00     46.1\u00b10.04\u00b5s        ? B/sec    1.35     62.0\u00b10.09\u00b5s        ? B/sec    1.01     46.4\u00b10.08\u00b5s        ? B/sec\r\n   mutable                           1.00    419.1\u00b10.99\u00b5s        ? B/sec    4.01   1682.2\u00b12.66\u00b5s        ? B/sec    1.05    441.9\u00b10.95\u00b5s        ? B/sec    3.83   1606.8\u00b12.63\u00b5s        ? B/sec\r\n   mutable extend                    1.00    833.1\u00b11.97\u00b5s        ? B/sec    2.48      2.1\u00b10.00ms        ? B/sec    1.00    836.2\u00b11.22\u00b5s        ? B/sec    2.45      2.0\u00b10.00ms        ? B/sec\r\n   mutable iter extend_from_slice    1.00   1004.0\u00b11.32\u00b5s        ? B/sec    2.19      2.2\u00b10.00ms        ? B/sec    1.00   1003.5\u00b11.56\u00b5s        ? B/sec    2.19      2.2\u00b10.00ms        ? B/sec\r\n   neq Float32                       1.50     90.4\u00b10.12\u00b5s        ? B/sec    1.00     60.1\u00b10.09\u00b5s        ? B/sec    1.51     90.6\u00b10.12\u00b5s        ? B/sec    1.00     60.2\u00b10.06\u00b5s        ? B/sec\r\n   neq scalar Float32                1.36     79.8\u00b10.10\u00b5s        ? B/sec    1.00     58.6\u00b10.14\u00b5s        ? B/sec    1.36     79.9\u00b10.13\u00b5s        ? B/sec    1.00     58.6\u00b10.06\u00b5s        ? B/sec\r\n   nlike_utf8 scalar ends with       1.16    580.9\u00b10.50\u00b5s        ? B/sec    1.00    500.9\u00b10.73\u00b5s        ? B/sec    1.16    579.4\u00b10.67\u00b5s        ? B/sec    1.00    499.6\u00b10.58\u00b5s        ? B/sec\r\n   or                                1.00   1007.5\u00b11.33ns        ? B/sec    1.07   1078.1\u00b13.76ns        ? B/sec    1.11   1116.4\u00b11.79ns        ? B/sec    1.17   1174.4\u00b12.85ns        ? B/sec\r\n   ```\r\n   Since the comparison kernels could achieve similar iteration speedup WITHOUT any kind of public TypedArray trait, that on its own isn't enough to justify creation of the API.  I plan to experiment further to see if other places reliant on cross-type array iteration could benefit.\r\n   \r\n   The main questions in my mind are:\r\n   * struct union, list, and dictionary arrays don't encode which type of value they contain into their rust type, so they don't fit into the API very well... is it generally useful without them?  Is there a natural way to make it work for them?\r\n   * does it enable simpler code elsewhere, or is it targeting too narrow of a use-case (string formatting? a re-usable array.map style utility function?  chaining a series of functions/operators together before storing an item back into an arrow array?)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-07T23:18:10.625+0000",
                    "updated": "2021-02-07T23:18:10.625+0000",
                    "started": "2021-02-07T23:18:10.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549350",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-778630461\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=h1) Report\n   > Merging [#9440](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=desc) (8c28b62) into [master](https://codecov.io/gh/apache/arrow/commit/a321cdedb75b27b669995065ffe5596b3cfb3ae4?el=desc) (a321cde) will **increase** coverage by `0.17%`.\n   > The diff coverage is `91.07%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9440/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9440      +/-   ##\n   ==========================================\n   + Coverage   82.14%   82.32%   +0.17%     \n   ==========================================\n     Files         232      235       +3     \n     Lines       54150    54599     +449     \n   ==========================================\n   + Hits        44484    44948     +464     \n   + Misses       9666     9651      -15     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXkucnM=) | `88.52% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `92.92% <0.00%> (-0.48%)` | :arrow_down: |\n   | [rust/arrow/src/array/value\\_iterator.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdmFsdWVfaXRlcmF0b3IucnM=) | `84.37% <84.37%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `95.52% <98.13%> (-0.32%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `91.78% <100.00%> (+0.03%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_boolean.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYm9vbGVhbi5ycw==) | `90.98% <100.00%> (+0.15%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `94.84% <100.00%> (+0.02%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `95.41% <100.00%> (+0.04%)` | :arrow_up: |\n   | [rust/datafusion/src/error.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9lcnJvci5ycw==) | `33.33% <0.00%> (-7.41%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/udaf.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkYWYucnM=) | `75.00% <0.00%> (-3.95%)` | :arrow_down: |\n   | ... and [63 more](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=footer). Last update [a321cde...8c28b62](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T14:57:54.563+0000",
                    "updated": "2021-02-13T14:57:54.563+0000",
                    "started": "2021-02-13T14:57:54.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552187",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571710980\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/comparison.rs\n##########\n@@ -33,56 +33,66 @@ use crate::datatypes::{ArrowNumericType, DataType};\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Helper function to perform boolean lambda function on values from two arrays, this\n-/// version does not attempt to use SIMD.\n-macro_rules! compare_op {\n-    ($left: expr, $right:expr, $op:expr) => {{\n-        if $left.len() != $right.len() {\n+fn infallible_compare_operation_scalar<'a,A,S,F>(left:&'a A, right: S, predicate:F) -> Result<BooleanArray>\n+where &'a A : TypedArray,\n+    A: Array,\n+    S: Copy,\n+    F: FnMut(\n+        <&'a A as TypedArray>::ValueRef,\n+        S\n+        )->bool\n+{\n+    let null_bit_buffer = left.data().null_buffer().cloned();\n+\n+    let bool_buf = {\n+        let mut predicate_ref = predicate;\n+        left.iter_values().map(|left|predicate_ref(left,right)).collect()\n+    };\n+\n+    let data = ArrayData::new(\n+        DataType::Boolean,\n+        left.len(),\n+        None,\n+        null_bit_buffer,\n+        0,\n+        vec![bool_buf],\n+        vec![],\n+    );\n+    Ok(BooleanArray::from(Arc::new(data)))\n+}\n+\n+fn infallible_compare_operation<'a,A,F>(left:&'a A, right:&'a A, predicate:F) -> Result<BooleanArray>\n\nReview comment:\n       same as above\n\n##########\nFile path: rust/arrow/src/compute/kernels/comparison.rs\n##########\n@@ -33,56 +33,66 @@ use crate::datatypes::{ArrowNumericType, DataType};\n use crate::error::{ArrowError, Result};\n use crate::util::bit_util;\n \n-/// Helper function to perform boolean lambda function on values from two arrays, this\n-/// version does not attempt to use SIMD.\n-macro_rules! compare_op {\n-    ($left: expr, $right:expr, $op:expr) => {{\n-        if $left.len() != $right.len() {\n+fn infallible_compare_operation_scalar<'a,A,S,F>(left:&'a A, right: S, predicate:F) -> Result<BooleanArray>\n\nReview comment:\n       This function name is misleading, should probably rename it back to the name the macro used.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-13T22:53:06.914+0000",
                    "updated": "2021-02-13T22:53:06.914+0000",
                    "started": "2021-02-13T22:53:06.914+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552245",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571706825\n\n\n\n##########\nFile path: rust/arrow/src/array/array_binary.rs\n##########\n@@ -162,6 +163,16 @@ impl<OffsetSize: BinaryOffsetSizeTrait> GenericBinaryArray<OffsetSize> {\n     }\n }\n \n+impl<'a, OffsetSize: BinaryOffsetSizeTrait> TypedArray\n+    for &'a GenericBinaryArray<OffsetSize>\n\nReview comment:\n       I had initially hoped to make TypedArray an extension of the Array trait.  But, to use a lifetime in the 'type' declarations, I found that I needed to either make TypedArray include a generic lifetime (TypedArray<'a>), or I needed to implement it for &'a TypedArray.\r\n   \r\n   My previous attempts at this tried to use `trait TypedArray<'a> : Array`, but once I tried using it on the comparison kernels ' I hit on lifetime issues trying to prove the equivalence of NativeTypes... so I'm keeping it simple for the experiment.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-14T16:47:33.699+0000",
                    "updated": "2021-02-14T16:47:33.699+0000",
                    "started": "2021-02-14T16:47:33.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552378",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571711119\n\n\n\n##########\nFile path: rust/arrow/src/array/array_boolean.rs\n##########\n@@ -100,6 +100,14 @@ impl Array for BooleanArray {\n     }\n }\n \n+impl<'a> TypedArray for &'a BooleanArray {\n\nReview comment:\n       I don't believe anything is actually using this impl right now\n\n##########\nFile path: rust/arrow/src/array/array_list.rs\n##########\n@@ -181,6 +181,14 @@ impl<OffsetSize: 'static + OffsetSizeTrait> Array for GenericListArray<OffsetSiz\n     }\n }\n \n+impl<'a, OffsetSize: OffsetSizeTrait> TypedArray for &'a GenericListArray<OffsetSize> {\n\nReview comment:\n       I don't believe anything is actually using this impl right now\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-14T16:48:06.666+0000",
                    "updated": "2021-02-14T16:48:06.666+0000",
                    "started": "2021-02-14T16:48:06.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552379",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr removed a comment on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-774786663\n\n\n   Just for some vague performance numbers... from before I squashed a couple simple commits look good.  15% difference seems to be beneficial or neutral for the comparison kernels.\r\n   \r\n   I can't explain the buffer collection regressions as they should be completely unrelated (but they did reproduce for both my test runs).\r\n   The buffer_bit & cast look like noise.\r\n   \r\n   ```\r\n   group                             2master-a321cded                       2value_iteration-7c21fa33              master-a321cded                        value_iteration-7c21fa33\r\n   -----                             ----------------                       -------------------------              ---------------                        ------------------------\r\n   Buffer::from_iter bool            1.00      6.1\u00b10.01ms        ? B/sec    1.73     10.6\u00b10.04ms        ? B/sec    1.03      6.3\u00b10.01ms        ? B/sec    1.47      9.0\u00b10.02ms        ? B/sec\r\n   MutableBuffer::from_iter bool     1.00      6.1\u00b10.01ms        ? B/sec    1.42      8.7\u00b10.01ms        ? B/sec    1.03      6.3\u00b10.01ms        ? B/sec    1.46      8.9\u00b10.02ms        ? B/sec\r\n   array_from_vec 128                1.06    419.7\u00b12.63ns        ? B/sec    1.04    414.6\u00b10.76ns        ? B/sec    1.00    397.0\u00b11.55ns        ? B/sec    1.16    459.0\u00b11.41ns        ? B/sec\r\n   buffer_bit_ops and                1.31    320.2\u00b10.33ns        ? B/sec    1.00    243.7\u00b10.27ns        ? B/sec    1.32    321.0\u00b10.61ns        ? B/sec    1.31    318.3\u00b10.70ns        ? B/sec\r\n   buffer_bit_ops or                 1.00    277.1\u00b10.31ns        ? B/sec    1.06    292.1\u00b10.54ns        ? B/sec    1.37    378.3\u00b10.41ns        ? B/sec    1.00    276.6\u00b10.94ns        ? B/sec\r\n   cast date32 to date64 512         1.00    522.8\u00b11.51ns        ? B/sec    1.00    523.2\u00b10.65ns        ? B/sec    1.17    610.1\u00b10.61ns        ? B/sec    1.18    615.5\u00b10.83ns        ? B/sec\r\n   cast time32s to time32ms 512      1.00    343.6\u00b10.74ns        ? B/sec    1.25    428.8\u00b10.41ns        ? B/sec    1.24    426.6\u00b10.42ns        ? B/sec    1.01    346.8\u00b11.42ns        ? B/sec\r\n   eq Float32                        1.50     90.5\u00b10.14\u00b5s        ? B/sec    1.00     60.2\u00b10.09\u00b5s        ? B/sec    1.50     90.5\u00b10.13\u00b5s        ? B/sec    1.00     60.2\u00b10.07\u00b5s        ? B/sec\r\n   eq scalar Float32                 1.35     79.6\u00b10.18\u00b5s        ? B/sec    1.00     59.2\u00b10.13\u00b5s        ? B/sec    1.35     79.8\u00b10.09\u00b5s        ? B/sec    1.00     59.1\u00b10.09\u00b5s        ? B/sec\r\n   from_slice                        1.81    900.0\u00b11.74\u00b5s        ? B/sec    1.00    497.0\u00b10.98\u00b5s        ? B/sec    1.76    875.2\u00b11.17\u00b5s        ? B/sec    1.02    508.3\u00b10.88\u00b5s        ? B/sec\r\n   gt Float32                        1.56     86.0\u00b10.10\u00b5s        ? B/sec    1.00     55.0\u00b10.07\u00b5s        ? B/sec    1.56     86.0\u00b10.10\u00b5s        ? B/sec    1.00     55.1\u00b10.24\u00b5s        ? B/sec\r\n   gt scalar Float32                 1.38     72.3\u00b10.14\u00b5s        ? B/sec    1.00     52.3\u00b10.05\u00b5s        ? B/sec    1.38     72.3\u00b10.19\u00b5s        ? B/sec    1.00     52.2\u00b10.04\u00b5s        ? B/sec\r\n   gt_eq Float32                     1.55     75.4\u00b10.15\u00b5s        ? B/sec    1.00     48.6\u00b10.09\u00b5s        ? B/sec    1.55     75.5\u00b10.09\u00b5s        ? B/sec    1.00     48.7\u00b10.08\u00b5s        ? B/sec\r\n   gt_eq scalar Float32              1.32     62.8\u00b10.07\u00b5s        ? B/sec    1.00     47.5\u00b10.07\u00b5s        ? B/sec    1.33     63.0\u00b10.07\u00b5s        ? B/sec    1.00     47.5\u00b10.06\u00b5s        ? B/sec\r\n   limit 512, 512                    1.00    116.3\u00b10.18ns        ? B/sec    1.15    133.9\u00b10.26ns        ? B/sec    1.00    116.3\u00b10.22ns        ? B/sec    1.08    126.0\u00b10.23ns        ? B/sec\r\n   lt Float32                        1.56     85.8\u00b10.08\u00b5s        ? B/sec    1.00     55.0\u00b10.09\u00b5s        ? B/sec    1.56     86.1\u00b10.19\u00b5s        ? B/sec    1.00     55.1\u00b10.16\u00b5s        ? B/sec\r\n   lt scalar Float32                 1.35     71.7\u00b10.11\u00b5s        ? B/sec    1.00     53.1\u00b10.06\u00b5s        ? B/sec    1.35     71.7\u00b10.18\u00b5s        ? B/sec    1.00     53.0\u00b10.05\u00b5s        ? B/sec\r\n   lt_eq Float32                     1.55     75.7\u00b10.09\u00b5s        ? B/sec    1.00     48.8\u00b10.09\u00b5s        ? B/sec    1.55     75.7\u00b10.13\u00b5s        ? B/sec    1.00     48.7\u00b10.06\u00b5s        ? B/sec\r\n   lt_eq scalar Float32              1.35     62.0\u00b10.06\u00b5s        ? B/sec    1.00     46.1\u00b10.04\u00b5s        ? B/sec    1.35     62.0\u00b10.09\u00b5s        ? B/sec    1.01     46.4\u00b10.08\u00b5s        ? B/sec\r\n   mutable                           1.00    419.1\u00b10.99\u00b5s        ? B/sec    4.01   1682.2\u00b12.66\u00b5s        ? B/sec    1.05    441.9\u00b10.95\u00b5s        ? B/sec    3.83   1606.8\u00b12.63\u00b5s        ? B/sec\r\n   mutable extend                    1.00    833.1\u00b11.97\u00b5s        ? B/sec    2.48      2.1\u00b10.00ms        ? B/sec    1.00    836.2\u00b11.22\u00b5s        ? B/sec    2.45      2.0\u00b10.00ms        ? B/sec\r\n   mutable iter extend_from_slice    1.00   1004.0\u00b11.32\u00b5s        ? B/sec    2.19      2.2\u00b10.00ms        ? B/sec    1.00   1003.5\u00b11.56\u00b5s        ? B/sec    2.19      2.2\u00b10.00ms        ? B/sec\r\n   neq Float32                       1.50     90.4\u00b10.12\u00b5s        ? B/sec    1.00     60.1\u00b10.09\u00b5s        ? B/sec    1.51     90.6\u00b10.12\u00b5s        ? B/sec    1.00     60.2\u00b10.06\u00b5s        ? B/sec\r\n   neq scalar Float32                1.36     79.8\u00b10.10\u00b5s        ? B/sec    1.00     58.6\u00b10.14\u00b5s        ? B/sec    1.36     79.9\u00b10.13\u00b5s        ? B/sec    1.00     58.6\u00b10.06\u00b5s        ? B/sec\r\n   nlike_utf8 scalar ends with       1.16    580.9\u00b10.50\u00b5s        ? B/sec    1.00    500.9\u00b10.73\u00b5s        ? B/sec    1.16    579.4\u00b10.67\u00b5s        ? B/sec    1.00    499.6\u00b10.58\u00b5s        ? B/sec\r\n   or                                1.00   1007.5\u00b11.33ns        ? B/sec    1.07   1078.1\u00b13.76ns        ? B/sec    1.11   1116.4\u00b11.79ns        ? B/sec    1.17   1174.4\u00b12.85ns        ? B/sec\r\n   ```\r\n   Since the comparison kernels could achieve similar iteration speedup WITHOUT any kind of public TypedArray trait, that on its own isn't enough to justify creation of the API.  I plan to experiment further to see if other places reliant on cross-type array iteration could benefit.\r\n   \r\n   The main questions in my mind are:\r\n   * struct union, list, and dictionary arrays don't encode which type of value they contain into their rust type, so they don't fit into the API very well... is it generally useful without them?  Is there a natural way to make it work for them?\r\n   * does it enable simpler code elsewhere, or is it targeting too narrow of a use-case (string formatting? a re-usable array.map style utility function?  chaining a series of functions/operators together before storing an item back into an arrow array?)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-14T16:48:10.464+0000",
                    "updated": "2021-02-14T16:48:10.464+0000",
                    "started": "2021-02-14T16:48:10.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552380",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on a change in pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#discussion_r571709555\n\n\n\n##########\nFile path: rust/arrow/src/array/value_iterator.rs\n##########\n@@ -0,0 +1,305 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use super::{\n+    Array, ArrayRef, BinaryOffsetSizeTrait, BooleanArray, GenericBinaryArray,\n+    GenericListArray, GenericStringArray, OffsetSizeTrait, StringOffsetSizeTrait,\n+};\n+\n+/// an iterator that returns Some(bool) or None.\n+// Note: This implementation is based on std's [Vec]s' [IntoIter].\n+#[derive(Debug)]\n+pub struct BooleanValueIter<'a> {\n\nReview comment:\n       For all except PrimitiveArray (which just uses a slice iterator), these effectively duplicate the existing 'iterator of options' array iterators, except they provide the raw value without validity information of any kind.  \r\n   It is to allow access for kernels that prefer to access all values (ex: if an operation is fast AND infallible, it can avoid accessing the null array just to branch so it can ignore it).  I am not sure if this need comes up very often outside of the primitive or boolean array.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-16T02:48:49.694+0000",
                    "updated": "2021-02-16T02:48:49.694+0000",
                    "started": "2021-02-16T02:48:49.694+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552787",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-778630461\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=h1) Report\n   > Merging [#9440](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=desc) (0071823) into [master](https://codecov.io/gh/apache/arrow/commit/8547c616dcc7c3ee51f174d118c81b38847974af?el=desc) (8547c61) will **decrease** coverage by `0.05%`.\n   > The diff coverage is `71.67%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9440/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9440      +/-   ##\n   ==========================================\n   - Coverage   82.12%   82.07%   -0.06%     \n   ==========================================\n     Files         235      241       +6     \n     Lines       54729    54982     +253     \n   ==========================================\n   + Hits        44944    45124     +180     \n   - Misses       9785     9858      +73     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXkucnM=) | `75.90% <\u00f8> (+0.40%)` | :arrow_up: |\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `91.54% <0.00%> (-1.86%)` | :arrow_down: |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `84.93% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/array/array\\_boolean.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYm9vbGVhbi5ycw==) | `78.72% <9.52%> (-12.11%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_string.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfc3RyaW5nLnJz) | `89.27% <11.76%> (-6.10%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `91.83% <12.50%> (-2.99%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfYmluYXJ5LnJz) | `90.64% <25.00%> (-1.12%)` | :arrow_down: |\n   | [rust/arrow/src/array/value\\_iterator.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdmFsdWVfaXRlcmF0b3IucnM=) | `84.04% <84.04%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `95.57% <96.63%> (-0.27%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/arity.rs](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2FyaXR5LnJz) | `91.66% <100.00%> (\u00f8)` | |\n   | ... and [15 more](https://codecov.io/gh/apache/arrow/pull/9440/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=footer). Last update [3a0eafa...0071823](https://codecov.io/gh/apache/arrow/pull/9440?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-16T03:16:24.772+0000",
                    "updated": "2021-02-16T03:16:24.772+0000",
                    "started": "2021-02-16T03:16:24.771+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552790",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-779588671\n\n\n   @jorgecarleitao, this is a very rough draft of that typed-array trait I was thinking about to provide an alternative to 'macro' based templates of loops over `$left.value(i)`.  Exposing the API turned out to be more awkward than I expected, as I think the way I wanted to do it (a single TypedArray trait) requires GAT's to capture a generic lifetime in an associated type? \r\n   \r\n   I think I will close this without merging.  I figure you may want to take a look at it before then, since the general concept seems to work so someone with more time than me might arrive at something cleaner.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-16T05:21:21.060+0000",
                    "updated": "2021-02-16T05:21:21.060+0000",
                    "started": "2021-02-16T05:21:21.060+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552822",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/552823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-779592089\n\n\n   @tyrelr , thanks a lot for bringing this forward.\r\n   \r\n   In general, think that such a trait is difficult given how heterogeneous its return types are: `value()` can return:\r\n   \r\n   * A value, for primitives and bool\r\n   * A slice, for binary and string\r\n   * A trait object for `List`\r\n   * a vector of values, for `Struct`\r\n   \r\n   With that said, I think that there are 3 important use-cases for such a trait:\r\n   \r\n   * `HashableValue`: Currently we no mechanism to generically hash a value of an array. However, that came up a couple of times already in DataFusion and is a very central concept in any data structure (together with equality). In this context, it could be interesting to explore this.\r\n   * `serve::Value`: we currently implement the `serde::Value` at `ArrowNativeType`, but in principle each array should know how to present itself as a json, so that we support `value(i) -> Value`.\r\n   * `String`: in principle every value should be representable as a string. We could offer a trait for that.\r\n   \r\n   Just some ideas.\r\n   \r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-16T05:30:55.980+0000",
                    "updated": "2021-02-16T05:30:55.980+0000",
                    "started": "2021-02-16T05:30:55.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "552823",
                    "issueId": "13357413"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/worklog/553372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tyrelr commented on pull request #9440:\nURL: https://github.com/apache/arrow/pull/9440#issuecomment-780289834\n\n\n   Yes, I intentionally steered clear of the struct & dictionary array specifically because they don't encode the type of the values they contain (which make sense, it seems easy to end up with enormous deeply nested types describing structs of structs of dictionaries of structs etc.).  Any value would likely end up being per-element-trait-objects, similar to the Datum type that has been discussed in other Pull Requests.\r\n   \r\n   Surprisingly, List turned out to not cause me any grief, as it just returns an ArrayRef.\r\n   \r\n   I'm close this Pull Request and experiment more on my branch.  Thanks for the feedback.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-17T04:30:27.981+0000",
                    "updated": "2021-02-17T04:30:27.981+0000",
                    "started": "2021-02-17T04:30:27.981+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "553372",
                    "issueId": "13357413"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@12fbd058[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@560fdea4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fd7d310[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2705d6b0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10b9fb71[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@469c18d0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77620c40[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7edbf44a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2166fa93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@79a3cf7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@607d2048[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4125f1a9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 12:47:08 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T12:47:10.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11546/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-02-07T19:49:32.000+0000",
        "updated": "2021-04-26T12:47:10.000+0000",
        "timeoriginalestimate": null,
        "description": "A few of the arrow kernels rely on macros to iterate over values using a common \".value()\" function, but:\r\n* this is unsafe on some array types (string, binary), but unsafe on other array types (primitive)\r\n* this forces iteration by index, which does not always optimize away bounds-checking (at least in the binary case)\r\n\r\nThis PR is an experiment with a TypedArray trait, which provides access to array values (along with associated types describing those values).\u00a0 This will NOT remove the need for downcasting, as the associated types aren't object-safe.\u00a0 But it should be sufficient to allow simple processing of values from multiple array types using a generic function instead of a macro.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][Experiment][WIP] Experiment with a TypedArray trait",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13357413/comment/17332210",
                    "id": "17332210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-rs/issues/179",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T12:47:08.048+0000",
                    "updated": "2021-04-26T12:47:08.048+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ngy8:",
        "customfield_12314139": null
    }
}