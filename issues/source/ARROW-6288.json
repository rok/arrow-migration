{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13251452",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452",
    "key": "ARROW-6288",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567952",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567952",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13250217",
                    "key": "ARROW-6211",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250217",
                    "fields": {
                        "summary": "[Java] Remove dependency on RangeEqualsVisitor from ValueVector interface",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6288/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119\n \n \n   Related to [ARROW-6288](https://issues.apache.org/jira/browse/ARROW-6288).\r\n   \r\n   Currently when we compare range/vector equals, we first compare vector Field by its equals method, in this case, it\u2019s hard to specify whether compare names or metadata.\r\n   \r\n   Implement a TypeEqualsVisitor will make type comparisons more flexible like cpp implementation dose https://github.com/apache/arrow/blob/master/cpp/src/arrow/compare.cc#L712\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-19T16:30:16.014+0000",
                    "updated": "2019-08-19T16:30:16.014+0000",
                    "started": "2019-08-19T16:30:16.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297274",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#issuecomment-522653633\n \n \n   cc @pravindra \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-19T16:30:31.143+0000",
                    "updated": "2019-08-19T16:30:31.143+0000",
                    "started": "2019-08-19T16:30:31.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297276",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315596052\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/TypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.ZeroVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+\n+/**\n+ * Visitor to compare type equals for vectors.\n+ */\n+public class TypeEqualsVisitor implements VectorVisitor<Boolean, Void> {\n+\n+  private final ValueVector right;\n+\n+  private final boolean checkName;\n+  private final boolean checkMetadata;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public TypeEqualsVisitor(ValueVector right) {\n+    this (right, true, true);\n+  }\n+\n+  /**\n+   * Construct an instance.\n+   * @param right right vector\n+   * @param checkName whether checks names\n+   * @param checkMetadata whether checks metadata\n+   */\n+  public TypeEqualsVisitor(ValueVector right, boolean checkName, boolean checkMetadata) {\n+    this.right = right;\n+    this.checkName = checkName;\n+    this.checkMetadata = checkMetadata;\n+  }\n+\n+  /**\n+   * Check type equals without passing IN param in VectorVisitor.\n+   */\n+  public boolean equals(ValueVector left) {\n+    return left.accept(this, null);\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseFixedWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseVariableWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(FixedSizeListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(NonNullableStructVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(UnionVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ZeroVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  private boolean compareField(Field leftField, Field rightField) {\n+    return (!checkName || Objects.equals(leftField.getName(), rightField.getName())) &&\n+        Objects.equals(leftField.isNullable(), rightField.isNullable()) &&\n+        Objects.equals(leftField.getType(), rightField.getType()) &&\n+        Objects.equals(leftField.getDictionary(), rightField.getDictionary()) &&\n+        (!checkMetadata || Objects.equals(leftField.getMetadata(), rightField.getMetadata())) &&\n+        compareChilren(leftField.getChildren(), rightField.getChildren());\n+  }\n+\n+  private boolean compareChilren(List<Field> leftChildren, List<Field> rightChildren) {\n \n Review comment:\n   typo - compareChilren -> compareChildren\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:44:26.624+0000",
                    "updated": "2019-08-20T09:44:26.624+0000",
                    "started": "2019-08-20T09:44:26.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297721",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315597597\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/TypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.ZeroVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+\n+/**\n+ * Visitor to compare type equals for vectors.\n+ */\n+public class TypeEqualsVisitor implements VectorVisitor<Boolean, Void> {\n+\n+  private final ValueVector right;\n+\n+  private final boolean checkName;\n+  private final boolean checkMetadata;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public TypeEqualsVisitor(ValueVector right) {\n+    this (right, true, true);\n+  }\n+\n+  /**\n+   * Construct an instance.\n+   * @param right right vector\n+   * @param checkName whether checks names\n+   * @param checkMetadata whether checks metadata\n+   */\n+  public TypeEqualsVisitor(ValueVector right, boolean checkName, boolean checkMetadata) {\n+    this.right = right;\n+    this.checkName = checkName;\n+    this.checkMetadata = checkMetadata;\n+  }\n+\n+  /**\n+   * Check type equals without passing IN param in VectorVisitor.\n+   */\n+  public boolean equals(ValueVector left) {\n+    return left.accept(this, null);\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseFixedWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseVariableWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(FixedSizeListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(NonNullableStructVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(UnionVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ZeroVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  private boolean compareField(Field leftField, Field rightField) {\n \n Review comment:\n   add a fastpath for leftField == rightField ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:44:26.709+0000",
                    "updated": "2019-08-20T09:44:26.709+0000",
                    "started": "2019-08-20T09:44:26.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297722",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315598784\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/compare/TestTypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.nio.charset.Charset;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.BigIntVector;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestTypeEqualsVisitor {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new RootAllocator(Long.MAX_VALUE);\n+  }\n+\n+  private static final Charset utf8Charset = Charset.forName(\"UTF-8\");\n+  private static final byte[] STR1 = \"AAAAA1\".getBytes(utf8Charset);\n+  private static final byte[] STR2 = \"BBBBBBBBB2\".getBytes(utf8Charset);\n+  private static final byte[] STR3 = \"CCCC3\".getBytes(utf8Charset);\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testTypeEqualsWithName() {\n+    try (final IntVector right = new IntVector(\"int\", allocator);\n+         final IntVector left1 = new IntVector(\"int\", allocator);\n+        final IntVector left2 = new IntVector(\"int2\", allocator)) {\n+\n+      TypeEqualsVisitor visitor = new TypeEqualsVisitor(right);\n+      assertTrue(visitor.equals(left1));\n+      assertFalse(visitor.equals(left2));\n+    }\n+  }\n+\n+  @Test\n+  public void testTypeEqualsWithMetadate() {\n \n Review comment:\n   typo : Metadate -> Metadata\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:44:26.778+0000",
                    "updated": "2019-08-20T09:44:26.778+0000",
                    "started": "2019-08-20T09:44:26.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297723",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315603917\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/TypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.ZeroVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+\n+/**\n+ * Visitor to compare type equals for vectors.\n+ */\n+public class TypeEqualsVisitor implements VectorVisitor<Boolean, Void> {\n+\n+  private final ValueVector right;\n+\n+  private final boolean checkName;\n+  private final boolean checkMetadata;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public TypeEqualsVisitor(ValueVector right) {\n+    this (right, true, true);\n+  }\n+\n+  /**\n+   * Construct an instance.\n+   * @param right right vector\n+   * @param checkName whether checks names\n+   * @param checkMetadata whether checks metadata\n+   */\n+  public TypeEqualsVisitor(ValueVector right, boolean checkName, boolean checkMetadata) {\n+    this.right = right;\n+    this.checkName = checkName;\n+    this.checkMetadata = checkMetadata;\n+  }\n+\n+  /**\n+   * Check type equals without passing IN param in VectorVisitor.\n+   */\n+  public boolean equals(ValueVector left) {\n+    return left.accept(this, null);\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseFixedWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseVariableWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(FixedSizeListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(NonNullableStructVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(UnionVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ZeroVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  private boolean compareField(Field leftField, Field rightField) {\n+    return (!checkName || Objects.equals(leftField.getName(), rightField.getName())) &&\n+        Objects.equals(leftField.isNullable(), rightField.isNullable()) &&\n+        Objects.equals(leftField.getType(), rightField.getType()) &&\n+        Objects.equals(leftField.getDictionary(), rightField.getDictionary()) &&\n+        (!checkMetadata || Objects.equals(leftField.getMetadata(), rightField.getMetadata())) &&\n+        compareChilren(leftField.getChildren(), rightField.getChildren());\n+  }\n+\n+  private boolean compareChilren(List<Field> leftChildren, List<Field> rightChildren) {\n \n Review comment:\n   Thanks, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:54:12.327+0000",
                    "updated": "2019-08-20T09:54:12.327+0000",
                    "started": "2019-08-20T09:54:12.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297731",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315603962\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/compare/TypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,125 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import java.util.List;\n+import java.util.Objects;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.ZeroVector;\n+import org.apache.arrow.vector.complex.FixedSizeListVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.Field;\n+\n+/**\n+ * Visitor to compare type equals for vectors.\n+ */\n+public class TypeEqualsVisitor implements VectorVisitor<Boolean, Void> {\n+\n+  private final ValueVector right;\n+\n+  private final boolean checkName;\n+  private final boolean checkMetadata;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public TypeEqualsVisitor(ValueVector right) {\n+    this (right, true, true);\n+  }\n+\n+  /**\n+   * Construct an instance.\n+   * @param right right vector\n+   * @param checkName whether checks names\n+   * @param checkMetadata whether checks metadata\n+   */\n+  public TypeEqualsVisitor(ValueVector right, boolean checkName, boolean checkMetadata) {\n+    this.right = right;\n+    this.checkName = checkName;\n+    this.checkMetadata = checkMetadata;\n+  }\n+\n+  /**\n+   * Check type equals without passing IN param in VectorVisitor.\n+   */\n+  public boolean equals(ValueVector left) {\n+    return left.accept(this, null);\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseFixedWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(BaseVariableWidthVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(FixedSizeListVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(NonNullableStructVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(UnionVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  @Override\n+  public Boolean visit(ZeroVector left, Void value) {\n+    return compareField(left.getField(), right.getField());\n+  }\n+\n+  private boolean compareField(Field leftField, Field rightField) {\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:54:19.680+0000",
                    "updated": "2019-08-20T09:54:19.680+0000",
                    "started": "2019-08-20T09:54:19.679+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297732",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/297733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119#discussion_r315604020\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/compare/TestTypeEqualsVisitor.java\n ##########\n @@ -0,0 +1,138 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.compare;\n+\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.nio.charset.Charset;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.vector.BigIntVector;\n+import org.apache.arrow.vector.IntVector;\n+import org.apache.arrow.vector.VarCharVector;\n+import org.apache.arrow.vector.complex.ListVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.complex.UnionVector;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class TestTypeEqualsVisitor {\n+\n+  private BufferAllocator allocator;\n+\n+  @Before\n+  public void init() {\n+    allocator = new RootAllocator(Long.MAX_VALUE);\n+  }\n+\n+  private static final Charset utf8Charset = Charset.forName(\"UTF-8\");\n+  private static final byte[] STR1 = \"AAAAA1\".getBytes(utf8Charset);\n+  private static final byte[] STR2 = \"BBBBBBBBB2\".getBytes(utf8Charset);\n+  private static final byte[] STR3 = \"CCCC3\".getBytes(utf8Charset);\n+\n+  @After\n+  public void terminate() throws Exception {\n+    allocator.close();\n+  }\n+\n+  @Test\n+  public void testTypeEqualsWithName() {\n+    try (final IntVector right = new IntVector(\"int\", allocator);\n+         final IntVector left1 = new IntVector(\"int\", allocator);\n+        final IntVector left2 = new IntVector(\"int2\", allocator)) {\n+\n+      TypeEqualsVisitor visitor = new TypeEqualsVisitor(right);\n+      assertTrue(visitor.equals(left1));\n+      assertFalse(visitor.equals(left2));\n+    }\n+  }\n+\n+  @Test\n+  public void testTypeEqualsWithMetadate() {\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-20T09:54:26.403+0000",
                    "updated": "2019-08-20T09:54:26.403+0000",
                    "started": "2019-08-20T09:54:26.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "297733",
                    "issueId": "13251452"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/worklog/298386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #5119: ARROW-6288: [Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata\nURL: https://github.com/apache/arrow/pull/5119\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-21T02:35:46.538+0000",
                    "updated": "2019-08-21T02:35:46.538+0000",
                    "started": "2019-08-21T02:35:46.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "298386",
                    "issueId": "13251452"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7ab7cc90[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1d8a627c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1469c65d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5abecf2e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4df4fc35[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6f34b4a6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35b5dc33[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@195ea214[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7321e05e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@39fafb18[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2235ec50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4e97b400[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 21 02:35:45 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-21T02:35:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6288/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-18T15:31:17.000+0000",
        "updated": "2019-08-21T02:35:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently when we compare range/vector equals, we first compare vector {{Field}}\u00a0by its equals method, in this case, it\u2019s hard to specify whether compare names or metadata.\r\n\r\nImplement a {{TypeEqualsVisitor}}\u00a0will make type comparisons more flexible like cpp implementation dose [https://github.com/apache/arrow/blob/master/cpp/src/arrow/compare.cc#L712]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement TypeEqualsVisitor comparing vector type equals considering names and metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13251452/comment/16911895",
                    "id": "16911895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5119\n[https://github.com/apache/arrow/pull/5119]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-08-21T02:35:45.232+0000",
                    "updated": "2019-08-21T02:35:45.232+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05rw0:",
        "customfield_12314139": null
    }
}