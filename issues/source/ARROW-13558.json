{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393524",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524",
    "key": "ARROW-13558",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12640977",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12640977",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13447752",
                    "key": "ARROW-16696",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13447752",
                    "fields": {
                        "summary": "[C++] Is Precision check necessary when appending values at decimal builder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13558/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/660339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322\n\n\n   Split out of ARROW-13130. This also adjusts various tests generating random decimals, though in a very imprecise way (such that we aren't generating the full range of possible decimals for a given precision).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T14:08:15.709+0000",
                    "updated": "2021-10-05T14:08:15.709+0000",
                    "started": "2021-10-05T14:08:15.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660339",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/660360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r722307281\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -704,14 +706,15 @@ TEST(Cast, Decimal128ToDecimal128) {\n   CheckCast(d_28_0, d_38_10_roundtripped, options);\n \n   // Precision loss without rescale leads to truncation\n-  auto d_4_2 = ArrayFromJSON(decimal(4, 2), R\"([\"12.34\"])\");\n+  auto d_4_2 = ArrayFromJSON(decimal128(4, 2), R\"([\"12.34\"])\");\n   for (auto expected : {\n-           ArrayFromJSON(decimal(3, 2), R\"([\"12.34\"])\"),\n-           ArrayFromJSON(decimal(4, 3), R\"([\"12.340\"])\"),\n-           ArrayFromJSON(decimal(2, 1), R\"([\"12.3\"])\"),\n+           ArrayFromJSON(decimal128(3, 2), R\"([\"12.34\"])\"),\n+           ArrayFromJSON(decimal128(4, 3), R\"([\"12.340\"])\"),\n+           ArrayFromJSON(decimal128(2, 1), R\"([\"12.3\"])\"),\n        }) {\n     options.allow_decimal_truncate = true;\n-    CheckCast(d_4_2, expected, options);\n+    ASSERT_OK_AND_ASSIGN(auto invalid, Cast(d_4_2, expected->type(), options));\n+    ASSERT_NOT_OK(invalid.make_array()->ValidateFull());\n\nReview comment:\n       Nit: perhaps use `ASSERT_RAISES(Invalid, ...)`?\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -84,8 +84,12 @@ std::string random_string(int64_t n, uint32_t seed) {\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n   pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n+  // Generate smaller values than requested to avoid generating invalid decimals for the\n\nReview comment:\n       `RandomArrayGenerator` has a more precise random generation routine, should we simply switch to it?\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -131,8 +131,12 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n   std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n+  // Generate smaller values than requested to avoid generating invalid decimals for the\n+  // given precision\n+  const int32_t required_bytes =\n+      std::max(1, ::arrow::DecimalType::DecimalSize(precision) - 1);\n+  std::uniform_int_distribution<uint32_t> d(\n+      0, required_bytes <= 1 ? 9 : std::numeric_limits<uint8_t>::max());\n\nReview comment:\n       Same comment as in the other occurrence, though this may be less trivial in the Parquet codebase.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T14:37:51.217+0000",
                    "updated": "2021-10-05T14:37:51.217+0000",
                    "started": "2021-10-05T14:37:51.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660360",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/660501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-934650573\n\n\n   It turns out the integration test data generation was using a different definition for the range of valid decimal values given a precision (it seems it was based purely on how many bytes were needed for a given precision, and not what would actually be valid for that precision) - I've changed it now, but \"golden\" files from previous versions are still a problem\u2026\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-05T18:15:54.249+0000",
                    "updated": "2021-10-05T18:15:54.249+0000",
                    "started": "2021-10-05T18:15:54.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660501",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/660753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-935699257\n\n\n   > I've changed it now, but \"golden\" files from previous versions are still a problem\u2026\r\n   \r\n   We can either re-generate those files with valid data, which is going to be a bit tedious (need to install an old PyArrow version?), or add a command-line flag to the integration executable to disable full validation.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-06T08:01:59.761+0000",
                    "updated": "2021-10-06T08:01:59.761+0000",
                    "started": "2021-10-06T08:01:59.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "660753",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/661892",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-938130257\n\n\n   Alright, I've added a flag for the integration tests, and I've corrected a test case that was failing on big-endian s390x.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T20:26:27.608+0000",
                    "updated": "2021-10-07T20:26:27.608+0000",
                    "started": "2021-10-07T20:26:27.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "661892",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/662028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-938130257\n\n\n   Alright, I've added a flag for the integration tests, and I've corrected a test case that was failing on big-endian s390x.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-07T23:10:15.860+0000",
                    "updated": "2021-10-07T23:10:15.860+0000",
                    "started": "2021-10-07T23:10:15.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "662028",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742190118\n\n\n\n##########\nFile path: cpp/src/arrow/testing/json_integration_test.cc\n##########\n@@ -54,6 +54,9 @@ DEFINE_string(\n     \"Mode of integration testing tool (ARROW_TO_JSON, JSON_TO_ARROW, VALIDATE)\");\n DEFINE_bool(integration, false, \"Run in integration test mode\");\n DEFINE_bool(verbose, true, \"Verbose output\");\n+DEFINE_bool(no_decimal_validate, false,\n\nReview comment:\n       It's generally nicer to avoid double negatives, so I'd prefer `DEFINE_bool(validate_decimals, true, \"...\")`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:44:55.053+0000",
                    "updated": "2021-11-03T17:44:55.053+0000",
                    "started": "2021-11-03T17:44:55.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674806",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742191252\n\n\n\n##########\nFile path: cpp/src/arrow/testing/random_test.cc\n##########\n@@ -240,6 +240,7 @@ class RandomDecimalArrayTest : public ::testing::Test {\n     ASSERT_LE(over_half, non_nulls * 0.7);\n     ASSERT_GE(negative, non_nulls * 0.3);\n     ASSERT_LE(negative, non_nulls * 0.7);\n+    ASSERT_OK(values.ValidateFull());\n\nReview comment:\n       There's already a `ASSERT_OK(array.ValidateFull());` at the beginning, this doesn't seem to add anything?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:46:29.238+0000",
                    "updated": "2021-11-03T17:46:29.238+0000",
                    "started": "2021-11-03T17:46:29.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674807",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742192470\n\n\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -83,22 +83,17 @@ std::string random_string(int64_t n, uint32_t seed) {\n }\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n-  constexpr int32_t byte_width = 16;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(decimal128(precision, 0), n);\n+    byte_width = Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(decimal256(precision, 0), n);\n+    byte_width = Decimal256Type::kByteWidth;\n\nReview comment:\n       It seems `byte_width` is always 16 in the original version. Do we need the decimal256 support? Going forward, it seems we should use `RandomArrayGenerator` directly.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:47:56.562+0000",
                    "updated": "2021-11-03T17:47:56.562+0000",
                    "started": "2021-11-03T17:47:56.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674808",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742192782\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -130,22 +130,17 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n }\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n-  int32_t byte_width = precision <= 38 ? 16 : 32;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = ::arrow::random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= ::arrow::Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(::arrow::decimal128(precision, 0), n);\n+    byte_width = ::arrow::Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(::arrow::decimal256(precision, 0), n);\n+    byte_width = ::arrow::Decimal256Type::kByteWidth;\n\nReview comment:\n       Same remark here.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:48:12.657+0000",
                    "updated": "2021-11-03T17:48:12.657+0000",
                    "started": "2021-11-03T17:48:12.657+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674810",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674812",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742193861\n\n\n\n##########\nFile path: dev/archery/archery/integration/datagen.py\n##########\n@@ -431,23 +431,10 @@ def generate_column(self, size, name=None):\n         return PrimitiveColumn(name, size, is_valid, values)\n \n \n-DECIMAL_PRECISION_TO_VALUE = {\n-    key: (1 << (8 * i - 1)) - 1 for i, key in enumerate(\n-        [1, 3, 5, 7, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36,\n-         40, 42, 44, 50, 60, 70],\n-        start=1,\n-    )\n-}\n-\n-\n def decimal_range_from_precision(precision):\n     assert 1 <= precision <= 76\n-    try:\n-        max_value = DECIMAL_PRECISION_TO_VALUE[precision]\n-    except KeyError:\n-        return decimal_range_from_precision(precision - 1)\n-    else:\n-        return ~max_value, max_value\n+    max_value = (10 ** precision) - 1\n+    return ~max_value, max_value\n\nReview comment:\n       Shouldn't it actually be `-max_value, max_value`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:49:38.833+0000",
                    "updated": "2021-11-03T17:49:38.833+0000",
                    "started": "2021-11-03T17:49:38.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674812",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/674813",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742194400\n\n\n\n##########\nFile path: dev/archery/archery/integration/runner.py\n##########\n@@ -147,7 +147,13 @@ def _gold_tests(self, gold_dir):\n                 skip.add(\"C#\")\n                 skip.add(\"Go\")\n \n-            yield datagen.File(name, None, None, skip=skip, path=out_path)\n+            quirks = set()\n+            if prefix in {'0.14.1', '0.17.1',\n\nReview comment:\n       Add reference to JIRA issue here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T17:50:12.210+0000",
                    "updated": "2021-11-03T17:50:12.210+0000",
                    "started": "2021-11-03T17:50:12.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674813",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/675257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742190118\n\n\n\n##########\nFile path: cpp/src/arrow/testing/json_integration_test.cc\n##########\n@@ -54,6 +54,9 @@ DEFINE_string(\n     \"Mode of integration testing tool (ARROW_TO_JSON, JSON_TO_ARROW, VALIDATE)\");\n DEFINE_bool(integration, false, \"Run in integration test mode\");\n DEFINE_bool(verbose, true, \"Verbose output\");\n+DEFINE_bool(no_decimal_validate, false,\n\nReview comment:\n       It's generally nicer to avoid double negatives, so I'd prefer `DEFINE_bool(validate_decimals, true, \"...\")`\n\n##########\nFile path: cpp/src/arrow/testing/random_test.cc\n##########\n@@ -240,6 +240,7 @@ class RandomDecimalArrayTest : public ::testing::Test {\n     ASSERT_LE(over_half, non_nulls * 0.7);\n     ASSERT_GE(negative, non_nulls * 0.3);\n     ASSERT_LE(negative, non_nulls * 0.7);\n+    ASSERT_OK(values.ValidateFull());\n\nReview comment:\n       There's already a `ASSERT_OK(array.ValidateFull());` at the beginning, this doesn't seem to add anything?\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -83,22 +83,17 @@ std::string random_string(int64_t n, uint32_t seed) {\n }\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n-  constexpr int32_t byte_width = 16;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(decimal128(precision, 0), n);\n+    byte_width = Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(decimal256(precision, 0), n);\n+    byte_width = Decimal256Type::kByteWidth;\n\nReview comment:\n       It seems `byte_width` is always 16 in the original version. Do we need the decimal256 support? Going forward, it seems we should use `RandomArrayGenerator` directly.\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -130,22 +130,17 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n }\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n-  int32_t byte_width = precision <= 38 ? 16 : 32;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = ::arrow::random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= ::arrow::Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(::arrow::decimal128(precision, 0), n);\n+    byte_width = ::arrow::Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(::arrow::decimal256(precision, 0), n);\n+    byte_width = ::arrow::Decimal256Type::kByteWidth;\n\nReview comment:\n       Same remark here.\n\n##########\nFile path: dev/archery/archery/integration/datagen.py\n##########\n@@ -431,23 +431,10 @@ def generate_column(self, size, name=None):\n         return PrimitiveColumn(name, size, is_valid, values)\n \n \n-DECIMAL_PRECISION_TO_VALUE = {\n-    key: (1 << (8 * i - 1)) - 1 for i, key in enumerate(\n-        [1, 3, 5, 7, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36,\n-         40, 42, 44, 50, 60, 70],\n-        start=1,\n-    )\n-}\n-\n-\n def decimal_range_from_precision(precision):\n     assert 1 <= precision <= 76\n-    try:\n-        max_value = DECIMAL_PRECISION_TO_VALUE[precision]\n-    except KeyError:\n-        return decimal_range_from_precision(precision - 1)\n-    else:\n-        return ~max_value, max_value\n+    max_value = (10 ** precision) - 1\n+    return ~max_value, max_value\n\nReview comment:\n       Shouldn't it actually be `-max_value, max_value`?\n\n##########\nFile path: dev/archery/archery/integration/runner.py\n##########\n@@ -147,7 +147,13 @@ def _gold_tests(self, gold_dir):\n                 skip.add(\"C#\")\n                 skip.add(\"Go\")\n \n-            yield datagen.File(name, None, None, skip=skip, path=out_path)\n+            quirks = set()\n+            if prefix in {'0.14.1', '0.17.1',\n\nReview comment:\n       Add reference to JIRA issue here?\n\n##########\nFile path: cpp/src/arrow/testing/json_integration_test.cc\n##########\n@@ -54,6 +54,9 @@ DEFINE_string(\n     \"Mode of integration testing tool (ARROW_TO_JSON, JSON_TO_ARROW, VALIDATE)\");\n DEFINE_bool(integration, false, \"Run in integration test mode\");\n DEFINE_bool(verbose, true, \"Verbose output\");\n+DEFINE_bool(no_decimal_validate, false,\n\nReview comment:\n       It's generally nicer to avoid double negatives, so I'd prefer `DEFINE_bool(validate_decimals, true, \"...\")`\n\n##########\nFile path: cpp/src/arrow/testing/random_test.cc\n##########\n@@ -240,6 +240,7 @@ class RandomDecimalArrayTest : public ::testing::Test {\n     ASSERT_LE(over_half, non_nulls * 0.7);\n     ASSERT_GE(negative, non_nulls * 0.3);\n     ASSERT_LE(negative, non_nulls * 0.7);\n+    ASSERT_OK(values.ValidateFull());\n\nReview comment:\n       There's already a `ASSERT_OK(array.ValidateFull());` at the beginning, this doesn't seem to add anything?\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -83,22 +83,17 @@ std::string random_string(int64_t n, uint32_t seed) {\n }\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n-  constexpr int32_t byte_width = 16;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(decimal128(precision, 0), n);\n+    byte_width = Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(decimal256(precision, 0), n);\n+    byte_width = Decimal256Type::kByteWidth;\n\nReview comment:\n       It seems `byte_width` is always 16 in the original version. Do we need the decimal256 support? Going forward, it seems we should use `RandomArrayGenerator` directly.\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -130,22 +130,17 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n }\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n-  int32_t byte_width = precision <= 38 ? 16 : 32;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = ::arrow::random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= ::arrow::Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(::arrow::decimal128(precision, 0), n);\n+    byte_width = ::arrow::Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(::arrow::decimal256(precision, 0), n);\n+    byte_width = ::arrow::Decimal256Type::kByteWidth;\n\nReview comment:\n       Same remark here.\n\n##########\nFile path: dev/archery/archery/integration/datagen.py\n##########\n@@ -431,23 +431,10 @@ def generate_column(self, size, name=None):\n         return PrimitiveColumn(name, size, is_valid, values)\n \n \n-DECIMAL_PRECISION_TO_VALUE = {\n-    key: (1 << (8 * i - 1)) - 1 for i, key in enumerate(\n-        [1, 3, 5, 7, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36,\n-         40, 42, 44, 50, 60, 70],\n-        start=1,\n-    )\n-}\n-\n-\n def decimal_range_from_precision(precision):\n     assert 1 <= precision <= 76\n-    try:\n-        max_value = DECIMAL_PRECISION_TO_VALUE[precision]\n-    except KeyError:\n-        return decimal_range_from_precision(precision - 1)\n-    else:\n-        return ~max_value, max_value\n+    max_value = (10 ** precision) - 1\n+    return ~max_value, max_value\n\nReview comment:\n       Shouldn't it actually be `-max_value, max_value`?\n\n##########\nFile path: dev/archery/archery/integration/runner.py\n##########\n@@ -147,7 +147,13 @@ def _gold_tests(self, gold_dir):\n                 skip.add(\"C#\")\n                 skip.add(\"Go\")\n \n-            yield datagen.File(name, None, None, skip=skip, path=out_path)\n+            quirks = set()\n+            if prefix in {'0.14.1', '0.17.1',\n\nReview comment:\n       Add reference to JIRA issue here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:34:06.030+0000",
                    "updated": "2021-11-04T00:34:06.030+0000",
                    "started": "2021-11-04T00:34:06.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675257",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/675877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742190118\n\n\n\n##########\nFile path: cpp/src/arrow/testing/json_integration_test.cc\n##########\n@@ -54,6 +54,9 @@ DEFINE_string(\n     \"Mode of integration testing tool (ARROW_TO_JSON, JSON_TO_ARROW, VALIDATE)\");\n DEFINE_bool(integration, false, \"Run in integration test mode\");\n DEFINE_bool(verbose, true, \"Verbose output\");\n+DEFINE_bool(no_decimal_validate, false,\n\nReview comment:\n       It's generally nicer to avoid double negatives, so I'd prefer `DEFINE_bool(validate_decimals, true, \"...\")`\n\n##########\nFile path: cpp/src/arrow/testing/random_test.cc\n##########\n@@ -240,6 +240,7 @@ class RandomDecimalArrayTest : public ::testing::Test {\n     ASSERT_LE(over_half, non_nulls * 0.7);\n     ASSERT_GE(negative, non_nulls * 0.3);\n     ASSERT_LE(negative, non_nulls * 0.7);\n+    ASSERT_OK(values.ValidateFull());\n\nReview comment:\n       There's already a `ASSERT_OK(array.ValidateFull());` at the beginning, this doesn't seem to add anything?\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -83,22 +83,17 @@ std::string random_string(int64_t n, uint32_t seed) {\n }\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n-  constexpr int32_t byte_width = 16;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(decimal128(precision, 0), n);\n+    byte_width = Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(decimal256(precision, 0), n);\n+    byte_width = Decimal256Type::kByteWidth;\n\nReview comment:\n       It seems `byte_width` is always 16 in the original version. Do we need the decimal256 support? Going forward, it seems we should use `RandomArrayGenerator` directly.\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -130,22 +130,17 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n }\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n-  int32_t byte_width = precision <= 38 ? 16 : 32;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = ::arrow::random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= ::arrow::Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(::arrow::decimal128(precision, 0), n);\n+    byte_width = ::arrow::Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(::arrow::decimal256(precision, 0), n);\n+    byte_width = ::arrow::Decimal256Type::kByteWidth;\n\nReview comment:\n       Same remark here.\n\n##########\nFile path: dev/archery/archery/integration/datagen.py\n##########\n@@ -431,23 +431,10 @@ def generate_column(self, size, name=None):\n         return PrimitiveColumn(name, size, is_valid, values)\n \n \n-DECIMAL_PRECISION_TO_VALUE = {\n-    key: (1 << (8 * i - 1)) - 1 for i, key in enumerate(\n-        [1, 3, 5, 7, 10, 12, 15, 17, 19, 22, 24, 27, 29, 32, 34, 36,\n-         40, 42, 44, 50, 60, 70],\n-        start=1,\n-    )\n-}\n-\n-\n def decimal_range_from_precision(precision):\n     assert 1 <= precision <= 76\n-    try:\n-        max_value = DECIMAL_PRECISION_TO_VALUE[precision]\n-    except KeyError:\n-        return decimal_range_from_precision(precision - 1)\n-    else:\n-        return ~max_value, max_value\n+    max_value = (10 ** precision) - 1\n+    return ~max_value, max_value\n\nReview comment:\n       Shouldn't it actually be `-max_value, max_value`?\n\n##########\nFile path: dev/archery/archery/integration/runner.py\n##########\n@@ -147,7 +147,13 @@ def _gold_tests(self, gold_dir):\n                 skip.add(\"C#\")\n                 skip.add(\"Go\")\n \n-            yield datagen.File(name, None, None, skip=skip, path=out_path)\n+            quirks = set()\n+            if prefix in {'0.14.1', '0.17.1',\n\nReview comment:\n       Add reference to JIRA issue here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:37:21.635+0000",
                    "updated": "2021-11-04T01:37:21.635+0000",
                    "started": "2021-11-04T01:37:21.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675877",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/676429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742856204\n\n\n\n##########\nFile path: cpp/src/parquet/arrow/test_util.h\n##########\n@@ -130,22 +130,17 @@ ::arrow::enable_if_fixed_size_binary<ArrowType, Status> NonNullArray(\n }\n \n static void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  std::default_random_engine gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = ::arrow::DecimalType::DecimalSize(precision);\n-  int32_t byte_width = precision <= 38 ? 16 : 32;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = ::arrow::random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= ::arrow::Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(::arrow::decimal128(precision, 0), n);\n+    byte_width = ::arrow::Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(::arrow::decimal256(precision, 0), n);\n+    byte_width = ::arrow::Decimal256Type::kByteWidth;\n\nReview comment:\n       Parquet actually tests with Decimal256. This just replaces the implementation with the common one. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T13:53:56.861+0000",
                    "updated": "2021-11-04T13:53:56.861+0000",
                    "started": "2021-11-04T13:53:56.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676429",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/676430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#discussion_r742856435\n\n\n\n##########\nFile path: cpp/src/arrow/testing/util.cc\n##########\n@@ -83,22 +83,17 @@ std::string random_string(int64_t n, uint32_t seed) {\n }\n \n void random_decimals(int64_t n, uint32_t seed, int32_t precision, uint8_t* out) {\n-  pcg32_fast gen(seed);\n-  std::uniform_int_distribution<uint32_t> d(0, std::numeric_limits<uint8_t>::max());\n-  const int32_t required_bytes = DecimalType::DecimalSize(precision);\n-  constexpr int32_t byte_width = 16;\n-  std::fill(out, out + byte_width * n, '\\0');\n-\n-  for (int64_t i = 0; i < n; ++i, out += byte_width) {\n-    std::generate(out, out + required_bytes,\n-                  [&d, &gen] { return static_cast<uint8_t>(d(gen)); });\n-\n-    // sign extend if the sign bit is set for the last byte generated\n-    // 0b10000000 == 0x80 == 128\n-    if ((out[required_bytes - 1] & '\\x80') != 0) {\n-      std::fill(out + required_bytes, out + byte_width, '\\xFF');\n-    }\n+  auto gen = random::RandomArrayGenerator(seed);\n+  std::shared_ptr<Array> decimals;\n+  int32_t byte_width = 0;\n+  if (precision <= Decimal128Type::kMaxPrecision) {\n+    decimals = gen.Decimal128(decimal128(precision, 0), n);\n+    byte_width = Decimal128Type::kByteWidth;\n+  } else {\n+    decimals = gen.Decimal256(decimal256(precision, 0), n);\n+    byte_width = Decimal256Type::kByteWidth;\n\nReview comment:\n       I inlined & removed this function.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T13:54:10.167+0000",
                    "updated": "2021-11-04T13:54:10.167+0000",
                    "started": "2021-11-04T13:54:10.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676430",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/678591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-08T16:18:12.467+0000",
                    "updated": "2021-11-08T16:18:12.467+0000",
                    "started": "2021-11-08T16:18:12.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "678591",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/678593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-963321073\n\n\n   Benchmark runs are scheduled for baseline = 76c12424f12eff7d342a1339a25160888d740157 and contender = 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482. 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/5669facf5bfc49f3ae3a3ae7aaf2fa96...27cc289710694975b520ab571c016b7b/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bf92d2c0e93942d2b9a67869a895c73d...3212c73fe3cf49ddadfb7a2a50437fe4/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/757a72d04ea24950a0b6fe1f196fc5d1...8d4a685cc9b249dbaa55096275367e35/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-08T16:20:32.163+0000",
                    "updated": "2021-11-08T16:20:32.163+0000",
                    "started": "2021-11-08T16:20:32.162+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "678593",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/678612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-963321073\n\n\n   Benchmark runs are scheduled for baseline = 76c12424f12eff7d342a1339a25160888d740157 and contender = 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482. 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/5669facf5bfc49f3ae3a3ae7aaf2fa96...27cc289710694975b520ab571c016b7b/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bf92d2c0e93942d2b9a67869a895c73d...3212c73fe3cf49ddadfb7a2a50437fe4/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/757a72d04ea24950a0b6fe1f196fc5d1...8d4a685cc9b249dbaa55096275367e35/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-08T16:45:57.556+0000",
                    "updated": "2021-11-08T16:45:57.556+0000",
                    "started": "2021-11-08T16:45:57.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "678612",
                    "issueId": "13393524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/worklog/678840",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11322:\nURL: https://github.com/apache/arrow/pull/11322#issuecomment-963321073\n\n\n   Benchmark runs are scheduled for baseline = 76c12424f12eff7d342a1339a25160888d740157 and contender = 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482. 01b4caa7bcf41fc18528e4f0831e4b5f2bae6482 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/5669facf5bfc49f3ae3a3ae7aaf2fa96...27cc289710694975b520ab571c016b7b/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/bf92d2c0e93942d2b9a67869a895c73d...3212c73fe3cf49ddadfb7a2a50437fe4/)\n   [Finished :arrow_down:0.49% :arrow_up:0.04%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/757a72d04ea24950a0b6fe1f196fc5d1...8d4a685cc9b249dbaa55096275367e35/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-09T01:24:25.710+0000",
                    "updated": "2021-11-09T01:24:25.710+0000",
                    "started": "2021-11-09T01:24:25.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "678840",
                    "issueId": "13393524"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3934f7d5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fc520b4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12bdb369[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@44abf10a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@745c33b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3389f888[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c50236b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@57e8b84a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@423cd0a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3e0d2dd1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@730b1a00[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6133d6c3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 08 16:18:07 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-11-08T16:18:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13558/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-08-04T15:34:42.000+0000",
        "updated": "2022-05-31T17:31:02.000+0000",
        "timeoriginalestimate": null,
        "description": "{{Array::ValidateFull}} and {{Scalar::ValidateFull}} should validate the underlying data for decimal types (meaning: validate that the decimal values fit in the decimal type's stated precision).",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Validate decimal data in ValidateFull",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393524/comment/17440577",
                    "id": "17440577",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 11322\n[https://github.com/apache/arrow/pull/11322]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-08T16:18:07.396+0000",
                    "updated": "2021-11-08T16:18:07.396+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tm1c:",
        "customfield_12314139": null
    }
}