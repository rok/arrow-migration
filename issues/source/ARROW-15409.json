{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13424098",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098",
    "key": "ARROW-15409",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12645787",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12645787",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13476611",
                    "key": "ARROW-17402",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13476611",
                    "fields": {
                        "summary": "[C++] Improve Dataset Write Option Defaults",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
                            "name": "Minor",
                            "id": "4"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alvinj15",
            "name": "alvinj15",
            "key": "JIRAUSER280323",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alvin Chunga Mamani",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15409/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#issuecomment-1226779231\n\n   https://issues.apache.org/jira/browse/ARROW-15409\n\n\n",
                    "created": "2022-08-25T05:04:43.357+0000",
                    "updated": "2022-08-25T05:04:43.357+0000",
                    "started": "2022-08-25T05:04:43.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803446",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r954854668\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n\nReview Comment:\n   default to ArrowFileFormat, since CSV is optional? (Though I guess, maybe you can't build datasets without CSV.)\n\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -386,7 +389,7 @@ struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// and only write the row groups to the disk when sufficient rows have accumulated.\n   /// The final row group size may be less than this value and other options such as\n   /// `max_open_files` or `max_rows_per_file` lead to smaller row group sizes.\n-  uint64_t min_rows_per_group = 0;\n+  uint64_t min_rows_per_group = 10;\n\nReview Comment:\n   Why 10 and not something larger? Alternatively, why set this by default at all?\n\n\n\n",
                    "created": "2022-08-25T11:36:07.784+0000",
                    "updated": "2022-08-25T11:36:07.784+0000",
                    "started": "2022-08-25T11:36:07.783+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803575",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803717",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r955239446\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n\nReview Comment:\n   I think parquet is probably the best default format for writing datasets as it is generally going to be friendlier on the disk size.  Although I could be convinced that IPC is better since, as you point out, parquet is also an optional component.  I very much agree it should not be CSV.\n\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n \n   /// FileSystem into which a dataset will be written.\n-  std::shared_ptr<fs::FileSystem> filesystem;\n+  std::shared_ptr<fs::FileSystem> filesystem =\n+      std::make_shared<arrow::fs::LocalFileSystem>();\n \n   /// Root directory into which the dataset will be written.\n   std::string base_dir;\n \n   /// Partitioning used to generate fragment paths.\n-  std::shared_ptr<Partitioning> partitioning;\n+  std::shared_ptr<Partitioning> partitioning = Partitioning::Default();\n \n   /// Maximum number of partitions any batch may be written into, default is 1K.\n   int max_partitions = 1024;\n \n   /// Template string used to generate fragment basenames.\n   /// {i} will be replaced by an auto incremented integer.\n-  std::string basename_template;\n+  std::string basename_template = \"data_{i}.arrow\";\n\nReview Comment:\n   The extension should be based on the format.  We should add a `const std::string& default_extension()` method to `FileFormat`.  Then we should default this to the empty string.  Then, in the dataset writer, if this is an empty string, we should use `\"part-{i}.\" + format.default_extension()`.  This mimics what is done in python (and we could probably remove the python logic too).  Then we should update the docstring for this field to reflect this behavior.\n\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -386,7 +389,7 @@ struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// and only write the row groups to the disk when sufficient rows have accumulated.\n   /// The final row group size may be less than this value and other options such as\n   /// `max_open_files` or `max_rows_per_file` lead to smaller row group sizes.\n-  uint64_t min_rows_per_group = 0;\n+  uint64_t min_rows_per_group = 10;\n\nReview Comment:\n   If partitioning, it is very possible to end up with tiny row groups.  For example, if we partition by year, and a batch comes in with 1 million rows spread across 1000 years you would end up with 1000 row groups with 1000 rows which is undesirable.\r\n   \r\n   However, the default here should be 1 << 20 (1Mi)\n\n\n\n",
                    "created": "2022-08-25T17:31:00.302+0000",
                    "updated": "2022-08-25T17:31:00.302+0000",
                    "started": "2022-08-25T17:31:00.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803717",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlvinJ15 commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r955669970\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -386,7 +389,7 @@ struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// and only write the row groups to the disk when sufficient rows have accumulated.\n   /// The final row group size may be less than this value and other options such as\n   /// `max_open_files` or `max_rows_per_file` lead to smaller row group sizes.\n-  uint64_t min_rows_per_group = 0;\n+  uint64_t min_rows_per_group = 10;\n\nReview Comment:\n   According with the ticket https://issues.apache.org/jira/browse/ARROW-15409?filter=-1, it suggest to set a value higher than 0, I use the 10 as I saw in some tests, what value would be apropiate for this?\r\n   @westonpace the `max_rows_per_group` is already `1 << 20` maybe I need to put a lower value\n\n\n\n",
                    "created": "2022-08-26T05:37:17.950+0000",
                    "updated": "2022-08-26T05:37:17.950+0000",
                    "started": "2022-08-26T05:37:17.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803848",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlvinJ15 commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r955752070\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n \n   /// FileSystem into which a dataset will be written.\n-  std::shared_ptr<fs::FileSystem> filesystem;\n+  std::shared_ptr<fs::FileSystem> filesystem =\n+      std::make_shared<arrow::fs::LocalFileSystem>();\n \n   /// Root directory into which the dataset will be written.\n   std::string base_dir;\n \n   /// Partitioning used to generate fragment paths.\n-  std::shared_ptr<Partitioning> partitioning;\n+  std::shared_ptr<Partitioning> partitioning = Partitioning::Default();\n \n   /// Maximum number of partitions any batch may be written into, default is 1K.\n   int max_partitions = 1024;\n \n   /// Template string used to generate fragment basenames.\n   /// {i} will be replaced by an auto incremented integer.\n-  std::string basename_template;\n+  std::string basename_template = \"data_{i}.arrow\";\n\nReview Comment:\n   `FileFormat` has a funtion called `type_name()` which currentyle is returning the `dataset-file-formats`, so I think \r\n    `default_extension()` is not necessary\n\n\n\n",
                    "created": "2022-08-26T07:39:32.303+0000",
                    "updated": "2022-08-26T07:39:32.303+0000",
                    "started": "2022-08-26T07:39:32.303+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803868",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/803869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlvinJ15 commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r955669970\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -386,7 +389,7 @@ struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// and only write the row groups to the disk when sufficient rows have accumulated.\n   /// The final row group size may be less than this value and other options such as\n   /// `max_open_files` or `max_rows_per_file` lead to smaller row group sizes.\n-  uint64_t min_rows_per_group = 0;\n+  uint64_t min_rows_per_group = 10;\n\nReview Comment:\n   According with the ticket https://issues.apache.org/jira/browse/ARROW-15409?filter=-1, it suggest to set a value higher than 0, I use the 10 as I saw in some tests, what value would be apropiate for this?\r\n   @westonpace the `max_rows_per_group` is already `1 << 20` maybe I need to put a lower value, for now I will put 1 << 18;\n\n\n\n",
                    "created": "2022-08-26T07:40:17.369+0000",
                    "updated": "2022-08-26T07:40:17.369+0000",
                    "started": "2022-08-26T07:40:17.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803869",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/805295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r959810926\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n\nReview Comment:\n   It seems this discussion advocates for there not being a default at all. These file formats have quite different characteristics and users should probably make a conscious choice about them.\n\n\n\n",
                    "created": "2022-08-31T16:49:14.370+0000",
                    "updated": "2022-08-31T16:49:14.370+0000",
                    "started": "2022-08-31T16:49:14.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805295",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/805304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r959822206\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n\nReview Comment:\n   In pyarrow we default to parquet but perhaps that is for legacy reasons.  I'm fine with no default here.  However, we should then get rid of the implicit no-arg constructor and add a single-argument constructor taking in write options since this will now have a required argument.  E.g.\r\n   \r\n   ```\r\n   FileSystemDatasetWriteOptions(std::shared_ptr<FileWriteOptions> file_write_options) : file_write_options(std::move(file_write_options)) {}\r\n   ```\n\n\n\n",
                    "created": "2022-08-31T17:01:36.063+0000",
                    "updated": "2022-08-31T17:01:36.063+0000",
                    "started": "2022-08-31T17:01:36.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805304",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/805305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r959823613\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -386,7 +389,7 @@ struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// and only write the row groups to the disk when sufficient rows have accumulated.\n   /// The final row group size may be less than this value and other options such as\n   /// `max_open_files` or `max_rows_per_file` lead to smaller row group sizes.\n-  uint64_t min_rows_per_group = 0;\n+  uint64_t min_rows_per_group = 10;\n\nReview Comment:\n   It's fine for `max_rows_per_group` and `min_rows_per_group` to have the same value I think.  `1 << 18` is probably ok.  The unit tests used `10` because I needed to be able to test the various features without generating a whole bunch of data (which would be time consuming) but `10` would have poor performance in practice because that means we would need to write a big block of metadata every 10 rows.\n\n\n\n",
                    "created": "2022-08-31T17:03:11.300+0000",
                    "updated": "2022-08-31T17:03:11.300+0000",
                    "started": "2022-08-31T17:03:11.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805305",
                    "issueId": "13424098"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424098/worklog/805307",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13959:\nURL: https://github.com/apache/arrow/pull/13959#discussion_r959825338\n\n\n##########\ncpp/src/arrow/dataset/file_base.h:\n##########\n@@ -350,23 +351,25 @@ class ARROW_DS_EXPORT FileWriter {\n /// \\brief Options for writing a dataset.\n struct ARROW_DS_EXPORT FileSystemDatasetWriteOptions {\n   /// Options for individual fragment writing.\n-  std::shared_ptr<FileWriteOptions> file_write_options;\n+  std::shared_ptr<FileWriteOptions> file_write_options =\n+      CsvFileFormat().DefaultWriteOptions();\n \n   /// FileSystem into which a dataset will be written.\n-  std::shared_ptr<fs::FileSystem> filesystem;\n+  std::shared_ptr<fs::FileSystem> filesystem =\n+      std::make_shared<arrow::fs::LocalFileSystem>();\n \n   /// Root directory into which the dataset will be written.\n   std::string base_dir;\n \n   /// Partitioning used to generate fragment paths.\n-  std::shared_ptr<Partitioning> partitioning;\n+  std::shared_ptr<Partitioning> partitioning = Partitioning::Default();\n \n   /// Maximum number of partitions any batch may be written into, default is 1K.\n   int max_partitions = 1024;\n \n   /// Template string used to generate fragment basenames.\n   /// {i} will be replaced by an auto incremented integer.\n-  std::string basename_template;\n+  std::string basename_template = \"data_{i}.arrow\";\n\nReview Comment:\n   `type_name()` almost works.  However, for `IpcFileFormat` the `type_name` is `ipc` and the extension should be `arrow`.  We could probably update the `type_name` to be `arrow` though.  It would technically be a backwards incompatible change but I'm not sure if anyone uses this field today.\n\n\n\n",
                    "created": "2022-08-31T17:05:06.624+0000",
                    "updated": "2022-08-31T17:05:06.624+0000",
                    "started": "2022-08-31T17:05:06.624+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805307",
                    "issueId": "13424098"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@71ee2aa3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59e77dce[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e5e45a6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4cb554ae[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1622264b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@16081f65[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a271b77[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2cd126b9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bc65d16[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d638c3c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fedcc44[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a2cd7ee[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "2022-01-21 23:17:28.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15409/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2022-01-21T23:17:28.000+0000",
        "updated": "2022-08-31T17:05:06.000+0000",
        "timeoriginalestimate": null,
        "description": "I was working on write dataset testing in the C++ API today and ran into a number of things that were not very intuitive.  All of these are abstracted away / hidden by the python / R interface so this really only applies to anyone using the C++ API directly.\r\n\r\n * If no partitioning is specified the write will segfault.  Instead it should us a default (no-op) partitioning.\r\n * The min_rows_per_group option should probably default to something higher than 0\r\n * It's not clear how to specify the format (you do it by creating a format, then setting the file write options, which sets the format privately)\r\n * There is no default for basename_template\r\n * There is no default for filesystem (should be local filesystem)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] The C++ API for writing datasets could be improved",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ytx4:",
        "customfield_12314139": null
    }
}