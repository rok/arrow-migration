{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13067033",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033",
    "key": "ARROW-902",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "1.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12536079",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12536079",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13163723",
                    "key": "ORC-374",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13163723",
                    "fields": {
                        "summary": "Possible to reduce size of release tarballs?",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
            "name": "virtualluke",
            "key": "virtualluke",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Luke Higgins",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
            "name": "virtualluke",
            "key": "virtualluke",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Luke Higgins",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6000,
            "total": 6000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-902/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 10,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/112236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141\n \n \n   With this, I was able to successfully do an offline / no-internet build with vendored Boost and `-DARROW_ORC=on`. I moved the thirdparty toolchain docs into thirdparty/README.md; this will need to be filled out and have a section about offline builds. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T08:33:51.930+0000",
                    "updated": "2018-06-15T08:33:51.930+0000",
                    "started": "2018-06-15T08:33:51.929+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112236",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/112258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#issuecomment-397562839\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=h1) Report\n   > Merging [#2141](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d4755e46494b7280b8c9e6192e03e4d3a5dd5342?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2141/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #2141      +/-   ##\n   =========================================\n   - Coverage   86.42%   86.4%   -0.02%     \n   =========================================\n     Files         242     230      -12     \n     Lines       41536   40644     -892     \n   =========================================\n   - Hits        35896   35117     -779     \n   + Misses       5640    5527     -113\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | | |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | | |\n   | [rust/src/memory\\_pool.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5X3Bvb2wucnM=) | | |\n   | [rust/src/bitmap.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYml0bWFwLnJz) | | |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | [rust/src/memory.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbWVtb3J5LnJz) | | |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | | |\n   | [rust/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZGF0YXR5cGVzLnJz) | | |\n   | [rust/src/error.rs](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZXJyb3IucnM=) | | |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/2141/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=footer). Last update [d4755e4...6fa2ca7](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T09:14:09.191+0000",
                    "updated": "2018-06-15T09:14:09.191+0000",
                    "started": "2018-06-15T09:14:09.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112258",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/112259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#discussion_r195677538\n \n \n\n ##########\n File path: cpp/thirdparty/download_dependencies.sh\n ##########\n @@ -0,0 +1,95 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# This script downloads all the thirdparty dependencies as a series of tarballs\n+# that can be used for offline builds, etc.\n+\n+set -e\n+\n+SOURCE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+if [ \"$#\" -ne 1 ]; then\n+  echo \"Usage: $0 <destination-directory>\"\n+  exit\n+fi\n+\n+_DST=$1\n+\n+BOOST_VERSION=1.67.0\n+GTEST_VERSION=1.8.0\n+GFLAGS_VERSION=2.2.0\n+GBENCHMARK_VERSION=1.4.1\n+FLATBUFFERS_VERSION=1.9.0\n+RAPIDJSON_VERSION=1.1.0\n+JEMALLOC_VERSION=17c897976c60b0e6e4f4a365c751027244dada7a\n+SNAPPY_VERSION=1.1.3\n+BROTLI_VERSION=v0.6.0\n+LZ4_VERSION=1.7.5\n+ZLIB_VERSION=1.2.8\n+ZSTD_VERSION=1.2.0\n+PROTOBUF_VERSION=2.6.0\n+GRPC_VERSION=1.12.1\n+ORC_VERSION=1.5.1\n+\n+BOOST_UNDERSCORE_VERSION=`echo $BOOST_VERSION | sed 's/\\./_/g'`\n \n Review comment:\n   A nice improvement for this script would be to only download files that were not yet downloaded. Either by checking for their existence or by using `wget -c`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T09:21:07.805+0000",
                    "updated": "2018-06-15T09:21:07.805+0000",
                    "started": "2018-06-15T09:21:07.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112259",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/113765",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#discussion_r196828180\n \n \n\n ##########\n File path: cpp/thirdparty/download_dependencies.sh\n ##########\n @@ -0,0 +1,95 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# This script downloads all the thirdparty dependencies as a series of tarballs\n+# that can be used for offline builds, etc.\n+\n+set -e\n+\n+SOURCE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+if [ \"$#\" -ne 1 ]; then\n+  echo \"Usage: $0 <destination-directory>\"\n+  exit\n+fi\n+\n+_DST=$1\n+\n+BOOST_VERSION=1.67.0\n \n Review comment:\n   Is there a way we can avoid duplicating version numbers and download URLs between this and the CMake files?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-20T15:30:14.486+0000",
                    "updated": "2018-06-20T15:30:14.486+0000",
                    "started": "2018-06-20T15:30:14.486+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "113765",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/114265",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#discussion_r197059304\n \n \n\n ##########\n File path: cpp/thirdparty/download_dependencies.sh\n ##########\n @@ -0,0 +1,95 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# This script downloads all the thirdparty dependencies as a series of tarballs\n+# that can be used for offline builds, etc.\n+\n+set -e\n+\n+SOURCE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+if [ \"$#\" -ne 1 ]; then\n+  echo \"Usage: $0 <destination-directory>\"\n+  exit\n+fi\n+\n+_DST=$1\n+\n+BOOST_VERSION=1.67.0\n \n Review comment:\n   I don't care for the idea of maintaining the version numbers in two places either. I'm not sure how to get data from a file _in_ to CMake. I have done a bit of Google searching and I can't really find anything conclusive. CMake does have rudimentary string / regular expression parsing, that's probably the only way. I will take a crack at it and put a file like `thirdparty/versions.txt`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-21T09:00:23.393+0000",
                    "updated": "2018-06-21T09:00:23.393+0000",
                    "started": "2018-06-21T09:00:23.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114265",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/114620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2141: WIP ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#issuecomment-399326471\n \n \n   OK, I think I've addressed all the comments so far. I will improve the documentation / README and then this should be good to go\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-22T05:40:24.206+0000",
                    "updated": "2018-06-22T05:40:24.206+0000",
                    "started": "2018-06-22T05:40:24.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114620",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/114705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2141: ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#issuecomment-399388987\n \n \n   This should be ready to go once I get the build passing\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-22T09:52:30.453+0000",
                    "updated": "2018-06-22T09:52:30.453+0000",
                    "started": "2018-06-22T09:52:30.452+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114705",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/115050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2141: ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#issuecomment-397562839\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=h1) Report\n   > Merging [#2141](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/884474ca5ca1b8da55c0b23eb7cb784c2cd9bdb4?src=pr&el=desc) will **not change** coverage.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2141/graphs/tree.svg?token=LpTCFbqVT1&width=650&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #2141   +/-   ##\n   =======================================\n     Coverage   86.39%   86.39%           \n   =======================================\n     Files         230      230           \n     Lines       40701    40701           \n   =======================================\n     Hits        35162    35162           \n     Misses       5539     5539\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=footer). Last update [884474c...4583759](https://codecov.io/gh/apache/arrow/pull/2141?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T08:11:29.016+0000",
                    "updated": "2018-06-23T08:11:29.016+0000",
                    "started": "2018-06-23T08:11:29.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115050",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/115051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2141: ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141#issuecomment-399650788\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T08:13:06.426+0000",
                    "updated": "2018-06-23T08:13:06.426+0000",
                    "started": "2018-06-23T08:13:06.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115051",
                    "issueId": "13067033"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/worklog/115052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2141: ARROW-902: [C++] Script for downloading all thirdparty build dependencies and configuration for offline builds\nURL: https://github.com/apache/arrow/pull/2141\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/README.md b/cpp/README.md\nindex 3091588f1a..e7ddb0a133 100644\n--- a/cpp/README.md\n+++ b/cpp/README.md\n@@ -21,10 +21,10 @@\n \n ## System setup\n \n-Arrow uses CMake as a build configuration system. Currently, it supports in-source and\n-out-of-source builds with the latter one being preferred.\n+Arrow uses CMake as a build configuration system. Currently, it supports\n+in-source and out-of-source builds with the latter one being preferred.\n \n-Build Arrow requires:\n+Building Arrow requires:\n \n * A C++11-enabled compiler. On Linux, gcc 4.8 and higher should be sufficient.\n * CMake\n@@ -108,11 +108,11 @@ ASAN, and `ARROW_USE_ASAN` is mutually-exclusive with the valgrind option\n \n ### Building/Running fuzzers\n \n-Fuzzers can help finding unhandled exceptions and problems with untrusted input that\n-may lead to crashes, security issues and undefined behavior. They do this by\n-generating random input data and observing the behavior of the executed code. To build\n-the fuzzer code, LLVM is required (GCC-based compilers won't work). You can build them\n-using the following code:\n+Fuzzers can help finding unhandled exceptions and problems with untrusted input\n+that may lead to crashes, security issues and undefined behavior. They do this\n+by generating random input data and observing the behavior of the executed\n+code. To build the fuzzer code, LLVM is required (GCC-based compilers won't\n+work). You can build them using the following code:\n \n     cmake -DARROW_FUZZING=ON -DARROW_USE_ASAN=ON ..\n \n@@ -156,29 +156,18 @@ There are some problems that may occur during the compilation process:\n - libfuzzer was not distributed with your LLVM: `ld: file not found: .../libLLVMFuzzer.a`\n - your LLVM is too old: `clang: error: unsupported argument 'fuzzer' to option 'fsanitize='`\n \n-### Third-party environment variables\n-\n-To set up your own specific build toolchain, here are the relevant environment\n-variables\n-\n-* Boost: `BOOST_ROOT`\n-* Googletest: `GTEST_HOME` (only required to build the unit tests)\n-* gflags: `GFLAGS_HOME` (only required to build the unit tests)\n-* Google Benchmark: `GBENCHMARK_HOME` (only required if building benchmarks)\n-* Flatbuffers: `FLATBUFFERS_HOME` (only required for the IPC extensions)\n-* Hadoop: `HADOOP_HOME` (only required for the HDFS I/O extensions)\n-* jemalloc: `JEMALLOC_HOME`\n-* brotli: `BROTLI_HOME`, can be disabled with `-DARROW_WITH_BROTLI=off`\n-* lz4: `LZ4_HOME`, can be disabled with `-DARROW_WITH_LZ4=off`\n-* snappy: `SNAPPY_HOME`, can be disabled with `-DARROW_WITH_SNAPPY=off`\n-* zlib: `ZLIB_HOME`, can be disabled with `-DARROW_WITH_ZLIB=off`\n-* zstd: `ZSTD_HOME`, can be disabled with `-DARROW_WITH_ZSTD=off`\n-\n-If you have all of your toolchain libraries installed at the same prefix, you\n-can use the environment variable `$ARROW_BUILD_TOOLCHAIN` to automatically set\n-all of these variables. Note that `ARROW_BUILD_TOOLCHAIN` will not set\n-`BOOST_ROOT`, so if you have custom Boost installation, you must set this\n-environment variable separately.\n+### Third-party dependencies and configuration\n+\n+Arrow depends on a number of third-party libraries. We support these in a few\n+ways:\n+\n+* Building dependencies from source by downloading archives from the internet\n+* Building dependencies from source using from local archives (to allow offline\n+  builds)\n+* Building with locally-installed libraries\n+\n+See [thirdparty/README.md][5] for details about these options and how to\n+configure your build toolchain.\n \n ### Building Python integration library (optional)\n \n@@ -382,3 +371,4 @@ both of these options would be used rarely. Current known uses-cases when they a\n [2]: https://github.com/apache/arrow/blob/master/cpp/apidoc/Windows.md\n [3]: https://google.github.io/styleguide/cppguide.html\n [4]: https://github.com/include-what-you-use/include-what-you-use\n+[5]: https://github.com/apache/arrow/blob/master/cpp/thirdparty/README.md\n\\ No newline at end of file\ndiff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake\nindex 4dfe043532..563a314d5f 100644\n--- a/cpp/cmake_modules/ThirdpartyToolchain.cmake\n+++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake\n@@ -17,44 +17,9 @@\n \n \n # ----------------------------------------------------------------------\n-# Thirdparty toolchain\n+# Thirdparty versions, environment variables, source URLs\n \n set(THIRDPARTY_DIR \"${CMAKE_SOURCE_DIR}/thirdparty\")\n-set(GFLAGS_VERSION \"2.2.0\")\n-set(GTEST_VERSION \"1.8.0\")\n-set(GBENCHMARK_VERSION \"1.4.1\")\n-set(FLATBUFFERS_VERSION \"1.9.0\")\n-set(JEMALLOC_VERSION \"17c897976c60b0e6e4f4a365c751027244dada7a\")\n-set(SNAPPY_VERSION \"1.1.3\")\n-set(BROTLI_VERSION \"v0.6.0\")\n-set(LZ4_VERSION \"1.7.5\")\n-set(ZSTD_VERSION \"1.2.0\")\n-set(PROTOBUF_VERSION \"2.6.0\")\n-set(GRPC_VERSION \"94582910ad7f82ad447ecc72e6548cb669e4f7a9\") # v1.6.5\n-set(ORC_VERSION \"cf00b67795717ab3eb04e950780ed6d104109017\")\n-\n-string(TOUPPER ${CMAKE_BUILD_TYPE} UPPERCASE_BUILD_TYPE)\n-\n-set(EP_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${UPPERCASE_BUILD_TYPE}}\")\n-set(EP_C_FLAGS \"${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${UPPERCASE_BUILD_TYPE}}\")\n-\n-if (NOT ARROW_VERBOSE_THIRDPARTY_BUILD)\n-  set(EP_LOG_OPTIONS\n-    LOG_CONFIGURE 1\n-    LOG_BUILD 1\n-    LOG_INSTALL 1\n-    LOG_DOWNLOAD 1)\n-  set(Boost_DEBUG FALSE)\n-else()\n-  set(EP_LOG_OPTIONS)\n-  set(Boost_DEBUG TRUE)\n-endif()\n-\n-if (NOT MSVC)\n-  # Set -fPIC on all external projects\n-  set(EP_CXX_FLAGS \"${EP_CXX_FLAGS} -fPIC\")\n-  set(EP_C_FLAGS \"${EP_C_FLAGS} -fPIC\")\n-endif()\n \n if (NOT \"$ENV{ARROW_BUILD_TOOLCHAIN}\" STREQUAL \"\")\n   set(FLATBUFFERS_HOME \"$ENV{ARROW_BUILD_TOOLCHAIN}\")\n@@ -114,6 +79,145 @@ if (DEFINED ENV{PROTOBUF_HOME})\n   set(PROTOBUF_HOME \"$ENV{PROTOBUF_HOME}\")\n endif()\n \n+# ----------------------------------------------------------------------\n+# Versions and URLs for toolchain builds, which also can be used to configure\n+# offline builds\n+\n+# Read toolchain versions from cpp/thirdparty/versions.txt\n+file(STRINGS \"${THIRDPARTY_DIR}/versions.txt\" TOOLCHAIN_VERSIONS_TXT)\n+foreach(_VERSION_ENTRY ${TOOLCHAIN_VERSIONS_TXT})\n+  # Exclude comments\n+  if(_VERSION_ENTRY MATCHES \"#.*\")\n+    continue()\n+  endif()\n+\n+  string(REGEX MATCH \"^[^=]*\" _LIB_NAME ${_VERSION_ENTRY})\n+  string(REPLACE \"${_LIB_NAME}=\" \"\" _LIB_VERSION ${_VERSION_ENTRY})\n+\n+  # Skip blank or malformed lines\n+  if(${_LIB_VERSION} STREQUAL \"\")\n+    continue()\n+  endif()\n+\n+  # For debugging\n+  message(STATUS \"${_LIB_NAME}: ${_LIB_VERSION}\")\n+\n+  set(${_LIB_NAME} \"${_LIB_VERSION}\")\n+endforeach()\n+\n+if (DEFINED ENV{ARROW_BOOST_URL})\n+  set(BOOST_SOURCE_URL \"$ENV{ARROW_BOOST_URL}\")\n+else()\n+  string(REPLACE \".\" \"_\" BOOST_VERSION_UNDERSCORES ${BOOST_VERSION})\n+  set(BOOST_SOURCE_URL\n+    \"https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION_UNDERSCORES}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_GTEST_URL})\n+  set(GTEST_SOURCE_URL \"$ENV{ARROW_GTEST_URL}\")\n+else()\n+  set(GTEST_SOURCE_URL \"https://github.com/google/googletest/archive/release-${GTEST_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_GFLAGS_URL})\n+  set(GFLAGS_SOURCE_URL \"$ENV{ARROW_GFLAGS_URL}\")\n+else()\n+  set(GFLAGS_SOURCE_URL \"https://github.com/gflags/gflags/archive/v${GFLAGS_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_GBENCHMARK_URL})\n+  set(GBENCHMARK_SOURCE_URL \"$ENV{ARROW_GBENCHMARK_URL}\")\n+else()\n+  set(GBENCHMARK_SOURCE_URL \"https://github.com/google/benchmark/archive/v${GBENCHMARK_VERSION}.tar.gz\")\n+endif()\n+\n+set(RAPIDJSON_SOURCE_MD5 \"badd12c511e081fec6c89c43a7027bce\")\n+if (DEFINED ENV{ARROW_RAPIDJSON_URL})\n+  set(RAPIDJSON_SOURCE_URL \"$ENV{ARROW_RAPIDJSON_URL}\")\n+else()\n+  set(RAPIDJSON_SOURCE_URL \"https://github.com/miloyip/rapidjson/archive/v${RAPIDJSON_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_FLATBUFFERS_URL})\n+  set(FLATBUFFERS_SOURCE_URL \"$ENV{ARROW_FLATBUFFERS_URL}\")\n+else()\n+  set(FLATBUFFERS_SOURCE_URL \"https://github.com/google/flatbuffers/archive/v${FLATBUFFERS_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_SNAPPY_URL})\n+  set(SNAPPY_SOURCE_URL \"$ENV{ARROW_SNAPPY_URL}\")\n+else()\n+  set(SNAPPY_SOURCE_URL \"https://github.com/google/snappy/releases/download/${SNAPPY_VERSION}/snappy-${SNAPPY_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_BROTLI_URL})\n+  set(BROTLI_SOURCE_URL \"$ENV{ARROW_BROTLI_URL}\")\n+else()\n+  set(BROTLI_SOURCE_URL \"https://github.com/google/brotli/archive/${BROTLI_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_LZ4_URL})\n+  set(LZ4_SOURCE_URL \"$ENV{ARROW_LZ4_URL}\")\n+else()\n+  set(LZ4_SOURCE_URL \"https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_ZLIB_URL})\n+  set(ZLIB_SOURCE_URL \"$ENV{ARROW_ZLIB_URL}\")\n+else()\n+  set(ZLIB_SOURCE_URL \"http://zlib.net/fossils/zlib-${ZLIB_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_ZSTD_URL})\n+  set(ZSTD_SOURCE_URL \"$ENV{ARROW_ZSTD_URL}\")\n+else()\n+  set(ZSTD_SOURCE_URL \"https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_PROTOBUF_URL})\n+  set(PROTOBUF_SOURCE_URL \"$ENV{ARROW_PROTOBUF_URL}\")\n+else()\n+  set(PROTOBUF_SOURCE_URL \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_GRPC_URL})\n+  set(GRPC_SOURCE_URL \"$ENV{ARROW_GRPC_URL}\")\n+else()\n+  set(GRPC_SOURCE_URL \"https://github.com/grpc/grpc/archive/v${GRPC_VERSION}.tar.gz\")\n+endif()\n+\n+if (DEFINED ENV{ARROW_ORC_URL})\n+  set(ORC_SOURCE_URL \"$ENV{ARROW_ORC_URL}\")\n+else()\n+  set(ORC_SOURCE_URL \"https://github.com/apache/orc/archive/rel/release-${ORC_VERSION}.tar.gz\")\n+endif()\n+\n+# ----------------------------------------------------------------------\n+# ExternalProject options\n+\n+string(TOUPPER ${CMAKE_BUILD_TYPE} UPPERCASE_BUILD_TYPE)\n+\n+set(EP_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${CMAKE_CXX_FLAGS_${UPPERCASE_BUILD_TYPE}}\")\n+set(EP_C_FLAGS \"${CMAKE_C_FLAGS} ${CMAKE_C_FLAGS_${UPPERCASE_BUILD_TYPE}}\")\n+\n+if (NOT ARROW_VERBOSE_THIRDPARTY_BUILD)\n+  set(EP_LOG_OPTIONS\n+    LOG_CONFIGURE 1\n+    LOG_BUILD 1\n+    LOG_INSTALL 1\n+    LOG_DOWNLOAD 1)\n+  set(Boost_DEBUG FALSE)\n+else()\n+  set(EP_LOG_OPTIONS)\n+  set(Boost_DEBUG TRUE)\n+endif()\n+\n+if (NOT MSVC)\n+  # Set -fPIC on all external projects\n+  set(EP_CXX_FLAGS \"${EP_CXX_FLAGS} -fPIC\")\n+  set(EP_C_FLAGS \"${EP_C_FLAGS} -fPIC\")\n+endif()\n+\n # Ensure that a default make is set\n if (\"${MAKE}\" STREQUAL \"\")\n     if (NOT MSVC)\n@@ -146,10 +250,6 @@ set(Boost_ADDITIONAL_VERSIONS\n   \"1.62.0\" \"1.61\"\n   \"1.61.0\" \"1.62\"\n   \"1.60.0\" \"1.60\")\n-list(GET Boost_ADDITIONAL_VERSIONS 2 BOOST_LATEST_VERSION)\n-string(REPLACE \".\" \"_\" BOOST_LATEST_VERSION_IN_PATH ${BOOST_LATEST_VERSION})\n-set(BOOST_LATEST_URL\n-  \"https://dl.bintray.com/boostorg/release/${BOOST_LATEST_VERSION}/source/boost_${BOOST_LATEST_VERSION_IN_PATH}.tar.gz\")\n \n if (ARROW_BOOST_VENDORED)\n   set(BOOST_PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/boost_ep-prefix/src/boost_ep\")\n@@ -185,7 +285,7 @@ if (ARROW_BOOST_VENDORED)\n       \"cxxflags=-fPIC\")\n   endif()\n   ExternalProject_Add(boost_ep\n-    URL ${BOOST_LATEST_URL}\n+    URL ${BOOST_SOURCE_URL}\n     BUILD_BYPRODUCTS ${BOOST_BUILD_PRODUCTS}\n     BUILD_IN_SOURCE 1\n     CONFIGURE_COMMAND ${BOOST_CONFIGURE_COMMAND}\n@@ -288,7 +388,7 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n     endif()\n \n     ExternalProject_Add(googletest_ep\n-      URL \"https://github.com/google/googletest/archive/release-${GTEST_VERSION}.tar.gz\"\n+      URL ${GTEST_SOURCE_URL}\n       BUILD_BYPRODUCTS ${GTEST_STATIC_LIB} ${GTEST_MAIN_STATIC_LIB}\n       CMAKE_ARGS ${GTEST_CMAKE_ARGS}\n       ${EP_LOG_OPTIONS})\n@@ -314,7 +414,6 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n   if(\"${GFLAGS_HOME}\" STREQUAL \"\")\n     set(GFLAGS_CMAKE_CXX_FLAGS ${EP_CXX_FLAGS})\n \n-    set(GFLAGS_URL \"https://github.com/gflags/gflags/archive/v${GFLAGS_VERSION}.tar.gz\")\n     set(GFLAGS_PREFIX \"${CMAKE_CURRENT_BINARY_DIR}/gflags_ep-prefix/src/gflags_ep\")\n     set(GFLAGS_HOME \"${GFLAGS_PREFIX}\")\n     set(GFLAGS_INCLUDE_DIR \"${GFLAGS_PREFIX}/include\")\n@@ -337,7 +436,7 @@ if(ARROW_BUILD_TESTS OR ARROW_BUILD_BENCHMARKS)\n                           -DCMAKE_CXX_FLAGS=${GFLAGS_CMAKE_CXX_FLAGS})\n \n     ExternalProject_Add(gflags_ep\n-      URL ${GFLAGS_URL}\n+      URL ${GFLAGS_SOURCE_URL}\n       ${EP_LOG_OPTIONS}\n       BUILD_IN_SOURCE 1\n       BUILD_BYPRODUCTS \"${GFLAGS_STATIC_LIB}\"\n@@ -389,7 +488,7 @@ if(ARROW_BUILD_BENCHMARKS)\n     endif()\n \n     ExternalProject_Add(gbenchmark_ep\n-      URL \"https://github.com/google/benchmark/archive/v${GBENCHMARK_VERSION}.tar.gz\"\n+      URL ${GBENCHMARK_SOURCE_URL}\n       BUILD_BYPRODUCTS \"${GBENCHMARK_STATIC_LIB}\"\n       CMAKE_ARGS ${GBENCHMARK_CMAKE_ARGS}\n       ${EP_LOG_OPTIONS})\n@@ -414,8 +513,8 @@ if (ARROW_IPC)\n   if(\"${RAPIDJSON_HOME}\" STREQUAL \"\")\n     ExternalProject_Add(rapidjson_ep\n       PREFIX \"${CMAKE_BINARY_DIR}\"\n-      URL \"https://github.com/miloyip/rapidjson/archive/v1.1.0.tar.gz\"\n-      URL_MD5 \"badd12c511e081fec6c89c43a7027bce\"\n+      URL ${RAPIDJSON_SOURCE_URL}\n+      URL_MD5 ${RAPIDJSON_SOURCE_MD5}\n       CONFIGURE_COMMAND \"\"\n       BUILD_COMMAND \"\"\n       BUILD_IN_SOURCE 1\n@@ -446,7 +545,7 @@ if (ARROW_IPC)\n     endif()\n     # We always need to do release builds, otherwise flatc will not be installed.\n     ExternalProject_Add(flatbuffers_ep\n-      URL \"https://github.com/google/flatbuffers/archive/v${FLATBUFFERS_VERSION}.tar.gz\"\n+      URL ${FLATBUFFERS_SOURCE_URL}\n       CMAKE_ARGS\n       \"-DCMAKE_CXX_FLAGS=${FLATBUFFERS_CMAKE_CXX_FLAGS}\"\n       \"-DCMAKE_INSTALL_PREFIX:PATH=${FLATBUFFERS_PREFIX}\"\n@@ -580,7 +679,7 @@ if (ARROW_WITH_ZLIB)\n                         -DBUILD_SHARED_LIBS=OFF)\n \n     ExternalProject_Add(zlib_ep\n-      URL \"http://zlib.net/fossils/zlib-1.2.8.tar.gz\"\n+      URL ${ZLIB_SOURCE_URL}\n       ${EP_LOG_OPTIONS}\n       BUILD_BYPRODUCTS \"${ZLIB_STATIC_LIB}\"\n       CMAKE_ARGS ${ZLIB_CMAKE_ARGS})\n@@ -613,7 +712,6 @@ if (ARROW_WITH_SNAPPY)\n       set(SNAPPY_STATIC_LIB_NAME snappy)\n     endif()\n     set(SNAPPY_STATIC_LIB \"${SNAPPY_PREFIX}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}${SNAPPY_STATIC_LIB_NAME}${CMAKE_STATIC_LIBRARY_SUFFIX}\")\n-    set(SNAPPY_SRC_URL \"https://github.com/google/snappy/releases/download/${SNAPPY_VERSION}/snappy-${SNAPPY_VERSION}.tar.gz\")\n \n     if (${UPPERCASE_BUILD_TYPE} EQUAL \"RELEASE\")\n       if (APPLE)\n@@ -642,7 +740,7 @@ if (ARROW_WITH_SNAPPY)\n         BUILD_IN_SOURCE 1\n         BUILD_COMMAND ${MAKE}\n         INSTALL_DIR ${SNAPPY_PREFIX}\n-        URL ${SNAPPY_SRC_URL}\n+        URL ${SNAPPY_SOURCE_URL}\n         CMAKE_ARGS ${SNAPPY_CMAKE_ARGS}\n         BUILD_BYPRODUCTS \"${SNAPPY_STATIC_LIB}\")\n     else()\n@@ -652,7 +750,7 @@ if (ARROW_WITH_SNAPPY)\n         BUILD_IN_SOURCE 1\n         BUILD_COMMAND ${MAKE}\n         INSTALL_DIR ${SNAPPY_PREFIX}\n-        URL ${SNAPPY_SRC_URL}\n+        URL ${SNAPPY_SOURCE_URL}\n         BUILD_BYPRODUCTS \"${SNAPPY_STATIC_LIB}\")\n     endif()\n     set(SNAPPY_VENDORED 1)\n@@ -696,7 +794,7 @@ if (ARROW_WITH_BROTLI)\n                           -DBUILD_SHARED_LIBS=OFF)\n \n     ExternalProject_Add(brotli_ep\n-      URL \"https://github.com/google/brotli/archive/${BROTLI_VERSION}.tar.gz\"\n+      URL ${BROTLI_SOURCE_URL}\n       BUILD_BYPRODUCTS \"${BROTLI_STATIC_LIBRARY_ENC}\" \"${BROTLI_STATIC_LIBRARY_DEC}\" \"${BROTLI_STATIC_LIBRARY_COMMON}\"\n       ${BROTLI_BUILD_BYPRODUCTS}\n       ${EP_LOG_OPTIONS}\n@@ -758,7 +856,7 @@ if (ARROW_WITH_LZ4)\n     endif()\n \n     ExternalProject_Add(lz4_ep\n-        URL \"https://github.com/lz4/lz4/archive/v${LZ4_VERSION}.tar.gz\"\n+        URL ${LZ4_SOURCE_URL}\n         ${EP_LOG_OPTIONS}\n         UPDATE_COMMAND \"\"\n         ${LZ4_PATCH_COMMAND}\n@@ -811,7 +909,7 @@ if (ARROW_WITH_ZSTD)\n     endif()\n \n     ExternalProject_Add(zstd_ep\n-        URL \"https://github.com/facebook/zstd/archive/v${ZSTD_VERSION}.tar.gz\"\n+        URL ${ZSTD_SOURCE_URL}\n         ${EP_LOG_OPTIONS}\n         UPDATE_COMMAND \"\"\n         ${ZSTD_PATCH_COMMAND}\n@@ -891,12 +989,11 @@ if (ARROW_ORC)\n     set (PROTOBUF_HOME \"${PROTOBUF_PREFIX}\")\n     set (PROTOBUF_INCLUDE_DIR \"${PROTOBUF_PREFIX}/include\")\n     set (PROTOBUF_STATIC_LIB \"${PROTOBUF_PREFIX}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}protobuf${CMAKE_STATIC_LIBRARY_SUFFIX}\")\n-    set (PROTOBUF_SRC_URL \"https://github.com/google/protobuf/releases/download/v${PROTOBUF_VERSION}/protobuf-${PROTOBUF_VERSION}.tar.gz\")\n \n     ExternalProject_Add(protobuf_ep\n       CONFIGURE_COMMAND \"./configure\" \"--disable-shared\" \"--prefix=${PROTOBUF_PREFIX}\" \"CXXFLAGS=${EP_CXX_FLAGS}\"\n       BUILD_IN_SOURCE 1\n-      URL ${PROTOBUF_SRC_URL}\n+      URL ${PROTOBUF_SOURCE_URL}\n       BUILD_BYPRODUCTS \"${PROTOBUF_STATIC_LIB}\"\n       ${EP_LOG_OPTIONS})\n \n@@ -952,7 +1049,7 @@ if (ARROW_ORC)\n                       -DZLIB_HOME=${ZLIB_HOME})\n \n   ExternalProject_Add(orc_ep\n-    URL \"https://github.com/apache/orc/archive/${ORC_VERSION}.tar.gz\"\n+    URL ${ORC_SOURCE_URL}\n     BUILD_BYPRODUCTS ${ORC_STATIC_LIB}\n     CMAKE_ARGS ${ORC_CMAKE_ARGS}\n     ${EP_LOG_OPTIONS})\ndiff --git a/cpp/thirdparty/README.md b/cpp/thirdparty/README.md\nnew file mode 100644\nindex 0000000000..f4f89f57bd\n--- /dev/null\n+++ b/cpp/thirdparty/README.md\n@@ -0,0 +1,89 @@\n+<!---\n+  Licensed to the Apache Software Foundation (ASF) under one\n+  or more contributor license agreements.  See the NOTICE file\n+  distributed with this work for additional information\n+  regarding copyright ownership.  The ASF licenses this file\n+  to you under the Apache License, Version 2.0 (the\n+  \"License\"); you may not use this file except in compliance\n+  with the License.  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing,\n+  software distributed under the License is distributed on an\n+  \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+  KIND, either express or implied.  See the License for the\n+  specific language governing permissions and limitations\n+  under the License.\n+-->\n+\n+# Arrow C++ Thirdparty Dependencies\n+\n+The version numbers for our third-party dependencies are listed in\n+`thirdparty/versions.txt`. This is used by the CMake build system as well as\n+the dependency downloader script (see below), which can be used to set up\n+offline builds.\n+\n+## Configuring your own build toolchain\n+\n+To set up your own specific build toolchain, here are the relevant environment\n+variables\n+\n+* Boost: `BOOST_ROOT`\n+* Googletest: `GTEST_HOME` (only required to build the unit tests)\n+* gflags: `GFLAGS_HOME` (only required to build the unit tests)\n+* Google Benchmark: `GBENCHMARK_HOME` (only required if building benchmarks)\n+* Flatbuffers: `FLATBUFFERS_HOME` (only required for -DARROW_IPC=on, which is\n+  the default)\n+* Hadoop: `HADOOP_HOME` (only required for the HDFS I/O extensions)\n+* jemalloc: `JEMALLOC_HOME`\n+* brotli: `BROTLI_HOME`, can be disabled with `-DARROW_WITH_BROTLI=off`\n+* lz4: `LZ4_HOME`, can be disabled with `-DARROW_WITH_LZ4=off`\n+* snappy: `SNAPPY_HOME`, can be disabled with `-DARROW_WITH_SNAPPY=off`\n+* zlib: `ZLIB_HOME`, can be disabled with `-DARROW_WITH_ZLIB=off`\n+* zstd: `ZSTD_HOME`, can be disabled with `-DARROW_WITH_ZSTD=off`\n+\n+If you have all of your toolchain libraries installed at the same prefix, you\n+can use the environment variable `$ARROW_BUILD_TOOLCHAIN` to automatically set\n+all of these variables. Note that `ARROW_BUILD_TOOLCHAIN` will not set\n+`BOOST_ROOT`, so if you have custom Boost installation, you must set this\n+environment variable separately.\n+\n+## Configuring for offline builds\n+\n+If you do not use the above variables to direct the Arrow build system to\n+preinstalled dependencies, they will be built automatically by the build\n+system. The source archive for each dependency will be downloaded via the\n+internet, which can cause issues in environments with limited access to the\n+internet.\n+\n+To enable offline builds, you can download the source artifacts yourself and\n+use environment variables of the form `ARROW_$LIBRARY_URL` to direct the build\n+system to read from a local file rather than accessing the internet.\n+\n+To make this easier for you, we have prepared a script\n+`thirdparty/download_dependencies.sh` which will download the correct version\n+of each dependency to a directory of your choosing. It will print a list of\n+bash-style environment variable statements at the end to use for your build\n+script:\n+\n+```shell\n+$ ./thirdparty/download_dependencies $HOME/arrow-thirdparty-deps\n+# some output omitted\n+\n+# Environment variables for offline Arrow build\n+export ARROW_BOOST_URL=$HOME/arrow-thirdparty-deps/boost.tar.gz\n+export ARROW_GTEST_URL=$HOME/arrow-thirdparty-deps/gtest.tar.gz\n+export ARROW_GFLAGS_URL=$HOME/arrow-thirdparty-deps/gflags.tar.gz\n+export ARROW_GBENCHMARK_URL=$HOME/arrow-thirdparty-deps/gbenchmark.tar.gz\n+export ARROW_FLATBUFFERS_URL=$HOME/arrow-thirdparty-deps/flatbuffers.tar.gz\n+export ARROW_RAPIDJSON_URL=$HOME/arrow-thirdparty-deps/rapidjson.tar.gz\n+export ARROW_SNAPPY_URL=$HOME/arrow-thirdparty-deps/snappy.tar.gz\n+export ARROW_BROTLI_URL=$HOME/arrow-thirdparty-deps/brotli.tar.gz\n+export ARROW_LZ4_URL=$HOME/arrow-thirdparty-deps/lz4.tar.gz\n+export ARROW_ZLIB_URL=$HOME/arrow-thirdparty-deps/zlib.tar.gz\n+export ARROW_ZSTD_URL=$HOME/arrow-thirdparty-deps/zstd.tar.gz\n+export ARROW_PROTOBUF_URL=$HOME/arrow-thirdparty-deps/protobuf.tar.gz\n+export ARROW_GRPC_URL=$HOME/arrow-thirdparty-deps/grpc.tar.gz\n+export ARROW_ORC_URL=$HOME/arrow-thirdparty-deps/orc.tar.gz\n+```\ndiff --git a/cpp/thirdparty/download_dependencies.sh b/cpp/thirdparty/download_dependencies.sh\nnew file mode 100755\nindex 0000000000..2d8bee41aa\n--- /dev/null\n+++ b/cpp/thirdparty/download_dependencies.sh\n@@ -0,0 +1,82 @@\n+#!/usr/bin/env bash\n+\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# This script downloads all the thirdparty dependencies as a series of tarballs\n+# that can be used for offline builds, etc.\n+\n+set -e\n+\n+SOURCE_DIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" && pwd )\"\n+\n+if [ \"$#\" -ne 1 ]; then\n+  echo \"Usage: $0 <destination-directory>\"\n+  exit\n+fi\n+\n+_DST=$1\n+\n+# To change toolchain versions, edit versions.txt\n+source $SOURCE_DIR/versions.txt\n+\n+BOOST_UNDERSCORE_VERSION=`echo $BOOST_VERSION | sed 's/\\./_/g'`\n+wget -c -O $_DST/boost.tar.gz https://dl.bintray.com/boostorg/release/$BOOST_VERSION/source/boost_$BOOST_UNDERSCORE_VERSION.tar.gz\n+\n+wget -c -O $_DST/gtest.tar.gz https://github.com/google/googletest/archive/release-$GTEST_VERSION.tar.gz\n+\n+wget -c -O $_DST/gflags.tar.gz https://github.com/gflags/gflags/archive/v$GFLAGS_VERSION.tar.gz\n+\n+wget -c -O $_DST/gbenchmark.tar.gz https://github.com/google/benchmark/archive/v$GBENCHMARK_VERSION.tar.gz\n+\n+wget -c -O $_DST/flatbuffers.tar.gz https://github.com/google/flatbuffers/archive/v$FLATBUFFERS_VERSION.tar.gz\n+\n+wget -c -O $_DST/rapidjson.tar.gz https://github.com/miloyip/rapidjson/archive/v$RAPIDJSON_VERSION.tar.gz\n+\n+wget -c -O $_DST/snappy.tar.gz https://github.com/google/snappy/releases/download/$SNAPPY_VERSION/snappy-$SNAPPY_VERSION.tar.gz\n+\n+wget -c -O $_DST/brotli.tar.gz https://github.com/google/brotli/archive/$BROTLI_VERSION.tar.gz\n+\n+wget -c -O $_DST/lz4.tar.gz https://github.com/lz4/lz4/archive/v$LZ4_VERSION.tar.gz\n+\n+wget -c -O $_DST/zlib.tar.gz http://zlib.net/fossils/zlib-$ZLIB_VERSION.tar.gz\n+\n+wget -c -O $_DST/zstd.tar.gz https://github.com/facebook/zstd/archive/v$ZSTD_VERSION.tar.gz\n+\n+wget -c -O $_DST/protobuf.tar.gz https://github.com/google/protobuf/releases/download/v$PROTOBUF_VERSION/protobuf-$PROTOBUF_VERSION.tar.gz\n+\n+wget -c -O $_DST/grpc.tar.gz https://github.com/grpc/grpc/archive/v$GRPC_VERSION.tar.gz\n+\n+wget -c -O $_DST/orc.tar.gz https://github.com/apache/orc/archive/rel/release-$ORC_VERSION.tar.gz\n+\n+echo \"\n+# Environment variables for offline Arrow build\n+export ARROW_BOOST_URL=$_DST/boost.tar.gz\n+export ARROW_GTEST_URL=$_DST/gtest.tar.gz\n+export ARROW_GFLAGS_URL=$_DST/gflags.tar.gz\n+export ARROW_GBENCHMARK_URL=$_DST/gbenchmark.tar.gz\n+export ARROW_FLATBUFFERS_URL=$_DST/flatbuffers.tar.gz\n+export ARROW_RAPIDJSON_URL=$_DST/rapidjson.tar.gz\n+export ARROW_SNAPPY_URL=$_DST/snappy.tar.gz\n+export ARROW_BROTLI_URL=$_DST/brotli.tar.gz\n+export ARROW_LZ4_URL=$_DST/lz4.tar.gz\n+export ARROW_ZLIB_URL=$_DST/zlib.tar.gz\n+export ARROW_ZSTD_URL=$_DST/zstd.tar.gz\n+export ARROW_PROTOBUF_URL=$_DST/protobuf.tar.gz\n+export ARROW_GRPC_URL=$_DST/grpc.tar.gz\n+export ARROW_ORC_URL=$_DST/orc.tar.gz\n+\"\ndiff --git a/cpp/thirdparty/versions.txt b/cpp/thirdparty/versions.txt\nnew file mode 100644\nindex 0000000000..554c7196c2\n--- /dev/null\n+++ b/cpp/thirdparty/versions.txt\n@@ -0,0 +1,34 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# Toolchain library versions\n+\n+BOOST_VERSION=1.67.0\n+GTEST_VERSION=1.8.0\n+GFLAGS_VERSION=2.2.0\n+GBENCHMARK_VERSION=1.4.1\n+FLATBUFFERS_VERSION=1.9.0\n+RAPIDJSON_VERSION=1.1.0\n+JEMALLOC_VERSION=17c897976c60b0e6e4f4a365c751027244dada7a\n+SNAPPY_VERSION=1.1.3\n+BROTLI_VERSION=v0.6.0\n+LZ4_VERSION=1.7.5\n+ZLIB_VERSION=1.2.8\n+ZSTD_VERSION=1.2.0\n+PROTOBUF_VERSION=2.6.0\n+GRPC_VERSION=1.12.1\n+ORC_VERSION=1.5.1\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-23T08:13:50.232+0000",
                    "updated": "2018-06-23T08:13:50.232+0000",
                    "started": "2018-06-23T08:13:50.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "115052",
                    "issueId": "13067033"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@100a984e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76fc0599[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f162f75[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@69502dc3[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cd0aef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6cf95dae[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22daaac3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4a0cb56e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@257954b2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@34b799e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74b05786[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b382bbb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6000,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jun 23 08:13:59 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-06-23T08:13:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-902/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-04-26T11:33:23.000+0000",
        "updated": "2018-07-06T20:42:27.000+0000",
        "timeoriginalestimate": null,
        "description": "Could there be a flag or similar to make offline building of the project easier (or maybe that is in place and I don't see it)?  \n\nSomething that perhaps in CMakeLists.txt that has the option for the URL to be a file:// path? \n\nThis would help me in that I could download all relevant tarballs and have the same build happen offline or online.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/attachment/12865382",
                "id": "12865382",
                "filename": "CMakeLists.txt",
                "author": {
                    "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                    "name": "virtualluke",
                    "key": "virtualluke",
                    "avatarUrls": {
                        "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                        "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                        "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                        "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                    },
                    "displayName": "Luke Higgins",
                    "active": true,
                    "timeZone": "Etc/UTC"
                },
                "created": "2017-04-27T14:49:03.099+0000",
                "size": 35488,
                "mimeType": "text/plain",
                "content": "https://issues.apache.org/jira/secure/attachment/12865382/CMakeLists.txt"
            }
        ],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Build C++ project including thirdparty dependencies from local tarballs",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15985320",
                    "id": "15985320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "You can already accomplish this by building an external toolchain and setting the *_HOME environment variables. We could also provide environment variables for setting the local tarball locations. Patch would be welcome for this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-04-26T18:30:25.462+0000",
                    "updated": "2017-04-26T18:30:25.462+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15986755",
                    "id": "15986755",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I have a CMakeLists.txt (attached) that implements this.  How do I do propose this change in the way you want for this project?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-04-27T14:49:49.775+0000",
                    "updated": "2017-04-27T14:49:49.775+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15986822",
                    "id": "15986822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "See https://github.com/apache/arrow#how-to-contribute\n\nI am not sure what's the best way to do this. Environment variables (one per dependency for the URL) might be more flexible. Do you know another open source project that provides for offline builds to get some guidance about best practices? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-04-27T15:29:47.711+0000",
                    "updated": "2017-04-27T15:29:47.711+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15987643",
                    "id": "15987643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I do not know of other projects that have this feature to model on (although I have wanted this feature for a lot of projects!) \n\nI don't have a preference.  If preferred changing to check for an enviroment variable for each third party dependency seems fine to me too.\n\nThis feature would help a lot.  I believe there are quite a few people that are a little stuck from interacting with projects because of being in environments not connected to the internet (directly).\n\nOn a different note, is there a reason the boost dependency is not done like the other third party dependencies?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-04-27T20:51:20.072+0000",
                    "updated": "2017-04-27T20:51:20.072+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15987702",
                    "id": "15987702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Boost is much more complex than the other dependencies, and it's available almost everywhere, so I'm not sure what would be the benefit. \n\n> This feature would help a lot. I believe there are quite a few people that are a little stuck from interacting with projects because of being in environments not connected to the internet (directly).\n\nIt sounds like you are working in an airgapped environment, or behind some other firewall. In this environments, I would recommend building the thirdparty toolchain separately and using the *_HOME variables. I personally do some work in a firewalled environment and have been successfully building these libraries without giving cmake outbound internet access, using a separately-managed toolchain (using conda packages). \n\nOn some contemplation, I'm unsure if we want to support offline builds via ExternalProject due to the extra maintenance burden. I'm interested to hear from other users how they are handling builds in environments without direct internet access. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-04-27T21:21:02.259+0000",
                    "updated": "2017-04-27T21:21:02.259+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15988674",
                    "id": "15988674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Yes, behind a firewall or airgapped is where I am often finding myself and wanting to do things in the latest pydata stack.\n\nI will give the thirdparty toolchain method a whirl.  Having a cmake,make process helps with my ansible deployments so was working towards that independent of shipping around a toolchain environment. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-04-28T11:28:00.106+0000",
                    "updated": "2017-04-28T11:28:00.106+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15988787",
                    "id": "15988787",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "so on the thirdparty toolchain doc, development.rst, I had to do the following for the build:\nexport ARROW_HOME=/[blah blah]/envs/pyarrow-dev/\nexport LD_LIBRARY_PATH=/[blah blah]/envs/pyarrow-dev/lib64/\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-04-28T13:16:20.939+0000",
                    "updated": "2017-04-28T13:16:20.939+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15989525",
                    "id": "15989525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Good point; we have to add {{CMAKE_INSTALL_LIBDIR}} in conda recipes for this reason. I opened https://issues.apache.org/jira/browse/ARROW-912 to fix this in the documentation",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-04-28T22:08:03.246+0000",
                    "updated": "2017-04-28T22:08:03.246+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/15994753",
                    "id": "15994753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I like the whole conda environment build, but how does that help me with offline deployments? I was thinking there was a simple bundle environment kind of functionality in conda environments and that I could then copy the bundle.  It doesn't appear to be anything that straightforward.  I am okay with this feature not being in the master but for now I will be cloning the master at build and making modifications like above to the CMakeLists.txt so I have a pretty smooth ansible build in an offline cluster. My guess is that this won't be an issue as much as subsequent versions are released and key features aren't needed as much in between releases. Thanks for all the hard work!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=virtualluke",
                        "name": "virtualluke",
                        "key": "virtualluke",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Luke Higgins",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-05-03T12:20:17.625+0000",
                    "updated": "2017-05-03T12:20:17.625+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/16497124",
                    "id": "16497124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I've been having to build the project on airplanes a lot this year and there are some problematic thirdparty projects, like ORC, which have larger tarballs that take a long time to download over plane wifi. I'm adding this to 0.10.0 and I will look into allowing the user to configure the build to work in an environment with no internet assuming you have saved all the thirdparty package source tarballs in some particular location (which can be set using environment variables)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-05-31T20:27:47.833+0000",
                    "updated": "2018-05-31T20:27:47.833+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13067033/comment/16521002",
                    "id": "16521002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2141\n[https://github.com/apache/arrow/pull/2141]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-23T08:13:59.541+0000",
                    "updated": "2018-06-23T08:13:59.541+0000"
                }
            ],
            "maxResults": 11,
            "total": 11,
            "startAt": 0
        },
        "customfield_12311820": "0|i3e4lr:",
        "customfield_12314139": null
    }
}