{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13337499",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499",
    "key": "ARROW-10406",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10406/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/543682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348\n\n\n   This is governed by a new option in IpcWriteOptions.\r\n   Unification is supported only for certain value types.\r\n   For unsupported types, it will always fail even when the dictionaries are equal.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-28T14:50:00.924+0000",
                    "updated": "2021-01-28T14:50:00.924+0000",
                    "started": "2021-01-28T14:50:00.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "543682",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/543689",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-769155298\n\n\n   https://issues.apache.org/jira/browse/ARROW-10406\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-28T15:16:53.602+0000",
                    "updated": "2021-01-28T15:16:53.602+0000",
                    "started": "2021-01-28T15:16:53.602+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "543689",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/545588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#discussion_r567970139\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/writer.h\n##########\n@@ -96,9 +96,9 @@ class ARROW_EXPORT RecordBatchWriter {\n \n   /// \\brief Write Table with a particular chunksize\n   /// \\param[in] table table to write\n-  /// \\param[in] max_chunksize maximum chunk size for table chunks\n+  /// \\param[in] max_chunksize maximum length of table chunks (-1 means unbounded)\n\nReview comment:\n       ```suggestion\r\n     /// \\param[in] max_chunksize maximum length of table chunks. To indicate that no\r\n     /// maximum should be enforced, pass -1.\r\n   ```\n\n##########\nFile path: cpp/src/arrow/ipc/options.h\n##########\n@@ -84,6 +84,24 @@ struct ARROW_EXPORT IpcWriteOptions {\n   /// then a delta is never emitted, for compatibility with the read path.\n   bool emit_dictionary_deltas = false;\n \n+  /// \\brief Whether to unify dictionaries for the IPC file format\n+  ///\n+  /// The IPC file format doesn't support dictionary replacements and deltas.\n\nReview comment:\n       ```suggestion\r\n     /// The IPC file format doesn't support dictionary replacements or deltas.\r\n   ```\n\n##########\nFile path: cpp/src/arrow/ipc/options.h\n##########\n@@ -84,6 +84,24 @@ struct ARROW_EXPORT IpcWriteOptions {\n   /// then a delta is never emitted, for compatibility with the read path.\n   bool emit_dictionary_deltas = false;\n \n+  /// \\brief Whether to unify dictionaries for the IPC file format\n+  ///\n+  /// The IPC file format doesn't support dictionary replacements and deltas.\n+  /// Therefore, each field with a dictionary type must have the same dictionary\n+  /// values for every record batch.\n+  ///\n+  /// If this option is true, RecordBatchWriter::WriteTable will attempt\n+  /// to unify dictionaries accross each table column.  If this option is\n\nReview comment:\n       ```suggestion\r\n     /// to unify dictionaries across each table column.  If this option is\r\n   ```\n\n##########\nFile path: cpp/src/arrow/array/concatenate.cc\n##########\n@@ -191,6 +191,7 @@ struct DictionaryConcatenate {\n       auto size = buffer->size() / sizeof(CType);\n       auto old_indices = reinterpret_cast<const CType*>(buffer->data());\n       auto indices_map = reinterpret_cast<const int32_t*>(index_lookup_[i]->data());\n+      // XXX use non-template TransposeInts?\n\nReview comment:\n       SGTM, please do\n\n##########\nFile path: cpp/src/arrow/array/array_dict.cc\n##########\n@@ -251,120 +333,111 @@ struct MakeUnifier {\n   }\n };\n \n-Result<std::unique_ptr<DictionaryUnifier>> DictionaryUnifier::Make(\n-    std::shared_ptr<DataType> value_type, MemoryPool* pool) {\n-  MakeUnifier maker(pool, value_type);\n-  RETURN_NOT_OK(VisitTypeInline(*value_type, &maker));\n-  return std::move(maker.result);\n-}\n-\n-// ----------------------------------------------------------------------\n-// DictionaryArray transposition\n+struct RecursiveUnifier {\n+  MemoryPool* pool;\n \n-namespace {\n+  // Return true if any of the arrays was changed (including descendents)\n+  Result<bool> Unify(std::shared_ptr<DataType> type, ArrayDataVector* arrays) {\n+    DCHECK(!arrays->empty());\n+    bool changed = false;\n+    std::shared_ptr<DataType> ext_type = nullptr;\n \n-inline bool IsTrivialTransposition(const int32_t* transpose_map,\n-                                   int64_t input_dict_size) {\n-  for (int64_t i = 0; i < input_dict_size; ++i) {\n-    if (transpose_map[i] != i) {\n-      return false;\n+    if (type->id() == Type::EXTENSION) {\n+      ext_type = std::move(type);\n+      type = checked_cast<const ExtensionType&>(*ext_type).storage_type();\n     }\n-  }\n-  return true;\n-}\n \n-template <typename InType, typename OutType>\n-void TransposeDictIndices(const ArrayData& in_data, const int32_t* transpose_map,\n-                          ArrayData* out_data) {\n-  using in_c_type = typename InType::c_type;\n-  using out_c_type = typename OutType::c_type;\n-  internal::TransposeInts(in_data.GetValues<in_c_type>(1),\n-                          out_data->GetMutableValues<out_c_type>(1), in_data.length,\n-                          transpose_map);\n-}\n+    // Unify all child dictionaries (if any)\n+    if (type->num_fields() > 0) {\n+      ArrayDataVector children(arrays->size());\n+      for (int i = 0; i < type->num_fields(); ++i) {\n+        std::transform(arrays->begin(), arrays->end(), children.begin(),\n+                       [i](const std::shared_ptr<ArrayData>& array) {\n+                         return array->child_data[i];\n+                       });\n+        ARROW_ASSIGN_OR_RAISE(bool child_changed,\n+                              Unify(type->field(i)->type(), &children));\n+        if (child_changed) {\n+          // Only do this when unification actually occurred\n+          for (size_t j = 0; j < arrays->size(); ++j) {\n+            (*arrays)[j]->child_data[i] = std::move(children[j]);\n+          }\n+          changed = true;\n+        }\n+      }\n+    }\n \n-}  // namespace\n+    // Unify this dictionary\n+    if (type->id() == Type::DICTIONARY) {\n+      const auto& dict_type = checked_cast<const DictionaryType&>(*type);\n+      // XXX Ideally, we should unify dictionaries nested in value_type first,\n+      // but DictionaryUnifier doesn't supported nested dictionaries anyway,\n+      // so this will fail.\n+      ARROW_ASSIGN_OR_RAISE(auto unifier,\n+                            DictionaryUnifier::Make(dict_type.value_type(), this->pool));\n+      // Unify all dictionary array chunks\n+      BufferVector transpose_maps(arrays->size());\n+      for (size_t j = 0; j < arrays->size(); ++j) {\n+        DCHECK_NE((*arrays)[j]->dictionary, nullptr);\n+        // XXX should be able to pass ArrayData directly?\n\nReview comment:\n       I don't think it's worth it; DictionaryUnifierImpl unboxes the array so that it can use GetView, so a `Unify(ArrayData)` overload wouldn't be able to skip `MakeArray`. At some point, it might be useful to extract GetView so that (if DataType is known) it can be applied to ArrayData without constructing a temporary instance of an Array subclass\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_test.cc\n##########\n@@ -62,8 +63,6 @@ using internal::FieldPosition;\n \n namespace test {\n \n-using BatchVector = std::vector<std::shared_ptr<RecordBatch>>;\n\nReview comment:\n       thank you\n\n##########\nFile path: cpp/src/arrow/ipc/options.h\n##########\n@@ -84,6 +84,24 @@ struct ARROW_EXPORT IpcWriteOptions {\n   /// then a delta is never emitted, for compatibility with the read path.\n   bool emit_dictionary_deltas = false;\n \n+  /// \\brief Whether to unify dictionaries for the IPC file format\n+  ///\n+  /// The IPC file format doesn't support dictionary replacements and deltas.\n+  /// Therefore, each field with a dictionary type must have the same dictionary\n+  /// values for every record batch.\n+  ///\n+  /// If this option is true, RecordBatchWriter::WriteTable will attempt\n+  /// to unify dictionaries accross each table column.  If this option is\n+  /// false, unequal dictionaries accross a table column will simply raise\n\nReview comment:\n       ```suggestion\r\n     /// false, unequal dictionaries across a table column will simply raise\r\n   ```\n\n##########\nFile path: cpp/src/arrow/ipc/writer.cc\n##########\n@@ -1001,6 +1001,17 @@ class ARROW_EXPORT IpcFormatWriter : public RecordBatchWriter {\n     return Status::OK();\n   }\n \n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n+    std::shared_ptr<Table> owned_table;\n+    const Table* table_ptr = &table;\n+    if (is_file_format_ && options_.unify_dictionaries) {\n+      ARROW_ASSIGN_OR_RAISE(owned_table,\n+                            DictionaryUnifier::UnifyTable(table, options_.memory_pool));\n+      table_ptr = owned_table.get();\n+    }\n+    return RecordBatchWriter::WriteTable(*table_ptr, max_chunksize);\n\nReview comment:\n       Nit: this is a little unclear\r\n   ```suggestion\r\n       if (is_file_format_ && options_.unify_dictionaries) {\r\n         ARROW_ASSIGN_OR_RAISE(auto unified_table,\r\n                                    DictionaryUnifier::UnifyTable(table, options_.memory_pool));\r\n         return RecordBatchWriter::WriteTable(*unified_table, max_chunksize);\r\n       }\r\n       return RecordBatchWriter::WriteTable(table, max_chunksize);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/ipc/options.h\n##########\n@@ -84,6 +84,24 @@ struct ARROW_EXPORT IpcWriteOptions {\n   /// then a delta is never emitted, for compatibility with the read path.\n   bool emit_dictionary_deltas = false;\n \n+  /// \\brief Whether to unify dictionaries for the IPC file format\n+  ///\n+  /// The IPC file format doesn't support dictionary replacements and deltas.\n+  /// Therefore, each field with a dictionary type must have the same dictionary\n+  /// values for every record batch.\n+  ///\n+  /// If this option is true, RecordBatchWriter::WriteTable will attempt\n+  /// to unify dictionaries accross each table column.  If this option is\n+  /// false, unequal dictionaries accross a table column will simply raise\n+  /// an error.\n+  ///\n+  /// Note that enabling this option has a runtime cost; also, not all types\n\nReview comment:\n       ```suggestion\r\n     /// Note that enabling this option has a runtime cost. Also, not all types\r\n   ```\n\n##########\nFile path: cpp/src/arrow/array/array_dict.cc\n##########\n@@ -251,120 +333,111 @@ struct MakeUnifier {\n   }\n };\n \n-Result<std::unique_ptr<DictionaryUnifier>> DictionaryUnifier::Make(\n-    std::shared_ptr<DataType> value_type, MemoryPool* pool) {\n-  MakeUnifier maker(pool, value_type);\n-  RETURN_NOT_OK(VisitTypeInline(*value_type, &maker));\n-  return std::move(maker.result);\n-}\n-\n-// ----------------------------------------------------------------------\n-// DictionaryArray transposition\n+struct RecursiveUnifier {\n+  MemoryPool* pool;\n \n-namespace {\n+  // Return true if any of the arrays was changed (including descendents)\n+  Result<bool> Unify(std::shared_ptr<DataType> type, ArrayDataVector* arrays) {\n+    DCHECK(!arrays->empty());\n+    bool changed = false;\n+    std::shared_ptr<DataType> ext_type = nullptr;\n \n-inline bool IsTrivialTransposition(const int32_t* transpose_map,\n-                                   int64_t input_dict_size) {\n-  for (int64_t i = 0; i < input_dict_size; ++i) {\n-    if (transpose_map[i] != i) {\n-      return false;\n+    if (type->id() == Type::EXTENSION) {\n+      ext_type = std::move(type);\n+      type = checked_cast<const ExtensionType&>(*ext_type).storage_type();\n     }\n-  }\n-  return true;\n-}\n \n-template <typename InType, typename OutType>\n-void TransposeDictIndices(const ArrayData& in_data, const int32_t* transpose_map,\n-                          ArrayData* out_data) {\n-  using in_c_type = typename InType::c_type;\n-  using out_c_type = typename OutType::c_type;\n-  internal::TransposeInts(in_data.GetValues<in_c_type>(1),\n-                          out_data->GetMutableValues<out_c_type>(1), in_data.length,\n-                          transpose_map);\n-}\n+    // Unify all child dictionaries (if any)\n+    if (type->num_fields() > 0) {\n+      ArrayDataVector children(arrays->size());\n+      for (int i = 0; i < type->num_fields(); ++i) {\n+        std::transform(arrays->begin(), arrays->end(), children.begin(),\n+                       [i](const std::shared_ptr<ArrayData>& array) {\n+                         return array->child_data[i];\n+                       });\n+        ARROW_ASSIGN_OR_RAISE(bool child_changed,\n+                              Unify(type->field(i)->type(), &children));\n+        if (child_changed) {\n+          // Only do this when unification actually occurred\n+          for (size_t j = 0; j < arrays->size(); ++j) {\n+            (*arrays)[j]->child_data[i] = std::move(children[j]);\n+          }\n+          changed = true;\n+        }\n+      }\n+    }\n \n-}  // namespace\n+    // Unify this dictionary\n+    if (type->id() == Type::DICTIONARY) {\n+      const auto& dict_type = checked_cast<const DictionaryType&>(*type);\n+      // XXX Ideally, we should unify dictionaries nested in value_type first,\n+      // but DictionaryUnifier doesn't supported nested dictionaries anyway,\n+      // so this will fail.\n+      ARROW_ASSIGN_OR_RAISE(auto unifier,\n+                            DictionaryUnifier::Make(dict_type.value_type(), this->pool));\n+      // Unify all dictionary array chunks\n+      BufferVector transpose_maps(arrays->size());\n+      for (size_t j = 0; j < arrays->size(); ++j) {\n+        DCHECK_NE((*arrays)[j]->dictionary, nullptr);\n+        // XXX should be able to pass ArrayData directly?\n+        RETURN_NOT_OK(\n+            unifier->Unify(*MakeArray((*arrays)[j]->dictionary), &transpose_maps[j]));\n+      }\n+      std::shared_ptr<Array> dictionary;\n+      RETURN_NOT_OK(unifier->GetResultWithIndexType(dict_type.index_type(), &dictionary));\n+      for (size_t j = 0; j < arrays->size(); ++j) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            (*arrays)[j],\n+            TransposeDictIndices(\n+                (*arrays)[j], type, type, dictionary->data(),\n+                reinterpret_cast<const int32_t*>(transpose_maps[j]->data()), this->pool));\n+        if (ext_type) {\n+          (*arrays)[j]->type = ext_type;\n+        }\n+      }\n+      changed = true;\n\nReview comment:\n       All the transpose_maps could be trivial (for example, chunks already have identical dictionaries), in which case no change would be necessary. Maybe this isn't a worthwhile fast path to make explicit here since TransposeDictIndices already no-ops trivial transpositions.\r\n   \r\n   It seems a more efficient place to catch trivial transpositions would be in DictionaryUnifierImpl::Unify; if that could produce a null transpose buffer to indicate that no transposition was necessary then we could avoid the call to TransposeDictIndices altogether and with it the sweep over indices with `IsTrivialTransposition()`\n\n##########\nFile path: cpp/src/arrow/ipc/options.h\n##########\n@@ -84,6 +84,24 @@ struct ARROW_EXPORT IpcWriteOptions {\n   /// then a delta is never emitted, for compatibility with the read path.\n   bool emit_dictionary_deltas = false;\n \n+  /// \\brief Whether to unify dictionaries for the IPC file format\n+  ///\n+  /// The IPC file format doesn't support dictionary replacements and deltas.\n+  /// Therefore, each field with a dictionary type must have the same dictionary\n+  /// values for every record batch.\n\nReview comment:\n       ```suggestion\r\n     /// Therefore, chunks of a column with a dictionary type must have the same\r\n     /// dictionary in each record batch.\r\n   ```\n\n##########\nFile path: cpp/src/arrow/array/array_dict.cc\n##########\n@@ -251,120 +333,111 @@ struct MakeUnifier {\n   }\n };\n \n-Result<std::unique_ptr<DictionaryUnifier>> DictionaryUnifier::Make(\n-    std::shared_ptr<DataType> value_type, MemoryPool* pool) {\n-  MakeUnifier maker(pool, value_type);\n-  RETURN_NOT_OK(VisitTypeInline(*value_type, &maker));\n-  return std::move(maker.result);\n-}\n-\n-// ----------------------------------------------------------------------\n-// DictionaryArray transposition\n+struct RecursiveUnifier {\n+  MemoryPool* pool;\n \n-namespace {\n+  // Return true if any of the arrays was changed (including descendents)\n+  Result<bool> Unify(std::shared_ptr<DataType> type, ArrayDataVector* arrays) {\n\nReview comment:\n       Nit:\r\n   ```suggestion\r\n     Result<bool> Unify(std::shared_ptr<DataType> type, ArrayDataVector* chunks) {\r\n   ```\r\n   (to make it clear that these are chunks of a column)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-01T21:07:47.896+0000",
                    "updated": "2021-02-01T21:07:47.896+0000",
                    "started": "2021-02-01T21:07:47.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "545588",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#discussion_r568659268\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/writer.cc\n##########\n@@ -1001,6 +1001,17 @@ class ARROW_EXPORT IpcFormatWriter : public RecordBatchWriter {\n     return Status::OK();\n   }\n \n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n+    std::shared_ptr<Table> owned_table;\n+    const Table* table_ptr = &table;\n+    if (is_file_format_ && options_.unify_dictionaries) {\n+      ARROW_ASSIGN_OR_RAISE(owned_table,\n+                            DictionaryUnifier::UnifyTable(table, options_.memory_pool));\n+      table_ptr = owned_table.get();\n+    }\n+    return RecordBatchWriter::WriteTable(*table_ptr, max_chunksize);\n\nReview comment:\n       Thanks for the suggestion, it's better indeed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T14:47:05.745+0000",
                    "updated": "2021-02-02T14:47:05.745+0000",
                    "started": "2021-02-02T14:47:05.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546058",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546073",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-771710489\n\n\n   > Would it be worthwhile to expose table unification to python/R? \r\n   \r\n   I can do it in Python.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T15:21:37.056+0000",
                    "updated": "2021-02-02T15:21:37.056+0000",
                    "started": "2021-02-02T15:21:37.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546073",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546248",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#discussion_r568886328\n\n\n\n##########\nFile path: cpp/src/arrow/array/concatenate.cc\n##########\n@@ -330,9 +318,8 @@ class ConcatenateImpl {\n       return ConcatenateBuffers(index_buffers, pool_).Value(&out_->buffers[1]);\n     } else {\n       ARROW_ASSIGN_OR_RAISE(auto index_lookup, UnifyDictionaries(d));\n-      DictionaryConcatenate concatenate(index_buffers, index_lookup, pool_);\n-      RETURN_NOT_OK(VisitTypeInline(*d.index_type(), &concatenate));\n-      out_->buffers[1] = std::move(concatenate.out_);\n+      ARROW_ASSIGN_OR_RAISE(out_->buffers[1],\n+                            ConcatenateDictionaryIndices(*fixed, index_lookup, pool_));\n\nReview comment:\n       ```suggestion\r\n                               ConcatenateDictionaryIndices(*fixed, index_lookup));\r\n   ```\r\n   No need to pass a member here\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-02T20:00:37.371+0000",
                    "updated": "2021-02-02T20:00:37.371+0000",
                    "started": "2021-02-02T20:00:37.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546248",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#discussion_r568659268\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/writer.cc\n##########\n@@ -1001,6 +1001,17 @@ class ARROW_EXPORT IpcFormatWriter : public RecordBatchWriter {\n     return Status::OK();\n   }\n \n+  Status WriteTable(const Table& table, int64_t max_chunksize) override {\n+    std::shared_ptr<Table> owned_table;\n+    const Table* table_ptr = &table;\n+    if (is_file_format_ && options_.unify_dictionaries) {\n+      ARROW_ASSIGN_OR_RAISE(owned_table,\n+                            DictionaryUnifier::UnifyTable(table, options_.memory_pool));\n+      table_ptr = owned_table.get();\n+    }\n+    return RecordBatchWriter::WriteTable(*table_ptr, max_chunksize);\n\nReview comment:\n       Thanks for the suggestion, it's better indeed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T01:14:16.546+0000",
                    "updated": "2021-02-03T01:14:16.546+0000",
                    "started": "2021-02-03T01:14:16.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546529",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-771710489\n\n\n   > Would it be worthwhile to expose table unification to python/R? \r\n   \r\n   I can do it in Python.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T01:23:45.623+0000",
                    "updated": "2021-02-03T01:23:45.623+0000",
                    "started": "2021-02-03T01:23:45.623+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546627",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#discussion_r568886328\n\n\n\n##########\nFile path: cpp/src/arrow/array/concatenate.cc\n##########\n@@ -330,9 +318,8 @@ class ConcatenateImpl {\n       return ConcatenateBuffers(index_buffers, pool_).Value(&out_->buffers[1]);\n     } else {\n       ARROW_ASSIGN_OR_RAISE(auto index_lookup, UnifyDictionaries(d));\n-      DictionaryConcatenate concatenate(index_buffers, index_lookup, pool_);\n-      RETURN_NOT_OK(VisitTypeInline(*d.index_type(), &concatenate));\n-      out_->buffers[1] = std::move(concatenate.out_);\n+      ARROW_ASSIGN_OR_RAISE(out_->buffers[1],\n+                            ConcatenateDictionaryIndices(*fixed, index_lookup, pool_));\n\nReview comment:\n       ```suggestion\r\n                               ConcatenateDictionaryIndices(*fixed, index_lookup));\r\n   ```\r\n   No need to pass a member here\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T01:32:04.932+0000",
                    "updated": "2021-02-03T01:32:04.932+0000",
                    "started": "2021-02-03T01:32:04.931+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546721",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546819",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-772172795\n\n\n   I'm not sure this fully solves the issue. `ipc::feather::WriteTable` (what `write_feather()` calls) doesn't take `IpcWriteOptions`: https://github.com/apache/arrow/blob/master/cpp/src/arrow/ipc/feather.cc#L792-L807\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T02:35:37.218+0000",
                    "updated": "2021-02-03T02:35:37.218+0000",
                    "started": "2021-02-03T02:35:37.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546819",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/546998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-772495798\n\n\n   Hmm, I'm not sure how to evolve the Feather APIs. They take their own options (\"properties\"). @wesm What do you think?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-03T13:11:08.569+0000",
                    "updated": "2021-02-03T13:11:08.569+0000",
                    "started": "2021-02-03T13:11:08.569+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "546998",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/547353",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-772915362\n\n\n   Can we just have `unify_dictionaries` always enabled when writing Feather files?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T00:07:19.746+0000",
                    "updated": "2021-02-04T00:07:19.746+0000",
                    "started": "2021-02-04T00:07:19.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547353",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/547579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-773228845\n\n\n   > Can we just have `unify_dictionaries` always enabled when writing Feather files?\r\n   \r\n   That sounds reasonable to me.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T11:12:00.538+0000",
                    "updated": "2021-02-04T11:12:00.538+0000",
                    "started": "2021-02-04T11:12:00.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547579",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/547627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-773292733\n\n\n   While we're at it, should we also enable `allow_64bit` in Feather? AFAIK, Feather is only supported in C++ and associated languages (Python, R...).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-04T13:10:44.514+0000",
                    "updated": "2021-02-04T13:10:44.514+0000",
                    "started": "2021-02-04T13:10:44.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "547627",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/548145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-773228845\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-05T09:49:36.616+0000",
                    "updated": "2021-02-05T09:49:36.616+0000",
                    "started": "2021-02-05T09:49:36.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "548145",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/549584",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348#issuecomment-775150055\n\n\n   @bkietz Do you want to give this a second look since the Feather changes?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-08T13:28:31.920+0000",
                    "updated": "2021-02-08T13:28:31.920+0000",
                    "started": "2021-02-08T13:28:31.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "549584",
                    "issueId": "13337499"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/worklog/550350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #9348:\nURL: https://github.com/apache/arrow/pull/9348\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-09T17:50:53.127+0000",
                    "updated": "2021-02-09T17:50:53.127+0000",
                    "started": "2021-02-09T17:50:53.126+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "550350",
                    "issueId": "13337499"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@418f9f54[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@406214a1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f819cb3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5f9656fe[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22931038[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5ea21123[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5d456a40[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3089e6b0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a213249[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@44c41127[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32a57495[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4de6b817[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 09 17:50:51 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-09T17:50:51.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10406/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2020-10-27T19:10:07.000+0000",
        "updated": "2021-02-09T17:50:54.000+0000",
        "timeoriginalestimate": null,
        "description": "I read a big (taxi) csv file and specified that I wanted to dictionary-encode some columns. The resulting Table has ChunkedArrays with 1604 chunks. When I go to write this Table to the IPC file format (write_feather), I get an error: \r\n\r\n{code}\r\n  Invalid: Dictionary replacement detected when writing IPC file format. Arrow IPC files only support a single dictionary for a given field accross all batches.\r\n{code}\r\n\r\nI can write this to Parquet and read it back in, and the roundtrip of the data is correct. We should be able to do this in IPC too.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Unify dictionaries when writing IPC file in a single shot",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17221676",
                    "id": "17221676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~wesm]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-10-27T19:12:07.963+0000",
                    "updated": "2020-10-27T19:12:07.963+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17221742",
                    "id": "17221742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I thought that we could support deltas, or is that not yet an option? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-10-27T20:49:38.260+0000",
                    "updated": "2020-10-27T20:49:38.260+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17221744",
                    "id": "17221744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Just reporting the error I hit. Haven't tried to reduce it to a minimal reproducible example yet.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-10-27T20:54:26.529+0000",
                    "updated": "2020-10-27T20:54:26.529+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17221748",
                    "id": "17221748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "The file format spec allows deltas, I just don't think we implement them.\r\n\r\n[~npr]: no need for an example, this is a format implementation question.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-10-27T20:56:47.731+0000",
                    "updated": "2020-10-27T20:56:47.731+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259128",
                    "id": "17259128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "I think this was done in ARROW-6883 (including unit tests). [~npr] Can you confirm this is ok for you?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-05T18:43:10.824+0000",
                    "updated": "2021-01-05T18:43:17.930+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259145",
                    "id": "17259145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Shame on the reporter for not providing steps to reproduce. \r\n\r\nI still see the error message in the code, so I don't think this is resolved: https://github.com/apache/arrow/blob/master/cpp/src/arrow/ipc/writer.cc#L1055-L1060",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-05T19:09:13.079+0000",
                    "updated": "2021-01-05T19:09:13.079+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259213",
                    "id": "17259213",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Ah! I thought you were talking about \"IPC files\" in the general case (i.e. IPC streams saved in a file) :-)\r\nWell, the problem is, the IPC file format doesn't support dictionary replacement because it's meant to be readable in random order.\r\nI'm not sure there's an incentive to change it. [~wesm]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-05T21:21:55.613+0000",
                    "updated": "2021-01-05T21:21:55.613+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259222",
                    "id": "17259222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The problem here was that, due to the way the chunked CSV reading handles dictionary encoding, I couldn't read a CSV and write it to Feather/Parquet, which seems like a critical failing.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-05T21:33:04.266+0000",
                    "updated": "2021-01-05T21:33:04.266+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259231",
                    "id": "17259231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I'm not sure I agree with the reclassification of this as a Format issue, though I guess that's one way to solve it. I contend that, if the format doesn't support this, then the C++ CSV reader has a bug/misfeature because it shouldn't read data that we can't write.\r\n\r\nHere's a trivial way to reproduce it from R, using a tiny CSV and setting a small block size in the read options:\r\n\r\n{code}\r\n> library(arrow)\r\n> df <- data.frame(chr=c(rep(\"a\", 3), rep(\"b\", 3)), int=1:6)\r\n> write.csv(df, \"test.csv\", row.names=FALSE)\r\n> system(\"cat test.csv\")\r\n\"chr\",\"int\"\r\n\"a\",1\r\n\"a\",2\r\n\"a\",3\r\n\"b\",4\r\n\"b\",5\r\n\"b\",6\r\n> tab <- read_csv_arrow(\"test.csv\", read_options=CsvReadOptions$create(block_size=16L), as_data_frame=FALSE, schema=schema(chr=dictionary(), int=int32()))\r\n> tab\r\nTable\r\n6 rows x 2 columns\r\n$chr <dictionary<values=string, indices=int32>>\r\n$int <int32>\r\n> tab$chr\r\nChunkedArray\r\n[\r\n\r\n  -- dictionary:\r\n    []\r\n  -- indices:\r\n    [],\r\n\r\n  -- dictionary:\r\n    [\r\n      \"a\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      0,\r\n      0\r\n    ],\r\n\r\n  -- dictionary:\r\n    [\r\n      \"b\"\r\n    ]\r\n  -- indices:\r\n    [\r\n      0,\r\n      0,\r\n      0\r\n    ]\r\n]\r\n> write_feather(tab, tempfile())\r\nError: Invalid: Dictionary replacement detected when writing IPC file format. Arrow IPC files only support a single dictionary for a given field across all batches.\r\nIn /Users/enpiar/Documents/ursa/arrow/cpp/src/arrow/ipc/writer.cc, line 983, code: WriteDictionaries(batch)\r\nIn /Users/enpiar/Documents/ursa/arrow/cpp/src/arrow/ipc/writer.cc, line 939, code: WriteRecordBatch(*batch)\r\nIn /Users/enpiar/Documents/ursa/arrow/cpp/src/arrow/ipc/feather.cc, line 804, code: writer->WriteTable(table, properties.chunksize)\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-05T21:50:10.468+0000",
                    "updated": "2021-01-05T21:50:41.919+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259261",
                    "id": "17259261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Hmm, what does this have to do with the CSV reader? You can perfectly well write that data to an IPC stream (even as an on-disk file in the more general meaning) or to a Parquet file. You just can't write it to an IPC file (as in \"IPC file format\").\r\n\r\nIMO, it's an issue with how dictionary mapping has been defined in the IPC protocol. If each dictionary batch had its own unique id (instead of putting dictionary ids in the schema), it would probably be easy.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-05T22:35:58.491+0000",
                    "updated": "2021-01-05T22:40:13.356+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259269",
                    "id": "17259269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "As a user, it's appears to be a bug that the library generates data that can't be saved to its own file format. If it's valid data everywhere else, then sure, it's not a problem in the CSV reader, but the IPC file writer should be able to write it, even if that means it has to combine/recode the dictionaries to be valid.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-05T22:45:52.709+0000",
                    "updated": "2021-01-05T22:45:52.709+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259271",
                    "id": "17259271",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Ah, unifying the dictionaries would be doable... at least if you write the whole table at once (which I suppose is a common case, especially from R or Python). It would also waste some space and CPU time, however.\r\n\r\n[~wesm] Can you give an opinion on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-01-05T22:51:45.705+0000",
                    "updated": "2021-01-05T22:51:45.705+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17259609",
                    "id": "17259609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "I agree with [~npr] that this is a typical use case that should work out of the box. If the IPC file format does not support different dictionaries, I would expect that we unify the dictionaries before writing. \r\n\r\n(that's also what we eg do on conversion to pandas in {{to_pandas()}}, and probably in R as well when converting to a DataFrame with factors?)\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-01-06T11:05:34.015+0000",
                    "updated": "2021-01-06T11:05:34.015+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17261574",
                    "id": "17261574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think it's reasonable for it to fail when writing the file format in a streaming fashion, but when we have the entire table up front, it seems reasonable (though certainly tedious...) to scan the dictionaries in each chunk and if there are any differences, to do a unification. I reckon there would be some refactoring necessary, but if it is not too gory this seems like it would be worth doing in the coming months. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-08T20:35:37.976+0000",
                    "updated": "2021-01-08T20:35:37.976+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13337499/comment/17281921",
                    "id": "17281921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9348\n[https://github.com/apache/arrow/pull/9348]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-09T17:50:51.812+0000",
                    "updated": "2021-02-09T17:50:51.812+0000"
                }
            ],
            "maxResults": 15,
            "total": 15,
            "startAt": 0
        },
        "customfield_12311820": "0|z0k1zs:",
        "customfield_12314139": null
    }
}