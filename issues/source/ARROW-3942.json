{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13202521",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521",
    "key": "ARROW-3942",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3942/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/172375",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-444556121\n \n \n   I had suggested having an `as_tibble = TRUE` (or `as_arrow = FALSE`) argument in `read_feather` to preserve the default behavior of `feather::read_feather`. Thoughts?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T16:47:02.046+0000",
                    "updated": "2018-12-05T16:47:02.046+0000",
                    "started": "2018-12-05T16:47:02.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172375",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/172383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-444557829\n \n \n   Then I suppose it would also need use_threads. This only apply to the conversion right ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T16:51:35.031+0000",
                    "updated": "2018-12-05T16:51:35.031+0000",
                    "started": "2018-12-05T16:51:35.030+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172383",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/172393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-444563690\n \n \n   Reading to an Arrow table is zero-copy when the input is a memory map -- the use_threads is only for parallelizing conversions to pandas. Have you looked at parallelizing the equivalent conversions in R? https://issues.apache.org/jira/browse/ARROW-3315 (there is a companion issue for parallelizing the other direction)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T17:07:07.454+0000",
                    "updated": "2018-12-05T17:07:07.454+0000",
                    "started": "2018-12-05T17:07:07.453+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172393",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/172399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-444568761\n \n \n   Not yet. at the moment focusing on the vignette and fixing things independent pr as needed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-05T17:21:28.675+0000",
                    "updated": "2018-12-05T17:21:28.675+0000",
                    "started": "2018-12-05T17:21:28.675+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "172399",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/173334",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-445572516\n \n \n   Build fails due to\r\n   \r\n   ```\r\n   0.78schecking Rd cross-references ... WARNING\r\n   Missing link or links in documentation object 'read_feather.Rd':\r\n     \u2018feather_table_reader\u2019\r\n   See section 'Cross-references' in the 'Writing R Extensions' manual.\r\n   checking installed package size ... NOTE\r\n     installed size is 11.9Mb\r\n     sub-directories of 1Mb or more:\r\n       libs  10.0Mb\r\n       R      1.7Mbchecking S3 generic/method consistency ... NOTE\r\n   Found the following apparent S3 methods exported but not registered:\r\n     print.integer64 str.integer64\r\n   See section \u2018Registering S3 methods\u2019 in the \u2018Writing R Extensions\u2019\r\n   manual.\r\n   ```\r\n   \r\n   merge after fixing this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-09T21:17:29.797+0000",
                    "updated": "2018-12-09T21:17:29.797+0000",
                    "started": "2018-12-09T21:17:29.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173334",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/173664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106#issuecomment-445864284\n \n \n   Thank you. merging\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T15:51:30.147+0000",
                    "updated": "2018-12-10T15:51:30.147+0000",
                    "started": "2018-12-10T15:51:30.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173664",
                    "issueId": "13202521"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/worklog/173666",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3106: ARROW-3942: [R] Feather api fixes\nURL: https://github.com/apache/arrow/pull/3106\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/r/NAMESPACE b/r/NAMESPACE\nindex cc5961e5ba..65d60d846f 100644\n--- a/r/NAMESPACE\n+++ b/r/NAMESPACE\n@@ -8,6 +8,12 @@ S3method(\"==\",\"arrow::RecordBatch\")\n S3method(\"==\",\"arrow::ipc::Message\")\n S3method(BufferReader,\"arrow::Buffer\")\n S3method(BufferReader,default)\n+S3method(FeatherTableReader,\"arrow::io::RandomAccessFile\")\n+S3method(FeatherTableReader,\"arrow::ipc::feather::TableReader\")\n+S3method(FeatherTableReader,character)\n+S3method(FeatherTableReader,default)\n+S3method(FeatherTableReader,fs_path)\n+S3method(FeatherTableWriter,\"arrow::io::OutputStream\")\n S3method(FixedSizeBufferWriter,\"arrow::Buffer\")\n S3method(FixedSizeBufferWriter,default)\n S3method(MessageReader,\"arrow::io::InputStream\")\n@@ -33,12 +39,6 @@ S3method(buffer,default)\n S3method(buffer,integer)\n S3method(buffer,numeric)\n S3method(buffer,raw)\n-S3method(feather_table_reader,\"arrow::io::RandomAccessFile\")\n-S3method(feather_table_reader,\"arrow::ipc::feather::TableReader\")\n-S3method(feather_table_reader,character)\n-S3method(feather_table_reader,default)\n-S3method(feather_table_reader,fs_path)\n-S3method(feather_table_writer,\"arrow::io::OutputStream\")\n S3method(length,\"arrow::Array\")\n S3method(names,\"arrow::RecordBatch\")\n S3method(print,\"arrow-enum\")\n@@ -70,6 +70,8 @@ S3method(write_feather_RecordBatch,fs_path)\n export(BufferOutputStream)\n export(BufferReader)\n export(DateUnit)\n+export(FeatherTableReader)\n+export(FeatherTableWriter)\n export(FileMode)\n export(FileOutputStream)\n export(FixedSizeBufferWriter)\n@@ -95,8 +97,6 @@ export(date64)\n export(decimal)\n export(default_memory_pool)\n export(dictionary)\n-export(feather_table_reader)\n-export(feather_table_writer)\n export(field)\n export(float16)\n export(float32)\ndiff --git a/r/R/RcppExports.R b/r/R/RcppExports.R\nindex ccf854927b..0310eab202 100644\n--- a/r/R/RcppExports.R\n+++ b/r/R/RcppExports.R\n@@ -445,8 +445,8 @@ ipc___feather___TableReader__GetColumn <- function(reader, i) {\n     .Call(`_arrow_ipc___feather___TableReader__GetColumn`, reader, i)\n }\n \n-ipc___feather___TableReader__Read <- function(reader) {\n-    .Call(`_arrow_ipc___feather___TableReader__Read`, reader)\n+ipc___feather___TableReader__Read <- function(reader, columns) {\n+    .Call(`_arrow_ipc___feather___TableReader__Read`, reader, columns)\n }\n \n ipc___feather___TableReader__Open <- function(stream) {\ndiff --git a/r/R/feather.R b/r/R/feather.R\nindex bae71d31bc..064652145c 100644\n--- a/r/R/feather.R\n+++ b/r/R/feather.R\n@@ -35,7 +35,9 @@\n     num_columns = function() ipc___feather___TableReader__num_columns(self),\n     GetColumnName = function(i) ipc___feather___TableReader__GetColumnName(self, i),\n     GetColumn = function(i) shared_ptr(`arrow::Column`, ipc___feather___TableReader__GetColumn(self, i)),\n-    Read = function() shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self))\n+    Read = function(columns) {\n+      shared_ptr(`arrow::Table`, ipc___feather___TableReader__Read(self, columns))\n+    }\n   )\n )\n \n@@ -44,12 +46,12 @@\n #' @param stream an OutputStream\n #'\n #' @export\n-feather_table_writer <- function(stream) {\n-  UseMethod(\"feather_table_writer\")\n+FeatherTableWriter <- function(stream) {\n+  UseMethod(\"FeatherTableWriter\")\n }\n \n #' @export\n-`feather_table_writer.arrow::io::OutputStream` <- function(stream){\n+`FeatherTableWriter.arrow::io::OutputStream` <- function(stream){\n   unique_ptr(`arrow::ipc::feather::TableWriter`, ipc___feather___TableWriter__Open(stream))\n }\n \n@@ -107,7 +109,7 @@ write_feather_RecordBatch <- function(data, stream) {\n #' @export\n #' @method write_feather_RecordBatch arrow::io::OutputStream\n `write_feather_RecordBatch.arrow::io::OutputStream` <- function(data, stream) {\n-  ipc___TableWriter__RecordBatch__WriteFeather(feather_table_writer(stream), data)\n+  ipc___TableWriter__RecordBatch__WriteFeather(FeatherTableWriter(stream), data)\n }\n \n #' A arrow::ipc::feather::TableReader to read from a file\n@@ -117,44 +119,50 @@ write_feather_RecordBatch <- function(data, stream) {\n #' @param ... extra parameters\n #'\n #' @export\n-feather_table_reader <- function(file, mmap = TRUE, ...){\n-  UseMethod(\"feather_table_reader\")\n+FeatherTableReader <- function(file, mmap = TRUE, ...){\n+  UseMethod(\"FeatherTableReader\")\n }\n \n #' @export\n-feather_table_reader.default <- function(file, mmap = TRUE, ...) {\n+FeatherTableReader.default <- function(file, mmap = TRUE, ...) {\n   stop(\"unsupported\")\n }\n \n #' @export\n-feather_table_reader.character <- function(file, mmap = TRUE, ...) {\n-  feather_table_reader(fs::path_abs(file), mmap = mmap, ...)\n+FeatherTableReader.character <- function(file, mmap = TRUE, ...) {\n+  FeatherTableReader(fs::path_abs(file), mmap = mmap, ...)\n }\n \n #' @export\n-feather_table_reader.fs_path <- function(file, mmap = TRUE, ...) {\n+FeatherTableReader.fs_path <- function(file, mmap = TRUE, ...) {\n   stream <- if(isTRUE(mmap)) mmap_open(file, ...) else ReadableFile(file, ...)\n-  feather_table_reader(stream)\n+  FeatherTableReader(stream)\n }\n \n #' @export\n-`feather_table_reader.arrow::io::RandomAccessFile` <- function(file, mmap = TRUE, ...){\n+`FeatherTableReader.arrow::io::RandomAccessFile` <- function(file, mmap = TRUE, ...){\n   unique_ptr(`arrow::ipc::feather::TableReader`, ipc___feather___TableReader__Open(file))\n }\n \n #' @export\n-`feather_table_reader.arrow::ipc::feather::TableReader` <- function(file, mmap = TRUE, ...){\n+`FeatherTableReader.arrow::ipc::feather::TableReader` <- function(file, mmap = TRUE, ...){\n   file\n }\n \n #' Read a feather file\n #'\n-#' @param file a arrow::ipc::feather::TableReader or whatever the [feather_table_reader()] function can handle\n+#' @param file a arrow::ipc::feather::TableReader or whatever the [FeatherTableReader()] function can handle\n+#' @param columns names if the columns to read. The default `NULL` means all columns\n+#' @param as_tibble should the [arrow::Table][arrow__Table] be converted to a tibble.\n #' @param ... additional parameters\n #'\n-#' @return an arrow::Table\n+#' @return a data frame if `as_tibble` is `TRUE` (the default), or a [arrow::Table][arrow__Table] otherwise\n #'\n #' @export\n-read_feather <- function(file, ...){\n-  feather_table_reader(file, ...)$Read()\n+read_feather <- function(file, columns = NULL, as_tibble = TRUE, ...){\n+  out <- FeatherTableReader(file, ...)$Read(columns)\n+  if (isTRUE(as_tibble)) {\n+    out <- as_tibble(out)\n+  }\n+  out\n }\ndiff --git a/r/man/feather_table_reader.Rd b/r/man/FeatherTableReader.Rd\nsimilarity index 80%\nrename from r/man/feather_table_reader.Rd\nrename to r/man/FeatherTableReader.Rd\nindex fb1c53429f..15a260bd57 100644\n--- a/r/man/feather_table_reader.Rd\n+++ b/r/man/FeatherTableReader.Rd\n@@ -1,10 +1,10 @@\n % Generated by roxygen2: do not edit by hand\n % Please edit documentation in R/feather.R\n-\\name{feather_table_reader}\n-\\alias{feather_table_reader}\n+\\name{FeatherTableReader}\n+\\alias{FeatherTableReader}\n \\title{A arrow::ipc::feather::TableReader to read from a file}\n \\usage{\n-feather_table_reader(file, mmap = TRUE, ...)\n+FeatherTableReader(file, mmap = TRUE, ...)\n }\n \\arguments{\n \\item{file}{A file path, arrow::io::RandomAccessFile}\ndiff --git a/r/man/feather_table_writer.Rd b/r/man/FeatherTableWriter.Rd\nsimilarity index 74%\nrename from r/man/feather_table_writer.Rd\nrename to r/man/FeatherTableWriter.Rd\nindex 36035aca12..3acf5971a7 100644\n--- a/r/man/feather_table_writer.Rd\n+++ b/r/man/FeatherTableWriter.Rd\n@@ -1,10 +1,10 @@\n % Generated by roxygen2: do not edit by hand\n % Please edit documentation in R/feather.R\n-\\name{feather_table_writer}\n-\\alias{feather_table_writer}\n+\\name{FeatherTableWriter}\n+\\alias{FeatherTableWriter}\n \\title{Create TableWriter that writes into a stream}\n \\usage{\n-feather_table_writer(stream)\n+FeatherTableWriter(stream)\n }\n \\arguments{\n \\item{stream}{an OutputStream}\ndiff --git a/r/man/read_feather.Rd b/r/man/read_feather.Rd\nindex e86b86b99e..31fd36ab65 100644\n--- a/r/man/read_feather.Rd\n+++ b/r/man/read_feather.Rd\n@@ -4,15 +4,19 @@\n \\alias{read_feather}\n \\title{Read a feather file}\n \\usage{\n-read_feather(file, ...)\n+read_feather(file, columns = NULL, as_tibble = TRUE, ...)\n }\n \\arguments{\n-\\item{file}{a arrow::ipc::feather::TableReader or whatever the \\code{\\link[=feather_table_reader]{feather_table_reader()}} function can handle}\n+\\item{file}{a arrow::ipc::feather::TableReader or whatever the \\code{\\link[=FeatherTableReader]{FeatherTableReader()}} function can handle}\n+\n+\\item{columns}{names if the columns to read. The default \\code{NULL} means all columns}\n+\n+\\item{as_tibble}{should the \\link[=arrow__Table]{arrow::Table} be converted to a tibble.}\n \n \\item{...}{additional parameters}\n }\n \\value{\n-an arrow::Table\n+a data frame if \\code{as_tibble} is \\code{TRUE} (the default), or a \\link[=arrow__Table]{arrow::Table} otherwise\n }\n \\description{\n Read a feather file\ndiff --git a/r/src/RcppExports.cpp b/r/src/RcppExports.cpp\nindex bca4eafdee..e5a784eb70 100644\n--- a/r/src/RcppExports.cpp\n+++ b/r/src/RcppExports.cpp\n@@ -1244,13 +1244,14 @@ BEGIN_RCPP\n END_RCPP\n }\n // ipc___feather___TableReader__Read\n-std::shared_ptr<arrow::Table> ipc___feather___TableReader__Read(const std::unique_ptr<arrow::ipc::feather::TableReader>& reader);\n-RcppExport SEXP _arrow_ipc___feather___TableReader__Read(SEXP readerSEXP) {\n+std::shared_ptr<arrow::Table> ipc___feather___TableReader__Read(const std::unique_ptr<arrow::ipc::feather::TableReader>& reader, SEXP columns);\n+RcppExport SEXP _arrow_ipc___feather___TableReader__Read(SEXP readerSEXP, SEXP columnsSEXP) {\n BEGIN_RCPP\n     Rcpp::RObject rcpp_result_gen;\n     Rcpp::RNGScope rcpp_rngScope_gen;\n     Rcpp::traits::input_parameter< const std::unique_ptr<arrow::ipc::feather::TableReader>& >::type reader(readerSEXP);\n-    rcpp_result_gen = Rcpp::wrap(ipc___feather___TableReader__Read(reader));\n+    Rcpp::traits::input_parameter< SEXP >::type columns(columnsSEXP);\n+    rcpp_result_gen = Rcpp::wrap(ipc___feather___TableReader__Read(reader, columns));\n     return rcpp_result_gen;\n END_RCPP\n }\n@@ -2262,7 +2263,7 @@ static const R_CallMethodDef CallEntries[] = {\n     {\"_arrow_ipc___feather___TableReader__num_columns\", (DL_FUNC) &_arrow_ipc___feather___TableReader__num_columns, 1},\n     {\"_arrow_ipc___feather___TableReader__GetColumnName\", (DL_FUNC) &_arrow_ipc___feather___TableReader__GetColumnName, 2},\n     {\"_arrow_ipc___feather___TableReader__GetColumn\", (DL_FUNC) &_arrow_ipc___feather___TableReader__GetColumn, 2},\n-    {\"_arrow_ipc___feather___TableReader__Read\", (DL_FUNC) &_arrow_ipc___feather___TableReader__Read, 1},\n+    {\"_arrow_ipc___feather___TableReader__Read\", (DL_FUNC) &_arrow_ipc___feather___TableReader__Read, 2},\n     {\"_arrow_ipc___feather___TableReader__Open\", (DL_FUNC) &_arrow_ipc___feather___TableReader__Open, 1},\n     {\"_arrow_Field__initialize\", (DL_FUNC) &_arrow_Field__initialize, 3},\n     {\"_arrow_Field__ToString\", (DL_FUNC) &_arrow_Field__ToString, 1},\ndiff --git a/r/src/feather.cpp b/r/src/feather.cpp\nindex 7b84deefad..8389156c38 100644\n--- a/r/src/feather.cpp\n+++ b/r/src/feather.cpp\n@@ -115,9 +115,37 @@ std::shared_ptr<arrow::Column> ipc___feather___TableReader__GetColumn(\n \n // [[Rcpp::export]]\n std::shared_ptr<arrow::Table> ipc___feather___TableReader__Read(\n-    const std::unique_ptr<arrow::ipc::feather::TableReader>& reader) {\n+    const std::unique_ptr<arrow::ipc::feather::TableReader>& reader, SEXP columns) {\n   std::shared_ptr<arrow::Table> table;\n-  STOP_IF_NOT_OK(reader->Read(&table));\n+\n+  switch (TYPEOF(columns)) {\n+    case INTSXP: {\n+      R_xlen_t n = XLENGTH(columns);\n+      std::vector<int> indices(n);\n+      int* p_columns = INTEGER(columns);\n+      for (int i = 0; i < n; i++) {\n+        indices[i] = p_columns[i] - 1;\n+      }\n+      STOP_IF_NOT_OK(reader->Read(indices, &table));\n+      break;\n+    }\n+    case STRSXP: {\n+      R_xlen_t n = XLENGTH(columns);\n+      std::vector<std::string> names(n);\n+      for (R_xlen_t i = 0; i < n; i++) {\n+        names[i] = CHAR(STRING_ELT(columns, i));\n+      }\n+      STOP_IF_NOT_OK(reader->Read(names, &table));\n+      break;\n+    }\n+    case NILSXP:\n+      STOP_IF_NOT_OK(reader->Read(&table));\n+      break;\n+    default:\n+      Rcpp::stop(\"incompatible column specification\");\n+      break;\n+  };\n+\n   return table;\n }\n \ndiff --git a/r/tests/testthat/test-feather.R b/r/tests/testthat/test-feather.R\nindex 715017fb58..23fdc58fd7 100644\n--- a/r/tests/testthat/test-feather.R\n+++ b/r/tests/testthat/test-feather.R\n@@ -34,25 +34,66 @@ test_that(\"feather read/write round trip\", {\n   expect_true(fs::file_exists(tf3))\n \n   tab1 <- read_feather(tf1)\n-  expect_is(tab1, \"arrow::Table\")\n+  expect_is(tab1, \"data.frame\")\n \n   tab2 <- read_feather(tf2)\n-  expect_is(tab2, \"arrow::Table\")\n+  expect_is(tab2, \"data.frame\")\n \n   tab3 <- read_feather(tf3)\n-  expect_is(tab3, \"arrow::Table\")\n+  expect_is(tab3, \"data.frame\")\n \n   # reading directly from arrow::io::MemoryMappedFile\n   tab4 <- read_feather(mmap_open(tf3))\n-  expect_is(tab4, \"arrow::Table\")\n+  expect_is(tab4, \"data.frame\")\n \n   # reading directly from arrow::io::ReadableFile\n   tab5 <- read_feather(ReadableFile(tf3))\n-  expect_is(tab5, \"arrow::Table\")\n+  expect_is(tab5, \"data.frame\")\n+\n+  expect_equal(tib, tab1)\n+  expect_equal(tib, tab2)\n+  expect_equal(tib, tab3)\n+  expect_equal(tib, tab4)\n+  expect_equal(tib, tab5)\n+})\n+\n+test_that(\"feather handles columns = <names>\", {\n+  tib <- tibble::tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\n+\n+  tf1 <- local_tempfile()\n+  write_feather(tib, tf1)\n+  expect_true(fs::file_exists(tf1))\n+\n+  tab1 <- read_feather(tf1, columns = c(\"x\", \"y\"))\n+  expect_is(tab1, \"data.frame\")\n+\n+  expect_equal(tib[, c(\"x\", \"y\")], as_tibble(tab1))\n+})\n+\n+test_that(\"feather handles columns = <integer>\", {\n+  tib <- tibble::tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\n+\n+  tf1 <- local_tempfile()\n+  write_feather(tib, tf1)\n+  expect_true(fs::file_exists(tf1))\n+\n+  tab1 <- read_feather(tf1, columns = 1:2)\n+  expect_is(tab1, \"data.frame\")\n+\n+  expect_equal(tib[, c(\"x\", \"y\")], as_tibble(tab1))\n+})\n+\n+test_that(\"feather read/write round trip\", {\n+  tib <- tibble::tibble(x = 1:10, y = rnorm(10), z = letters[1:10])\n+\n+  tf1 <- local_tempfile()\n+  write_feather(tib, tf1)\n+  expect_true(fs::file_exists(tf1))\n+\n+  tab1 <- read_feather(tf1, as_tibble = FALSE)\n+  expect_is(tab1, \"arrow::Table\")\n \n   expect_equal(tib, as_tibble(tab1))\n-  expect_equal(tib, as_tibble(tab2))\n-  expect_equal(tib, as_tibble(tab3))\n-  expect_equal(tib, as_tibble(tab4))\n-  expect_equal(tib, as_tibble(tab5))\n })\n+\n+\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-10T15:52:01.751+0000",
                    "updated": "2018-12-10T15:52:01.751+0000",
                    "started": "2018-12-10T15:52:01.750+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "173666",
                    "issueId": "13202521"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7a751db4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b3619bb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@192f5baa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@125f62f5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7052d9fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@106913a6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73f8f80a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1ad9644a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c22d3d4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@240e1bd5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10028ff6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@41a84288[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 10 15:51:47 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-10T15:51:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3942/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-05T12:43:04.000+0000",
        "updated": "2018-12-10T15:52:01.000+0000",
        "timeoriginalestimate": null,
        "description": "e.g. feather_table_writer should be FeatherTableWriter, ...",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Feather api fixes",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13202521/comment/16714967",
                    "id": "16714967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3106\n[https://github.com/apache/arrow/pull/3106]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-10T15:51:47.349+0000",
                    "updated": "2018-12-10T15:51:47.349+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s016zk:",
        "customfield_12314139": null
    }
}