{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13424446",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446",
    "key": "ARROW-15430",
    "fields": {
        "parent": {
            "id": "13437222",
            "key": "ARROW-16091",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13437222",
            "fields": {
                "summary": "[Python] Continuation of improving Classes and Methods Docstrings ",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
            "name": "alenka",
            "key": "alenkaf",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Alenka Frim",
            "active": true,
            "timeZone": "Europe/Ljubljana"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15430/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 47,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789379",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#issuecomment-1180034429\n\n   https://issues.apache.org/jira/browse/ARROW-15430\n\n\n",
                    "created": "2022-07-11T06:56:41.335+0000",
                    "updated": "2022-07-11T06:56:41.335+0000",
                    "started": "2022-07-11T06:56:41.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789379",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r917603471\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -166,19 +186,39 @@ cdef class FileInfo(_Weakrefable):\n         Returns\n         -------\n         type : FileType\n+\n+        Examples\n+        --------\n+        >>> local = getfixture('local_fs')\n\nReview Comment:\n   The way the fixture for doctest is used here (where you call a fixture with `getfixture` method) is the only way I found to optimise the examples. With it the code that is repeated in most of the examples gets optimised so that you only call a fixture without needing to create a FileSystem object and write data into a file.\r\n   \r\n   But, I do think this could be a bit confusing for the user, as we do not know what the fixture that is called actually does. If we could just use the name `local` in all the examples, that would be much clearer.\r\n   \r\n   Nevertheless I decided to use the fixture and added a comment trying to explain in short, what is done when the fixture is called.\n\n\n\n",
                    "created": "2022-07-11T07:05:20.634+0000",
                    "updated": "2022-07-11T07:05:20.634+0000",
                    "started": "2022-07-11T07:05:20.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789380",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789393",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r917641870\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -166,19 +186,39 @@ cdef class FileInfo(_Weakrefable):\n         Returns\n         -------\n         type : FileType\n+\n+        Examples\n+        --------\n+        >>> local = getfixture('local_fs')\n\nReview Comment:\n   > If we could just use the name `local` in all the examples, that would be much clearer.\r\n   \r\n   I think that should actually be possible, if you insert \"local\" in the doctest_namespace. \r\n   Of course, while that avoids the confusing `getfixture`, it still uses an object that is not defined in the docstring itself, making it harder to understand the docstring on its own (and to run the example yourself).\r\n   \r\n   Trying to think for alternatives: specifically for the `FileInfo` class, it might also be OK to put all the examples in the main class docstrings, instead of in each attribute docstring? (we could still include a mention about that in each attribute docstring). That would also avoid the repeated creation of `local` + writing a single file.\r\n   \r\n   \n\n\n\n",
                    "created": "2022-07-11T07:54:42.227+0000",
                    "updated": "2022-07-11T07:54:42.227+0000",
                    "started": "2022-07-11T07:54:42.226+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789393",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r917646594\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -335,6 +448,21 @@ cdef class FileSystem(_Weakrefable):\n         tuple of (FileSystem, str path)\n             With (filesystem, path) tuple where path is the abstract path\n             inside the FileSystem instance.\n+\n+        Examples\n+        --------\n+        Create a FileSystem subclass with nonempty file:\n+\n+        >>> getfixture('local_fs')\n+        <pyarrow._fs.LocalFileSystem object at ...>\n+\n+        Create a new FileSystem subclass from path:\n+\n+        >>> local_new, path = fs.LocalFileSystem().from_uri('/tmp/fileinfo.dat')\n\nReview Comment:\n   It would probably be good to show here the use of an actual URI (the above uses an absolute local file path, so eg could use `file:///tmp/fieinfo.dat` instead for a URI, or more typically something with `s3://...`)\n\n\n\n",
                    "created": "2022-07-11T08:00:02.955+0000",
                    "updated": "2022-07-11T08:00:02.955+0000",
                    "started": "2022-07-11T08:00:02.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789394",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789395",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r917650990\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -166,19 +186,39 @@ cdef class FileInfo(_Weakrefable):\n         Returns\n         -------\n         type : FileType\n+\n+        Examples\n+        --------\n+        >>> local = getfixture('local_fs')\n\nReview Comment:\n   As all the main docstrings have examples that do not use any fixtures I presume that if someone is looking for example of that class's attribute, they would understand what local means as it is used in the example of the class itself. Maybe? =)\r\n   \n\n\n\n",
                    "created": "2022-07-11T08:05:23.609+0000",
                    "updated": "2022-07-11T08:05:23.609+0000",
                    "started": "2022-07-11T08:05:23.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789395",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#issuecomment-1180208183\n\n   One failure is probably not connected (AppVeyor) and the cause for the other is a non-deterministic sort in the output of `get_file_info()` - not happening locally btw.\n\n\n",
                    "created": "2022-07-11T10:08:13.164+0000",
                    "updated": "2022-07-11T10:08:13.164+0000",
                    "started": "2022-07-11T10:08:13.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789439",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#issuecomment-1180210623\n\n   Sorry, got the other issue wrong - just need to make one more correction.\n\n\n",
                    "created": "2022-07-11T10:10:45.978+0000",
                    "updated": "2022-07-11T10:10:45.978+0000",
                    "started": "2022-07-11T10:10:45.978+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789442",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#issuecomment-1180302367\n\n   I was sloppy reading the AppVeyor fail also. I guess on Windows there is an issue with namespace hooks (maybe connected to https://docs.pytest.org/en/latest/deprecations.html#pytest-namespace). I can't reproduce it locally so will try couple of things here to run the CI.\n\n\n",
                    "created": "2022-07-11T11:37:29.319+0000",
                    "updated": "2022-07-11T11:37:29.319+0000",
                    "started": "2022-07-11T11:37:29.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789486",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "raulcd commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r917993434\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,16 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace):\n\nReview Comment:\n   shouldn't this be done only if `if config.option.doctestmodules:`? If we only do it when doctests are being run I think it would fix the appveyor issue.\n\n\n\n",
                    "created": "2022-07-11T14:20:41.071+0000",
                    "updated": "2022-07-11T14:20:41.071+0000",
                    "started": "2022-07-11T14:20:41.070+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789579",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918055430\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,16 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace):\n\nReview Comment:\n   I was going around in circles, thank you so much for this clue! Will try \ud83d\ude4f \n\n\n\n",
                    "created": "2022-07-11T15:13:46.991+0000",
                    "updated": "2022-07-11T15:13:46.991+0000",
                    "started": "2022-07-11T15:13:46.990+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789605",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918141726\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,16 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace):\n\nReview Comment:\n   Looks like it works, thank you!\n\n\n\n",
                    "created": "2022-07-11T16:38:53.746+0000",
                    "updated": "2022-07-11T16:38:53.746+0000",
                    "started": "2022-07-11T16:38:53.746+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789657",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#issuecomment-1181295085\n\n   @jorisvandenbossche I made some changes, keeping attribute examples simple and adding examples to class docstrings. You think this would do?\n\n\n",
                    "created": "2022-07-12T04:17:21.821+0000",
                    "updated": "2022-07-12T04:17:21.821+0000",
                    "started": "2022-07-12T04:17:21.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789838",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918636552\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n+\n+    Get FileInfo object using `get_file_info()`:\n\nReview Comment:\n   ```suggestion\r\n       Get FileInfo object using ``get_file_info()``:\r\n   ```\r\n   \r\n   (inline code needs a double quote for rst, in contrast to markdown ..)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n\nReview Comment:\n   You can also leave out this additional `...` line without further content (you typically get this when trying it interactively in a python console, as you need an extra enter to start executing it, but for the docstring that only gives additional vertical space)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -260,6 +354,44 @@ cdef class FileSelector(_Weakrefable):\n         If true, an empty selection is returned.\n     recursive : bool, default False\n         Whether to recurse into subdirectories.\n+\n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   same here\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -260,6 +354,44 @@ cdef class FileSelector(_Weakrefable):\n         If true, an empty selection is returned.\n     recursive : bool, default False\n         Whether to recurse into subdirectories.\n+\n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n+\n+    Create new directory and subdirectory with copied data:\n+\n+    >>> # directory\n+    >>> local.create_dir('/tmp/alphabet')\n+    >>> local.copy_file('/tmp/fileinfo.dat', '/tmp/alphabet/fileinfo.dat')\n+    >>> # subdirectory\n+    >>> local.create_dir('/tmp/alphabet/aeiou')\n\nReview Comment:\n   I understand that \"aeiou\" are the vowels of the alphabet ;) But the first time I read it I found it a bit hard to read (before realizing that it were just all vowels), so maybe something more boring like \"subdir\" can make it easier to read?\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   This \"4\" is a left-over? (or at least for me, it doesn't print the size of what gets written)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -541,6 +754,12 @@ cdef class FileSystem(_Weakrefable):\n             The path of the file to be copied from.\n         dest : str\n             The destination path where the file is copied to.\n+\n+        Examples\n+        --------\n+        >>> local.copy_file('/tmp/fileinfo.dat', '/tmp/fileinfo_copy.dat')\n+        >>> local.get_file_info('/tmp/fileinfo_copy.dat')\n+        <FileInfo for '/tmp/fileinfo_copy.dat': type=FileType.File, size=4>\n\nReview Comment:\n   Maybe show here that the original file also still exists? (since that is what is different compared to `move`)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -335,6 +467,21 @@ cdef class FileSystem(_Weakrefable):\n         tuple of (FileSystem, str path)\n             With (filesystem, path) tuple where path is the abstract path\n             inside the FileSystem instance.\n+\n+        Examples\n+        --------\n+        Create a new FileSystem subclass from path:\n+\n+        >>> local_new, path = fs.LocalFileSystem().from_uri('file:///tmp/fileinfo.dat')\n\nReview Comment:\n   And actually it's maybe also better (or at least shorter) to use `FileSystem.from_uri` instead of `LocalFileSystem.from_uri`. \r\n   \r\n   There is nothing about this method that is specific to a FileSystem subclass, and so it is not because you call it from `LocalFileSystem` that it is guaranteed to return a local filesystem (eg if you would pass a S3 URI to the LocalFileSystem, it would (somewhat confusingly) also work fine)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n+\n+    Get FileInfo object using `get_file_info()`:\n+\n+    >>> local.get_file_info('/tmp/fileinfo.dat')\n+    <FileInfo for '/tmp/fileinfo.dat': type=FileType.File, size=4>\n+\n+    or FileInfo constructor:\n+\n+    >>> fs.FileInfo('/tmp/fileinfo.dat', type=fs.FileType.File)\n+    <FileInfo for '/tmp/fileinfo.dat': type=FileType.File, size=None>\n\nReview Comment:\n   I am not fully sure we should show the constructor (I don't know of a reason that someone would want to create one manually?)\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -335,6 +467,21 @@ cdef class FileSystem(_Weakrefable):\n         tuple of (FileSystem, str path)\n             With (filesystem, path) tuple where path is the abstract path\n             inside the FileSystem instance.\n+\n+        Examples\n+        --------\n+        Create a new FileSystem subclass from path:\n\nReview Comment:\n   ```suggestion\r\n           Create a new FileSystem subclass from a URI:\r\n   ```\n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -335,6 +467,21 @@ cdef class FileSystem(_Weakrefable):\n         tuple of (FileSystem, str path)\n             With (filesystem, path) tuple where path is the abstract path\n             inside the FileSystem instance.\n+\n+        Examples\n+        --------\n+        Create a new FileSystem subclass from path:\n+\n+        >>> local_new, path = fs.LocalFileSystem().from_uri('file:///tmp/fileinfo.dat')\n\nReview Comment:\n   ```suggestion\r\n           >>> local_new, path = fs.LocalFileSystem.from_uri('file:///tmp/fileinfo.dat')\r\n   ```\r\n   \r\n   Since this is a staticmethod, you actually don't need to call it from an instance (as you already did for the S3 example below). \n\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -422,6 +575,13 @@ cdef class FileSystem(_Weakrefable):\n         FileInfo or list of FileInfo\n             Single FileInfo object is returned for a single path, otherwise\n             a list of FileInfo objects is returned.\n+\n+        Examples\n+        --------\n+        >>> local\n+        <pyarrow._fs.LocalFileSystem object at ...>\n+        >>> local.get_file_info(\"local.get_file_info(/tmp/fileinfo.dat)\")\n\nReview Comment:\n   The `\"local.get_file_info\"` inside the path might be a copy-paste mistake?\n\n\n\n",
                    "created": "2022-07-12T07:42:59.325+0000",
                    "updated": "2022-07-12T07:42:59.325+0000",
                    "started": "2022-07-12T07:42:59.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789907",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789919",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918661081\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   Hm, it prints it out for me and also doctest is happy about it. Will try to run doctest without the \"4\".\n\n\n\n",
                    "created": "2022-07-12T07:54:19.812+0000",
                    "updated": "2022-07-12T07:54:19.812+0000",
                    "started": "2022-07-12T07:54:19.811+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789919",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918662749\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   Yes, doctest complains if I remove the \"4\" ...\n\n\n\n",
                    "created": "2022-07-12T07:55:59.983+0000",
                    "updated": "2022-07-12T07:55:59.983+0000",
                    "started": "2022-07-12T07:55:59.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789920",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789922",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918663448\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n+\n+    Get FileInfo object using `get_file_info()`:\n+\n+    >>> local.get_file_info('/tmp/fileinfo.dat')\n+    <FileInfo for '/tmp/fileinfo.dat': type=FileType.File, size=4>\n+\n+    or FileInfo constructor:\n+\n+    >>> fs.FileInfo('/tmp/fileinfo.dat', type=fs.FileType.File)\n+    <FileInfo for '/tmp/fileinfo.dat': type=FileType.File, size=None>\n\nReview Comment:\n   Not sure either =) Will remove it.\n\n\n\n",
                    "created": "2022-07-12T07:56:44.980+0000",
                    "updated": "2022-07-12T07:56:44.980+0000",
                    "started": "2022-07-12T07:56:44.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789922",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918666949\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -260,6 +354,44 @@ cdef class FileSelector(_Weakrefable):\n         If true, an empty selection is returned.\n     recursive : bool, default False\n         Whether to recurse into subdirectories.\n+\n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n+\n+    Create new directory and subdirectory with copied data:\n+\n+    >>> # directory\n+    >>> local.create_dir('/tmp/alphabet')\n+    >>> local.copy_file('/tmp/fileinfo.dat', '/tmp/alphabet/fileinfo.dat')\n+    >>> # subdirectory\n+    >>> local.create_dir('/tmp/alphabet/aeiou')\n\nReview Comment:\n   It is a good vocal practice :P\r\n   Sure, will change.\n\n\n\n",
                    "created": "2022-07-12T08:00:15.199+0000",
                    "updated": "2022-07-12T08:00:15.199+0000",
                    "started": "2022-07-12T08:00:15.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789926",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918674454\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   Oh, I guess if I remove extra '...' then doctest doesn't like the numbered output (\"4\") also. So I will remove '...' and the extra numbers \ud83d\udc4d \n\n\n\n",
                    "created": "2022-07-12T08:08:25.831+0000",
                    "updated": "2022-07-12T08:08:25.831+0000",
                    "started": "2022-07-12T08:08:25.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789928",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/789929",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "AlenkaF commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r918674454\n\n\n##########\npython/pyarrow/_fs.pyx:\n##########\n@@ -100,6 +100,53 @@ cdef class FileInfo(_Weakrefable):\n         If given, the filesystem entry size in bytes.  This should only\n         be given if `type` is `FileType.File`.\n \n+    Examples\n+    --------\n+    Generate a file:\n+\n+    >>> from pyarrow import fs\n+    >>> local = fs.LocalFileSystem()\n+    >>> with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n+    ...     stream.write(b'data')\n+    ...\n+    4\n\nReview Comment:\n   Oh, I guess if I remove extra '...' then doctest doesn't like the numbered output (\"4\") also. So I will remove '...' and the extra numbers \ud83d\udc4d \n\n\n\n",
                    "created": "2022-07-12T08:13:41.148+0000",
                    "updated": "2022-07-12T08:13:41.148+0000",
                    "started": "2022-07-12T08:13:41.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "789929",
                    "issueId": "13424446"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/worklog/790488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13564:\nURL: https://github.com/apache/arrow/pull/13564#discussion_r920236148\n\n\n##########\npython/pyarrow/conftest.py:\n##########\n@@ -241,3 +242,26 @@ def _docdir(request):\n \n     else:\n         yield\n+\n+\n+# Define doctest_namespace for fs module docstring import\n+@pytest.fixture(autouse=True)\n+def add_fs(doctest_namespace, request):\n+\n+    # Trigger ONLY for the doctests\n+    doctest_m = request.config.option.doctestmodules\n+    doctest_c = getattr(request.config.option, \"doctest_cython\", False)\n+\n+    if doctest_m or doctest_c:\n+        # fs import\n+        doctest_namespace[\"fs\"] = fs\n+\n+        # Creation of an object and file with data\n+        local = fs.LocalFileSystem()\n+        with local.open_output_stream('/tmp/fileinfo.dat') as stream:\n\nReview Comment:\n   Hmm, so for the purposes of avoiding potential conflicts with existing files, can we call it something more explicit (for example `/tmp/pyarrow-example.dat`)?\n\n\n\n",
                    "created": "2022-07-13T15:44:35.305+0000",
                    "updated": "2022-07-13T15:44:35.305+0000",
                    "started": "2022-07-13T15:44:35.304+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "790488",
                    "issueId": "13424446"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 28200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e96e4ac[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c0e1366[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5779a6e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3b001a4a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fc88394[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1dc951b7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71daa48[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3c7432ab[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@776bd292[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@20f87121[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a5dc09c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@57a14216[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jul 21 15:15:38 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-21T15:15:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15430/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-01-24T15:35:44.000+0000",
        "updated": "2022-07-21T22:22:14.000+0000",
        "timeoriginalestimate": null,
        "description": "Ensure docstrings for Filesystem Interface have an {{Examples}} section:\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.FileInfo.html#pyarrow.fs.FileInfo]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.FileSelector.html#pyarrow.fs.FileSelector]\r\n * [https://arrow.apache.org/docs/python/generated/pyarrow.fs.FileSystem.html#pyarrow.fs.FileSystem]\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Address docstrings in Filesystems (Interface)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13424446/comment/17569479",
                    "id": "17569479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "body": "Issue resolved by pull request 13564\n[https://github.com/apache/arrow/pull/13564]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alenka",
                        "name": "alenka",
                        "key": "alenkaf",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Alenka Frim",
                        "active": true,
                        "timeZone": "Europe/Ljubljana"
                    },
                    "created": "2022-07-21T15:15:38.455+0000",
                    "updated": "2022-07-21T15:15:38.455+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0yw2g:",
        "customfield_12314139": null
    }
}