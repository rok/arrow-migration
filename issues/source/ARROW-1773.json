{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13116519",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519",
    "key": "ARROW-1773",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Licht-T",
            "name": "Licht-T",
            "key": "licht-t",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=licht-t&avatarId=33236",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=licht-t&avatarId=33236",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=licht-t&avatarId=33236",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=licht-t&avatarId=33236"
            },
            "displayName": "Licht Takeuchi",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1773/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53fa2d5[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35d14b22[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5862b254[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@67d56a21[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21097dbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1daa9b6f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50176a9c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1c5f96dd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7651fc65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3fe97023[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54c1bec8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34c823f3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Nov 18 06:06:31 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-18T05:42:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1773/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-11-06T21:08:29.000+0000",
        "updated": "2019-06-03T12:44:52.000+0000",
        "timeoriginalestimate": null,
        "description": "e.g.\r\n\r\n{code}\r\nIn [3]: arr = pa.array([1,2,3], type='i4')\r\n\r\nIn [4]: arr.cast('date32')\r\nOut[4]: \r\n<pyarrow.lib.Date32Array object at 0x7fc35f8b56d8>\r\n[\r\n  datetime.date(1970, 1, 2),\r\n  datetime.date(1970, 1, 3),\r\n  datetime.date(1970, 1, 4)\r\n]\r\n\r\nIn [5]: arr.cast('date32').cast('i4')\r\n---------------------------------------------------------------------------\r\nArrowNotImplementedError                  Traceback (most recent call last)\r\n<ipython-input-5-7b6f6cf1cced> in <module>()\r\n----> 1 arr.cast('date32').cast('i4')\r\n\r\n/home/wesm/code/arrow/python/pyarrow/array.pxi in pyarrow.lib.Array.cast (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/lib.cxx:28923)()\r\n    266 \r\n    267         with nogil:\r\n--> 268             check_status(Cast(_context(), self.ap[0], type.sp_type,\r\n    269                               options, &result))\r\n    270 \r\n\r\n/home/wesm/code/arrow/python/pyarrow/error.pxi in pyarrow.lib.check_status (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/lib.cxx:8306)()\r\n     83             raise ArrowKeyError(message)\r\n     84         elif status.IsNotImplemented():\r\n---> 85             raise ArrowNotImplementedError(message)\r\n     86         elif status.IsTypeError():\r\n     87             raise ArrowTypeError(message)\r\n\r\nArrowNotImplementedError: /home/wesm/code/arrow/cpp/src/arrow/compute/cast.cc:920 code: GetCastFunction(*array.type(), out_type, options, &func)\r\nNo cast implemented from date32[day] to int32\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add casts from date/time types to compatible signed integers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16248890",
                    "id": "16248890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T opened a new pull request #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310\n \n \n   This closes [ARROW-1773](https://issues.apache.org/jira/projects/ARROW/issues/ARROW-1773).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-12T15:14:26.108+0000",
                    "updated": "2017-11-12T15:14:26.108+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16249106",
                    "id": "16249106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#discussion_r150448585\n \n \n\n ##########\n File path: python/pyarrow/tests/test_array.py\n ##########\n @@ -350,6 +350,61 @@ def test_cast_signed_to_unsigned():\n         _check_cast_case(case)\n \n \n+def test_cast_time32():\n+    arr = pa.array([0, 1, 2], type='i4')\n+\n+    result1 = arr.cast('time32[s]')\n+    result2 = result1.cast('i4')\n+\n+    # TODO: there is no way to construct a time32[s] data.\n+    # create the cast method from timestamp[s] to time32[s]\n+    # and check result1.\n+\n+    assert result2.equals(arr)\n+\n+\n+def test_cast_time64():\n+    arr = pa.array([0, 1, 2], type='i8')\n+\n+    result1 = arr.cast('time64[us]')\n+    result2 = result1.cast('i8')\n+\n+    # TODO: there is no way to construct a time64[us] data.\n+    # create the cast method from timestamp[us] to time64[us]\n+    # and check result1.\n+\n+    assert result2.equals(arr)\n+\n+\n+def test_cast_date32():\n+    arr = pa.array([0, 1, 2], type='i4')\n+\n+    result1 = arr.cast('date32')\n+    result2 = result1.cast('i4')\n+\n+    expected1 = pa.array([\n+        datetime.date(1970, 1, 1),\n+        datetime.date(1970, 1, 2),\n+        datetime.date(1970, 1, 3)\n+    ]).cast('date32')\n+\n+    assert result1.equals(expected1)\n+    assert result2.equals(arr)\n+\n+\n+def test_cast_date64():\n+    arr = pa.array([0, 1, 2], type='i8')\n+\n+    result1 = arr.cast('date64')\n+    result2 = result1.cast('i8')\n+\n+    # TODO: there is no way to construct a date64[ms] data.\n \n Review comment:\n   same as above\r\n   \r\n   ```\r\n   In [4]: pa.array(np.array([1,2,3], dtype='i8'), type='date64')\r\n   Out[4]: \r\n   <pyarrow.lib.Date64Array object at 0x7ffb0a516868>\r\n   [\r\n     datetime.date(1970, 1, 1),\r\n     datetime.date(1970, 1, 1),\r\n     datetime.date(1970, 1, 1)\r\n   ]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-13T04:59:55.957+0000",
                    "updated": "2017-11-13T04:59:55.957+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16249107",
                    "id": "16249107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#discussion_r150448603\n \n \n\n ##########\n File path: python/pyarrow/tests/test_array.py\n ##########\n @@ -350,6 +350,61 @@ def test_cast_signed_to_unsigned():\n         _check_cast_case(case)\n \n \n+def test_cast_time32():\n \n Review comment:\n   We might want a couple of tests in C++ to verify that this is indeed zero copy\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-13T04:59:55.958+0000",
                    "updated": "2017-11-13T04:59:55.958+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16249108",
                    "id": "16249108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#discussion_r150448556\n \n \n\n ##########\n File path: python/pyarrow/tests/test_array.py\n ##########\n @@ -350,6 +350,61 @@ def test_cast_signed_to_unsigned():\n         _check_cast_case(case)\n \n \n+def test_cast_time32():\n+    arr = pa.array([0, 1, 2], type='i4')\n+\n+    result1 = arr.cast('time32[s]')\n+    result2 = result1.cast('i4')\n+\n+    # TODO: there is no way to construct a time32[s] data.\n \n Review comment:\n   ```\r\n   In [3]: pa.array(np.array([1,2,3], dtype='i4'), type='time32[s]')\r\n   Out[3]: \r\n   <pyarrow.lib.Time32Array object at 0x7ffb0a5164a8>\r\n   [\r\n     datetime.time(0, 0, 1),\r\n     datetime.time(0, 0, 2),\r\n     datetime.time(0, 0, 3)\r\n   ]\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-13T04:59:56.036+0000",
                    "updated": "2017-11-13T04:59:56.036+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16250838",
                    "id": "16250838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#issuecomment-344145038\n \n \n   Once this patch is ready, please do not merge. My work on ARROW-1559 has become a bit entangled with this, so I will take responsibility for rebasing this patch after\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-14T04:43:54.761+0000",
                    "updated": "2017-11-14T04:43:54.761+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16257833",
                    "id": "16257833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#issuecomment-345405830\n \n \n   Casts from timestamp to int64 aren't implemented, so let me add these\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-18T01:09:22.818+0000",
                    "updated": "2017-11-18T01:09:22.818+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16257838",
                    "id": "16257838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#issuecomment-345406562\n \n \n   OK, this can be merged now on green build\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-18T01:17:47.248+0000",
                    "updated": "2017-11-18T01:17:47.248+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16257936",
                    "id": "16257936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1310\n[https://github.com/apache/arrow/pull/1310]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-18T05:42:19.856+0000",
                    "updated": "2017-11-18T05:42:19.856+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16257937",
                    "id": "16257937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/compute-test.cc b/cpp/src/arrow/compute/compute-test.cc\nindex 5eada398d..58a991c60 100644\n--- a/cpp/src/arrow/compute/compute-test.cc\n+++ b/cpp/src/arrow/compute/compute-test.cc\n@@ -334,6 +334,9 @@ TEST_F(TestCast, TimestampToTimestamp) {\n                                           &arr);\n   CheckZeroCopy(*arr, timestamp(TimeUnit::SECOND));\n \n+  // ARROW-1773, cast to integer\n+  CheckZeroCopy(*arr, int64());\n+\n   // Divide, truncate\n   vector<int64_t> v8 = {0, 100123, 200456, 1123, 2456};\n   vector<int64_t> e8 = {0, 100, 200, 1, 2};\n@@ -432,7 +435,7 @@ TEST_F(TestCast, TimestampToDate32_Date64) {\n       timestamp(TimeUnit::SECOND), v_second_nofail, is_valid, date32(), v_day, options);\n }\n \n-TEST_F(TestCast, TimeToTime) {\n+TEST_F(TestCast, TimeToCompatible) {\n   CastOptions options;\n \n   vector<bool> is_valid = {true, false, true, true, true};\n@@ -474,6 +477,16 @@ TEST_F(TestCast, TimeToTime) {\n   ArrayFromVector<Time64Type, int64_t>(time64(TimeUnit::MICRO), is_valid, v7, &arr);\n   CheckZeroCopy(*arr, time64(TimeUnit::MICRO));\n \n+  // ARROW-1773: cast to int64\n+  CheckZeroCopy(*arr, int64());\n+\n+  vector<int32_t> v7_2 = {0, 70000, 2000, 1000, 0};\n+  ArrayFromVector<Time32Type, int32_t>(time32(TimeUnit::SECOND), is_valid, v7_2, &arr);\n+  CheckZeroCopy(*arr, time32(TimeUnit::SECOND));\n+\n+  // ARROW-1773: cast to int64\n+  CheckZeroCopy(*arr, int32());\n+\n   // Divide, truncate\n   vector<int32_t> v8 = {0, 100123, 200456, 1123, 2456};\n   vector<int32_t> e8 = {0, 100, 200, 1, 2};\n@@ -515,7 +528,7 @@ TEST_F(TestCast, TimeToTime) {\n                          options);\n }\n \n-TEST_F(TestCast, DateToDate) {\n+TEST_F(TestCast, DateToCompatible) {\n   CastOptions options;\n \n   vector<bool> is_valid = {true, false, true, true, true};\n@@ -535,9 +548,15 @@ TEST_F(TestCast, DateToDate) {\n   ArrayFromVector<Date32Type, int32_t>(date32(), is_valid, v2, &arr);\n   CheckZeroCopy(*arr, date32());\n \n+  // ARROW-1773: zero copy cast to integer\n+  CheckZeroCopy(*arr, int32());\n+\n   ArrayFromVector<Date64Type, int64_t>(date64(), is_valid, v3, &arr);\n   CheckZeroCopy(*arr, date64());\n \n+  // ARROW-1773: zero copy cast to integer\n+  CheckZeroCopy(*arr, int64());\n+\n   // Divide, truncate\n   vector<int64_t> v8 = {0, 100 * F + 123, 200 * F + 456, F + 123, 2 * F + 456};\n   vector<int32_t> e8 = {0, 100, 200, 1, 2};\ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex 6a42ec8b2..c866054ea 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -91,10 +91,14 @@ struct is_zero_copy_cast<\n // From integers to date/time types with zero copy\n template <typename O, typename I>\n struct is_zero_copy_cast<\n-    O, I, typename std::enable_if<std::is_base_of<Integer, I>::value &&\n-                                  (std::is_base_of<TimeType, O>::value ||\n-                                   std::is_base_of<DateType, O>::value ||\n-                                   std::is_base_of<TimestampType, O>::value)>::type> {\n+    O, I,\n+    typename std::enable_if<\n+        (std::is_base_of<Integer, I>::value &&\n+         (std::is_base_of<TimeType, O>::value || std::is_base_of<DateType, O>::value ||\n+          std::is_base_of<TimestampType, O>::value)) ||\n+        (std::is_base_of<Integer, O>::value &&\n+         (std::is_base_of<TimeType, I>::value || std::is_base_of<DateType, I>::value ||\n+          std::is_base_of<TimestampType, I>::value))>::type> {\n   using O_T = typename O::c_type;\n   using I_T = typename I::c_type;\n \n@@ -809,24 +813,29 @@ class CastKernel : public UnaryKernel {\n \n #define DATE32_CASES(FN, IN_TYPE) \\\n   FN(Date32Type, Date32Type);     \\\n-  FN(Date32Type, Date64Type);\n+  FN(Date32Type, Date64Type);     \\\n+  FN(Date32Type, Int32Type);\n \n #define DATE64_CASES(FN, IN_TYPE) \\\n   FN(Date64Type, Date64Type);     \\\n-  FN(Date64Type, Date32Type);\n+  FN(Date64Type, Date32Type);     \\\n+  FN(Date64Type, Int64Type);\n \n #define TIME32_CASES(FN, IN_TYPE) \\\n   FN(Time32Type, Time32Type);     \\\n-  FN(Time32Type, Time64Type);\n+  FN(Time32Type, Time64Type);     \\\n+  FN(Time32Type, Int32Type);\n \n #define TIME64_CASES(FN, IN_TYPE) \\\n   FN(Time64Type, Time32Type);     \\\n-  FN(Time64Type, Time64Type);\n+  FN(Time64Type, Time64Type);     \\\n+  FN(Time64Type, Int64Type);\n \n #define TIMESTAMP_CASES(FN, IN_TYPE) \\\n   FN(TimestampType, TimestampType);  \\\n   FN(TimestampType, Date32Type);     \\\n-  FN(TimestampType, Date64Type);\n+  FN(TimestampType, Date64Type);     \\\n+  FN(TimestampType, Int64Type);\n \n #define DICTIONARY_CASES(FN, IN_TYPE) \\\n   FN(IN_TYPE, NullType);              \\\ndiff --git a/python/pyarrow/tests/test_array.py b/python/pyarrow/tests/test_array.py\nindex c061e6820..b7b0b1833 100644\n--- a/python/pyarrow/tests/test_array.py\n+++ b/python/pyarrow/tests/test_array.py\n@@ -389,6 +389,59 @@ def test_dictionary_encode_simple():\n         assert result.equals(expected)\n \n \n+def test_cast_time32_to_int():\n+    arr = pa.array(np.array([0, 1, 2], dtype='int32'),\n+                   type=pa.time32('s'))\n+    expected = pa.array([0, 1, 2], type='i4')\n+\n+    result = arr.cast('i4')\n+    assert result.equals(expected)\n+\n+\n+def test_cast_time64_to_int():\n+    arr = pa.array(np.array([0, 1, 2], dtype='int64'),\n+                   type=pa.time64('us'))\n+    expected = pa.array([0, 1, 2], type='i8')\n+\n+    result = arr.cast('i8')\n+    assert result.equals(expected)\n+\n+\n+def test_cast_timestamp_to_int():\n+    arr = pa.array(np.array([0, 1, 2], dtype='int64'),\n+                   type=pa.timestamp('us'))\n+    expected = pa.array([0, 1, 2], type='i8')\n+\n+    result = arr.cast('i8')\n+    assert result.equals(expected)\n+\n+\n+def test_cast_date32_to_int():\n+    arr = pa.array([0, 1, 2], type='i4')\n+\n+    result1 = arr.cast('date32')\n+    result2 = result1.cast('i4')\n+\n+    expected1 = pa.array([\n+        datetime.date(1970, 1, 1),\n+        datetime.date(1970, 1, 2),\n+        datetime.date(1970, 1, 3)\n+    ]).cast('date32')\n+\n+    assert result1.equals(expected1)\n+    assert result2.equals(arr)\n+\n+\n+def test_cast_date64_to_int():\n+    arr = pa.array(np.array([0, 1, 2], dtype='int64'),\n+                   type=pa.date64())\n+    expected = pa.array([0, 1, 2], type='i8')\n+\n+    result = arr.cast('i8')\n+\n+    assert result.equals(expected)\n+\n+\n def test_simple_type_construction():\n     result = pa.lib.TimestampType()\n     with pytest.raises(TypeError):\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-18T05:42:20.125+0000",
                    "updated": "2017-11-18T05:42:20.125+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116519/comment/16257947",
                    "id": "16257947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1310: ARROW-1773: [C++] Add casts from date/time types to compatible signed integers\nURL: https://github.com/apache/arrow/pull/1310#issuecomment-345421309\n \n \n   Thanks @wesm!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-18T06:06:31.053+0000",
                    "updated": "2017-11-18T06:06:31.053+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|i3mgqn:",
        "customfield_12314139": null
    }
}