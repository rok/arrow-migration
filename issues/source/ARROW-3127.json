{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13181491",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491",
    "key": "ARROW-3127",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343066",
                "id": "12343066",
                "description": "",
                "name": "0.11.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-10-08"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=simon-mo",
            "name": "simon-mo",
            "key": "simon-mo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=simon-mo&avatarId=36324",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=simon-mo&avatarId=36324",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=simon-mo&avatarId=36324",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=simon-mo&avatarId=36324"
            },
            "displayName": "Simon Mo",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332543",
                "id": "12332543",
                "name": "Website"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=simon-mo",
            "name": "simon-mo",
            "key": "simon-mo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=simon-mo&avatarId=36324",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=simon-mo&avatarId=36324",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=simon-mo&avatarId=36324",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=simon-mo&avatarId=36324"
            },
            "displayName": "Simon Mo",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=simon-mo",
            "name": "simon-mo",
            "key": "simon-mo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=simon-mo&avatarId=36324",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=simon-mo&avatarId=36324",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=simon-mo&avatarId=36324",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=simon-mo&avatarId=36324"
            },
            "displayName": "Simon Mo",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 3000,
            "total": 3000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3127/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 5,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/worklog/139296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2481: ARROW-3127: [Doc] Add Tutorial for Sending Tensor from C++ to Python\nURL: https://github.com/apache/arrow/pull/2481#discussion_r213733760\n \n \n\n ##########\n File path: cpp/apidoc/tutorials/tensor_to_py.md\n ##########\n @@ -0,0 +1,128 @@\n+<!---\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License. See accompanying LICENSE file.\n+-->\n+\n+Use Plasma to Access Tensor from C++ in Python\n+==============================================\n+\n+This short tutorial shows how to use Arrow and Plasma Store to send data \n+from C++ to Python. \n+\n+In detail, we will show how to:\n+1. Serialize a floating-point array in C++ into Arrow Tensor\n+2. Save the Arrow Tensor to Plasma In-Memory Object Store\n+3. Access the Tensor in a Python Process\n+\n+This approach has the advantage that multiple python processes can all read \n+the tensor with zero-copy. Therefore, only one copy is necessary when we send\n+a tensor from one C++ process to many python processes. \n+\n+\n+Step 0: Set up\n+------\n+We will include the following header files and construct a Plasma client.\n+\n+```cpp\n+#include <plasma/client.h>\n+#include <arrow/tensor.h>\n+#include <arrow/array.h>\n+#include <arrow/buffer.h>\n+#include <arrow/io/memory.h>\n+#include <arrow/ipc/writer.h>\n+\n+PlasmaClient client_;\n+ARROW_CHECK_OK(client_.Connect(\"/tmp/plasma\", \"\", 0));\n+```\n+\n+\n+Step 1: Serialize a floating point array in C++ into Arrow Tensor\n+---------------------------------------------\n+In this step, we will construct a floating-point array in C++. `generate_input`\n+function takes the input length and returns the pointer to a `float` array \n+filled with random elements. \n+\n+```cpp\n+// Generate Random Object ID for Plasma, 20 bytes\n+ObjectID object_id = ObjectID::from_random();\n \n Review comment:\n   Unfortunately it looks like the `ObjectID::from_random` API is being phased out. @pcmoritz \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-29T15:48:34.466+0000",
                    "updated": "2018-08-29T15:48:34.466+0000",
                    "started": "2018-08-29T15:48:34.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "139296",
                    "issueId": "13181491"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/worklog/139427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2481: ARROW-3127: [Doc] Add Tutorial for Sending Tensor from C++ to Python\nURL: https://github.com/apache/arrow/pull/2481#discussion_r213830212\n \n \n\n ##########\n File path: cpp/apidoc/tutorials/tensor_to_py.md\n ##########\n @@ -0,0 +1,128 @@\n+<!---\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License. See accompanying LICENSE file.\n+-->\n+\n+Use Plasma to Access Tensor from C++ in Python\n+==============================================\n+\n+This short tutorial shows how to use Arrow and Plasma Store to send data \n+from C++ to Python. \n+\n+In detail, we will show how to:\n+1. Serialize a floating-point array in C++ into Arrow Tensor\n+2. Save the Arrow Tensor to Plasma In-Memory Object Store\n+3. Access the Tensor in a Python Process\n+\n+This approach has the advantage that multiple python processes can all read \n+the tensor with zero-copy. Therefore, only one copy is necessary when we send\n+a tensor from one C++ process to many python processes. \n+\n+\n+Step 0: Set up\n+------\n+We will include the following header files and construct a Plasma client.\n+\n+```cpp\n+#include <plasma/client.h>\n+#include <arrow/tensor.h>\n+#include <arrow/array.h>\n+#include <arrow/buffer.h>\n+#include <arrow/io/memory.h>\n+#include <arrow/ipc/writer.h>\n+\n+PlasmaClient client_;\n+ARROW_CHECK_OK(client_.Connect(\"/tmp/plasma\", \"\", 0));\n+```\n+\n+\n+Step 1: Serialize a floating point array in C++ into Arrow Tensor\n+---------------------------------------------\n+In this step, we will construct a floating-point array in C++. `generate_input`\n+function takes the input length and returns the pointer to a `float` array \n+filled with random elements. \n+\n+```cpp\n+// Generate Random Object ID for Plasma, 20 bytes\n+ObjectID object_id = ObjectID::from_random();\n \n Review comment:\n   Might be useful to restore it as a util method and ask that the user supply a seed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-29T20:52:11.312+0000",
                    "updated": "2018-08-29T20:52:11.312+0000",
                    "started": "2018-08-29T20:52:11.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "139427",
                    "issueId": "13181491"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/worklog/140306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz commented on issue #2481: ARROW-3127: [Doc] Add Tutorial for Sending Tensor from C++ to Python\nURL: https://github.com/apache/arrow/pull/2481#issuecomment-417839284\n \n \n   Thanks a lot for submitting this @simon-mo and sorry I didn't have time earlier, will get this reviewed/merged on the weekend!\r\n   \r\n   We should also add this as a test to make sure it doesn't break (the same goes for the other tutorial).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T07:19:32.904+0000",
                    "updated": "2018-09-01T07:19:32.904+0000",
                    "started": "2018-09-01T07:19:32.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140306",
                    "issueId": "13181491"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/worklog/140307",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz edited a comment on issue #2481: ARROW-3127: [Doc] Add Tutorial for Sending Tensor from C++ to Python\nURL: https://github.com/apache/arrow/pull/2481#issuecomment-417839284\n \n \n   Thanks a lot for submitting this @simon-mo and sorry I didn't have time earlier, will get this reviewed/merged on the weekend!\r\n   \r\n   We should also add this as a test to make sure it doesn't break in the future (the same goes for the other tutorial).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-01T07:19:47.882+0000",
                    "updated": "2018-09-01T07:19:47.882+0000",
                    "started": "2018-09-01T07:19:47.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "140307",
                    "issueId": "13181491"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/worklog/142363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz closed pull request #2481: ARROW-3127: [Doc] Add Tutorial for Sending Tensor from C++ to Python\nURL: https://github.com/apache/arrow/pull/2481\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/apidoc/index.md b/cpp/apidoc/index.md\nindex 25be1f284f..46ee500367 100644\n--- a/cpp/apidoc/index.md\n+++ b/cpp/apidoc/index.md\n@@ -40,6 +40,7 @@ Table of Contents\n  * Tutorials\n    * [Convert a vector of row-wise data into an Arrow table](tutorials/row_wise_conversion.md)\n    * [Using the Plasma In-Memory Object Store](tutorials/plasma.md)\n+   * [Use Plasma to Access Tensors from C++ in Python](tutorials/tensor_to_py.md)\n \n Getting Started\n ---------------\ndiff --git a/cpp/apidoc/tutorials/tensor_to_py.md b/cpp/apidoc/tutorials/tensor_to_py.md\nnew file mode 100644\nindex 0000000000..e7a74166a7\n--- /dev/null\n+++ b/cpp/apidoc/tutorials/tensor_to_py.md\n@@ -0,0 +1,130 @@\n+<!---\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+   http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License. See accompanying LICENSE file.\n+-->\n+\n+Use Plasma to Access Tensors from C++ in Python\n+==============================================\n+\n+This short tutorial shows how to use Arrow and the Plasma Store to send data\n+from C++ to Python.\n+\n+In detail, we will show how to:\n+1. Serialize a floating-point array in C++ into an Arrow tensor\n+2. Save the Arrow tensor to Plasma\n+3. Access the Tensor in a Python process\n+\n+This approach has the advantage that multiple python processes can all read\n+the tensor with zero-copy. Therefore, only one copy is necessary when we send\n+a tensor from one C++ process to many python processes.\n+\n+\n+Step 0: Set up\n+------\n+We will include the following header files and construct a Plasma client.\n+\n+```cpp\n+#include <plasma/client.h>\n+#include <arrow/tensor.h>\n+#include <arrow/array.h>\n+#include <arrow/buffer.h>\n+#include <arrow/io/memory.h>\n+#include <arrow/ipc/writer.h>\n+\n+PlasmaClient client_;\n+ARROW_CHECK_OK(client_.Connect(\"/tmp/plasma\", \"\", 0));\n+```\n+\n+\n+Step 1: Serialize a floating point array in C++ into an Arrow Tensor\n+--------------------------------------------------------------------\n+In this step, we will construct a floating-point array in C++.\n+\n+```cpp\n+// Generate an Object ID for Plasma\n+ObjectID object_id = ObjectID::from_binary(\"11111111111111111111\");\n+\n+// Generate Float Array\n+int64_t input_length = 1000;\n+std::vector<float> input(input_length);\n+for (int64_t i = 0; i < input_length; ++i) {\n+  input[i] = 2.0;\n+}\n+\n+// Cast float array to bytes array\n+const uint8_t* bytes_array = reinterpret_cast<const uint8_t*>(input.data());\n+\n+// Create Arrow Tensor Object, no copy made!\n+// {input_length} is the shape of the tensor\n+auto value_buffer = std::make_shared<Buffer>(bytes_array, sizeof(float) * input_length);\n+Tensor t(float32(), value_buffer, {input_length});\n+```\n+\n+Step 2: Save the Arrow Tensor to Plasma In-Memory Object Store\n+--------------------------------------------------------------\n+Continuing from Step 1, this step will save the tensor to Plasma Store. We\n+use `arrow::ipc::WriteTensor` to write the data.\n+\n+The variable `meta_len` will contain the length of the tensor metadata\n+after the call to `arrow::ipc::WriteTensor`.\n+\n+```cpp\n+// Get the size of the tensor to be stored in Plasma\n+int64_t datasize;\n+ARROW_CHECK_OK(ipc::GetTensorSize(t, &datasize));\n+int32_t meta_len = 0;\n+\n+// Create the Plasma Object\n+// Plasma is responsible for initializing and resizing the buffer\n+// This buffer will contain the _serialized_ tensor\n+std::shared_ptr<Buffer> buffer;\n+ARROW_CHECK_OK(\n+    client_.Create(object_id, datasize, NULL, 0, &buffer));\n+\n+// Writing Process, this will copy the tensor into Plasma\n+io::FixedSizeBufferWriter stream(buffer);\n+ARROW_CHECK_OK(arrow::ipc::WriteTensor(t, &stream, &meta_len, &datasize));\n+\n+// Seal Plasma Object\n+// This computes a hash of the object data by default\n+ARROW_CHECK_OK(client_.Seal(object_id));\n+```\n+\n+Step 3: Access the Tensor in a Python Process\n+---------------------------------------------\n+In Python, we will construct a Plasma client and point it to the store's socket.\n+The `inputs` variable will be a list of Object IDs in their raw byte string form.\n+\n+```python\n+import pyarrow as pa\n+import pyarrow.plasma as plasma\n+\n+plasma_client = plasma.connect('/tmp/plasma', '', 0)\n+\n+# inputs: a list of object ids\n+inputs = [20 * b'1']\n+\n+# Construct Object ID and perform a batch get\n+object_ids = [plasma.ObjectID(inp) for inp in inputs]\n+buffers = plasma_client.get_buffers(object_ids)\n+\n+# Read the tensor and convert to numpy array for each object\n+arrs = []\n+for buffer in buffers:\n+    reader = pa.BufferReader(buffer)\n+    t = pa.read_tensor(reader)\n+    arr = t.to_numpy()\n+    arrs.append(arr)\n+\n+# arrs is now a list of numpy arrays\n+assert np.all(arrs[0] == 2.0 * np.ones(1000, dtype=\"float32\"))\n+```\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-07T23:17:28.698+0000",
                    "updated": "2018-09-07T23:17:28.698+0000",
                    "started": "2018-09-07T23:17:28.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "142363",
                    "issueId": "13181491"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 3000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@e8f1d65[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a3d30ab[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e014ae1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5d1a95e2[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50b2f8ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4064361d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34463ab2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3dfa1c5d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7aca5470[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1bff41ea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1ee97b8d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@739c84f9[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 3000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 07 23:17:27 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-09-07T23:17:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3127/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-28T01:04:30.000+0000",
        "updated": "2018-10-02T14:39:28.000+0000",
        "timeoriginalestimate": null,
        "description": "I can add a short tutorial showing how to\r\n # Serialize a floating-point array in C++ into Tensor\r\n # Save the Tensor to Plasma\r\n # Access the Tensor in Python\r\n\r\nc.f. [https://github.com/apache/arrow/pull/2481]\r\n\r\ncc @[pcmoritz|https://github.com/pcmoritz]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 3000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add Tutorial about Sending Tensor from C++ to Python",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13181491/comment/16607767",
                    "id": "16607767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2481\n[https://github.com/apache/arrow/pull/2481]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
                        "name": "pcmoritz",
                        "key": "pcmoritz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Philipp Moritz",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-09-07T23:17:27.893+0000",
                    "updated": "2018-09-07T23:17:27.893+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3xhc7:",
        "customfield_12314139": null
    }
}