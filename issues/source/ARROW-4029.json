{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13204532",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532",
    "key": "ARROW-4029",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 2400,
            "total": 2400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4029/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 4,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532/worklog/175614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm opened a new pull request #3176: ARROW-4029: [C++] Exclude headers with 'internal' from installation. Document header file conventions in README\nURL: https://github.com/apache/arrow/pull/3176\n \n \n   In reviewing what usages of the `install` command we have, I added a helper function to add `.pc` files to reduce code duplication\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T23:04:16.730+0000",
                    "updated": "2018-12-14T23:04:16.730+0000",
                    "started": "2018-12-14T23:04:16.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175614",
                    "issueId": "13204532"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532/worklog/175626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #3176: ARROW-4029: [C++] Exclude headers with 'internal' from installation. Document header file conventions in README\nURL: https://github.com/apache/arrow/pull/3176#issuecomment-447512941\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=h1) Report\n   > Merging [#3176](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/73f94c93d7eee25a43415dfa7a806b887942abd1?src=pr&el=desc) will **increase** coverage by `1.04%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/3176/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #3176      +/-   ##\n   ==========================================\n   + Coverage    86.4%   87.45%   +1.04%     \n   ==========================================\n     Files         505      447      -58     \n     Lines       69612    65846    -3766     \n   ==========================================\n   - Hits        60150    57586    -2564     \n   + Misses       9365     8260    -1105     \n   + Partials       97        0      -97\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `95.45% <0%> (-1.95%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/3176/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=footer). Last update [73f94c9...f5b3811](https://codecov.io/gh/apache/arrow/pull/3176?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-14T23:53:02.552+0000",
                    "updated": "2018-12-14T23:53:02.552+0000",
                    "started": "2018-12-14T23:53:02.551+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175626",
                    "issueId": "13204532"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532/worklog/175756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #3176: ARROW-4029: [C++] Exclude headers with 'internal' from installation. Document header file conventions in README\nURL: https://github.com/apache/arrow/pull/3176#issuecomment-447600646\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T21:57:34.853+0000",
                    "updated": "2018-12-15T21:57:34.853+0000",
                    "started": "2018-12-15T21:57:34.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175756",
                    "issueId": "13204532"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532/worklog/175757",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #3176: ARROW-4029: [C++] Exclude headers with 'internal' from installation. Document header file conventions in README\nURL: https://github.com/apache/arrow/pull/3176\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/README.md b/cpp/README.md\nindex 1f12117e8d..57c4d99e23 100644\n--- a/cpp/README.md\n+++ b/cpp/README.md\n@@ -313,6 +313,12 @@ which use the default pool without explicitly passing it. You can disable these\n constructors in your application (so that you are accounting properly for all\n memory allocations) by defining `ARROW_NO_DEFAULT_MEMORY_POOL`.\n \n+### Header files\n+\n+We use the `.h` extension for C++ header files. Any header file name not\n+containing `internal` is considered to be a public header, and will be\n+automatically installed by the build.\n+\n ### Error Handling and Exceptions\n \n For error handling, we use `arrow::Status` values instead of throwing C++\ndiff --git a/cpp/cmake_modules/BuildUtils.cmake b/cpp/cmake_modules/BuildUtils.cmake\nindex 1abe97eecc..7585ae9da8 100644\n--- a/cpp/cmake_modules/BuildUtils.cmake\n+++ b/cpp/cmake_modules/BuildUtils.cmake\n@@ -583,7 +583,23 @@ function(ARROW_INSTALL_ALL_HEADERS PATH)\n     set(ARG_PATTERN \"*.h\")\n   endif()\n   file(GLOB CURRENT_DIRECTORY_HEADERS ${ARG_PATTERN})\n+\n+  set(PUBLIC_HEADERS)\n+  foreach(HEADER ${CURRENT_DIRECTORY_HEADERS})\n+    if (NOT ((HEADER MATCHES \"internal\")))\n+      LIST(APPEND PUBLIC_HEADERS ${HEADER})\n+    endif()\n+  endforeach()\n   install(FILES\n-    ${CURRENT_DIRECTORY_HEADERS}\n+    ${PUBLIC_HEADERS}\n     DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/${PATH}\")\n endfunction()\n+\n+function(ARROW_ADD_PKG_CONFIG MODULE)\n+  configure_file(${MODULE}.pc.in\n+    \"${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pc\"\n+    @ONLY)\n+  install(\n+    FILES \"${CMAKE_CURRENT_BINARY_DIR}/${MODULE}.pc\"\n+    DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+endfunction()\ndiff --git a/cpp/src/arrow/CMakeLists.txt b/cpp/src/arrow/CMakeLists.txt\nindex b13c9b66ac..bec290df2a 100644\n--- a/cpp/src/arrow/CMakeLists.txt\n+++ b/cpp/src/arrow/CMakeLists.txt\n@@ -252,12 +252,7 @@ endforeach()\n ARROW_INSTALL_ALL_HEADERS(\"arrow\")\n \n # pkg-config support\n-configure_file(arrow.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/arrow.pc\"\n-  @ONLY)\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/arrow.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"arrow\")\n \n #######################################\n # Unit tests\ndiff --git a/cpp/src/arrow/array/CMakeLists.txt b/cpp/src/arrow/array/CMakeLists.txt\nindex a789c88dd9..4a8ce3490a 100644\n--- a/cpp/src/arrow/array/CMakeLists.txt\n+++ b/cpp/src/arrow/array/CMakeLists.txt\n@@ -16,12 +16,4 @@\n # under the License.\n \n # Headers: top level\n-install(FILES\n-  builder_adaptive.h\n-  builder_base.h\n-  builder_binary.h\n-  builder_decimal.h\n-  builder_dict.h\n-  builder_nested.h\n-  builder_primitive.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/array\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/array\")\ndiff --git a/cpp/src/arrow/compute/CMakeLists.txt b/cpp/src/arrow/compute/CMakeLists.txt\nindex 242937005c..75d152b0ba 100644\n--- a/cpp/src/arrow/compute/CMakeLists.txt\n+++ b/cpp/src/arrow/compute/CMakeLists.txt\n@@ -18,12 +18,7 @@\n ARROW_INSTALL_ALL_HEADERS(\"arrow/compute\")\n \n # pkg-config support\n-configure_file(arrow-compute.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/arrow-compute.pc\"\n-  @ONLY)\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/arrow-compute.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"arrow-compute\")\n \n #######################################\n # Unit tests\ndiff --git a/cpp/src/arrow/compute/kernels/CMakeLists.txt b/cpp/src/arrow/compute/kernels/CMakeLists.txt\nindex 923c8c3bd4..a5a142b5c2 100644\n--- a/cpp/src/arrow/compute/kernels/CMakeLists.txt\n+++ b/cpp/src/arrow/compute/kernels/CMakeLists.txt\n@@ -15,8 +15,4 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-install(FILES\n-  boolean.h\n-  cast.h\n-  hash.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/compute/kernels\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/compute/kernels\")\ndiff --git a/cpp/src/arrow/flight/CMakeLists.txt b/cpp/src/arrow/flight/CMakeLists.txt\nindex bc22d60b71..aa56269a89 100644\n--- a/cpp/src/arrow/flight/CMakeLists.txt\n+++ b/cpp/src/arrow/flight/CMakeLists.txt\n@@ -18,12 +18,7 @@\n add_custom_target(arrow_flight)\n \n # Header files\n-install(FILES\n-  api.h\n-  client.h\n-  server.h\n-  types.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/flight\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/flight\")\n \n SET(ARROW_FLIGHT_STATIC_LINK_LIBS\n   grpc_grpcpp\ndiff --git a/cpp/src/arrow/gpu/CMakeLists.txt b/cpp/src/arrow/gpu/CMakeLists.txt\nindex c37779aefa..8b69c654bb 100644\n--- a/cpp/src/arrow/gpu/CMakeLists.txt\n+++ b/cpp/src/arrow/gpu/CMakeLists.txt\n@@ -64,15 +64,7 @@ install(FILES\n   DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/gpu\")\n \n ARROW_INSTALL_ALL_HEADERS(\"arrow/gpu\")\n-\n-# pkg-config support\n-configure_file(arrow-cuda.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/arrow-cuda.pc\"\n-  @ONLY)\n-\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/arrow-cuda.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"arrow-cuda\")\n \n set(ARROW_CUDA_TEST_LINK_LIBS\n   arrow_cuda_shared\ndiff --git a/cpp/src/arrow/io/CMakeLists.txt b/cpp/src/arrow/io/CMakeLists.txt\nindex 80d68fb503..13b577f7d4 100644\n--- a/cpp/src/arrow/io/CMakeLists.txt\n+++ b/cpp/src/arrow/io/CMakeLists.txt\n@@ -41,13 +41,4 @@ ADD_ARROW_BENCHMARK(memory-benchmark\n   PREFIX \"arrow-io\")\n \n # Headers: top level\n-install(FILES\n-  api.h\n-  buffered.h\n-  compressed.h\n-  file.h\n-  hdfs.h\n-  interfaces.h\n-  memory.h\n-  readahead.h\n-  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/io\")\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/io\")\ndiff --git a/cpp/src/arrow/python/CMakeLists.txt b/cpp/src/arrow/python/CMakeLists.txt\nindex 4913083537..98c105ae62 100644\n--- a/cpp/src/arrow/python/CMakeLists.txt\n+++ b/cpp/src/arrow/python/CMakeLists.txt\n@@ -94,12 +94,7 @@ endif()\n ARROW_INSTALL_ALL_HEADERS(\"arrow/python\")\n \n # pkg-config support\n-configure_file(arrow-python.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/arrow-python.pc\"\n-  @ONLY)\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/arrow-python.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"arrow-python\")\n \n # ----------------------------------------------------------------------\n \ndiff --git a/cpp/src/arrow/util/string_view/CMakeLists.txt b/cpp/src/arrow/util/string_view/CMakeLists.txt\nindex bae6bdb807..7e553077db 100644\n--- a/cpp/src/arrow/util/string_view/CMakeLists.txt\n+++ b/cpp/src/arrow/util/string_view/CMakeLists.txt\n@@ -17,4 +17,4 @@\n \n install(FILES\n   string_view.hpp\n-  DESTINATION include/arrow/util/string_view)\n+  DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/arrow/util/string_view\")\ndiff --git a/cpp/src/arrow/util/variant/CMakeLists.txt b/cpp/src/arrow/util/variant/CMakeLists.txt\nindex 0ebb251624..b7a5692b62 100644\n--- a/cpp/src/arrow/util/variant/CMakeLists.txt\n+++ b/cpp/src/arrow/util/variant/CMakeLists.txt\n@@ -19,10 +19,4 @@\n # arrow_util_variant\n #######################################\n \n-install(FILES\n-  optional.h\n-  recursive_wrapper.h\n-  variant_cast.h\n-  variant_io.h\n-  variant_visitor.h\n-  DESTINATION include/arrow/util/variant)\n+ARROW_INSTALL_ALL_HEADERS(\"arrow/util/variant\")\ndiff --git a/cpp/src/gandiva/CMakeLists.txt b/cpp/src/gandiva/CMakeLists.txt\nindex 9763f297b0..da0d3bba69 100644\n--- a/cpp/src/gandiva/CMakeLists.txt\n+++ b/cpp/src/gandiva/CMakeLists.txt\n@@ -96,12 +96,7 @@ include(GNUInstallDirs)\n ARROW_INSTALL_ALL_HEADERS(\"gandiva\")\n \n # pkg-config support\n-configure_file(gandiva.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/gandiva.pc\"\n-  @ONLY)\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/gandiva.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"gandiva\")\n \n set(GANDIVA_STATIC_TEST_LINK_LIBS\n   gandiva_static\ndiff --git a/cpp/src/parquet/CMakeLists.txt b/cpp/src/parquet/CMakeLists.txt\nindex 6b7846b709..995c39adb7 100644\n--- a/cpp/src/parquet/CMakeLists.txt\n+++ b/cpp/src/parquet/CMakeLists.txt\n@@ -249,13 +249,7 @@ install(FILES\n   DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/parquet\")\n \n # pkg-config support\n-configure_file(parquet.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/parquet.pc\"\n-  @ONLY)\n-\n-install(FILES\n-  \"${CMAKE_CURRENT_BINARY_DIR}/parquet.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"parquet\")\n \n ADD_PARQUET_TEST(bloom_filter-test)\n ADD_PARQUET_TEST(column_reader-test)\ndiff --git a/cpp/src/plasma/CMakeLists.txt b/cpp/src/plasma/CMakeLists.txt\nindex 317835bb7a..485f1c53ff 100644\n--- a/cpp/src/plasma/CMakeLists.txt\n+++ b/cpp/src/plasma/CMakeLists.txt\n@@ -154,12 +154,7 @@ install(TARGETS plasma_store_server\n   DESTINATION ${CMAKE_INSTALL_BINDIR})\n \n # pkg-config support\n-configure_file(plasma.pc.in\n-  \"${CMAKE_CURRENT_BINARY_DIR}/plasma.pc\"\n-  @ONLY)\n-install(\n-  FILES \"${CMAKE_CURRENT_BINARY_DIR}/plasma.pc\"\n-  DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig/\")\n+ARROW_ADD_PKG_CONFIG(\"plasma\")\n \n if(ARROW_PLASMA_JAVA_CLIENT)\n   # Plasma java client support\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-12-15T21:57:55.054+0000",
                    "updated": "2018-12-15T21:57:55.054+0000",
                    "started": "2018-12-15T21:57:55.052+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "175757",
                    "issueId": "13204532"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 2400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@10aea750[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5859d774[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c91c9fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1ae55d6c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@254da410[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ffa2a58[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4da6cc7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7d18f69e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35bda009[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2b0be40c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50b53002[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6a23908c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 2400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Dec 15 21:57:45 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-12-15T21:57:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4029/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-12-14T17:12:17.000+0000",
        "updated": "2018-12-15T21:57:55.000+0000",
        "timeoriginalestimate": null,
        "description": "The purpose of this is so that a common {{ARROW_INSTALL_PUBLIC_HEADERS}} can recognize and exclude any file that is non-public from installation.\r\n\r\nsee discussion on https://github.com/apache/arrow/pull/3172",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 2400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Define and document naming convention for internal / private header files not to be installed",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13204532/comment/16722304",
                    "id": "16722304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3176\n[https://github.com/apache/arrow/pull/3176]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-15T21:57:45.332+0000",
                    "updated": "2018-12-15T21:57:45.332+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s01jbs:",
        "customfield_12314139": null
    }
}