{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13304397",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397",
    "key": "ARROW-8776",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8776/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/432940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174\n\n\n   A Java service, on a failed unary-unary call, will not send separate headers and trailers, but will instead consolidate headers into the trailers. So C++ clients should check both for headers and trailers, or it may miss headers that the Java server intended for clients.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T01:13:24.229+0000",
                    "updated": "2020-05-14T01:13:24.229+0000",
                    "started": "2020-05-14T01:13:24.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "432940",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/432942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#issuecomment-628328841\n\n\n   https://issues.apache.org/jira/browse/ARROW-8776\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-05-14T01:17:00.683+0000",
                    "updated": "2020-05-14T01:17:00.683+0000",
                    "started": "2020-05-14T01:17:00.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "432942",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/441420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#discussion_r435412857\n\n\n\n##########\nFile path: cpp/src/arrow/flight/test_integration.cc\n##########\n@@ -103,10 +103,142 @@ class AuthBasicProtoScenario : public Scenario {\n   }\n };\n \n+class TestServerMiddleware : public ServerMiddleware {\n+ public:\n+  explicit TestServerMiddleware(std::string received) : received_(received) {}\n+  void SendingHeaders(AddCallHeaders* outgoing_headers) override {\n+    outgoing_headers->AddHeader(\"x-middleware\", received_);\n+  }\n+  void CallCompleted(const Status& status) override {}\n+\n+  std::string name() const override { return \"GrpcTrailersMiddleware\"; }\n+\n+ private:\n+  std::string received_;\n+};\n+\n+class TestServerMiddlewareFactory : public ServerMiddlewareFactory {\n+ public:\n+  Status StartCall(const CallInfo& info, const CallHeaders& incoming_headers,\n+                   std::shared_ptr<ServerMiddleware>* middleware) override {\n+    const std::pair<CallHeaders::const_iterator, CallHeaders::const_iterator>& iter_pair =\n+        incoming_headers.equal_range(\"x-middleware\");\n+    std::string received = \"\";\n+    if (iter_pair.first != iter_pair.second) {\n+      const util::string_view& value = (*iter_pair.first).second;\n+      received = std::string(value);\n+    }\n+    *middleware = std::make_shared<TestServerMiddleware>(received);\n+    return Status::OK();\n+  }\n+};\n+\n+class TestClientMiddleware : public ClientMiddleware {\n+ public:\n+  explicit TestClientMiddleware(std::string* received_header)\n+      : received_header_(received_header) {}\n+\n+  void SendingHeaders(AddCallHeaders* outgoing_headers) {\n+    outgoing_headers->AddHeader(\"x-middleware\", \"expected value\");\n+  }\n+\n+  void ReceivedHeaders(const CallHeaders& incoming_headers) {\n+    const std::pair<CallHeaders::const_iterator, CallHeaders::const_iterator>& iter_pair =\n+        incoming_headers.equal_range(\"x-middleware\");\n+    if (iter_pair.first != iter_pair.second) {\n+      const util::string_view& value = (*iter_pair.first).second;\n+      *received_header_ = std::string(value);\n+    }\n+  }\n+\n+  void CallCompleted(const Status& status) {}\n+\n+ private:\n+  std::string* received_header_;\n+};\n+\n+class TestClientMiddlewareFactory : public ClientMiddlewareFactory {\n+ public:\n+  void StartCall(const CallInfo& info, std::unique_ptr<ClientMiddleware>* middleware) {\n+    *middleware =\n+        std::unique_ptr<ClientMiddleware>(new TestClientMiddleware(&received_header_));\n+  }\n+\n+  std::string received_header_;\n+};\n+\n+class MiddlewareServer : public FlightServerBase {\n+  Status GetFlightInfo(const ServerCallContext& context,\n+                       const FlightDescriptor& descriptor,\n+                       std::unique_ptr<FlightInfo>* result) override {\n+    if (descriptor.type == FlightDescriptor::DescriptorType::CMD &&\n+        descriptor.cmd == \"success\") {\n+      // Don't fail\n+      std::shared_ptr<Schema> schema = arrow::schema({});\n+      Location location;\n+      RETURN_NOT_OK(Location::ForGrpcTcp(\"localhost\", 10010, &location));\n\nReview comment:\n       This is a fake location, right?\n\n##########\nFile path: cpp/src/arrow/flight/test_integration.cc\n##########\n@@ -103,10 +103,142 @@ class AuthBasicProtoScenario : public Scenario {\n   }\n };\n \n+class TestServerMiddleware : public ServerMiddleware {\n\nReview comment:\n       Could you perhaps briefly describe in comments those middleware classes?\n\n##########\nFile path: cpp/src/arrow/flight/client.cc\n##########\n@@ -148,7 +142,28 @@ class GrpcClientInterceptorAdapter : public grpc::experimental::Interceptor {\n   }\n \n  private:\n+  void ReceivedHeaders(std::multimap<grpc::string_ref, grpc::string_ref>* metadata) {\n+    if (received_headers_) {\n\nReview comment:\n       Does this mean trailing headers will be ignored if there are any initial headers?\n\n##########\nFile path: cpp/src/arrow/flight/client.cc\n##########\n@@ -148,7 +142,28 @@ class GrpcClientInterceptorAdapter : public grpc::experimental::Interceptor {\n   }\n \n  private:\n+  void ReceivedHeaders(std::multimap<grpc::string_ref, grpc::string_ref>* metadata) {\n\nReview comment:\n       Make this `const std::multimap<...>&`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T17:09:04.244+0000",
                    "updated": "2020-06-04T17:09:04.244+0000",
                    "started": "2020-06-04T17:09:04.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441420",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/441492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#discussion_r435502932\n\n\n\n##########\nFile path: cpp/src/arrow/flight/client.cc\n##########\n@@ -148,7 +142,28 @@ class GrpcClientInterceptorAdapter : public grpc::experimental::Interceptor {\n   }\n \n  private:\n+  void ReceivedHeaders(std::multimap<grpc::string_ref, grpc::string_ref>* metadata) {\n+    if (received_headers_) {\n\nReview comment:\n       Yes - I did it that way as we don't normally expose trailers in other contexts (e.g. there's no way to send one), so I decided it would be best to not mix the two except when we're forced to by grpc-java.\r\n   \r\n   (Or rather, we do expose them with custom error metadata, but that's in a limited context.)\n\n##########\nFile path: cpp/src/arrow/flight/test_integration.cc\n##########\n@@ -103,10 +103,142 @@ class AuthBasicProtoScenario : public Scenario {\n   }\n };\n \n+class TestServerMiddleware : public ServerMiddleware {\n+ public:\n+  explicit TestServerMiddleware(std::string received) : received_(received) {}\n+  void SendingHeaders(AddCallHeaders* outgoing_headers) override {\n+    outgoing_headers->AddHeader(\"x-middleware\", received_);\n+  }\n+  void CallCompleted(const Status& status) override {}\n+\n+  std::string name() const override { return \"GrpcTrailersMiddleware\"; }\n+\n+ private:\n+  std::string received_;\n+};\n+\n+class TestServerMiddlewareFactory : public ServerMiddlewareFactory {\n+ public:\n+  Status StartCall(const CallInfo& info, const CallHeaders& incoming_headers,\n+                   std::shared_ptr<ServerMiddleware>* middleware) override {\n+    const std::pair<CallHeaders::const_iterator, CallHeaders::const_iterator>& iter_pair =\n+        incoming_headers.equal_range(\"x-middleware\");\n+    std::string received = \"\";\n+    if (iter_pair.first != iter_pair.second) {\n+      const util::string_view& value = (*iter_pair.first).second;\n+      received = std::string(value);\n+    }\n+    *middleware = std::make_shared<TestServerMiddleware>(received);\n+    return Status::OK();\n+  }\n+};\n+\n+class TestClientMiddleware : public ClientMiddleware {\n+ public:\n+  explicit TestClientMiddleware(std::string* received_header)\n+      : received_header_(received_header) {}\n+\n+  void SendingHeaders(AddCallHeaders* outgoing_headers) {\n+    outgoing_headers->AddHeader(\"x-middleware\", \"expected value\");\n+  }\n+\n+  void ReceivedHeaders(const CallHeaders& incoming_headers) {\n+    const std::pair<CallHeaders::const_iterator, CallHeaders::const_iterator>& iter_pair =\n+        incoming_headers.equal_range(\"x-middleware\");\n+    if (iter_pair.first != iter_pair.second) {\n+      const util::string_view& value = (*iter_pair.first).second;\n+      *received_header_ = std::string(value);\n+    }\n+  }\n+\n+  void CallCompleted(const Status& status) {}\n+\n+ private:\n+  std::string* received_header_;\n+};\n+\n+class TestClientMiddlewareFactory : public ClientMiddlewareFactory {\n+ public:\n+  void StartCall(const CallInfo& info, std::unique_ptr<ClientMiddleware>* middleware) {\n+    *middleware =\n+        std::unique_ptr<ClientMiddleware>(new TestClientMiddleware(&received_header_));\n+  }\n+\n+  std::string received_header_;\n+};\n+\n+class MiddlewareServer : public FlightServerBase {\n+  Status GetFlightInfo(const ServerCallContext& context,\n+                       const FlightDescriptor& descriptor,\n+                       std::unique_ptr<FlightInfo>* result) override {\n+    if (descriptor.type == FlightDescriptor::DescriptorType::CMD &&\n+        descriptor.cmd == \"success\") {\n+      // Don't fail\n+      std::shared_ptr<Schema> schema = arrow::schema({});\n+      Location location;\n+      RETURN_NOT_OK(Location::ForGrpcTcp(\"localhost\", 10010, &location));\n\nReview comment:\n       Yes, I clarified with a comment.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T19:36:25.280+0000",
                    "updated": "2020-06-04T19:36:25.280+0000",
                    "started": "2020-06-04T19:36:25.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441492",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/441493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#discussion_r435503243\n\n\n\n##########\nFile path: cpp/src/arrow/flight/test_integration.cc\n##########\n@@ -103,10 +103,142 @@ class AuthBasicProtoScenario : public Scenario {\n   }\n };\n \n+class TestServerMiddleware : public ServerMiddleware {\n\nReview comment:\n       I added comments to explain the purpose and scope of the test that these classes implement.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-04T19:36:51.193+0000",
                    "updated": "2020-06-04T19:36:51.193+0000",
                    "started": "2020-06-04T19:36:51.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "441493",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/443654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#discussion_r438036975\n\n\n\n##########\nFile path: cpp/src/arrow/flight/client.cc\n##########\n@@ -273,7 +267,29 @@ class GrpcClientInterceptorAdapter : public grpc::experimental::Interceptor {\n   }\n \n  private:\n+  void ReceivedHeaders(\n+      const std::multimap<grpc::string_ref, grpc::string_ref>& metadata) {\n+    if (received_headers_) {\n+      return;\n+    }\n+    received_headers_ = true;\n+    CallHeaders headers;\n+    for (const auto& entry : metadata) {\n+      headers.insert({util::string_view(entry.first.data(), entry.first.length()),\n+                      util::string_view(entry.second.data(), entry.second.length())});\n+    }\n+    for (const auto& middleware : middleware_) {\n+      middleware->ReceivedHeaders(headers);\n\nReview comment:\n       What is the semantics of `ReceivedHeaders` if headers are empty? Is it always called? Only in some circumstances?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T11:00:24.097+0000",
                    "updated": "2020-06-10T11:00:24.097+0000",
                    "started": "2020-06-10T11:00:24.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443654",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/443655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#issuecomment-641927046\n\n\n   (also rebased to force AppVeyor rebuild)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T11:00:36.946+0000",
                    "updated": "2020-06-10T11:00:36.946+0000",
                    "started": "2020-06-10T11:00:36.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443655",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/443898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174#discussion_r438312222\n\n\n\n##########\nFile path: cpp/src/arrow/flight/client.cc\n##########\n@@ -273,7 +267,29 @@ class GrpcClientInterceptorAdapter : public grpc::experimental::Interceptor {\n   }\n \n  private:\n+  void ReceivedHeaders(\n+      const std::multimap<grpc::string_ref, grpc::string_ref>& metadata) {\n+    if (received_headers_) {\n+      return;\n+    }\n+    received_headers_ = true;\n+    CallHeaders headers;\n+    for (const auto& entry : metadata) {\n+      headers.insert({util::string_view(entry.first.data(), entry.first.length()),\n+                      util::string_view(entry.second.data(), entry.second.length())});\n+    }\n+    for (const auto& middleware : middleware_) {\n+      middleware->ReceivedHeaders(headers);\n\nReview comment:\n       It will always be called once. (Calls to Intercept(), which calls this method, don't run concurrently for the same RPC.)\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T18:02:17.875+0000",
                    "updated": "2020-06-10T18:02:17.875+0000",
                    "started": "2020-06-10T18:02:17.875+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443898",
                    "issueId": "13304397"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/worklog/443933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #7174:\nURL: https://github.com/apache/arrow/pull/7174\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T19:25:52.384+0000",
                    "updated": "2020-06-10T19:25:52.384+0000",
                    "started": "2020-06-10T19:25:52.384+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443933",
                    "issueId": "13304397"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2065fce2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a339c55[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6acde6cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7c8a1ef4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@517d2bd8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@307f1659[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@35016d1c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1950b8f6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@214b63ef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@694e6441[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57998df9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4b1208f4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 10 19:25:41 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-10T19:25:41.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8776/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-05-12T15:55:14.000+0000",
        "updated": "2020-06-10T19:25:53.000+0000",
        "timeoriginalestimate": null,
        "description": "For a failed call, gRPC/Java may consolidate headers with trailers, so Flight/C++ needs to check both headers and trailers to get any headers that may have been sent.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 5400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[FlightRPC][C++] Flight/C++ middleware don't receive headers on failed calls to Java servers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13304397/comment/17132658",
                    "id": "17132658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 7174\n[https://github.com/apache/arrow/pull/7174]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-06-10T19:25:41.332+0000",
                    "updated": "2020-06-10T19:25:41.332+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0en9k:",
        "customfield_12314139": null
    }
}