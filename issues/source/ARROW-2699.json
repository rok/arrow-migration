{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13165488",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488",
    "key": "ARROW-2699",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2699/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 9,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/111893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy opened a new pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-14T15:05:54.422+0000",
                    "updated": "2018-06-14T15:05:54.422+0000",
                    "started": "2018-06-14T15:05:54.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111893",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/111930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#issuecomment-397367168\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=h1) Report\n   > Merging [#2140](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2b00b8a97bb9a0eadc76c522eeb2f6a37f86f133?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n   > The diff coverage is `79.31%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2140/graphs/tree.svg?height=150&width=650&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2140      +/-   ##\n   ==========================================\n   - Coverage   86.41%   86.38%   -0.04%     \n   ==========================================\n     Files         242      230      -12     \n     Lines       41534    40700     -834     \n   ==========================================\n   - Hits        35893    35160     -733     \n   + Misses       5641     5540     -101\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/table.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `86.53% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `57.39% <0%> (-0.51%)` | :arrow_down: |\n   | [cpp/src/arrow/table-test.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS10ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_table.py](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90YWJsZS5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5jYw==) | `94.06% <63.63%> (-1.03%)` | :arrow_down: |\n   | [python/pyarrow/table.pxi](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGFibGUucHhp) | `69.05% <75%> (+0.05%)` | :arrow_up: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `92.41% <83.33%> (-0.21%)` | :arrow_down: |\n   | [cpp/src/arrow/util/stl.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3N0bC5o) | `96.66% <90%> (-3.34%)` | :arrow_down: |\n   | [rust/src/bitmap.rs](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYml0bWFwLnJz) | | |\n   | ... and [11 more](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=footer). Last update [2b00b8a...8290c07](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-14T17:02:08.301+0000",
                    "updated": "2018-06-14T17:02:08.301+0000",
                    "started": "2018-06-14T17:02:08.301+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "111930",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112196",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#discussion_r195641033\n \n \n\n ##########\n File path: cpp/src/arrow/util/stl.h\n ##########\n @@ -56,6 +56,22 @@ inline std::vector<T> AddVectorElement(const std::vector<T>& values, size_t inde\n   return out;\n }\n \n+template <typename T>\n+inline std::vector<T> ReplaceVectorElement(const std::vector<T>& values, size_t index,\n+                                           const T& new_element) {\n+  DCHECK_LE(index, values.size());\n+  std::vector<T> out;\n+  out.reserve(values.size() + 1);\n \n Review comment:\n   Can this append at the end? If not then remove the `+ 1` here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T06:16:55.045+0000",
                    "updated": "2018-06-15T06:16:55.045+0000",
                    "started": "2018-06-15T06:16:55.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112196",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#discussion_r195641105\n \n \n\n ##########\n File path: python/pyarrow/tests/test_table.py\n ##########\n @@ -382,6 +383,24 @@ def test_table_add_column():\n     assert t4.equals(expected)\n \n \n+def test_table_set_column():\n+    data = [\n+        pa.array(range(5)),\n+        pa.array([-10, -5, 0, 5, 10]),\n+        pa.array(range(5, 10))\n+    ]\n+    table = pa.Table.from_arrays(data, names=('a', 'b', 'c'))\n+\n+    col = pa.Column.from_array('d', data[1])\n+    t2 = table.set_column(0, col)\n+\n+    expected_data = copy.copy(data)\n \n Review comment:\n   Can also use `list`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T06:16:55.045+0000",
                    "updated": "2018-06-15T06:16:55.045+0000",
                    "started": "2018-06-15T06:16:55.045+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112197",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#discussion_r195641264\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -635,6 +635,30 @@ cdef class Schema:\n \n         return pyarrow_wrap_schema(new_schema)\n \n+    def set(self, int i, Field field):\n \n Review comment:\n   `set_field` for nominal consistency? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T06:16:55.309+0000",
                    "updated": "2018-06-15T06:16:55.309+0000",
                    "started": "2018-06-15T06:16:55.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112198",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112263",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "xhochy commented on a change in pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#discussion_r195679091\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -635,6 +635,30 @@ cdef class Schema:\n \n         return pyarrow_wrap_schema(new_schema)\n \n+    def set(self, int i, Field field):\n \n Review comment:\n   I have sticked to `set` as we also have simply `remove` and `insert` on the Schema.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T09:27:26.356+0000",
                    "updated": "2018-06-15T09:27:26.356+0000",
                    "started": "2018-06-15T09:27:26.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112263",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#discussion_r195679510\n \n \n\n ##########\n File path: python/pyarrow/types.pxi\n ##########\n @@ -635,6 +635,30 @@ cdef class Schema:\n \n         return pyarrow_wrap_schema(new_schema)\n \n+    def set(self, int i, Field field):\n \n Review comment:\n   :+1:\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T09:29:01.652+0000",
                    "updated": "2018-06-15T09:29:01.652+0000",
                    "started": "2018-06-15T09:29:01.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112264",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/112297",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140#issuecomment-397367168\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=h1) Report\n   > Merging [#2140](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/2b00b8a97bb9a0eadc76c522eeb2f6a37f86f133?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n   > The diff coverage is `78.94%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2140/graphs/tree.svg?width=650&height=150&token=LpTCFbqVT1&src=pr)](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2140      +/-   ##\n   ==========================================\n   - Coverage   86.41%   86.39%   -0.03%     \n   ==========================================\n     Files         242      230      -12     \n     Lines       41534    40701     -833     \n   ==========================================\n   - Hits        35893    35162     -731     \n   + Misses       5641     5539     -102\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/table.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5o) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `86.53% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `57.39% <0%> (-0.51%)` | :arrow_down: |\n   | [python/pyarrow/tests/test\\_table.py](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF90YWJsZS5weQ==) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table-test.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS10ZXN0LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/table.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90YWJsZS5jYw==) | `94.06% <63.63%> (-1.03%)` | :arrow_down: |\n   | [python/pyarrow/table.pxi](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGFibGUucHhp) | `69.05% <75%> (+0.05%)` | :arrow_up: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `92.41% <83.33%> (-0.21%)` | :arrow_down: |\n   | [cpp/src/arrow/util/stl.h](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3N0bC5o) | `96.66% <90%> (-3.34%)` | :arrow_down: |\n   | [python/pyarrow/parquet.py](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvcGFycXVldC5weQ==) | `88.95% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [14 more](https://codecov.io/gh/apache/arrow/pull/2140/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=footer). Last update [2b00b8a...95f264d](https://codecov.io/gh/apache/arrow/pull/2140?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-15T11:40:53.972+0000",
                    "updated": "2018-06-15T11:40:53.972+0000",
                    "started": "2018-06-15T11:40:53.972+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "112297",
                    "issueId": "13165488"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/worklog/114303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2140: ARROW-2699: [C++/Python] Add Table method that replaces a column with a new supplied column\nURL: https://github.com/apache/arrow/pull/2140\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/table-test.cc b/cpp/src/arrow/table-test.cc\nindex 0b9f75df19..f178e61200 100644\n--- a/cpp/src/arrow/table-test.cc\n+++ b/cpp/src/arrow/table-test.cc\n@@ -465,6 +465,25 @@ TEST_F(TestTable, RemoveColumn) {\n   ASSERT_TRUE(result->Equals(*expected));\n }\n \n+TEST_F(TestTable, SetColumn) {\n+  const int64_t length = 10;\n+  MakeExample1(length);\n+\n+  auto table_sp = Table::Make(schema_, columns_);\n+  const Table& table = *table_sp;\n+\n+  std::shared_ptr<Table> result;\n+  ASSERT_OK(table.SetColumn(0, table.column(1), &result));\n+\n+  auto ex_schema =\n+      ::arrow::schema({schema_->field(1), schema_->field(1), schema_->field(2)});\n+  std::vector<std::shared_ptr<Column>> ex_columns = {table.column(1), table.column(1),\n+                                                     table.column(2)};\n+\n+  auto expected = Table::Make(ex_schema, ex_columns);\n+  ASSERT_TRUE(result->Equals(*expected));\n+}\n+\n TEST_F(TestTable, RemoveColumnEmpty) {\n   // ARROW-1865\n   const int64_t length = 10;\ndiff --git a/cpp/src/arrow/table.cc b/cpp/src/arrow/table.cc\nindex 0926ba8d53..87196e7e3a 100644\n--- a/cpp/src/arrow/table.cc\n+++ b/cpp/src/arrow/table.cc\n@@ -308,6 +308,24 @@ class SimpleTable : public Table {\n     return Status::OK();\n   }\n \n+  Status SetColumn(int i, const std::shared_ptr<Column>& col,\n+                   std::shared_ptr<Table>* out) const override {\n+    DCHECK(col != nullptr);\n+\n+    if (col->length() != num_rows_) {\n+      std::stringstream ss;\n+      ss << \"Added column's length must match table's length. Expected length \"\n+         << num_rows_ << \" but got length \" << col->length();\n+      return Status::Invalid(ss.str());\n+    }\n+\n+    std::shared_ptr<Schema> new_schema;\n+    RETURN_NOT_OK(schema_->SetField(i, col->field(), &new_schema));\n+\n+    *out = Table::Make(new_schema, internal::ReplaceVectorElement(columns_, i, col));\n+    return Status::OK();\n+  }\n+\n   std::shared_ptr<Table> ReplaceSchemaMetadata(\n       const std::shared_ptr<const KeyValueMetadata>& metadata) const override {\n     auto new_schema = schema_->AddMetadata(metadata);\ndiff --git a/cpp/src/arrow/table.h b/cpp/src/arrow/table.h\nindex 7fa207fee2..43c51a7b74 100644\n--- a/cpp/src/arrow/table.h\n+++ b/cpp/src/arrow/table.h\n@@ -220,6 +220,10 @@ class ARROW_EXPORT Table {\n   virtual Status AddColumn(int i, const std::shared_ptr<Column>& column,\n                            std::shared_ptr<Table>* out) const = 0;\n \n+  /// \\brief Replace a column in the table, producing a new Table\n+  virtual Status SetColumn(int i, const std::shared_ptr<Column>& column,\n+                           std::shared_ptr<Table>* out) const = 0;\n+\n   /// \\brief Replace schema key-value metadata with new metadata (EXPERIMENTAL)\n   /// \\since 0.5.0\n   ///\ndiff --git a/cpp/src/arrow/type.cc b/cpp/src/arrow/type.cc\nindex 695a72eab0..51c4bbf88d 100644\n--- a/cpp/src/arrow/type.cc\n+++ b/cpp/src/arrow/type.cc\n@@ -346,6 +346,17 @@ Status Schema::AddField(int i, const std::shared_ptr<Field>& field,\n   return Status::OK();\n }\n \n+Status Schema::SetField(int i, const std::shared_ptr<Field>& field,\n+                        std::shared_ptr<Schema>* out) const {\n+  if (i < 0 || i > this->num_fields()) {\n+    return Status::Invalid(\"Invalid column index to add field.\");\n+  }\n+\n+  *out = std::make_shared<Schema>(internal::ReplaceVectorElement(fields_, i, field),\n+                                  metadata_);\n+  return Status::OK();\n+}\n+\n bool Schema::HasMetadata() const {\n   return (metadata_ != nullptr) && (metadata_->size() > 0);\n }\ndiff --git a/cpp/src/arrow/type.h b/cpp/src/arrow/type.h\nindex 889f389639..8e128809e2 100644\n--- a/cpp/src/arrow/type.h\n+++ b/cpp/src/arrow/type.h\n@@ -776,6 +776,8 @@ class ARROW_EXPORT Schema {\n   Status AddField(int i, const std::shared_ptr<Field>& field,\n                   std::shared_ptr<Schema>* out) const;\n   Status RemoveField(int i, std::shared_ptr<Schema>* out) const;\n+  Status SetField(int i, const std::shared_ptr<Field>& field,\n+                  std::shared_ptr<Schema>* out) const;\n \n   /// \\brief Replace key-value metadata with new metadata\n   ///\ndiff --git a/cpp/src/arrow/util/stl.h b/cpp/src/arrow/util/stl.h\nindex 27c1778680..163ed40c32 100644\n--- a/cpp/src/arrow/util/stl.h\n+++ b/cpp/src/arrow/util/stl.h\n@@ -56,6 +56,22 @@ inline std::vector<T> AddVectorElement(const std::vector<T>& values, size_t inde\n   return out;\n }\n \n+template <typename T>\n+inline std::vector<T> ReplaceVectorElement(const std::vector<T>& values, size_t index,\n+                                           const T& new_element) {\n+  DCHECK_LE(index, values.size());\n+  std::vector<T> out;\n+  out.reserve(values.size());\n+  for (size_t i = 0; i < index; ++i) {\n+    out.push_back(values[i]);\n+  }\n+  out.push_back(new_element);\n+  for (size_t i = index + 1; i < values.size(); ++i) {\n+    out.push_back(values[i]);\n+  }\n+  return out;\n+}\n+\n }  // namespace internal\n }  // namespace arrow\n \ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex a6188b696d..8180276106 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -302,6 +302,8 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         CStatus AddField(int i, const shared_ptr[CField]& field,\n                          shared_ptr[CSchema]* out)\n         CStatus RemoveField(int i, shared_ptr[CSchema]* out)\n+        CStatus SetField(int i, const shared_ptr[CField]& field,\n+                         shared_ptr[CSchema]* out)\n \n         # Removed const in Cython so don't have to cast to get code to generate\n         shared_ptr[CSchema] AddMetadata(\n@@ -509,6 +511,8 @@ cdef extern from \"arrow/api.h\" namespace \"arrow\" nogil:\n         CStatus AddColumn(int i, const shared_ptr[CColumn]& column,\n                           shared_ptr[CTable]* out)\n         CStatus RemoveColumn(int i, shared_ptr[CTable]* out)\n+        CStatus SetColumn(int i, const shared_ptr[CColumn]& column,\n+                          shared_ptr[CTable]* out)\n \n         CStatus Flatten(CMemoryPool* pool, shared_ptr[CTable]* out)\n \ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex 6e64d32909..fe2def1203 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -1331,6 +1331,17 @@ cdef class Table:\n \n         return pyarrow_wrap_table(c_table)\n \n+    def set_column(self, int i, Column column):\n+        \"\"\"\n+        Replace column in Table at position. Returns new table\n+        \"\"\"\n+        cdef shared_ptr[CTable] c_table\n+\n+        with nogil:\n+            check_status(self.table.SetColumn(i, column.sp_column, &c_table))\n+\n+        return pyarrow_wrap_table(c_table)\n+\n     def drop(self, columns):\n         \"\"\"\n         Drop one or more columns and return a new table.\ndiff --git a/python/pyarrow/tests/test_table.py b/python/pyarrow/tests/test_table.py\nindex 1df57bde37..3d1e3d37b6 100644\n--- a/python/pyarrow/tests/test_table.py\n+++ b/python/pyarrow/tests/test_table.py\n@@ -382,6 +382,24 @@ def test_table_add_column():\n     assert t4.equals(expected)\n \n \n+def test_table_set_column():\n+    data = [\n+        pa.array(range(5)),\n+        pa.array([-10, -5, 0, 5, 10]),\n+        pa.array(range(5, 10))\n+    ]\n+    table = pa.Table.from_arrays(data, names=('a', 'b', 'c'))\n+\n+    col = pa.Column.from_array('d', data[1])\n+    t2 = table.set_column(0, col)\n+\n+    expected_data = list(data)\n+    expected_data[0] = data[1]\n+    expected = pa.Table.from_arrays(expected_data,\n+                                    names=('d', 'b', 'c'))\n+    assert t2.equals(expected)\n+\n+\n def test_table_drop():\n     \"\"\" drop one or more columns given labels\"\"\"\n     a = pa.array(range(5))\ndiff --git a/python/pyarrow/types.pxi b/python/pyarrow/types.pxi\nindex 9be2ef6afb..4860fe5afc 100644\n--- a/python/pyarrow/types.pxi\n+++ b/python/pyarrow/types.pxi\n@@ -635,6 +635,30 @@ cdef class Schema:\n \n         return pyarrow_wrap_schema(new_schema)\n \n+    def set(self, int i, Field field):\n+        \"\"\"\n+        Replace a field at position i in the schema.\n+\n+        Parameters\n+        ----------\n+        i: int\n+        field: Field\n+\n+        Returns\n+        -------\n+        schema: Schema\n+        \"\"\"\n+        cdef:\n+            shared_ptr[CSchema] new_schema\n+            shared_ptr[CField] c_field\n+\n+        c_field = field.sp_field\n+\n+        with nogil:\n+            check_status(self.schema.SetField(i, c_field, &new_schema))\n+\n+        return pyarrow_wrap_schema(new_schema)\n+\n     def add_metadata(self, dict metadata):\n         \"\"\"\n         Add metadata as dict of string keys and values to Schema\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-06-21T11:28:42.855+0000",
                    "updated": "2018-06-21T11:28:42.855+0000",
                    "started": "2018-06-21T11:28:42.854+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "114303",
                    "issueId": "13165488"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79f44d7b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45f86e00[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@502e2ec[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@30c1422[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2febaeb8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@465ad0bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@54dd5f19[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3713fca4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@45ff0a90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5530eda3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bab558b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@43f56286[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jun 21 11:33:20 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-06-21T11:33:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2699/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-06-12T04:13:14.000+0000",
        "updated": "2018-06-21T11:33:20.000+0000",
        "timeoriginalestimate": null,
        "description": "This method would produce a new table since table objects are immutable. Example:\r\n\r\n{code}\r\nnew_column = table.column(name).cast(pa.timestamp('ms'))\r\nnew_table = table.set_column(name, new_column)\r\n{code}\r\n\r\nSee discussion in https://github.com/apache/arrow/pull/2129#issuecomment-396423002",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] Add Table method that replaces a column with a new supplied column",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13165488/comment/16519244",
                    "id": "16519244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Resolved by PR 2140",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-06-21T11:33:20.745+0000",
                    "updated": "2018-06-21T11:33:20.745+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ur9b:",
        "customfield_12314139": null
    }
}