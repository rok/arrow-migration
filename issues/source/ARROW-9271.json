{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13314155",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155",
    "key": "ARROW-9271",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9271/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/480782",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-09T12:29:03.369+0000",
                    "updated": "2020-09-09T12:29:03.369+0000",
                    "started": "2020-09-09T12:29:03.369+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480782",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/480783",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#issuecomment-689530988\n\n\n   https://issues.apache.org/jira/browse/ARROW-9271\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-09T12:30:27.244+0000",
                    "updated": "2020-09-09T12:30:27.244+0000",
                    "started": "2020-09-09T12:30:27.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "480783",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481056",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r485914346\n\n\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n\nReview comment:\n       Is this safe to do? `sf`, for example, creates a subclass of `data.frame`: https://github.com/r-spatial/sf/blob/master/R/sf.R#L287\r\n   \r\n   But since this works by inheritance, we'll drop that class attribute. \r\n   \r\n   It's (arguably) uglier, but maybe it's better to have a function with a bunch of if-else rather than use S3 methods, and then we can distinguish `identical(class(x), \"data.frame\")` from `inherits(x, \"data.frame\")`.\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       What fails if you remove this special case?\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n+bad_attributes.factor <- function(x) c(\"class\", \"levels\")\n+bad_attributes.Date <- function(x) \"class\"\n+bad_attributes.integer64 <- function(x) \"class\"\n+bad_attributes.POSIXct <- function(x) c(\"class\", \"tzone\")\n+bad_attributes.hms <- function(x) c(\"class\", \"units\")\n+bad_attributes.difftime <- function(x) c(\"class\", \"units\")\n+\n+arrow_attributes <- function(x, only_top_level = FALSE) {\n+  att <- attributes(x)\n+  att <- att[setdiff(names(att), bad_attributes(x))]\n+  if (isTRUE(only_top_level)) {\n+    return(att)\n+  }\n+\n+  if (is.data.frame(x)) {\n+    columns <- map(x, arrow_attributes)\n+    if (length(att) || !all(map_lgl(columns, is.null))) {\n+      list(attributes = att, columns = columns)\n+    }\n+  } else if (length(att)) {\n+    list(attributes = att, columns = NULL)\n+  }\n\nReview comment:\n       I get that it's implied, but for readability should this end like this?\r\n   \r\n   ```suggestion\r\n     } else {\r\n       NULL\r\n     }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-09T20:56:32.148+0000",
                    "updated": "2020-09-09T20:56:32.148+0000",
                    "started": "2020-09-09T20:56:32.148+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481056",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486191107\n\n\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       Perhaps this would be better handled by converting the POSIXlt to a Timestamp array rather than a struct type, because on the way back the struct type makes a data frame which needs the `row.names` attribute. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = TRUE)\r\n   \r\n   example_with_times <- tibble::tibble(\r\n     posixlt = as.POSIXlt(lubridate::ymd_hms(\"2018-10-07 19:04:05\") + 1:10),\r\n   )\r\n   rb <- record_batch(example_with_times)\r\n   \r\n   attributes(as.data.frame(rb)$posixlt)\r\n   #> $row.names\r\n   #>  [1]  1  2  3  4  5  6  7  8  9 10\r\n   #> \r\n   #> $names\r\n   #> [1] \"sec\"   \"min\"   \"hour\"  \"mday\"  \"mon\"   \"year\"  \"wday\"  \"yday\"  \"isdst\"\r\n   #> \r\n   #> $class\r\n   #> [1] \"POSIXlt\" \"POSIXt\" \r\n   #> \r\n   #> $tzone\r\n   #> [1] \"UTC\"\r\n   attributes(example_with_times$posixlt)\r\n   #> $names\r\n   #> [1] \"sec\"   \"min\"   \"hour\"  \"mday\"  \"mon\"   \"year\"  \"wday\"  \"yday\"  \"isdst\"\r\n   #> \r\n   #> $class\r\n   #> [1] \"POSIXlt\" \"POSIXt\" \r\n   #> \r\n   #> $tzone\r\n   #> [1] \"UTC\"\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T09:18:55.074+0000",
                    "updated": "2020-09-10T09:18:55.074+0000",
                    "started": "2020-09-10T09:18:55.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481319",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486193205\n\n\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n\nReview comment:\n       We might actually want to keep the class for data frames, so that we would faithfully roundtrip data frames, instead of enforcing a tibble: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = TRUE)\r\n   #> \r\n   #> Attaching package: 'arrow'\r\n   #> The following object is masked from 'package:utils':\r\n   #> \r\n   #>     timestamp\r\n   \r\n   as.data.frame(record_batch(df = data.frame(x = 1)))$df\r\n   #> # A tibble: 1 x 1\r\n   #>       x\r\n   #>   <dbl>\r\n   #> 1     1\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T09:22:10.187+0000",
                    "updated": "2020-09-10T09:22:10.187+0000",
                    "started": "2020-09-10T09:22:10.187+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481320",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486193425\n\n\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n+bad_attributes.factor <- function(x) c(\"class\", \"levels\")\n+bad_attributes.Date <- function(x) \"class\"\n+bad_attributes.integer64 <- function(x) \"class\"\n+bad_attributes.POSIXct <- function(x) c(\"class\", \"tzone\")\n+bad_attributes.hms <- function(x) c(\"class\", \"units\")\n+bad_attributes.difftime <- function(x) c(\"class\", \"units\")\n+\n+arrow_attributes <- function(x, only_top_level = FALSE) {\n+  att <- attributes(x)\n+  att <- att[setdiff(names(att), bad_attributes(x))]\n+  if (isTRUE(only_top_level)) {\n+    return(att)\n+  }\n+\n+  if (is.data.frame(x)) {\n+    columns <- map(x, arrow_attributes)\n+    if (length(att) || !all(map_lgl(columns, is.null))) {\n+      list(attributes = att, columns = columns)\n+    }\n+  } else if (length(att)) {\n+    list(attributes = att, columns = NULL)\n+  }\n\nReview comment:\n       Thanks. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T09:22:33.205+0000",
                    "updated": "2020-09-10T09:22:33.205+0000",
                    "started": "2020-09-10T09:22:33.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481321",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486193205\n\n\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n\nReview comment:\n       We might actually want to keep the class for data frames, so that we would faithfully roundtrip data frames, instead of enforcing a tibble: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   as.data.frame(record_batch(df = data.frame(x = 1)))$df\r\n   #> # A tibble: 1 x 1\r\n   #>       x\r\n   #>   <dbl>\r\n   #> 1     1\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T09:25:31.258+0000",
                    "updated": "2020-09-10T09:25:31.258+0000",
                    "started": "2020-09-10T09:25:31.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481323",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481325",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486197783\n\n\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       Alternatively the test could use `expect_equal()` instead of `expect_identical()` and we would leave the `row.names` attribute: \r\n   \r\n   ```r\r\n   test_that(\"Date/time type roundtrip\", {\r\n     rb <- record_batch(example_with_times)\r\n     expect_is(rb$schema$posixlt$type, \"StructType\")\r\n     expect_equal(as.data.frame(rb), example_with_times)\r\n   })\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T09:29:29.614+0000",
                    "updated": "2020-09-10T09:29:29.614+0000",
                    "started": "2020-09-10T09:29:29.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481325",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/481413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r486283116\n\n\n\n##########\nFile path: r/R/table.R\n##########\n@@ -185,6 +185,36 @@ Table <- R6Class(\"Table\", inherit = ArrowObject,\n   )\n )\n \n+bad_attributes <- function(x) {\n+  UseMethod(\"bad_attributes\")\n+}\n+\n+bad_attributes.default <- function(x) character()\n+bad_attributes.data.frame <- function(x) c(\"class\", \"row.names\", \"names\")\n\nReview comment:\n       And if we do that, we get to reconstruct grouped data frames as well: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   library(dplyr, warn.conflicts = FALSE)\r\n   \r\n   df <- data.frame(x = 1:10, g = rep(1:2, each = 5)) %>% group_by(g)\r\n   as.data.frame(Table$create(df))\r\n   #> # A tibble: 10 x 2\r\n   #> # Groups:   g [2]\r\n   #>        x     g\r\n   #>    <int> <int>\r\n   #>  1     1     1\r\n   #>  2     2     1\r\n   #>  3     3     1\r\n   #>  4     4     1\r\n   #>  5     5     1\r\n   #>  6     6     2\r\n   #>  7     7     2\r\n   #>  8     8     2\r\n   #>  9     9     2\r\n   #> 10    10     2\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-10 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-10T12:06:39.790+0000",
                    "updated": "2020-09-10T12:06:39.790+0000",
                    "started": "2020-09-10T12:06:39.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "481413",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482046",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#issuecomment-691051291\n\n\n   I think this can be followed up with something that specifically deals with POSIXlt\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T11:59:28.478+0000",
                    "updated": "2020-09-11T11:59:28.478+0000",
                    "started": "2020-09-11T11:59:28.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482046",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r487119708\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T15:27:33.939+0000",
                    "updated": "2020-09-11T15:27:33.939+0000",
                    "started": "2020-09-11T15:27:33.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482131",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r487318981\n\n\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T22:33:49.254+0000",
                    "updated": "2020-09-11T22:33:49.254+0000",
                    "started": "2020-09-11T22:33:49.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482350",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-11T22:49:29.958+0000",
                    "updated": "2020-09-11T22:49:29.958+0000",
                    "started": "2020-09-11T22:49:29.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482357",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:15:27.440+0000",
                    "updated": "2020-09-12T20:15:27.440+0000",
                    "started": "2020-09-12T20:15:27.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482727",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482801",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#issuecomment-691051291\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:22:59.199+0000",
                    "updated": "2020-09-12T20:22:59.199+0000",
                    "started": "2020-09-12T20:22:59.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482801",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/482943",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r487119708\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:35:56.345+0000",
                    "updated": "2020-09-12T20:35:56.345+0000",
                    "started": "2020-09-12T20:35:56.345+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482943",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/483139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:20:18.325+0000",
                    "updated": "2020-09-12T21:20:18.325+0000",
                    "started": "2020-09-12T21:20:18.325+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483139",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/483208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#issuecomment-691051291\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:32:32.768+0000",
                    "updated": "2020-09-12T21:32:32.768+0000",
                    "started": "2020-09-12T21:32:32.767+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483208",
                    "issueId": "13314155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/worklog/483312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8150:\nURL: https://github.com/apache/arrow/pull/8150#discussion_r487119708\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -890,6 +890,7 @@ test_that(\"Dataset writing: from data.frame\", {\n       select(string = chr, integer = int) %>%\n       filter(integer > 6 & integer < 11) %>%\n       collect() %>%\n+      ungroup() %>%\n\nReview comment:\n       This isn't desirable because for `write_dataset()`, `group_by` is used to convey which columns to partition the dataset on. So I think there needs to be an `ungroup()` somewhere around L71 in write-dataset.R\n\n##########\nFile path: r/tests/testthat/test-metadata.R\n##########\n@@ -124,5 +125,11 @@ test_that(\"haven types roundtrip via feather\", {\n test_that(\"Date/time type roundtrip\", {\n   rb <- record_batch(example_with_times)\n   expect_is(rb$schema$posixlt$type, \"StructType\")\n-  expect_identical(as.data.frame(rb), example_with_times)\n+  expect_equal(as.data.frame(rb), example_with_times)\n+})\n+\n+test_that(\"metadata keeps attribute of top level data frame\", {\n+  df <- structure(data.frame(x = 1, y = 2), foo = \"bar\")\n+  tab <- Table$create(df)\n+  expect_equal(attr(as.data.frame(tab), \"foo\"), \"bar\")\n\nReview comment:\n       why not `expect_identical(as.data.frame(tab), df)`?\n\n##########\nFile path: r/R/record-batch.R\n##########\n@@ -278,7 +278,10 @@ as.data.frame.RecordBatch <- function(x, row.names = NULL, optional = FALSE, ...\n apply_arrow_r_metadata <- function(x, r_metadata) {\n   tryCatch({\n     if (!is.null(r_metadata$attributes)) {\n-      attributes(x) <- r_metadata$attributes\n+      attributes(x)[names(r_metadata$attributes)] <- r_metadata$attributes\n+      if (inherits(x, \"POSIXlt\")) {\n+        attr(x, \"row.names\") <- NULL\n\nReview comment:\n       I restored that special case and added a comment explaining it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:45:40.753+0000",
                    "updated": "2020-09-12T21:45:40.753+0000",
                    "started": "2020-09-12T21:45:40.753+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483312",
                    "issueId": "13314155"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61ca7d75[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ce4b8dd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@166a1e4e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5f817e0e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4dc3ae3e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@26a25b91[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60fca965[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@34d9ca7a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64bb3081[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@50f19154[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5543adae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2fb33766[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Sep 11 22:49:18 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-11T22:49:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9271/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-06-29T21:27:25.000+0000",
        "updated": "2020-09-12T21:45:41.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-8899 collects R attributes from the columns of a data.frame (including recursively in data frame columns), adds them to arrow schema metadata, and restores them when pulling a data frame into R. However, any attributes on the outer data frame itself are not preserved. These are lost in some autosplice magic code before {{AddMetadataFromDots}} can collect it.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Preserve data frame metadata in round trip",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13314155/comment/17194553",
                    "id": "17194553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 8150\n[https://github.com/apache/arrow/pull/8150]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-09-11T22:49:18.665+0000",
                    "updated": "2020-09-11T22:49:18.665+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gbbs:",
        "customfield_12314139": null
    }
}