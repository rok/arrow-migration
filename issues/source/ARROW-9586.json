{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13319813",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813",
    "key": "ARROW-9586",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/4",
            "description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/reopened.png",
            "name": "Reopened",
            "id": "4",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9586/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 37,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/490412",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265\n\n\n   This allows gRPC servers to be configured such that every DoGet, DoPut, or DoExchange call gets its own child allocator that is closed when the RPC ends. This includes temporary allocations made by Flight itself, e.g. in serializing and deserializing data. This way, we can more tightly control memory usage and track memory leaks in Flight and in application on the granularity of a particular RPC, instead of for the server as a whole. It also means we can track fine-grained metrics for memory usage per RPC.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T20:14:07.849+0000",
                    "updated": "2020-09-24T20:14:07.849+0000",
                    "started": "2020-09-24T20:14:07.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490412",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/490413",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-698565344\n\n\n   CC @rymurr, this is the other half of the earlier PR. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T20:14:51.449+0000",
                    "updated": "2020-09-24T20:14:51.449+0000",
                    "started": "2020-09-24T20:14:51.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490413",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/490414",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-698569882\n\n\n   https://issues.apache.org/jira/browse/ARROW-9586\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T20:24:51.120+0000",
                    "updated": "2020-09-24T20:24:51.120+0000",
                    "started": "2020-09-24T20:24:51.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490414",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/490847",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-698569882\n\n\n   https://issues.apache.org/jira/browse/ARROW-9586\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:19:09.346+0000",
                    "updated": "2020-09-25T13:19:09.346+0000",
                    "started": "2020-09-25T13:19:09.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490847",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/491059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-698565344\n\n\n   CC @rymurr, this is the other half of the earlier PR. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:39:03.688+0000",
                    "updated": "2020-09-25T13:39:03.688+0000",
                    "started": "2020-09-25T13:39:03.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491059",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/491107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265\n\n\n   This allows gRPC servers to be configured such that every DoGet, DoPut, or DoExchange call gets its own child allocator that is closed when the RPC ends. This includes temporary allocations made by Flight itself, e.g. in serializing and deserializing data. This way, we can more tightly control memory usage and track memory leaks in Flight and in application on the granularity of a particular RPC, instead of for the server as a whole. It also means we can track fine-grained metrics for memory usage per RPC.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:42:41.743+0000",
                    "updated": "2020-09-25T13:42:41.743+0000",
                    "started": "2020-09-25T13:42:41.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491107",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/496067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-704444724\n\n\n   Is this good to merge? Or needs review? 2.0 is fast approaching.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T17:53:24.241+0000",
                    "updated": "2020-10-06T17:53:24.241+0000",
                    "started": "2020-10-06T17:53:24.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496067",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/496096",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-704466369\n\n\n   Still needs review. We can take it off the 2.0 milestone.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T18:28:29.849+0000",
                    "updated": "2020-10-06T18:28:29.849+0000",
                    "started": "2020-10-06T18:28:29.849+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496096",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/496097",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm edited a comment on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-704466369\n\n\n   Still needs review. I've taken it off the 2.0 milestone.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-06T18:28:52.873+0000",
                    "updated": "2020-10-06T18:28:52.873+0000",
                    "started": "2020-10-06T18:28:52.872+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "496097",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513162096\n\n\n\n##########\nFile path: java/flight/flight-core/src/main/java/org/apache/arrow/flight/FlightService.java\n##########\n@@ -200,10 +203,11 @@ public void completed() {\n     responseObserver.disableAutoInboundFlowControl();\n     responseObserver.request(1);\n \n+    BufferAllocator callAllocator = getCallAllocator();\n     final StreamPipe<PutResult, Flight.PutResult> ackStream = StreamPipe\n         .wrap(responseObserver, PutResult::toProtocol, this::handleExceptionWithMiddleware);\n     final FlightStream fs = new FlightStream(\n-        allocator,\n+        callAllocator,\n\nReview comment:\n       why a different patter here (assigning to variable vs below?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:42:51.530+0000",
                    "updated": "2020-10-28T03:42:51.530+0000",
                    "started": "2020-10-28T03:42:51.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505516",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513162321\n\n\n\n##########\nFile path: java/flight/flight-grpc/pom.xml\n##########\n@@ -49,46 +49,60 @@\n         </exclusion>\n       </exclusions>\n     </dependency>\n+    <dependency>\n+      <groupId>org.apache.arrow</groupId>\n+      <artifactId>arrow-memory-core</artifactId>\n+      <version>${project.version}</version>\n+      <scope>compile</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.arrow</groupId>\n+      <artifactId>arrow-memory-netty</artifactId>\n+      <version>${project.version}</version>\n+      <scope>runtime</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.apache.arrow</groupId>\n+      <artifactId>arrow-vector</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-context</artifactId>\n+      <version>${dep.grpc.version}</version>\n+    </dependency>\n     <dependency>\n       <groupId>io.grpc</groupId>\n       <artifactId>grpc-core</artifactId>\n       <version>${dep.grpc.version}</version>\n     </dependency>\n-     <dependency>\n-       <groupId>io.grpc</groupId>\n-       <artifactId>grpc-stub</artifactId>\n-       <version>${dep.grpc.version}</version>\n-     </dependency>\n     <dependency>\n-      <groupId>org.apache.arrow</groupId>\n-      <artifactId>arrow-memory-core</artifactId>\n-      <version>${project.version}</version>\n-      <scope>compile</scope>\n+      <groupId>io.grpc</groupId>\n+      <artifactId>grpc-stub</artifactId>\n+      <version>${dep.grpc.version}</version>\n     </dependency>\n     <dependency>\n-       <groupId>org.apache.arrow</groupId>\n-       <artifactId>arrow-memory-netty</artifactId>\n-       <version>${project.version}</version>\n-       <scope>runtime</scope>\n-     </dependency>\n-     <dependency>\n-       <groupId>io.grpc</groupId>\n-       <artifactId>grpc-protobuf</artifactId>\n-       <version>${dep.grpc.version}</version>\n-     </dependency>\n-     <dependency>\n-       <groupId>com.google.guava</groupId>\n-       <artifactId>guava</artifactId>\n-     </dependency>\n-     <dependency>\n-       <groupId>com.google.protobuf</groupId>\n-       <artifactId>protobuf-java</artifactId>\n-       <version>${dep.protobuf.version}</version>\n-     </dependency>\n-     <dependency>\n-       <groupId>io.grpc</groupId>\n-       <artifactId>grpc-api</artifactId>\n-       <version>${dep.grpc.version}</version>\n+      <groupId>io.grpc</groupId>\n\nReview comment:\n       is this just re-arranging imports?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:43:48.258+0000",
                    "updated": "2020-10-28T03:43:48.258+0000",
                    "started": "2020-10-28T03:43:48.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505517",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513162743\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/AllocatorClosingServerInterceptor.java\n##########\n@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiConsumer;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+\n+/**\n+ * A server interceptor that closes {@link AllocatorMarshaller} instances.\n+ *\n+ * <p>This must be the FIRST interceptor run (which is the LAST one registered), as interceptors can choose to\n+ * abort a call chain at any point, and in that case, the application would leak a BufferAllocator.\n+ */\n+public class AllocatorClosingServerInterceptor implements ServerInterceptor {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(AllocatorClosingServerInterceptor.class);\n+  private final BiConsumer<ServerCall<?, ?>, BufferAllocator> callback;\n+  private final AtomicInteger outstandingCalls;\n+\n+  /**\n+   * Create a new interceptor.\n+   *\n+   * @param callback A callback for right before we close a BufferAllocator.\n+   *     Applications can use this to record metrics about the allocator.\n+   */\n+  public AllocatorClosingServerInterceptor(BiConsumer<ServerCall<?, ?>, BufferAllocator> callback) {\n+    this.callback = callback;\n+    this.outstandingCalls = new AtomicInteger(0);\n+  }\n+\n+  /** Get the outstanding call count (useful for metrics reporting). */\n+  public int getOutstandingCalls() {\n+    return outstandingCalls.get();\n+  }\n+\n+  /**\n+   * Wait for all tracked calls to finish.\n+   *\n+   * <p>gRPC does not wait for all onCancel/onComplete callbacks to finish on server shutdown. This method implements a\n+   * simple busy-wait so that you can ensure all those callbacks are finished (and hence all child allocators are\n+   * closed).\n+   *\n+   * <p>Should only be called after shutting down the gRPC server, before program exit.\n+   *\n+   * @throws InterruptedException if interrupted during waiting.\n+   * @throws CancellationException if the timeout expires and calls have not yet finished.\n+   */\n+  public void awaitTermination(long duration, TimeUnit unit) throws InterruptedException, CancellationException {\n+    long start = System.nanoTime();\n+    long end = start + unit.toNanos(duration);\n+    while (outstandingCalls.get() > 0 && System.nanoTime() < end) {\n+      Thread.sleep(100);\n+    }\n+    if (outstandingCalls.get() > 0) {\n+      throw new CancellationException(\"Timed out after \" + duration + \" \" + unit);\n\nReview comment:\n       might be worth including outstandingCalls as well.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:45:11.336+0000",
                    "updated": "2020-10-28T03:45:11.336+0000",
                    "started": "2020-10-28T03:45:11.336+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505518",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513163466\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/AllocatorClosingServerInterceptor.java\n##########\n@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiConsumer;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+\n+/**\n+ * A server interceptor that closes {@link AllocatorMarshaller} instances.\n+ *\n+ * <p>This must be the FIRST interceptor run (which is the LAST one registered), as interceptors can choose to\n+ * abort a call chain at any point, and in that case, the application would leak a BufferAllocator.\n+ */\n+public class AllocatorClosingServerInterceptor implements ServerInterceptor {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(AllocatorClosingServerInterceptor.class);\n+  private final BiConsumer<ServerCall<?, ?>, BufferAllocator> callback;\n+  private final AtomicInteger outstandingCalls;\n+\n+  /**\n+   * Create a new interceptor.\n+   *\n+   * @param callback A callback for right before we close a BufferAllocator.\n+   *     Applications can use this to record metrics about the allocator.\n+   */\n+  public AllocatorClosingServerInterceptor(BiConsumer<ServerCall<?, ?>, BufferAllocator> callback) {\n+    this.callback = callback;\n+    this.outstandingCalls = new AtomicInteger(0);\n+  }\n+\n+  /** Get the outstanding call count (useful for metrics reporting). */\n+  public int getOutstandingCalls() {\n+    return outstandingCalls.get();\n+  }\n+\n+  /**\n+   * Wait for all tracked calls to finish.\n+   *\n+   * <p>gRPC does not wait for all onCancel/onComplete callbacks to finish on server shutdown. This method implements a\n+   * simple busy-wait so that you can ensure all those callbacks are finished (and hence all child allocators are\n+   * closed).\n+   *\n+   * <p>Should only be called after shutting down the gRPC server, before program exit.\n+   *\n+   * @throws InterruptedException if interrupted during waiting.\n+   * @throws CancellationException if the timeout expires and calls have not yet finished.\n+   */\n+  public void awaitTermination(long duration, TimeUnit unit) throws InterruptedException, CancellationException {\n+    long start = System.nanoTime();\n+    long end = start + unit.toNanos(duration);\n+    while (outstandingCalls.get() > 0 && System.nanoTime() < end) {\n+      Thread.sleep(100);\n+    }\n+    if (outstandingCalls.get() > 0) {\n+      throw new CancellationException(\"Timed out after \" + duration + \" \" + unit);\n+    }\n+  }\n+\n+  @Override\n+  public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n+      ServerCall<ReqT, RespT> call, Metadata headers, ServerCallHandler<ReqT, RespT> next) {\n+    Set<AllocatorMarshaller<?>> allocators = new HashSet<>();\n\nReview comment:\n       nit: allocatorMarshallers?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:47:47.555+0000",
                    "updated": "2020-10-28T03:47:47.555+0000",
                    "started": "2020-10-28T03:47:47.554+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505519",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513163773\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/AllocatorClosingServerInterceptor.java\n##########\n@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiConsumer;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+\n+/**\n+ * A server interceptor that closes {@link AllocatorMarshaller} instances.\n+ *\n+ * <p>This must be the FIRST interceptor run (which is the LAST one registered), as interceptors can choose to\n+ * abort a call chain at any point, and in that case, the application would leak a BufferAllocator.\n+ */\n+public class AllocatorClosingServerInterceptor implements ServerInterceptor {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(AllocatorClosingServerInterceptor.class);\n+  private final BiConsumer<ServerCall<?, ?>, BufferAllocator> callback;\n+  private final AtomicInteger outstandingCalls;\n+\n+  /**\n+   * Create a new interceptor.\n+   *\n+   * @param callback A callback for right before we close a BufferAllocator.\n+   *     Applications can use this to record metrics about the allocator.\n+   */\n+  public AllocatorClosingServerInterceptor(BiConsumer<ServerCall<?, ?>, BufferAllocator> callback) {\n+    this.callback = callback;\n+    this.outstandingCalls = new AtomicInteger(0);\n+  }\n+\n+  /** Get the outstanding call count (useful for metrics reporting). */\n+  public int getOutstandingCalls() {\n+    return outstandingCalls.get();\n+  }\n+\n+  /**\n+   * Wait for all tracked calls to finish.\n+   *\n+   * <p>gRPC does not wait for all onCancel/onComplete callbacks to finish on server shutdown. This method implements a\n+   * simple busy-wait so that you can ensure all those callbacks are finished (and hence all child allocators are\n+   * closed).\n+   *\n+   * <p>Should only be called after shutting down the gRPC server, before program exit.\n+   *\n+   * @throws InterruptedException if interrupted during waiting.\n+   * @throws CancellationException if the timeout expires and calls have not yet finished.\n+   */\n+  public void awaitTermination(long duration, TimeUnit unit) throws InterruptedException, CancellationException {\n+    long start = System.nanoTime();\n+    long end = start + unit.toNanos(duration);\n+    while (outstandingCalls.get() > 0 && System.nanoTime() < end) {\n+      Thread.sleep(100);\n+    }\n+    if (outstandingCalls.get() > 0) {\n+      throw new CancellationException(\"Timed out after \" + duration + \" \" + unit);\n+    }\n+  }\n+\n+  @Override\n+  public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n+      ServerCall<ReqT, RespT> call, Metadata headers, ServerCallHandler<ReqT, RespT> next) {\n+    Set<AllocatorMarshaller<?>> allocators = new HashSet<>();\n+    if (call.getMethodDescriptor().getRequestMarshaller() instanceof AllocatorMarshaller) {\n+      allocators.add((AllocatorMarshaller<?>) call.getMethodDescriptor().getRequestMarshaller());\n+    }\n+    if (call.getMethodDescriptor().getResponseMarshaller() instanceof AllocatorMarshaller) {\n+      allocators.add((AllocatorMarshaller<?>) call.getMethodDescriptor().getResponseMarshaller());\n+    }\n+    if (allocators.isEmpty()) {\n+      // Bypass our logic\n+      return next.startCall(call, headers);\n+    }\n+\n+    outstandingCalls.getAndIncrement();\n+    return new AllocatorClosingServerCallListener<>(next.startCall(call, headers), call, allocators);\n+  }\n+\n+  private class AllocatorClosingServerCallListener<ReqT, RespT>\n+      extends ForwardingServerCallListener.SimpleForwardingServerCallListener<ReqT> {\n+    private final ServerCall<ReqT, RespT> call;\n+    private final Set<AllocatorMarshaller<?>> allocators;\n+\n+    public AllocatorClosingServerCallListener(ServerCall.Listener<ReqT> delegate,\n+                                              ServerCall<ReqT, RespT> call, Set<AllocatorMarshaller<?>> allocators) {\n+      super(delegate);\n+      this.call = call;\n+      this.allocators = allocators;\n+    }\n+\n+    private void cleanup(Runnable next) {\n+      Throwable t = null;\n+      try {\n+        allocators.forEach(marshaller -> callback.accept(call, marshaller.allocator));\n+      } catch (RuntimeException e) {\n+        t = e;\n+      }\n+      try {\n+        if (t != null) {\n+          AutoCloseables.close(t, allocators);\n+        } else {\n+          AutoCloseables.close(allocators);\n+        }\n+      } catch (Exception e) {\n+        LOGGER.warn(\"Error closing per-call allocators\", e);\n\nReview comment:\n       generally, you want to either log or throw, not both.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:49:07.028+0000",
                    "updated": "2020-10-28T03:49:07.028+0000",
                    "started": "2020-10-28T03:49:07.027+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505520",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513164150\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/AllocatorClosingServerInterceptor.java\n##########\n@@ -0,0 +1,151 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.HashSet;\n+import java.util.Set;\n+import java.util.concurrent.CancellationException;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.BiConsumer;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import io.grpc.ForwardingServerCallListener;\n+import io.grpc.Metadata;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerInterceptor;\n+\n+/**\n+ * A server interceptor that closes {@link AllocatorMarshaller} instances.\n+ *\n+ * <p>This must be the FIRST interceptor run (which is the LAST one registered), as interceptors can choose to\n+ * abort a call chain at any point, and in that case, the application would leak a BufferAllocator.\n+ */\n+public class AllocatorClosingServerInterceptor implements ServerInterceptor {\n+  private static final Logger LOGGER = LoggerFactory.getLogger(AllocatorClosingServerInterceptor.class);\n+  private final BiConsumer<ServerCall<?, ?>, BufferAllocator> callback;\n+  private final AtomicInteger outstandingCalls;\n+\n+  /**\n+   * Create a new interceptor.\n+   *\n+   * @param callback A callback for right before we close a BufferAllocator.\n+   *     Applications can use this to record metrics about the allocator.\n+   */\n+  public AllocatorClosingServerInterceptor(BiConsumer<ServerCall<?, ?>, BufferAllocator> callback) {\n+    this.callback = callback;\n+    this.outstandingCalls = new AtomicInteger(0);\n+  }\n+\n+  /** Get the outstanding call count (useful for metrics reporting). */\n+  public int getOutstandingCalls() {\n+    return outstandingCalls.get();\n+  }\n+\n+  /**\n+   * Wait for all tracked calls to finish.\n+   *\n+   * <p>gRPC does not wait for all onCancel/onComplete callbacks to finish on server shutdown. This method implements a\n+   * simple busy-wait so that you can ensure all those callbacks are finished (and hence all child allocators are\n+   * closed).\n+   *\n+   * <p>Should only be called after shutting down the gRPC server, before program exit.\n+   *\n+   * @throws InterruptedException if interrupted during waiting.\n+   * @throws CancellationException if the timeout expires and calls have not yet finished.\n+   */\n+  public void awaitTermination(long duration, TimeUnit unit) throws InterruptedException, CancellationException {\n+    long start = System.nanoTime();\n+    long end = start + unit.toNanos(duration);\n+    while (outstandingCalls.get() > 0 && System.nanoTime() < end) {\n+      Thread.sleep(100);\n+    }\n+    if (outstandingCalls.get() > 0) {\n+      throw new CancellationException(\"Timed out after \" + duration + \" \" + unit);\n+    }\n+  }\n+\n+  @Override\n+  public <ReqT, RespT> ServerCall.Listener<ReqT> interceptCall(\n+      ServerCall<ReqT, RespT> call, Metadata headers, ServerCallHandler<ReqT, RespT> next) {\n+    Set<AllocatorMarshaller<?>> allocators = new HashSet<>();\n+    if (call.getMethodDescriptor().getRequestMarshaller() instanceof AllocatorMarshaller) {\n+      allocators.add((AllocatorMarshaller<?>) call.getMethodDescriptor().getRequestMarshaller());\n+    }\n+    if (call.getMethodDescriptor().getResponseMarshaller() instanceof AllocatorMarshaller) {\n+      allocators.add((AllocatorMarshaller<?>) call.getMethodDescriptor().getResponseMarshaller());\n+    }\n+    if (allocators.isEmpty()) {\n+      // Bypass our logic\n+      return next.startCall(call, headers);\n+    }\n+\n+    outstandingCalls.getAndIncrement();\n\nReview comment:\n       maybe move this into the listener?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:50:24.295+0000",
                    "updated": "2020-10-28T03:50:24.295+0000",
                    "started": "2020-10-28T03:50:24.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505521",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513164247\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/AllocatorMarshaller.java\n##########\n@@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.io.InputStream;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+\n+import io.grpc.MethodDescriptor;\n+\n+/**\n+ * A gRPC Marshaller tied to a BufferAllocator.\n+ *\n+ * Intended to be used with {@link AllocatorClosingServerInterceptor}.\n+ *\n+ * @param <T> The type to be marshalled.\n+ */\n+final class AllocatorMarshaller<T> implements AutoCloseable, MethodDescriptor.Marshaller<T> {\n+  private final MethodDescriptor.Marshaller<T> delegate;\n+  final BufferAllocator allocator;\n\nReview comment:\n       document why this is intentionally package private?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:50:49.451+0000",
                    "updated": "2020-10-28T03:50:49.451+0000",
                    "started": "2020-10-28T03:50:49.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505522",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513165104\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/FlightHandlerRegistry.java\n##########\n@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Objects;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.apache.arrow.flight.impl.Flight;\n+import org.apache.arrow.memory.BufferAllocator;\n+\n+import io.grpc.Context;\n+import io.grpc.HandlerRegistry;\n+import io.grpc.Metadata;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerMethodDefinition;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.Status;\n+\n+/**\n+ * A gRPC HandlerRegistry that creates a new Arrow allocator for each call to a Flight \"data\" method\n+ * (DoGet, DoPut, or DoExchange).\n+ */\n+public final class FlightHandlerRegistry extends HandlerRegistry {\n+  private final BufferAllocator allocator;\n+  private final ServerServiceDefinition delegate;\n+  private final ServerMethodDefinition<Flight.Ticket, ArrowMessage> doGetMethod;\n+  private final ServerMethodDefinition<ArrowMessage, Flight.PutResult> doPutMethod;\n+  private final ServerMethodDefinition<ArrowMessage, ArrowMessage> doExchangeMethod;\n+  private final AtomicInteger counter;\n+\n+  @SuppressWarnings(\"unchecked\")\n+  FlightHandlerRegistry(BufferAllocator allocator, ServerServiceDefinition delegate) {\n+    this.allocator = allocator;\n+    this.delegate = delegate;\n+    // Unchecked cast\n+    this.doGetMethod = (ServerMethodDefinition<Flight.Ticket, ArrowMessage>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_GET));\n+    this.doPutMethod = (ServerMethodDefinition<ArrowMessage, Flight.PutResult>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_PUT));\n+    this.doExchangeMethod = (ServerMethodDefinition<ArrowMessage, ArrowMessage>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_EXCHANGE));\n+    this.counter = new AtomicInteger(0);\n+  }\n+\n+  @Override\n+  public ServerMethodDefinition<?, ?> lookupMethod(String methodName, String authority) {\n+    if (FlightBindingService.DO_GET.equals(methodName)) {\n+      final String allocatorName = allocator.getName() + \"-DoGet-\" + counter.getAndIncrement();\n+      final BufferAllocator childAllocator = allocator.newChildAllocator(allocatorName, 0, allocator.getLimit());\n\nReview comment:\n       i don't know if this is a concern, but does this potentially over reserve space on the parent allocator?  I suppose this doesn't really change existing semantics?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:54:05.188+0000",
                    "updated": "2020-10-28T03:54:05.188+0000",
                    "started": "2020-10-28T03:54:05.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505527",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513165471\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/main/java/org/apache/arrow/flight/FlightHandlerRegistry.java\n##########\n@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import java.util.Objects;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.apache.arrow.flight.impl.Flight;\n+import org.apache.arrow.memory.BufferAllocator;\n+\n+import io.grpc.Context;\n+import io.grpc.HandlerRegistry;\n+import io.grpc.Metadata;\n+import io.grpc.MethodDescriptor;\n+import io.grpc.ServerCall;\n+import io.grpc.ServerCallHandler;\n+import io.grpc.ServerMethodDefinition;\n+import io.grpc.ServerServiceDefinition;\n+import io.grpc.Status;\n+\n+/**\n+ * A gRPC HandlerRegistry that creates a new Arrow allocator for each call to a Flight \"data\" method\n+ * (DoGet, DoPut, or DoExchange).\n+ */\n+public final class FlightHandlerRegistry extends HandlerRegistry {\n+  private final BufferAllocator allocator;\n+  private final ServerServiceDefinition delegate;\n+  private final ServerMethodDefinition<Flight.Ticket, ArrowMessage> doGetMethod;\n+  private final ServerMethodDefinition<ArrowMessage, Flight.PutResult> doPutMethod;\n+  private final ServerMethodDefinition<ArrowMessage, ArrowMessage> doExchangeMethod;\n+  private final AtomicInteger counter;\n+\n+  @SuppressWarnings(\"unchecked\")\n+  FlightHandlerRegistry(BufferAllocator allocator, ServerServiceDefinition delegate) {\n+    this.allocator = allocator;\n+    this.delegate = delegate;\n+    // Unchecked cast\n+    this.doGetMethod = (ServerMethodDefinition<Flight.Ticket, ArrowMessage>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_GET));\n+    this.doPutMethod = (ServerMethodDefinition<ArrowMessage, Flight.PutResult>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_PUT));\n+    this.doExchangeMethod = (ServerMethodDefinition<ArrowMessage, ArrowMessage>)\n+        Objects.requireNonNull(delegate.getMethod(FlightBindingService.DO_EXCHANGE));\n+    this.counter = new AtomicInteger(0);\n+  }\n+\n+  @Override\n+  public ServerMethodDefinition<?, ?> lookupMethod(String methodName, String authority) {\n+    if (FlightBindingService.DO_GET.equals(methodName)) {\n+      final String allocatorName = allocator.getName() + \"-DoGet-\" + counter.getAndIncrement();\n+      final BufferAllocator childAllocator = allocator.newChildAllocator(allocatorName, 0, allocator.getLimit());\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller =\n+          new AllocatorMarshaller<>(ArrowMessage.createMarshaller(childAllocator), childAllocator);\n+      final MethodDescriptor<Flight.Ticket, ArrowMessage> method =\n+          doGetMethod.getMethodDescriptor().toBuilder().setResponseMarshaller(marshaller).build();\n+      final ServerCallHandler<Flight.Ticket, ArrowMessage> handler =\n+          new AllocatorInjectingServerCallHandler<>(doGetMethod.getServerCallHandler(), childAllocator);\n+      return ServerMethodDefinition.create(method, handler);\n+    } else if (FlightBindingService.DO_PUT.equals(methodName)) {\n+      final String allocatorName = allocator.getName() + \"-DoPut-\" + counter.getAndIncrement();\n+      final BufferAllocator childAllocator = allocator.newChildAllocator(allocatorName, 0, allocator.getLimit());\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller =\n+          new AllocatorMarshaller<>(ArrowMessage.createMarshaller(childAllocator), childAllocator);\n+      final MethodDescriptor<ArrowMessage, Flight.PutResult> method =\n+          doPutMethod.getMethodDescriptor().toBuilder().setRequestMarshaller(marshaller).build();\n+      final ServerCallHandler<ArrowMessage, Flight.PutResult> handler =\n+          new AllocatorInjectingServerCallHandler<>(doPutMethod.getServerCallHandler(), childAllocator);\n+      return ServerMethodDefinition.create(method, handler);\n+    } else if (FlightBindingService.DO_EXCHANGE.equals(methodName)) {\n+      final String allocatorName = allocator.getName() + \"-DoExchange-\" + counter.getAndIncrement();\n\nReview comment:\n       consider making a helper method to combine these to lines?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:55:21.609+0000",
                    "updated": "2020-10-28T03:55:21.609+0000",
                    "started": "2020-10-28T03:55:21.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505530",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#discussion_r513165966\n\n\n\n##########\nFile path: java/flight/flight-grpc/src/test/java/org/apache/arrow/flight/TestPerCallAllocator.java\n##########\n@@ -0,0 +1,459 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.flight;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+\n+import org.apache.arrow.flight.auth.ServerAuthHandler;\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.memory.RootAllocator;\n+import org.apache.arrow.util.AutoCloseables;\n+import org.apache.arrow.vector.Float8Vector;\n+import org.apache.arrow.vector.VectorLoader;\n+import org.apache.arrow.vector.VectorSchemaRoot;\n+import org.apache.arrow.vector.VectorUnloader;\n+import org.apache.arrow.vector.ipc.message.ArrowRecordBatch;\n+import org.apache.arrow.vector.types.FloatingPointPrecision;\n+import org.apache.arrow.vector.types.pojo.ArrowType;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.Schema;\n+import org.junit.Test;\n+\n+import com.google.common.collect.Iterables;\n+\n+import io.grpc.BindableService;\n+import io.grpc.Server;\n+import io.grpc.ServerBuilder;\n+import io.grpc.ServerCall;\n+\n+public class TestPerCallAllocator {\n+  @Test\n+  public void testDoGet() throws Exception {\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      test(allocator, (client) -> {\n+        try (final FlightStream stream = client.getStream(new Ticket(Producer.TICKET_EMPTY))) {\n+          assertEquals(Producer.SCHEMA_DOUBLES, stream.getRoot().getSchema());\n+          assertTrue(stream.next());\n+          assertFalse(stream.next());\n+        }\n+      }, (call, serverAllocator) -> {\n+          // gRPC server shutdown does not actually wait for all onCompleted/onCancel callbacks.\n+          // Test that we handle this properly by forcing those callbacks to take a while.\n+          try {\n+            Thread.sleep(2500);\n\nReview comment:\n       does this make the test take 2.5 session?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:57:27.234+0000",
                    "updated": "2020-10-28T03:57:27.234+0000",
                    "started": "2020-10-28T03:57:27.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505533",
                    "issueId": "13319813"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/worklog/505535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #8265:\nURL: https://github.com/apache/arrow/pull/8265#issuecomment-717680483\n\n\n   Took a quick pass through, need to look more thoroughly at tests.  On that note, do you think it pays to have finer grained tests on some of the individual classes created (sorry if I missed them).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-10-28T03:59:48.044+0000",
                    "updated": "2020-10-28T03:59:48.044+0000",
                    "started": "2020-10-28T03:59:48.043+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "505535",
                    "issueId": "13319813"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7970a6fc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dbbb2f5[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@138830a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@33041439[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3840980a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4ee22f9d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c3d33ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@f8b498c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33b700bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6cf64f93[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19a1a3a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4c335e31[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 12 14:04:49 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9586/watchers",
            "watchCount": 3,
            "isWatching": true
        },
        "created": "2020-07-28T17:45:40.000+0000",
        "updated": "2022-07-12T14:04:49.000+0000",
        "timeoriginalestimate": null,
        "description": "We've been running into issues with Flight and gRPC leaking direct memory at scale. One thing we'd like to do is have a (child) allocator per DoGet/DoPut call, so we can more accurately track memory usage. We have a candidate implementation that is rather messy, but can be upstreamed as part of flight-grpc.\r\n\r\nThis also requires changes to _ensure_ all Arrow resources are cleaned up before we notify gRPC that the call has finished.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[FlightRPC][Java] Allow using a per-call Arrow allocator",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/comment/17197302",
                    "id": "17197302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I will try to get to this for 2.0 but it may not make it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-09-17T00:23:03.065+0000",
                    "updated": "2020-09-17T00:23:03.065+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/comment/17278829",
                    "id": "17278829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 8265\n[https://github.com/apache/arrow/pull/8265]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-04T13:39:45.359+0000",
                    "updated": "2021-02-04T13:39:45.359+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/comment/17278859",
                    "id": "17278859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "There were test failures, reverting.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-04T14:16:55.103+0000",
                    "updated": "2021-02-04T14:16:55.103+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319813/comment/17565771",
                    "id": "17565771",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "body": "This issue was last updated over 90 days ago, which may be an indication it is no longer being actively worked. To better reflect the current state, the issue is being unassigned. Please feel free to re-take assignment of the issue if it is being actively worked, or if you plan to start that work soon.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=toddfarmer",
                        "name": "toddfarmer",
                        "key": "JIRAUSER288796",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39935",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39935",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39935",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39935"
                        },
                        "displayName": "Todd Farmer",
                        "active": true,
                        "timeZone": "America/Boise"
                    },
                    "created": "2022-07-12T14:04:49.473+0000",
                    "updated": "2022-07-12T14:04:49.473+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ha14:",
        "customfield_12314139": null
    }
}