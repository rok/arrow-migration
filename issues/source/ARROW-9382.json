{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13315788",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788",
    "key": "ARROW-9382",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9382/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/456435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#issuecomment-655920852\n\n\n   https://issues.apache.org/jira/browse/ARROW-9382\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-09T06:04:22.926+0000",
                    "updated": "2020-07-09T06:04:22.926+0000",
                    "started": "2020-07-09T06:04:22.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "456435",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/463706",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r461825412\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,49 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n-                Vec::with_capacity(batch.num_rows());\n-\n             for row in 0..batch.num_rows() {\n-                // create grouping key for this row\n-                create_key(&group_values, row, &mut key)\n-                    .map_err(ExecutionError::into_arrow_external_error)?;\n-\n-                if let Some(accumulator_set) = map.get(&key) {\n-                    accumulators.push(accumulator_set.clone());\n-                } else {\n-                    let accumulator_set: AccumulatorSet = self\n-                        .aggr_expr\n-                        .iter()\n-                        .map(|expr| expr.create_accumulator())\n-                        .collect();\n-\n-                    let accumulator_set = Rc::new(accumulator_set);\n-\n-                    map.insert(key.clone(), accumulator_set.clone());\n-                    accumulators.push(accumulator_set);\n+                // create and assign the grouping key of this row\n+                for i in 0..group_values.len() {\n+                    key[i] = create_key(&group_values[i], row)\n+                        .map_err(ExecutionError::into_arrow_external_error)?;\n                 }\n-            }\n \n-            // iterate over each non-grouping column in the batch and update the accumulator\n-            // for each row\n-            for col in 0..aggr_input_values.len() {\n-                let array = &aggr_input_values[col];\n-\n-                match array.data_type() {\n-                    DataType::Int8 => update_accumulators!(\n-                        array,\n-                        Int8Array,\n-                        ScalarValue::Int8,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::Int16 => update_accumulators!(\n-                        array,\n-                        Int16Array,\n-                        ScalarValue::Int16,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::Int32 => update_accumulators!(\n-                        array,\n-                        Int32Array,\n-                        ScalarValue::Int32,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::Int64 => update_accumulators!(\n-                        array,\n-                        Int64Array,\n-                        ScalarValue::Int64,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::UInt8 => update_accumulators!(\n-                        array,\n-                        UInt8Array,\n-                        ScalarValue::UInt8,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::UInt16 => update_accumulators!(\n-                        array,\n-                        UInt16Array,\n-                        ScalarValue::UInt16,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::UInt32 => update_accumulators!(\n-                        array,\n-                        UInt32Array,\n-                        ScalarValue::UInt32,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::UInt64 => update_accumulators!(\n-                        array,\n-                        UInt64Array,\n-                        ScalarValue::UInt64,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::Float32 => update_accumulators!(\n-                        array,\n-                        Float32Array,\n-                        ScalarValue::Float32,\n-                        col,\n-                        accumulators\n-                    ),\n-                    DataType::Float64 => update_accumulators!(\n-                        array,\n-                        Float64Array,\n-                        ScalarValue::Float64,\n-                        col,\n-                        accumulators\n-                    ),\n-                    other => {\n-                        return Err(ExecutionError::ExecutionError(format!(\n-                            \"Unsupported data type {:?} for result of aggregate expression\",\n-                            other\n-                        )).into_arrow_external_error());\n+                // for each new key on the map, add an accumulatorSet to the map\n+                match map.get(&key) {\n+                    None => {\n+                        let accumulator_set: AccumulatorSet = self\n+                            .aggr_expr\n+                            .iter()\n+                            .map(|expr| expr.create_accumulator())\n+                            .collect();\n+                        map.insert(key.clone(), Rc::new(accumulator_set));\n                     }\n+                    _ => (),\n                 };\n+\n+                // iterate over each non-grouping column in the batch and update the accumulator\n+                // for each row\n+                for col in 0..aggr_input_values.len() {\n+                    let value = get_scalar_value(&aggr_input_values[col], row)\n+                        .map_err(ExecutionError::into_arrow_external_error)?;\n+\n+                    match map.get(&key) {\n\nReview comment:\n       I fixed both issues for now.\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       Mind blowing. Still much to learn.\r\n   \r\n   I struggle to run the benchmarks on my computer. Is there any design reason to not run the benchmarks as part of the pipeline? Are they too unstable against changes in hardware?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-29T07:24:06.458+0000",
                    "updated": "2020-07-29T07:24:06.458+0000",
                    "started": "2020-07-29T07:24:06.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "463706",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/463838",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r461856982\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       It isn't clear, but this is actually an optimization. By buiding the vec of accumulators, it allows better columnar processing and presumably is making better use of the cpu cache. This PR shows the same minor slow down in performance as the other branch I created.\r\n   \r\n   Before:\r\n   \r\n   ```\r\n   Running benchmarks with the following options: Opt { debug: false, iterations: 3, batch_size: 4096, path: \"/mnt/nyctaxi/csv/year=2019\", file_format: \"csv\" }\r\n   Executing 'fare_amt_by_passenger'\r\n   Query 'fare_amt_by_passenger' iteration 0 took 11058 ms\r\n   Query 'fare_amt_by_passenger' iteration 1 took 11314 ms\r\n   Query 'fare_amt_by_passenger' iteration 2 took 11479 ms\r\n   ```\r\n   \r\n   After\r\n   \r\n   ```\r\n   Running benchmarks with the following options: Opt { debug: false, iterations: 3, batch_size: 4096, path: \"/mnt/nyctaxi/csv/year=2019\", file_format: \"csv\" }\r\n   Executing 'fare_amt_by_passenger'\r\n   Query 'fare_amt_by_passenger' iteration 0 took 11636 ms\r\n   Query 'fare_amt_by_passenger' iteration 1 took 12500 ms\r\n   Query 'fare_amt_by_passenger' iteration 2 took 12358 ms\r\n   ```\r\n   \r\n   This is from running the benchmark crate in this repo.\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-29T07:37:06.480+0000",
                    "updated": "2020-07-29T07:37:06.480+0000",
                    "started": "2020-07-29T07:37:06.480+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "463838",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/464704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463200434\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       Ok, I was able to run the benchmarks, but I do not obverse any statistically significant difference:\r\n   \r\n   ```\r\n   # the commit pre on master:\r\n   git checkout cd503c3f583dab4b94c9934d525664e5897ff06d \r\n   cargo bench\r\n   ```\r\n   \r\n   leaves me with\r\n   \r\n   ```\r\n   aggregate_query_no_group_by                                                                            \r\n                           time:   [121.39 us 121.55 us 121.73 us]\r\n   Found 9 outliers among 100 measurements (9.00%)\r\n     3 (3.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   aggregate_query_group_by                                                                            \r\n                           time:   [170.22 us 170.75 us 171.47 us]\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     7 (7.00%) high mild\r\n     5 (5.00%) high severe\r\n   \r\n   aggregate_query_group_by_with_filter                                                                            \r\n                           time:   [279.00 us 279.34 us 279.71 us]\r\n   Found 9 outliers among 100 measurements (9.00%)\r\n     2 (2.00%) high mild\r\n     7 (7.00%) high severe\r\n   ```\r\n   \r\n   followed by \r\n   \r\n   ```\r\n   # the latest commit on this branch:\r\n   git checkout bbd9da7ce5b582587bce5c8ff8a228f5425e0113\r\n   cargo bench\r\n   ```\r\n   \r\n   leaves me with\r\n   \r\n   ```\r\n   aggregate_query_no_group_by                                                                            \r\n                           time:   [122.19 us 122.38 us 122.58 us]\r\n                           change: [-1.5876% +0.3639% +2.3348%] (p = 0.74 > 0.05)\r\n                           No change in performance detected.\r\n   Found 6 outliers among 100 measurements (6.00%)\r\n     6 (6.00%) high severe\r\n   \r\n   aggregate_query_group_by                                                                            \r\n                           time:   [172.66 us 172.91 us 173.19 us]\r\n                           change: [-0.9329% +1.2144% +3.2272%] (p = 0.28 > 0.05)\r\n                           No change in performance detected.\r\n   Found 12 outliers among 100 measurements (12.00%)\r\n     6 (6.00%) high mild\r\n     6 (6.00%) high severe\r\n   \r\n   aggregate_query_group_by_with_filter                                                                            \r\n                           time:   [282.30 us 282.70 us 283.14 us]\r\n                           change: [-1.1013% +0.9700% +2.7683%] (p = 0.40 > 0.05)\r\n                           No change in performance detected.\r\n   Found 8 outliers among 100 measurements (8.00%)\r\n     2 (2.00%) high mild\r\n     6 (6.00%) high severe\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-30T18:47:14.115+0000",
                    "updated": "2020-07-30T18:47:14.115+0000",
                    "started": "2020-07-30T18:47:14.115+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "464704",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/464749",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463289143\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       @jorgecarleitao Out of curiousity what are the hardware specs you ran this on?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-30T21:45:04.163+0000",
                    "updated": "2020-07-30T21:45:04.163+0000",
                    "started": "2020-07-30T21:45:04.163+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "464749",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/464868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463403608\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       Mac OS 10.14.5, 2.3 GHz Intel Core i5, 8 GB 2133 MHz LPDDR3.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-31T04:51:39.834+0000",
                    "updated": "2020-07-31T04:51:39.834+0000",
                    "started": "2020-07-31T04:51:39.834+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "464868",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/465167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463854007\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       I would be interested in finding out what AVX instruction sets are supported on the specific CPU that you have. For example, does it support AVX2?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-31T21:25:45.936+0000",
                    "updated": "2020-07-31T21:25:45.936+0000",
                    "started": "2020-07-31T21:25:45.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465167",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/465269",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463917429\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       I do not think so:\r\n   \r\n   ```\r\n   $ sysctl -a | grep machdep.cpu.features\r\n   machdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C\r\n   ```\r\n   \r\n   There is a `AVX1.0` there.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-01T03:50:52.814+0000",
                    "updated": "2020-08-01T03:50:52.814+0000",
                    "started": "2020-08-01T03:50:52.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465269",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/465273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#discussion_r463919728\n\n\n\n##########\nFile path: rust/datafusion/src/execution/physical_plan/hash_aggregate.rs\n##########\n@@ -327,120 +278,47 @@ impl RecordBatchReader for GroupedHashAggregateIterator {\n                 })\n                 .collect::<ArrowResult<Vec<_>>>()?;\n \n-            // create vector large enough to hold the grouping key\n+            // create vector to hold the grouping key\n             let mut key = Vec::with_capacity(group_values.len());\n             for _ in 0..group_values.len() {\n-                key.push(GroupByScalar::UInt32(0));\n+                key.push(KeyScalar::UInt32(0));\n             }\n \n             // iterate over each row in the batch and create the accumulators for each grouping key\n-            let mut accumulators: Vec<Rc<AccumulatorSet>> =\n\nReview comment:\n       Actually, this information is incorrect. My CPU family is [Kaby Lake](https://en.wikipedia.org/wiki/Kaby_Lake), which as the AVX2.0 extension.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-01T04:21:33.001+0000",
                    "updated": "2020-08-01T04:21:33.001+0000",
                    "started": "2020-08-01T04:21:33.000+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "465273",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/469902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687#issuecomment-673068765\n\n\n   Closing in preference of #7936 .\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-12T19:34:49.177+0000",
                    "updated": "2020-08-12T19:34:49.177+0000",
                    "started": "2020-08-12T19:34:49.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "469902",
                    "issueId": "13315788"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/worklog/469903",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #7687:\nURL: https://github.com/apache/arrow/pull/7687\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-12T19:34:52.152+0000",
                    "updated": "2020-08-12T19:34:52.152+0000",
                    "started": "2020-08-12T19:34:52.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "469903",
                    "issueId": "13315788"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@50c815d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3f5394f4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61d29d21[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@420541db[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78912f9e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@571b6f75[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2255db22[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4ab65d2a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b2a663d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3746c6ea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3bc687eb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4361d2b4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 13:18:14 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T13:18:16.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9382/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-07-09T05:48:30.000+0000",
        "updated": "2021-04-26T13:18:16.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently we do not support boolean columns on groupBy.\r\n\r\nHere is a reproducer:\r\n\r\n{code}\r\nalamb@MacBook-Pro:~/Software/arrow/rust$ echo \"false\" > /tmp/foo.csv\r\nalamb@MacBook-Pro:~/Software/arrow/rust$ cargo run --bin datafusion-cli\r\n    Finished dev [unoptimized + debuginfo] target(s) in 0.14s\r\n     Running `target/debug/datafusion-cli`\r\n> create external table test(c1 boolean) stored as CSV location '/tmp/foo.csv';\r\n0 rows in set. Query took 0 seconds.\r\n> select count(c1), c1 from test group by c1;\r\nArrowError(ExternalError(ExecutionError(\"Unsupported GROUP BY data type\")))\r\n{code}\r\n\r\nThe expected result is \r\n{code}\r\n1, false\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Can not group by boolean columns (add  boolean to valid keys of groupBy)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/comment/17154200",
                    "id": "17154200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "PR: https://github.com/apache/arrow/pull/7687",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-07-09T05:49:23.958+0000",
                    "updated": "2020-07-09T05:49:23.958+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315788/comment/17332285",
                    "id": "17332285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-datafusion/issues/91",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T13:18:14.349+0000",
                    "updated": "2021-04-26T13:18:14.349+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gl7s:",
        "customfield_12314139": null
    }
}