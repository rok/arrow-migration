{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13354111",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111",
    "key": "ARROW-11357",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 31200,
            "total": 31200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11357/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 52,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301\n\n\n   This PR fixes two major issues in our `take` kernel for primitive arrays.\r\n   \r\n   Background\r\n   \r\n   * When using `values()` from an array, it is important to remember that only certain values are well defined (those whose the null bit is set / no buffer).\r\n   \r\n   * When reading values from an array using `array.value(i)`, it is important to remember that it currently performs no bound checks.\r\n   \r\n   * `take` offers an option to deactivate bound checks, by turning an error in a panic. that option defaults to not check (i.e. `panic`)\r\n   \r\n   however, `take` kernel respects none of the points above: \r\n   * it reads and uses undefined indices\r\n   * it accesses out of bound values\r\n   * it does not panic when `check_bounds = false` (it instead reads out of bounds)\r\n   \r\n   Specifically, it is currently doing something like the following:\r\n   \r\n   ```rust\r\n   let indices = indices.values();\r\n   for index in indices {\r\n          let index = index.to_usize();\r\n          let taken_value = values.value(index)\r\n   }\r\n   ```\r\n   \r\n   I.e. \r\n   \r\n   * there is no check that `index < values.len()`. \r\n   * because `indices.values()` can contain arbitrary data on slot `x`, there is no guarantee that `x` results in a valid index.\r\n   \r\n   Combined, this allows for spectacular unbounded memory reads. E.g. it is possible that the index on the null slot reads from the offset `i64::MAX - 1`.\r\n   \r\n   This PR fixes this behavior. The implementation in this PR will likely be slower than the current implementation, but at least is (IMO) sound.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:27:46.564+0000",
                    "updated": "2021-01-23T14:27:46.564+0000",
                    "started": "2021-01-23T14:27:46.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540533",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766087862\n\n\n   https://issues.apache.org/jira/browse/ARROW-11357\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:28:09.945+0000",
                    "updated": "2021-01-23T14:28:09.945+0000",
                    "started": "2021-01-23T14:28:09.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540534",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766088562\n\n\n   On a side note, this explains why `take` was always extremely fast when I tried to replace it by `MutableArray`: `MutableArray` was safe xD\r\n   \r\n   On another side note, this just re-inforces the need to mark `PrimitiveArray::value`  as `unsafe`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:33:41.794+0000",
                    "updated": "2021-01-23T14:33:41.794+0000",
                    "started": "2021-01-23T14:33:41.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540535",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766088562\n\n\n   On a side note, this explains why I was unable to beat `take` when I tried to replace it by `MutableArray`.\r\n   \r\n   On another side note, this just re-inforces the need to mark `PrimitiveArray::value`  as `unsafe`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:34:58.631+0000",
                    "updated": "2021-01-23T14:34:58.631+0000",
                    "started": "2021-01-23T14:34:58.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540536",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#discussion_r563160450\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -1350,20 +1532,32 @@ mod tests {\n     }\n \n     #[test]\n-    #[should_panic(\n-        expected = \"Array index out of bounds, cannot get item at index 6 from 5 entries\"\n-    )]\n     fn test_take_out_of_bounds() {\n\nReview comment:\n       this test was panicking because there was an `unwrap` on `test_take_primitive_arrays`, however, this would not allow to verify whether the panic was observed when `check_bounds: false`.\r\n   \r\n   I changed this test to verify that the result is an error.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:42:56.930+0000",
                    "updated": "2021-01-23T14:42:56.930+0000",
                    "started": "2021-01-23T14:42:56.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540537",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#discussion_r563160480\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -1350,20 +1532,32 @@ mod tests {\n     }\n \n     #[test]\n-    #[should_panic(\n-        expected = \"Array index out of bounds, cannot get item at index 6 from 5 entries\"\n-    )]\n     fn test_take_out_of_bounds() {\n         let index = UInt32Array::from(vec![Some(3), None, Some(1), Some(3), Some(6)]);\n         let take_opt = TakeOptions { check_bounds: true };\n \n         // int64\n-        test_take_primitive_arrays::<Int64Type>(\n+        let result = test_take_primitive_arrays::<Int64Type>(\n             vec![Some(0), None, Some(2), Some(3), None],\n             &index,\n             Some(take_opt),\n             vec![None],\n         );\n+        assert!(result.is_err());\n+    }\n+\n+    #[test]\n+    #[should_panic(expected = \"index out of bounds: the len is 4 but the index is 1000\")]\n+    fn test_take_out_of_bounds_panic() {\n\nReview comment:\n       this was not passing in master, this is the one that should panic...\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:43:39.988+0000",
                    "updated": "2021-01-23T14:43:39.988+0000",
                    "started": "2021-01-23T14:43:39.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540538",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766090110\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=h1) Report\n   > Merging [#9301](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=desc) (90bea5d) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.04%`.\n   > The diff coverage is `96.13%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9301/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9301      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.88%   +0.04%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53011      +62     \n   ==========================================\n   + Hits        43336    43409      +73     \n   + Misses       9613     9602      -11     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/bytes.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnl0ZXMucnM=) | `53.12% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `78.94% <50.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/arithmetic.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2FyaXRobWV0aWMucnM=) | `89.55% <95.83%> (\u00f8)` | |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <96.59%> (+2.52%)` | :arrow_up: |\n   | [rust/arrow/src/compute/kernels/take.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL3Rha2UucnM=) | `95.54% <96.59%> (+0.33%)` | :arrow_up: |\n   | [rust/arrow/src/array/transform/primitive.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL3ByaW1pdGl2ZS5ycw==) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/compute/kernels/length.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2xlbmd0aC5ycw==) | `100.00% <100.00%> (\u00f8)` | |\n   | ... and [1 more](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=footer). Last update [67d0c2e...d3e2454](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:45:13.168+0000",
                    "updated": "2021-01-23T14:45:13.168+0000",
                    "started": "2021-01-23T14:45:13.168+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540539",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766090110\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=h1) Report\n   > Merging [#9301](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=desc) (64309b6) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.04%`.\n   > The diff coverage is `96.59%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9301/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9301      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.88%   +0.04%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53011      +62     \n   ==========================================\n   + Hits        43336    43408      +72     \n   + Misses       9613     9603      -10     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/compute/kernels/take.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL3Rha2UucnM=) | `95.54% <96.59%> (+0.33%)` | :arrow_up: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.24% <0.00%> (-0.20%)` | :arrow_down: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <0.00%> (+2.52%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=footer). Last update [67d0c2e...d3e2454](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:47:06.525+0000",
                    "updated": "2021-01-23T14:47:06.525+0000",
                    "started": "2021-01-23T14:47:06.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540540",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766090110\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=h1) Report\n   > Merging [#9301](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=desc) (d3e2454) into [master](https://codecov.io/gh/apache/arrow/commit/67d0c2e38011cd883059e3a9fd0ea08088661707?el=desc) (67d0c2e) will **increase** coverage by `0.03%`.\n   > The diff coverage is `96.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9301/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9301      +/-   ##\n   ==========================================\n   + Coverage   81.84%   81.88%   +0.03%     \n   ==========================================\n     Files         215      215              \n     Lines       52949    53010      +61     \n   ==========================================\n   + Hits        43336    43407      +71     \n   + Misses       9613     9603      -10     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/compute/kernels/take.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL3Rha2UucnM=) | `95.53% <96.55%> (+0.33%)` | :arrow_up: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.24% <0.00%> (-0.20%)` | :arrow_down: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9301/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `96.21% <0.00%> (+2.52%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=footer). Last update [67d0c2e...d3e2454](https://codecov.io/gh/apache/arrow/pull/9301?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T14:58:11.747+0000",
                    "updated": "2021-01-23T14:58:11.747+0000",
                    "started": "2021-01-23T14:58:11.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540542",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766092621\n\n\n   This same behavior also exists in the boolean take :/\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T15:03:18.382+0000",
                    "updated": "2021-01-23T15:03:18.382+0000",
                    "started": "2021-01-23T15:03:18.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540543",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#discussion_r563171151\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -269,64 +417,44 @@ fn take_primitive<T, I>(\n ) -> Result<PrimitiveArray<T>>\n where\n     T: ArrowPrimitiveType,\n-    T::Native: num::Num,\n     I: ArrowNumericType,\n     I::Native: ToPrimitive,\n {\n-    let data_len = indices.len();\n-\n-    let mut buffer =\n-        MutableBuffer::from_len_zeroed(data_len * std::mem::size_of::<T::Native>());\n-    let data = buffer.typed_data_mut();\n-\n-    let nulls;\n-\n-    if values.null_count() == 0 {\n-        // Take indices without null checking\n-        for (i, elem) in data.iter_mut().enumerate() {\n-            let index = ToPrimitive::to_usize(&indices.value(i)).ok_or_else(|| {\n-                ArrowError::ComputeError(\"Cast to usize failed\".to_string())\n-            })?;\n-\n-            *elem = values.value(index);\n+    let indices_has_nulls = indices.null_count() != 0;\n\nReview comment:\n       `> 0` might be slightly more clear here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T16:26:55.434+0000",
                    "updated": "2021-01-23T16:26:55.434+0000",
                    "started": "2021-01-23T16:26:55.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540558",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#discussion_r563175843\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -254,6 +254,154 @@ impl Default for TakeOptions {\n     }\n }\n \n+#[inline]\n+fn maybe_take<T: ArrowPrimitiveType, I: ArrowPrimitiveType>(\n+    values: &[T::Native],\n+    index: I::Native,\n+) -> Result<(usize, T::Native)>\n+where\n+    I::Native: ToPrimitive,\n+{\n+    match ToPrimitive::to_usize(&index) {\n+        // there are two potential sources of errors here:\n+        // 1. the index is out of bounds (panic as per `take` docs)\n+        // 2. the index cannot be converted to a usize (mostly 32 bit systems)\n+        Some(index) => Ok((index, values[index])),\n+        None => Err(ArrowError::ComputeError(\"Cast to usize failed\".to_string())),\n+    }\n+}\n+\n+// take implementation when neither values nor indices contain nulls\n+fn take_no_nulls<T, I>(\n+    values: &[T::Native],\n+    indices: &[I::Native],\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let buffer = indices\n+        .iter()\n+        .map(|index| maybe_take::<T, I>(values, *index).map(|x| x.1))\n+        .collect::<Result<Buffer>>()?;\n+\n+    Ok((buffer, None))\n+}\n+\n+// take implementation when only values contain nulls\n+fn take_values_nulls<T, I>(\n+    values: &PrimitiveArray<T>,\n+    indices: &[I::Native],\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let num_bytes = bit_util::ceil(indices.len(), 8);\n+    let mut nulls = MutableBuffer::new(num_bytes).with_bitset(num_bytes, true);\n+    let null_slice = nulls.as_slice_mut();\n+    let mut null_count = 0;\n+\n+    let values_values = values.values();\n+\n+    let buffer = indices\n+        .iter()\n+        .enumerate()\n+        .map(|(i, index)| {\n+            let (index, value) = maybe_take::<T, I>(values_values, *index)?;\n+            if values.is_null(index) {\n+                null_count += 1;\n+                bit_util::unset_bit(null_slice, i);\n+            }\n+            Ok(value)\n+        })\n+        .collect::<Result<Buffer>>()?;\n+\n+    let nulls = if null_count == 0 {\n+        // if only non-null values were taken\n+        None\n+    } else {\n+        Some(nulls.into())\n+    };\n+\n+    Ok((buffer, nulls))\n+}\n+\n+// take implementation when only indices contain nulls\n+fn take_indices_nulls<T, I>(\n+    values: &[T::Native],\n+    indices: &PrimitiveArray<I>,\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let buffer = indices\n+        .iter()\n+        .map(|index| {\n+            match index {\n+                // valid index => try to take using it\n+                Some(index) => maybe_take::<T, I>(values, index).map(|x| x.1),\n+                // null index => do not\n+                None => Ok(T::Native::default()),\n+            }\n+        })\n+        .collect::<Result<Buffer>>()?;\n+\n+    Ok((buffer, indices.data_ref().null_buffer().cloned()))\n+}\n+\n+// take implementation when both values and indices contain nulls\n+fn take_values_indices_nulls<T, I>(\n+    values: &PrimitiveArray<T>,\n+    indices: &PrimitiveArray<I>,\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let num_bytes = bit_util::ceil(indices.len(), 8);\n+    let mut nulls = MutableBuffer::new(num_bytes).with_bitset(num_bytes, true);\n+    let null_slice = nulls.as_slice_mut();\n+    let mut null_count = 0;\n+\n+    let values_values = values.values();\n+    // in this branch it is **not** ok to read `index.values()` and try to use it,\n+    // as doing so is UB when they come from a null slot.\n\nReview comment:\n       I am not 100% clear yet why this part itself is UB (as in reading outside bounds / uninitialized memory) as long as the null buffer is used correctly?\r\n   Or maybe you mean that it could *trigger* UB when doing OOB reads when the value itself from the array would be bigger, which would trigger `UB` later on like before? At least when calling this I think the changes definitely makes sense, I wouldn't expect a panic (or OOB!) if the value in the indices was coming from a null slot :+1: \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T17:13:19.952+0000",
                    "updated": "2021-01-23T17:13:19.952+0000",
                    "started": "2021-01-23T17:13:19.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540568",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766150958\n\n\n   Wouldn't it be possible to have a similar as previously implementation for `take_no_nulls` and `take_values_nulls`? I think those are the most common anyway.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T17:53:15.040+0000",
                    "updated": "2021-01-23T17:53:15.040+0000",
                    "started": "2021-01-23T17:53:15.040+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540576",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540589",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766157047\n\n\n   @Dandandan , \r\n   \r\n   > Wouldn't it be possible to have a similar as previously implementation for `take_no_nulls` and `take_values_nulls`? I think those are the most common anyway.\r\n   \r\n   I am sorry, I did not understand: this PR does split the kernel in the 4 cases, and uses them accordingly depending on the null count of `values` and `indices`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:29:31.509+0000",
                    "updated": "2021-01-23T18:29:31.509+0000",
                    "started": "2021-01-23T18:29:31.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540589",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#discussion_r563186250\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/take.rs\n##########\n@@ -254,6 +254,154 @@ impl Default for TakeOptions {\n     }\n }\n \n+#[inline]\n+fn maybe_take<T: ArrowPrimitiveType, I: ArrowPrimitiveType>(\n+    values: &[T::Native],\n+    index: I::Native,\n+) -> Result<(usize, T::Native)>\n+where\n+    I::Native: ToPrimitive,\n+{\n+    match ToPrimitive::to_usize(&index) {\n+        // there are two potential sources of errors here:\n+        // 1. the index is out of bounds (panic as per `take` docs)\n+        // 2. the index cannot be converted to a usize (mostly 32 bit systems)\n+        Some(index) => Ok((index, values[index])),\n+        None => Err(ArrowError::ComputeError(\"Cast to usize failed\".to_string())),\n+    }\n+}\n+\n+// take implementation when neither values nor indices contain nulls\n+fn take_no_nulls<T, I>(\n+    values: &[T::Native],\n+    indices: &[I::Native],\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let buffer = indices\n+        .iter()\n+        .map(|index| maybe_take::<T, I>(values, *index).map(|x| x.1))\n+        .collect::<Result<Buffer>>()?;\n+\n+    Ok((buffer, None))\n+}\n+\n+// take implementation when only values contain nulls\n+fn take_values_nulls<T, I>(\n+    values: &PrimitiveArray<T>,\n+    indices: &[I::Native],\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let num_bytes = bit_util::ceil(indices.len(), 8);\n+    let mut nulls = MutableBuffer::new(num_bytes).with_bitset(num_bytes, true);\n+    let null_slice = nulls.as_slice_mut();\n+    let mut null_count = 0;\n+\n+    let values_values = values.values();\n+\n+    let buffer = indices\n+        .iter()\n+        .enumerate()\n+        .map(|(i, index)| {\n+            let (index, value) = maybe_take::<T, I>(values_values, *index)?;\n+            if values.is_null(index) {\n+                null_count += 1;\n+                bit_util::unset_bit(null_slice, i);\n+            }\n+            Ok(value)\n+        })\n+        .collect::<Result<Buffer>>()?;\n+\n+    let nulls = if null_count == 0 {\n+        // if only non-null values were taken\n+        None\n+    } else {\n+        Some(nulls.into())\n+    };\n+\n+    Ok((buffer, nulls))\n+}\n+\n+// take implementation when only indices contain nulls\n+fn take_indices_nulls<T, I>(\n+    values: &[T::Native],\n+    indices: &PrimitiveArray<I>,\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let buffer = indices\n+        .iter()\n+        .map(|index| {\n+            match index {\n+                // valid index => try to take using it\n+                Some(index) => maybe_take::<T, I>(values, index).map(|x| x.1),\n+                // null index => do not\n+                None => Ok(T::Native::default()),\n+            }\n+        })\n+        .collect::<Result<Buffer>>()?;\n+\n+    Ok((buffer, indices.data_ref().null_buffer().cloned()))\n+}\n+\n+// take implementation when both values and indices contain nulls\n+fn take_values_indices_nulls<T, I>(\n+    values: &PrimitiveArray<T>,\n+    indices: &PrimitiveArray<I>,\n+) -> Result<(Buffer, Option<Buffer>)>\n+where\n+    T: ArrowPrimitiveType,\n+    I: ArrowNumericType,\n+    I::Native: ToPrimitive,\n+{\n+    let num_bytes = bit_util::ceil(indices.len(), 8);\n+    let mut nulls = MutableBuffer::new(num_bytes).with_bitset(num_bytes, true);\n+    let null_slice = nulls.as_slice_mut();\n+    let mut null_count = 0;\n+\n+    let values_values = values.values();\n+    // in this branch it is **not** ok to read `index.values()` and try to use it,\n+    // as doing so is UB when they come from a null slot.\n\nReview comment:\n       I think that this becomes more academic at this point, and I do not know exactly why, but, in Rust, reading an initialized value is undefined behavior, see e.g. https://doc.rust-lang.org/std/mem/union.MaybeUninit.html\r\n   \r\n   We are abusing this in a lot of places, specially when we perform SIMD operations where we disregard the null bitmap and do the op over the whole buffer. I do not have a good answer here, at this point is more like \"it works\".\r\n   \r\n   In this particular case, though, the issue is that we are doing `*values.as_ptr().offset(index.to_usize())` where `index` comes from a null slot, which is very much an OOB read. This comment is about that: any operation on `index` in UB (even in trying to cast it to `usize`, since the previous values may represent `-1i32`, as offsets are signed).\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:53:48.530+0000",
                    "updated": "2021-01-23T18:53:48.530+0000",
                    "started": "2021-01-23T18:53:48.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540597",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766160716\n\n\n   > @Dandandan , \n   > \n   > > Wouldn't it be possible to have a similar as previously implementation for `take_no_nulls` and `take_values_nulls`? I think those are the most common anyway.\n   > \n   > I am sorry, I did not understand: this PR does split the kernel in the 4 cases, and uses them accordingly depending on the null count of `values` and `indices`.\n   \n   Sorry, I'll try to be more clear.\n   \n   As far as I understand the undefined behavior comes from using the values from the null _indices_, so wouldn't it be possible to (mostly) recover the performance for the cases where there are either no null values at all, or only for the _values_? I think cases would occur more frequently (e.g. in DataFusion) than using the kernel with indices with nulls.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T18:55:45.477+0000",
                    "updated": "2021-01-23T18:55:45.477+0000",
                    "started": "2021-01-23T18:55:45.476+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540598",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540601",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766163142\n\n\n   Now I get your point. On the PR description, I mention to _independent_ sources of unsoundness:\r\n   \r\n   * we are using indices from null slots\r\n   * we are not performing bound checks on values.\r\n   \r\n   In particular, the second point above allows the following code to run with exit 0:\r\n   \r\n   ```rust\r\n       #[test]\r\n       fn test_bla() {\r\n           let indices = UInt32Array::from(vec![1, 10, 1000, 100000]);\r\n   \r\n           let values = UInt32Array::from(vec![0, 1, 2, 3]);\r\n           let r = take(&values, &indices, None).unwrap();\r\n           println!(\"{:?}\", r);\r\n       }\r\n   ```\r\n   \r\n   which of course gives a meaningless result. The point is that even though this code is marked as `safe`, it is UB.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T19:08:45.121+0000",
                    "updated": "2021-01-23T19:08:45.121+0000",
                    "started": "2021-01-23T19:08:45.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540601",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766163142\n\n\n   Now I get your point. On the PR description, I mention to _independent_ sources of unsoundness:\r\n   \r\n   * we are using indices from null slots\r\n   * we are not performing bound checks on values.\r\n   \r\n   In particular, the second point above allows the following code to run with exit 0:\r\n   \r\n   ```rust\r\n       #[test]\r\n       fn test_bla() {\r\n           let indices = UInt32Array::from(vec![1, 10, 1000, 100000]);\r\n   \r\n           let values = UInt32Array::from(vec![0, 1, 2, 3]);\r\n           let r = take(&values, &indices, None).unwrap();\r\n           println!(\"{:?}\", r);\r\n       }\r\n   ```\r\n   \r\n   which of course gives a meaningless result, but demonstrates the issue here: this code is marked as `safe` but is UB.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T19:09:20.240+0000",
                    "updated": "2021-01-23T19:09:20.240+0000",
                    "started": "2021-01-23T19:09:20.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540602",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766163142\n\n\n   Now I get your point. On the PR description, I mention to _independent_ sources of unsoundness:\r\n   \r\n   * we are using indices from null slots\r\n   * we are not performing bound checks on values.\r\n   \r\n   In particular, the second point above allows the following code to run with exit 0:\r\n   \r\n   ```rust\r\n       #[test]\r\n       fn test_bla() {\r\n           let indices = UInt32Array::from(vec![1, 10, 1000, 100000]);\r\n   \r\n           let values = UInt32Array::from(vec![0, 1, 2, 3]);\r\n           let r = take(&values, &indices, None).unwrap();\r\n           println!(\"{:?}\", r);\r\n       }\r\n   ```\r\n   \r\n   which while gives a meaningless result, it demonstrates the issue here: this code is marked as `safe` but is UB.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T19:10:23.553+0000",
                    "updated": "2021-01-23T19:10:23.553+0000",
                    "started": "2021-01-23T19:10:23.553+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540603",
                    "issueId": "13354111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/worklog/540604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao edited a comment on pull request #9301:\nURL: https://github.com/apache/arrow/pull/9301#issuecomment-766163142\n\n\n   Now I get your point. On the PR description, I mention to _independent_ sources of unsoundness:\r\n   \r\n   * we are using indices from null slots\r\n   * we are not performing bound checks on values.\r\n   \r\n   In particular, the second point above allows the following code to run with exit 0:\r\n   \r\n   ```rust\r\n       #[test]\r\n       fn test_bla() {\r\n           let indices = UInt32Array::from(vec![1, 10, 1000, 100000]);\r\n   \r\n           let values = UInt32Array::from(vec![0, 1, 2, 3]);\r\n           let r = take(&values, &indices, None).unwrap();\r\n           println!(\"{:?}\", r);\r\n       }\r\n   ```\r\n   \r\n   which yields a meaningless result because it is UB, even though it is marked as `safe`.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-23T19:12:16.771+0000",
                    "updated": "2021-01-23T19:12:16.771+0000",
                    "started": "2021-01-23T19:12:16.771+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "540604",
                    "issueId": "13354111"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 31200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@c5706cf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e89c020[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34264449[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@74ee0a2d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10ed4239[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@adb0739[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cd91e27[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@862d2f3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72e4b54c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@205486e6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64389ced[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a533fd3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 31200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Feb 16 20:21:53 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-02-16T20:21:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11357/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-01-23T14:12:01.000+0000",
        "updated": "2021-02-16T20:22:04.000+0000",
        "timeoriginalestimate": null,
        "description": "There is an out of bound read.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "8h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 31200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] take primitive implementation is unsound",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354111/comment/17285467",
                    "id": "17285467",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9301\n[https://github.com/apache/arrow/pull/9301]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-02-16T20:21:53.445+0000",
                    "updated": "2021-02-16T20:21:53.445+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0mwlc:",
        "customfield_12314139": null
    }
}