{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13193849",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849",
    "key": "ARROW-3608",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4800,
            "total": 4800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3608/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 8,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/159645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#issuecomment-433635394\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=h1) Report\n   > Merging [#2830](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/4a3d8c9b95108a3635d51dea9c730af059763b37?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2830/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2830      +/-   ##\n   ==========================================\n   - Coverage   87.48%   87.48%   -0.01%     \n   ==========================================\n     Files         410      410              \n     Lines       63327    63327              \n   ==========================================\n   - Hits        55403    55400       -3     \n   - Misses       7850     7853       +3     \n     Partials       74       74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/csv/column-builder.cc](https://codecov.io/gh/apache/arrow/pull/2830/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uLWJ1aWxkZXIuY2M=) | `94.92% <0%> (-2.18%)` | :arrow_down: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=footer). Last update [4a3d8c9...d4d9b8b](https://codecov.io/gh/apache/arrow/pull/2830?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-27T16:35:35.895+0000",
                    "updated": "2018-10-27T16:35:35.895+0000",
                    "started": "2018-10-27T16:35:35.895+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159645",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229238007\n \n \n\n ##########\n File path: r/src/array.cpp\n ##########\n @@ -373,6 +373,75 @@ std::shared_ptr<arrow::Array> Int64Array(SEXP x) {\n   return std::make_shared<typename TypeTraits<Int64Type>::ArrayType>(data);\n }\n \n+inline int difftime_unit_multiplier(SEXP x) {\n+  std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, symbols::units), 0)));\n+  if (unit == \"secs\") {\n+    return 1;\n+  } else if (unit == \"mins\") {\n+    return 60;\n+  } else if (unit == \"hours\") {\n+    return 3600;\n+  } else if (unit == \"days\") {\n+    return 86400;\n+  } else if (unit == \"weeks\") {\n+    return 604800;\n+  }\n+  Rcpp::stop(\"unknown difftime unit\");\n+  return 0;\n+}\n+\n+std::shared_ptr<arrow::Array> Time32Array_From_difftime(SEXP x) {\n+  // number of seconds as a double\n+  auto p_vec_start = REAL(x);\n+  auto n = Rf_xlength(x);\n+  int64_t null_count = 0;\n+\n+  int multiplier = difftime_unit_multiplier(x);\n+  std::vector<std::shared_ptr<Buffer>> buffers{nullptr, nullptr};\n \n Review comment:\n   `buffers(2)` works too\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T09:55:42.523+0000",
                    "updated": "2018-10-30T09:55:42.523+0000",
                    "started": "2018-10-30T09:55:42.522+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160491",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229238448\n \n \n\n ##########\n File path: r/src/array.cpp\n ##########\n @@ -373,6 +373,75 @@ std::shared_ptr<arrow::Array> Int64Array(SEXP x) {\n   return std::make_shared<typename TypeTraits<Int64Type>::ArrayType>(data);\n }\n \n+inline int difftime_unit_multiplier(SEXP x) {\n+  std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, symbols::units), 0)));\n+  if (unit == \"secs\") {\n+    return 1;\n+  } else if (unit == \"mins\") {\n+    return 60;\n+  } else if (unit == \"hours\") {\n+    return 3600;\n+  } else if (unit == \"days\") {\n+    return 86400;\n+  } else if (unit == \"weeks\") {\n+    return 604800;\n+  }\n+  Rcpp::stop(\"unknown difftime unit\");\n+  return 0;\n+}\n+\n+std::shared_ptr<arrow::Array> Time32Array_From_difftime(SEXP x) {\n+  // number of seconds as a double\n+  auto p_vec_start = REAL(x);\n+  auto n = Rf_xlength(x);\n+  int64_t null_count = 0;\n+\n+  int multiplier = difftime_unit_multiplier(x);\n+  std::vector<std::shared_ptr<Buffer>> buffers{nullptr, nullptr};\n+\n+  R_ERROR_NOT_OK(AllocateBuffer(n * sizeof(int32_t), &buffers[1]));\n+  auto p_values = reinterpret_cast<int32_t*>(buffers[1]->mutable_data());\n+\n+  R_xlen_t i = 0;\n+  auto p_vec = p_vec_start;\n+  for (; i < n; i++, ++p_vec, ++p_values) {\n+    if (NumericVector::is_na(*p_vec)) {\n+      break;\n+    }\n+    *p_values = static_cast<int32_t>(*p_vec * multiplier);\n+  }\n+\n+  if (i < n) {\n \n Review comment:\n   I have seen this pattern in some other conversion functions. Seems like you could introduce some lambdas / functors and have a reusable template for this part\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T09:55:42.738+0000",
                    "updated": "2018-10-30T09:55:42.738+0000",
                    "started": "2018-10-30T09:55:42.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160492",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229237593\n \n \n\n ##########\n File path: .travis.yml\n ##########\n @@ -298,6 +298,8 @@ matrix:\n     - bash <(curl -s https://codecov.io/bash) || echo \"Codecov did not collect coverage reports\"\n   # R\n   - language: r\n+    env:\n+    - GITHUB_PAT=\"4aa63e8f11dbebae5a51018c3e8d5bfa269947f7\"\n \n Review comment:\n   Is this safe?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T09:55:42.991+0000",
                    "updated": "2018-10-30T09:55:42.991+0000",
                    "started": "2018-10-30T09:55:42.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160493",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229238902\n \n \n\n ##########\n File path: r/src/array.cpp\n ##########\n @@ -698,6 +770,34 @@ SEXP Int64Array(const std::shared_ptr<Array>& array) {\n   return vec;\n }\n \n+template <typename value_type>\n+SEXP TimeArray_to_Vector(const std::shared_ptr<Array>& array, int32_t multiplier) {\n+  auto n = array->length();\n+  NumericVector vec(no_init(n));\n+  auto null_count = array->null_count();\n+  vec.attr(\"class\") = CharacterVector::create(\"hms\", \"difftime\");\n+  vec.attr(\"units\") = \"secs\";\n+  if (n == 0) {\n+    return vec;\n+  }\n+  auto p_values = GetValuesSafely<value_type>(array->data(), 1, array->offset());\n+  auto p_vec = vec.begin();\n+\n+  if (null_count) {\n+    arrow::internal::BitmapReader bitmap_reader(array->null_bitmap()->data(),\n+                                                array->offset(), n);\n+    for (size_t i = 0; i < n; i++, bitmap_reader.Next(), ++p_vec, ++p_values) {\n+      *p_vec =\n+          bitmap_reader.IsSet() ? (static_cast<double>(*p_values) / multiplier) : NA_REAL;\n+    }\n+  } else {\n+    std::transform(p_values, p_values + n, vec.begin(), [multiplier](value_type value) {\n+      return static_cast<double>(value) / multiplier;\n+    });\n \n Review comment:\n   Same here, could pass a lambda into an inline template\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T09:55:43.252+0000",
                    "updated": "2018-10-30T09:55:43.252+0000",
                    "started": "2018-10-30T09:55:43.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160494",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229248982\n \n \n\n ##########\n File path: .travis.yml\n ##########\n @@ -298,6 +298,8 @@ matrix:\n     - bash <(curl -s https://codecov.io/bash) || echo \"Codecov did not collect coverage reports\"\n   # R\n   - language: r\n+    env:\n+    - GITHUB_PAT=\"4aa63e8f11dbebae5a51018c3e8d5bfa269947f7\"\n \n Review comment:\n   This was from a dummy user, so safe enough. But github revoked it anyway. So I'll remove it. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T10:24:04.927+0000",
                    "updated": "2018-10-30T10:24:04.927+0000",
                    "started": "2018-10-30T10:24:04.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160515",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830#discussion_r229250678\n \n \n\n ##########\n File path: r/src/array.cpp\n ##########\n @@ -373,6 +373,75 @@ std::shared_ptr<arrow::Array> Int64Array(SEXP x) {\n   return std::make_shared<typename TypeTraits<Int64Type>::ArrayType>(data);\n }\n \n+inline int difftime_unit_multiplier(SEXP x) {\n+  std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, symbols::units), 0)));\n+  if (unit == \"secs\") {\n+    return 1;\n+  } else if (unit == \"mins\") {\n+    return 60;\n+  } else if (unit == \"hours\") {\n+    return 3600;\n+  } else if (unit == \"days\") {\n+    return 86400;\n+  } else if (unit == \"weeks\") {\n+    return 604800;\n+  }\n+  Rcpp::stop(\"unknown difftime unit\");\n+  return 0;\n+}\n+\n+std::shared_ptr<arrow::Array> Time32Array_From_difftime(SEXP x) {\n+  // number of seconds as a double\n+  auto p_vec_start = REAL(x);\n+  auto n = Rf_xlength(x);\n+  int64_t null_count = 0;\n+\n+  int multiplier = difftime_unit_multiplier(x);\n+  std::vector<std::shared_ptr<Buffer>> buffers{nullptr, nullptr};\n+\n+  R_ERROR_NOT_OK(AllocateBuffer(n * sizeof(int32_t), &buffers[1]));\n+  auto p_values = reinterpret_cast<int32_t*>(buffers[1]->mutable_data());\n+\n+  R_xlen_t i = 0;\n+  auto p_vec = p_vec_start;\n+  for (; i < n; i++, ++p_vec, ++p_values) {\n+    if (NumericVector::is_na(*p_vec)) {\n+      break;\n+    }\n+    *p_values = static_cast<int32_t>(*p_vec * multiplier);\n+  }\n+\n+  if (i < n) {\n \n Review comment:\n   Yes, there is some repetition. I'll write something more generic, but I can do that in a follow up. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T10:28:29.677+0000",
                    "updated": "2018-10-30T10:28:29.677+0000",
                    "started": "2018-10-30T10:28:29.677+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160518",
                    "issueId": "13193849"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/worklog/160533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2830: ARROW-3608: [R] Support for time32 and time64 array types\nURL: https://github.com/apache/arrow/pull/2830\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/r/DESCRIPTION b/r/DESCRIPTION\nindex 8284f01efe..f1df7e2ad5 100644\n--- a/r/DESCRIPTION\n+++ b/r/DESCRIPTION\n@@ -35,7 +35,8 @@ RoxygenNote: 6.1.0.9000\n Suggests:\n     testthat, \n     lubridate, \n-    bit64\n+    bit64, \n+    hms\n Collate:\n     'enums.R'\n     'R6.R'\ndiff --git a/r/R/R6.R b/r/R/R6.R\nindex 5687daaed9..68a24ecc46 100644\n--- a/r/R/R6.R\n+++ b/r/R/R6.R\n@@ -95,6 +95,8 @@ construct <- function(class, xp) {\n         DATE32 = date32(),\n         DATE64 = date64(),\n         TIMESTAMP = construct(`arrow::Timestamp`,self$pointer()),\n+        TIME32 = construct(`arrow::Time32`,self$pointer()),\n+        TIME64 = construct(`arrow::Time64`,self$pointer()),\n         INTERVAL = stop(\"Type INTERVAL not implemented yet\"),\n         DECIMAL = construct(`arrow::Decimal128Type`, self$pointer()),\n         LIST = construct(`arrow::ListType`, self$pointer()),\ndiff --git a/r/src/array.cpp b/r/src/array.cpp\nindex 0cd059100a..33035dc122 100644\n--- a/r/src/array.cpp\n+++ b/r/src/array.cpp\n@@ -373,6 +373,75 @@ std::shared_ptr<arrow::Array> Int64Array(SEXP x) {\n   return std::make_shared<typename TypeTraits<Int64Type>::ArrayType>(data);\n }\n \n+inline int difftime_unit_multiplier(SEXP x) {\n+  std::string unit(CHAR(STRING_ELT(Rf_getAttrib(x, symbols::units), 0)));\n+  if (unit == \"secs\") {\n+    return 1;\n+  } else if (unit == \"mins\") {\n+    return 60;\n+  } else if (unit == \"hours\") {\n+    return 3600;\n+  } else if (unit == \"days\") {\n+    return 86400;\n+  } else if (unit == \"weeks\") {\n+    return 604800;\n+  }\n+  Rcpp::stop(\"unknown difftime unit\");\n+  return 0;\n+}\n+\n+std::shared_ptr<arrow::Array> Time32Array_From_difftime(SEXP x) {\n+  // number of seconds as a double\n+  auto p_vec_start = REAL(x);\n+  auto n = Rf_xlength(x);\n+  int64_t null_count = 0;\n+\n+  int multiplier = difftime_unit_multiplier(x);\n+  std::vector<std::shared_ptr<Buffer>> buffers(2);\n+\n+  R_ERROR_NOT_OK(AllocateBuffer(n * sizeof(int32_t), &buffers[1]));\n+  auto p_values = reinterpret_cast<int32_t*>(buffers[1]->mutable_data());\n+\n+  R_xlen_t i = 0;\n+  auto p_vec = p_vec_start;\n+  for (; i < n; i++, ++p_vec, ++p_values) {\n+    if (NumericVector::is_na(*p_vec)) {\n+      break;\n+    }\n+    *p_values = static_cast<int32_t>(*p_vec * multiplier);\n+  }\n+\n+  if (i < n) {\n+    R_ERROR_NOT_OK(AllocateBuffer(BitUtil::BytesForBits(n), &buffers[0]));\n+    internal::FirstTimeBitmapWriter bitmap_writer(buffers[0]->mutable_data(), 0, n);\n+\n+    // first loop to clear all the bits before the first NA\n+    for (R_xlen_t j = 0; j < i; j++, bitmap_writer.Next()) {\n+      bitmap_writer.Set();\n+    }\n+\n+    // then finish\n+    for (; i < n; i++, bitmap_writer.Next(), ++p_vec, ++p_values) {\n+      if (NumericVector::is_na(*p_vec)) {\n+        bitmap_writer.Clear();\n+        null_count++;\n+      } else {\n+        bitmap_writer.Set();\n+        *p_values = static_cast<int32_t>(*p_vec * multiplier);\n+      }\n+    }\n+\n+    bitmap_writer.Finish();\n+  }\n+\n+  auto data = ArrayData::Make(\n+      time32(TimeUnit::SECOND), n, std::move(buffers), null_count, 0 /*offset*/\n+  );\n+\n+  // return the right Array class\n+  return std::make_shared<Time32Array>(data);\n+}\n+\n }  // namespace r\n }  // namespace arrow\n \n@@ -402,6 +471,9 @@ std::shared_ptr<arrow::Array> Array__from_vector(SEXP x) {\n       if (Rf_inherits(x, \"integer64\")) {\n         return arrow::r::Int64Array(x);\n       }\n+      if (Rf_inherits(x, \"difftime\")) {\n+        return arrow::r::Time32Array_From_difftime(x);\n+      }\n       return arrow::r::SimpleArray<REALSXP, arrow::DoubleType>(x);\n     case RAWSXP:\n       return arrow::r::SimpleArray<RAWSXP, arrow::Int8Type>(x);\n@@ -610,7 +682,7 @@ SEXP Date32Array_to_Vector(const std::shared_ptr<arrow::Array>& array) {\n \n SEXP Date64Array_to_Vector(const std::shared_ptr<arrow::Array> array) {\n   auto n = array->length();\n-  NumericVector vec(n);\n+  NumericVector vec(no_init(n));\n   vec.attr(\"class\") = CharacterVector::create(\"POSIXct\", \"POSIXt\");\n   if (n == 0) {\n     return vec;\n@@ -672,7 +744,7 @@ SEXP promotion_Array_to_Vector(const std::shared_ptr<Array>& array) {\n \n SEXP Int64Array(const std::shared_ptr<Array>& array) {\n   auto n = array->length();\n-  NumericVector vec(n);\n+  NumericVector vec(no_init(n));\n   vec.attr(\"class\") = \"integer64\";\n   if (n == 0) {\n     return vec;\n@@ -698,6 +770,34 @@ SEXP Int64Array(const std::shared_ptr<Array>& array) {\n   return vec;\n }\n \n+template <typename value_type>\n+SEXP TimeArray_to_Vector(const std::shared_ptr<Array>& array, int32_t multiplier) {\n+  auto n = array->length();\n+  NumericVector vec(no_init(n));\n+  auto null_count = array->null_count();\n+  vec.attr(\"class\") = CharacterVector::create(\"hms\", \"difftime\");\n+  vec.attr(\"units\") = \"secs\";\n+  if (n == 0) {\n+    return vec;\n+  }\n+  auto p_values = GetValuesSafely<value_type>(array->data(), 1, array->offset());\n+  auto p_vec = vec.begin();\n+\n+  if (null_count) {\n+    arrow::internal::BitmapReader bitmap_reader(array->null_bitmap()->data(),\n+                                                array->offset(), n);\n+    for (size_t i = 0; i < n; i++, bitmap_reader.Next(), ++p_vec, ++p_values) {\n+      *p_vec =\n+          bitmap_reader.IsSet() ? (static_cast<double>(*p_values) / multiplier) : NA_REAL;\n+    }\n+  } else {\n+    std::transform(p_values, p_values + n, vec.begin(), [multiplier](value_type value) {\n+      return static_cast<double>(value) / multiplier;\n+    });\n+  }\n+  return vec;\n+}\n+\n SEXP DecimalArray(const std::shared_ptr<Array>& array) {\n   auto n = array->length();\n   NumericVector vec(no_init(n));\n@@ -779,7 +879,18 @@ SEXP Array__as_vector(const std::shared_ptr<arrow::Array>& array) {\n     case Type::FLOAT:\n       return arrow::r::promotion_Array_to_Vector<REALSXP, arrow::UInt32Type>(array);\n \n-    // lossy promotions to numeric vector\n+    // time32 ane time64\n+    case Type::TIME32:\n+      return arrow::r::TimeArray_to_Vector<int32_t>(\n+          array, static_cast<TimeType*>(array->type().get())->unit() == TimeUnit::SECOND\n+                     ? 1\n+                     : 1000);\n+    case Type::TIME64:\n+      return arrow::r::TimeArray_to_Vector<int64_t>(\n+          array, static_cast<TimeType*>(array->type().get())->unit() == TimeUnit::MICRO\n+                     ? 1000000\n+                     : 1000000000);\n+\n     case Type::INT64:\n       return arrow::r::Int64Array(array);\n     case Type::DECIMAL:\ndiff --git a/r/src/arrow_types.h b/r/src/arrow_types.h\nindex 0d21dadb15..e3f1e621d7 100644\n--- a/r/src/arrow_types.h\n+++ b/r/src/arrow_types.h\n@@ -150,5 +150,9 @@ class RBuffer : public MutableBuffer {\n   Vec vec_;\n };\n \n+struct symbols {\n+  static SEXP units;\n+};\n+\n }  // namespace r\n }  // namespace arrow\ndiff --git a/r/src/symbols.cpp b/r/src/symbols.cpp\nnew file mode 100644\nindex 0000000000..45dda38102\n--- /dev/null\n+++ b/r/src/symbols.cpp\n@@ -0,0 +1,24 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"arrow_types.h\"\n+\n+namespace arrow {\n+namespace r {\n+SEXP symbols::units = Rf_install(\"units\");\n+}\n+}  // namespace arrow\ndiff --git a/r/tests/testthat/test-Array.R b/r/tests/testthat/test-Array.R\nindex 0bcc935479..3f47f00cdc 100644\n--- a/r/tests/testthat/test-Array.R\n+++ b/r/tests/testthat/test-Array.R\n@@ -256,3 +256,18 @@ test_that(\"array supports integer64\", {\n   expect_equal(a$as_vector(), x)\n   expect_true(a$IsNull(3L))\n })\n+\n+test_that(\"array supports difftime\", {\n+  time <- hms::hms(56, 34, 12)\n+  a <- array(time, time)\n+  expect_equal(a$type(), time32(unit = TimeUnit$SECOND))\n+  expect_equal(a$length(), 2L)\n+  expect_equal(a$as_vector(), c(time, time))\n+\n+  a <- array(time, NA)\n+  expect_equal(a$type(), time32(unit = TimeUnit$SECOND))\n+  expect_equal(a$length(), 2L)\n+  expect_true(a$IsNull(1))\n+  expect_equal(a$as_vector()[1], time)\n+  expect_true(is.na(a$as_vector()[2]))\n+})\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-30T11:01:28.199+0000",
                    "updated": "2018-10-30T11:01:28.199+0000",
                    "started": "2018-10-30T11:01:28.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160533",
                    "issueId": "13193849"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 4800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b9413a7[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38c0e700[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dbcc26f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@42fbc23f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4be8c897[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@ae698c0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@11528c49[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@d245e66[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@859325[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3e9b3b6d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b2ed833[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1456665e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4800,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Oct 30 11:01:36 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-30T11:01:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3608/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-24T11:53:15.000+0000",
        "updated": "2018-10-30T11:01:54.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Support for time32 and time64 array types",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13193849/comment/16668548",
                    "id": "16668548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2830\n[https://github.com/apache/arrow/pull/2830]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-10-30T11:01:36.971+0000",
                    "updated": "2018-10-30T11:01:36.971+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zl0v:",
        "customfield_12314139": null
    }
}