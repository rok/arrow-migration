{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13386955",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955",
    "key": "ARROW-13231",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350125",
                "id": "12350125",
                "name": "4.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2021-05-26"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332532",
                "id": "12332532",
                "name": "Documentation"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yingzhou474",
            "name": "yingzhou474",
            "key": "yingzhou474",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Ian Alexander Joiner",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 28200,
            "total": 28200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13231/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 47,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/686653",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-979544901\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   If this is not a [minor PR](https://github.com/apache/arrow/blob/master/CONTRIBUTING.md#Minor-Fixes). Could you open an issue for this pull request on JIRA? https://issues.apache.org/jira/browse/ARROW\n   \n   Opening JIRAs ahead of time contributes to the [Openness](http://theapacheway.com/open/#:~:text=Openness%20allows%20new%20users%20the,must%20happen%20in%20the%20open.) of the Apache Arrow project.\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   or\n   \n       MINOR: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-26T00:34:24.979+0000",
                    "updated": "2021-11-26T00:34:24.979+0000",
                    "started": "2021-11-26T00:34:24.979+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686653",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/686654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-979545038\n\n\n   https://issues.apache.org/jira/browse/ARROW-13231\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-26T00:34:47.890+0000",
                    "updated": "2021-11-26T00:34:47.890+0000",
                    "started": "2021-11-26T00:34:47.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686654",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/686655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-979545236\n\n\n   @jorisvandenbossche Here we go!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-26T00:35:40.888+0000",
                    "updated": "2021-11-26T00:35:40.888+0000",
                    "started": "2021-11-26T00:35:40.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "686655",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/721607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1030781990\n\n\n   @jorisvandenbossche I think I already have all the non-dataset-related Python user guide added. I will work on C++ as well as dataset docs. However since I didn't write the code I'm not that familiar with the exact amount of progress. So please correct me if I'm wrong. Really thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-06T09:09:23.976+0000",
                    "updated": "2022-02-06T09:09:23.976+0000",
                    "started": "2022-02-06T09:09:23.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "721607",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/721608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner edited a comment on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1030781990\n\n\n   @jorisvandenbossche I think I already have the non-dataset-related Python user guide added. I will work on C++ as well as dataset docs. However since I didn't write the code I'm not that familiar with the exact amount of progress. So please correct me if I'm wrong. Really thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-06T09:09:36.544+0000",
                    "updated": "2022-02-06T09:09:36.544+0000",
                    "started": "2022-02-06T09:09:36.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "721608",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/729552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1044228665\n\n\n   There is of course more that can be added to ORC user guides but we need to start from somewhere.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-18T09:43:27.145+0000",
                    "updated": "2022-02-18T09:43:27.145+0000",
                    "started": "2022-02-18T09:43:27.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "729552",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/732864",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1050538103\n\n\n   @jorisvandenbossche @pitrou  This is the first time I have ever written user guides. Could you guys please check whether there is stuff that is seriously wrong? I will iron out the details myself. Really thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-25T05:30:11.241+0000",
                    "updated": "2022-02-25T05:30:11.241+0000",
                    "started": "2022-02-25T05:30:11.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "732864",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/733824",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r815842436\n\n\n\n##########\nFile path: docs/source/cpp/orc.rst\n##########\n@@ -0,0 +1,126 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+\n+.. cpp:namespace:: arrow::adapters::orc\n+\n+=============================\n+Reading and Writing ORC files\n+=============================\n+\n+The `ORC format <https://orc.apache.org/docs/>`__\n+is a space-efficient columnar storage format for complex data. \n+Arrow provides a fast ORC reader and a fast ORC writer allowing\n+ingestion of external data as Arrow tables.\n+\n+.. seealso::\n+   :ref:`ORC reader/writer API reference <cpp-api-orc>`.\n+\n+Supported ORC features\n+==========================\n+\n+The ORC format has many features, and we support a subset of them.\n\nReview comment:\n       Also mention which datatypes are supported?\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n\nReview comment:\n       The Python and C++ doc pages should probably give the same description of the ORC format, it seems a bit gratuitous to have two different ones.\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When using ``pa.Table.from_pandas`` to convert to an Arrow table, by default\n+one or more special columns are added to keep track of the index (row\n+labels). Storing the index takes extra space, so if your index is not valuable,\n+you may choose to omit it by passing ``preserve_index=False``\n+\n+.. ipython:: python\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   df\n+   table = pa.Table.from_pandas(df, preserve_index=False)\n+\n+Then we have:\n+\n+.. ipython:: python\n+\n+   po.write_table(table, 'example_noindex.orc')\n+   t = po.read_table('example_noindex.orc')\n+   t.to_pandas()\n+\n+Here you see the index did not survive the round trip.\n+\n+Finer-grained Reading and Writing\n+---------------------------------\n+\n+``read_table`` uses the :class:`~.ORCFile` class, which has other features:\n+\n+.. ipython:: python\n+\n+   orc_file = po.ORCFile('example.orc')\n+   orc_file.metadata\n+   orc_file.schema\n+   orc_file.nrows\n+\n+See the :class:`~pyarrow.orc.ORCFile()` docstring for more details.\n+\n+As you can learn more in the `Apache ORC format\n+<https://orc.apache.org/specification/>`_, an ORC file consists of\n+multiple stripes. ``read_table`` will read all of the stripes and\n+concatenate them into a single table. You can read individual stripes with\n+``read_stripe``:\n+\n+.. ipython:: python\n+\n+   orc_file.nstripes\n+   orc_file.read_stripe(0)\n+\n+We can write an ORC file using ``ORCWriter``:\n+\n+.. ipython:: python\n+\n+   with po.ORCWriter('example2.orc') as writer:\n+      writer.write_table(table)\n+\n+Compression\n+---------------------------------------------\n+\n+The data pages within a column in a row group can be compressed after the\n+encoding passes (dictionary, RLE encoding). In PyArrow we don't use compression\n+by default, but Snappy, ZSTD, Gzip/Zlib, and LZ4 are also supported:\n+\n+.. code-block:: python\n+\n+   po.write_table(table, where, compression='uncompressed')\n+   po.write_table(table, where, compression='gzip')\n+   po.write_table(table, where, compression='zstd')\n+   po.write_table(table, where, compression='snappy')\n+\n+Snappy generally results in better performance, while Gzip may yield smaller\n+files.\n+\n+Partitioned Datasets (Multiple Files)\n+------------------------------------------------\n+\n+Multiple ORC files constitute a ORC *dataset*. These may present in a\n+number of ways:\n+\n+* A list of ORC absolute file paths\n+* A directory name containing nested directories defining a partitioned dataset\n+\n+A dataset partitioned by year and month may look like on disk:\n+\n+.. code-block:: text\n+\n+   dataset_name/\n+     year=2021/\n+       month=01/\n+          0.orc\n+          1.orc\n+          ...\n+       month=02/\n+          0.orc\n+          1.orc\n+          ...\n+       month=03/\n+       ...\n+     year=2022/\n+       month=01/\n+       ...\n+     ...\n+\n+\n+Reading from cloud storage\n+--------------------------\n+\n+In addition to local files, pyarrow supports other filesystems, such as cloud\n+filesystems, through the ``filesystem`` keyword:\n+\n+.. code-block:: python\n+\n+    from pyarrow import fs\n+\n+    s3  = fs.S3FileSystem(region=\"us-east-2\")\n+    table = po.read_table(\"bucket/object/key/prefix\", filesystem=s3)\n+\n+Currently, :class:`HDFS <pyarrow.fs.HadoopFileSystem>` and\n\nReview comment:\n       I think we could stop this section here and just redirect the user to the filesystem docs for details.\n\n##########\nFile path: docs/source/cpp/orc.rst\n##########\n@@ -0,0 +1,126 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+\n+.. cpp:namespace:: arrow::adapters::orc\n+\n+=============================\n+Reading and Writing ORC files\n+=============================\n+\n+The `ORC format <https://orc.apache.org/docs/>`__\n+is a space-efficient columnar storage format for complex data. \n+Arrow provides a fast ORC reader and a fast ORC writer allowing\n+ingestion of external data as Arrow tables.\n+\n+.. seealso::\n+   :ref:`ORC reader/writer API reference <cpp-api-orc>`.\n+\n+Supported ORC features\n+==========================\n+\n+The ORC format has many features, and we support a subset of them.\n+\n+Compression\n+-----------\n+\n++-------------------+---------+\n+| Compression codec | Notes   |\n\nReview comment:\n       No need for a notes column if there aren't any notes.\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When using ``pa.Table.from_pandas`` to convert to an Arrow table, by default\n+one or more special columns are added to keep track of the index (row\n+labels). Storing the index takes extra space, so if your index is not valuable,\n+you may choose to omit it by passing ``preserve_index=False``\n+\n+.. ipython:: python\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   df\n+   table = pa.Table.from_pandas(df, preserve_index=False)\n+\n+Then we have:\n+\n+.. ipython:: python\n+\n+   po.write_table(table, 'example_noindex.orc')\n+   t = po.read_table('example_noindex.orc')\n+   t.to_pandas()\n+\n+Here you see the index did not survive the round trip.\n+\n+Finer-grained Reading and Writing\n+---------------------------------\n+\n+``read_table`` uses the :class:`~.ORCFile` class, which has other features:\n+\n+.. ipython:: python\n+\n+   orc_file = po.ORCFile('example.orc')\n+   orc_file.metadata\n+   orc_file.schema\n+   orc_file.nrows\n+\n+See the :class:`~pyarrow.orc.ORCFile()` docstring for more details.\n+\n+As you can learn more in the `Apache ORC format\n+<https://orc.apache.org/specification/>`_, an ORC file consists of\n+multiple stripes. ``read_table`` will read all of the stripes and\n+concatenate them into a single table. You can read individual stripes with\n+``read_stripe``:\n+\n+.. ipython:: python\n+\n+   orc_file.nstripes\n+   orc_file.read_stripe(0)\n+\n+We can write an ORC file using ``ORCWriter``:\n+\n+.. ipython:: python\n+\n+   with po.ORCWriter('example2.orc') as writer:\n+      writer.write_table(table)\n+\n+Compression\n+---------------------------------------------\n+\n+The data pages within a column in a row group can be compressed after the\n+encoding passes (dictionary, RLE encoding). In PyArrow we don't use compression\n+by default, but Snappy, ZSTD, Gzip/Zlib, and LZ4 are also supported:\n+\n+.. code-block:: python\n+\n+   po.write_table(table, where, compression='uncompressed')\n+   po.write_table(table, where, compression='gzip')\n+   po.write_table(table, where, compression='zstd')\n+   po.write_table(table, where, compression='snappy')\n+\n+Snappy generally results in better performance, while Gzip may yield smaller\n+files.\n+\n+Partitioned Datasets (Multiple Files)\n+------------------------------------------------\n\nReview comment:\n       This section doesn't showcase any example or API, is it useful to have it?\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n\nReview comment:\n       Rather a representation layer if you're using ORC for transport or storage...\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n\nReview comment:\n       We would like to cut down on `ipython` code blocks actually, since they make building the docs slower and more fragile. AFAIU we would like to use [doctest](https://www.sphinx-doc.org/en/master/usage/extensions/doctest.html) instead:\r\n   https://www.sphinx-doc.org/en/master/usage/extensions/doctest.html\r\n   \r\n   @jorisvandenbossche or @amol- may want to elaborate on this.\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n\nReview comment:\n       I get the impression you're copying and adapting large chunks of the Parquet docs. I'm not sure it makes sense to do this (also, I don't know why the Parquet docs talk about `preserve_index` specifically).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-28T12:46:05.277+0000",
                    "updated": "2022-02-28T12:46:05.277+0000",
                    "started": "2022-02-28T12:46:05.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "733824",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/742965",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828768587\n\n\n\n##########\nFile path: docs/source/cpp/orc.rst\n##########\n@@ -0,0 +1,126 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+\n+.. cpp:namespace:: arrow::adapters::orc\n+\n+=============================\n+Reading and Writing ORC files\n+=============================\n+\n+The `ORC format <https://orc.apache.org/docs/>`__\n+is a space-efficient columnar storage format for complex data. \n+Arrow provides a fast ORC reader and a fast ORC writer allowing\n+ingestion of external data as Arrow tables.\n+\n+.. seealso::\n+   :ref:`ORC reader/writer API reference <cpp-api-orc>`.\n+\n+Supported ORC features\n+==========================\n+\n+The ORC format has many features, and we support a subset of them.\n+\n+Compression\n+-----------\n+\n++-------------------+---------+\n+| Compression codec | Notes   |\n\nReview comment:\n       Now there are notes..\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T05:34:10.015+0000",
                    "updated": "2022-03-17T05:34:10.015+0000",
                    "started": "2022-03-17T05:34:10.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742965",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/742967",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828772719\n\n\n\n##########\nFile path: docs/source/cpp/orc.rst\n##########\n@@ -0,0 +1,126 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+\n+.. cpp:namespace:: arrow::adapters::orc\n+\n+=============================\n+Reading and Writing ORC files\n+=============================\n+\n+The `ORC format <https://orc.apache.org/docs/>`__\n+is a space-efficient columnar storage format for complex data. \n+Arrow provides a fast ORC reader and a fast ORC writer allowing\n+ingestion of external data as Arrow tables.\n+\n+.. seealso::\n+   :ref:`ORC reader/writer API reference <cpp-api-orc>`.\n+\n+Supported ORC features\n+==========================\n+\n+The ORC format has many features, and we support a subset of them.\n\nReview comment:\n       Yup.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T05:45:04.213+0000",
                    "updated": "2022-03-17T05:45:04.213+0000",
                    "started": "2022-03-17T05:45:04.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742967",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/742968",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828768587\n\n\n\n##########\nFile path: docs/source/cpp/orc.rst\n##########\n@@ -0,0 +1,126 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. default-domain:: cpp\n+.. highlight:: cpp\n+\n+.. cpp:namespace:: arrow::adapters::orc\n+\n+=============================\n+Reading and Writing ORC files\n+=============================\n+\n+The `ORC format <https://orc.apache.org/docs/>`__\n+is a space-efficient columnar storage format for complex data. \n+Arrow provides a fast ORC reader and a fast ORC writer allowing\n+ingestion of external data as Arrow tables.\n+\n+.. seealso::\n+   :ref:`ORC reader/writer API reference <cpp-api-orc>`.\n+\n+Supported ORC features\n+==========================\n+\n+The ORC format has many features, and we support a subset of them.\n+\n+Compression\n+-----------\n+\n++-------------------+---------+\n+| Compression codec | Notes   |\n\nReview comment:\n       You are right. Removed!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T05:45:18.365+0000",
                    "updated": "2022-03-17T05:45:18.365+0000",
                    "started": "2022-03-17T05:45:18.365+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742968",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/742969",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828773341\n\n\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n\nReview comment:\n       Thanks! Fixed.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T05:46:35.947+0000",
                    "updated": "2022-03-17T05:46:35.947+0000",
                    "started": "2022-03-17T05:46:35.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "742969",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/743014",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828852982\n\n\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When using ``pa.Table.from_pandas`` to convert to an Arrow table, by default\n+one or more special columns are added to keep track of the index (row\n+labels). Storing the index takes extra space, so if your index is not valuable,\n+you may choose to omit it by passing ``preserve_index=False``\n+\n+.. ipython:: python\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   df\n+   table = pa.Table.from_pandas(df, preserve_index=False)\n+\n+Then we have:\n+\n+.. ipython:: python\n+\n+   po.write_table(table, 'example_noindex.orc')\n+   t = po.read_table('example_noindex.orc')\n+   t.to_pandas()\n+\n+Here you see the index did not survive the round trip.\n+\n+Finer-grained Reading and Writing\n+---------------------------------\n+\n+``read_table`` uses the :class:`~.ORCFile` class, which has other features:\n+\n+.. ipython:: python\n+\n+   orc_file = po.ORCFile('example.orc')\n+   orc_file.metadata\n+   orc_file.schema\n+   orc_file.nrows\n+\n+See the :class:`~pyarrow.orc.ORCFile()` docstring for more details.\n+\n+As you can learn more in the `Apache ORC format\n+<https://orc.apache.org/specification/>`_, an ORC file consists of\n+multiple stripes. ``read_table`` will read all of the stripes and\n+concatenate them into a single table. You can read individual stripes with\n+``read_stripe``:\n+\n+.. ipython:: python\n+\n+   orc_file.nstripes\n+   orc_file.read_stripe(0)\n+\n+We can write an ORC file using ``ORCWriter``:\n+\n+.. ipython:: python\n+\n+   with po.ORCWriter('example2.orc') as writer:\n+      writer.write_table(table)\n+\n+Compression\n+---------------------------------------------\n+\n+The data pages within a column in a row group can be compressed after the\n+encoding passes (dictionary, RLE encoding). In PyArrow we don't use compression\n+by default, but Snappy, ZSTD, Gzip/Zlib, and LZ4 are also supported:\n+\n+.. code-block:: python\n+\n+   po.write_table(table, where, compression='uncompressed')\n+   po.write_table(table, where, compression='gzip')\n+   po.write_table(table, where, compression='zstd')\n+   po.write_table(table, where, compression='snappy')\n+\n+Snappy generally results in better performance, while Gzip may yield smaller\n+files.\n+\n+Partitioned Datasets (Multiple Files)\n+------------------------------------------------\n+\n+Multiple ORC files constitute a ORC *dataset*. These may present in a\n+number of ways:\n+\n+* A list of ORC absolute file paths\n+* A directory name containing nested directories defining a partitioned dataset\n+\n+A dataset partitioned by year and month may look like on disk:\n+\n+.. code-block:: text\n+\n+   dataset_name/\n+     year=2021/\n+       month=01/\n+          0.orc\n+          1.orc\n+          ...\n+       month=02/\n+          0.orc\n+          1.orc\n+          ...\n+       month=03/\n+       ...\n+     year=2022/\n+       month=01/\n+       ...\n+     ...\n+\n+\n+Reading from cloud storage\n+--------------------------\n+\n+In addition to local files, pyarrow supports other filesystems, such as cloud\n+filesystems, through the ``filesystem`` keyword:\n+\n+.. code-block:: python\n+\n+    from pyarrow import fs\n+\n+    s3  = fs.S3FileSystem(region=\"us-east-2\")\n+    table = po.read_table(\"bucket/object/key/prefix\", filesystem=s3)\n+\n+Currently, :class:`HDFS <pyarrow.fs.HadoopFileSystem>` and\n\nReview comment:\n       Done!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T08:14:49.602+0000",
                    "updated": "2022-03-17T08:14:49.602+0000",
                    "started": "2022-03-17T08:14:49.601+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "743014",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/743015",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on a change in pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#discussion_r828853918\n\n\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When using ``pa.Table.from_pandas`` to convert to an Arrow table, by default\n+one or more special columns are added to keep track of the index (row\n+labels). Storing the index takes extra space, so if your index is not valuable,\n+you may choose to omit it by passing ``preserve_index=False``\n+\n+.. ipython:: python\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   df\n+   table = pa.Table.from_pandas(df, preserve_index=False)\n+\n+Then we have:\n+\n+.. ipython:: python\n+\n+   po.write_table(table, 'example_noindex.orc')\n+   t = po.read_table('example_noindex.orc')\n+   t.to_pandas()\n+\n+Here you see the index did not survive the round trip.\n+\n+Finer-grained Reading and Writing\n+---------------------------------\n+\n+``read_table`` uses the :class:`~.ORCFile` class, which has other features:\n+\n+.. ipython:: python\n+\n+   orc_file = po.ORCFile('example.orc')\n+   orc_file.metadata\n+   orc_file.schema\n+   orc_file.nrows\n+\n+See the :class:`~pyarrow.orc.ORCFile()` docstring for more details.\n+\n+As you can learn more in the `Apache ORC format\n+<https://orc.apache.org/specification/>`_, an ORC file consists of\n+multiple stripes. ``read_table`` will read all of the stripes and\n+concatenate them into a single table. You can read individual stripes with\n+``read_stripe``:\n+\n+.. ipython:: python\n+\n+   orc_file.nstripes\n+   orc_file.read_stripe(0)\n+\n+We can write an ORC file using ``ORCWriter``:\n+\n+.. ipython:: python\n+\n+   with po.ORCWriter('example2.orc') as writer:\n+      writer.write_table(table)\n+\n+Compression\n+---------------------------------------------\n+\n+The data pages within a column in a row group can be compressed after the\n+encoding passes (dictionary, RLE encoding). In PyArrow we don't use compression\n+by default, but Snappy, ZSTD, Gzip/Zlib, and LZ4 are also supported:\n+\n+.. code-block:: python\n+\n+   po.write_table(table, where, compression='uncompressed')\n+   po.write_table(table, where, compression='gzip')\n+   po.write_table(table, where, compression='zstd')\n+   po.write_table(table, where, compression='snappy')\n+\n+Snappy generally results in better performance, while Gzip may yield smaller\n+files.\n+\n+Partitioned Datasets (Multiple Files)\n+------------------------------------------------\n\nReview comment:\n       I agree that it is not that useful now. I removed it. When we complete the ORC dataset feature we will add it.\n\n##########\nFile path: docs/source/python/orc.rst\n##########\n@@ -0,0 +1,261 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+.. currentmodule:: pyarrow\n+.. _orc:\n+\n+Reading and Writing the Apache ORC Format\n+=============================================\n+\n+The `Apache ORC <http://orc.apache.org/>`_ project provides a\n+standardized open-source columnar storage format for use in data analysis\n+systems. It was created originally for use in `Apache Hadoop\n+<http://hadoop.apache.org/>`_ with systems like `Apache Drill\n+<http://drill.apache.org>`_, `Apache Hive <http://hive.apache.org>`_, `Apache\n+Impala (incubating) <http://impala.apache.org>`_, and `Apache Spark\n+<http://spark.apache.org>`_ adopting it as a shared standard for high\n+performance data IO.\n+\n+Apache Arrow is an ideal in-memory transport layer for data that is being read\n+or written with ORC files.\n+\n+Obtaining pyarrow with ORC Support\n+--------------------------------------\n+\n+If you installed ``pyarrow`` with pip or conda, it should be built with ORC\n+support bundled:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+\n+If you are building ``pyarrow`` from source, you must use\n+``-DARROW_ORC=ON`` when compiling the C++ libraries and enable the ORC\n+extensions when building ``pyarrow``. See the :ref:`Python Development\n+<python-development>` page for more details.\n+\n+Reading and Writing Single Files\n+--------------------------------\n+\n+The functions :func:`~.orc.read_table` and :func:`~.orc.write_table`\n+read and write the :ref:`pyarrow.Table <data.table>` object, respectively.\n+\n+Let's look at a simple table:\n+\n+.. ipython:: python\n+\n+   import numpy as np\n+   import pandas as pd\n+   import pyarrow as pa\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   table = pa.Table.from_pandas(df)\n+\n+We write this to ORC format with ``write_table``:\n+\n+.. ipython:: python\n+\n+   import pyarrow.orc as po\n+   po.write_table(table, 'example.orc')\n+\n+This creates a single ORC file. In practice, an ORC dataset may consist\n+of many files in many directories. We can read a single file back with\n+``read_table``:\n+\n+.. ipython:: python\n+\n+   table2 = po.read_table('example.orc')\n+   table2.to_pandas()\n+\n+You can pass a subset of columns to read, which can be much faster than reading\n+the whole file (due to the columnar layout):\n+\n+.. ipython:: python\n+\n+   po.read_table('example.orc', columns=['one', 'three'])\n+\n+We need not use a string to specify the origin of the file. It can be any of:\n+\n+* A file path as a string\n+* A :ref:`NativeFile <io.native_file>` from PyArrow\n+* A Python file object\n+\n+In general, a Python file object will have the worst read performance, while a\n+string file path or an instance of :class:`~.NativeFile` (especially memory\n+maps) will perform the best.\n+\n+ORC file writing options\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+:func:`~pyarrow.orc.write_table()` has a number of options to\n+control various settings when writing an ORC file.\n+\n+* ``file_version``, the ORC format version to use.  ``'0.11'`` ensures\n+  compatibility with older readers, while ``'0.12'`` is the newer one.\n+* ``stripe_size``, to control the approximate size of data within a column \n+  stripe. This currently defaults to 64MB.\n+\n+See the :func:`~pyarrow.orc.write_table()` docstring for more details.\n+\n+There are some additional data type handling-specific options\n+described below.\n+\n+Omitting the DataFrame index\n+~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+\n+When using ``pa.Table.from_pandas`` to convert to an Arrow table, by default\n+one or more special columns are added to keep track of the index (row\n+labels). Storing the index takes extra space, so if your index is not valuable,\n+you may choose to omit it by passing ``preserve_index=False``\n+\n+.. ipython:: python\n+\n+   df = pd.DataFrame({'one': [-1, np.nan, 2.5],\n+                      'two': ['foo', 'bar', 'baz'],\n+                      'three': [True, False, True]},\n+                      index=list('abc'))\n+   df\n+   table = pa.Table.from_pandas(df, preserve_index=False)\n+\n+Then we have:\n+\n+.. ipython:: python\n+\n+   po.write_table(table, 'example_noindex.orc')\n+   t = po.read_table('example_noindex.orc')\n+   t.to_pandas()\n+\n+Here you see the index did not survive the round trip.\n+\n+Finer-grained Reading and Writing\n+---------------------------------\n+\n+``read_table`` uses the :class:`~.ORCFile` class, which has other features:\n+\n+.. ipython:: python\n+\n+   orc_file = po.ORCFile('example.orc')\n+   orc_file.metadata\n+   orc_file.schema\n+   orc_file.nrows\n+\n+See the :class:`~pyarrow.orc.ORCFile()` docstring for more details.\n+\n+As you can learn more in the `Apache ORC format\n+<https://orc.apache.org/specification/>`_, an ORC file consists of\n+multiple stripes. ``read_table`` will read all of the stripes and\n+concatenate them into a single table. You can read individual stripes with\n+``read_stripe``:\n+\n+.. ipython:: python\n+\n+   orc_file.nstripes\n+   orc_file.read_stripe(0)\n+\n+We can write an ORC file using ``ORCWriter``:\n+\n+.. ipython:: python\n+\n+   with po.ORCWriter('example2.orc') as writer:\n+      writer.write_table(table)\n+\n+Compression\n+---------------------------------------------\n+\n+The data pages within a column in a row group can be compressed after the\n+encoding passes (dictionary, RLE encoding). In PyArrow we don't use compression\n+by default, but Snappy, ZSTD, Gzip/Zlib, and LZ4 are also supported:\n+\n+.. code-block:: python\n+\n+   po.write_table(table, where, compression='uncompressed')\n+   po.write_table(table, where, compression='gzip')\n+   po.write_table(table, where, compression='zstd')\n+   po.write_table(table, where, compression='snappy')\n+\n+Snappy generally results in better performance, while Gzip may yield smaller\n+files.\n+\n+Partitioned Datasets (Multiple Files)\n+------------------------------------------------\n\nReview comment:\n       I agree that it is not that useful now. I removed it. When we complete the ORC dataset feature we will add it again.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-17T08:16:20.937+0000",
                    "updated": "2022-03-17T08:16:20.937+0000",
                    "started": "2022-03-17T08:16:20.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "743015",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/744429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1072805589\n\n\n   Note that the Docs error is in the 7.0.0 release caused by the existence of `pyarrow.dataset.ORCFileFormat` being conditional. It is not being shown in the actual dataset API docs.\r\n   \r\n   @pitrou @jorisvandenbossche  Could you please review again? Really thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-18T21:18:14.500+0000",
                    "updated": "2022-03-18T21:18:14.500+0000",
                    "started": "2022-03-18T21:18:14.499+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "744429",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/744678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner edited a comment on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1072805589\n\n\n   Note that the Docs error is in the 7.0.0 release caused by the existence of `pyarrow.dataset.ORCFileFormat` being conditional. It is not being shown in the actual dataset API docs. Maybe we need to include ORC when building and release our docs?\r\n   \r\n   @pitrou @jorisvandenbossche  Could you please review again? Really thanks!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-20T03:33:35.260+0000",
                    "updated": "2022-03-20T03:33:35.260+0000",
                    "started": "2022-03-20T03:33:35.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "744678",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/745840",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1075220595\n\n\n   @iajoiner Can you look at the doc building warnings and errors?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-22T14:03:10.635+0000",
                    "updated": "2022-03-22T14:03:10.635+0000",
                    "started": "2022-03-22T14:03:10.634+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "745840",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/745869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "iajoiner commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1075292369\n\n\n   @pitrou Yes. Looks like the problem is that we are not building either Arrow Dataset or ORC support (likely the latter) in the GitHub Action hence it is upset. Shall the fix be changing the test so that ORC support is actually included so that this can run correctly?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-22T15:01:09.655+0000",
                    "updated": "2022-03-22T15:01:09.655+0000",
                    "started": "2022-03-22T15:01:09.655+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "745869",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/745876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1075298803\n\n\n   Well, it is being built correctly, so the problem is probably something else:\r\n   https://github.com/apache/arrow/runs/5582660707?check_suite_focus=true#step:6:3525\r\n   \r\n   Note you can easily reproduce locally using Archery and Docker:\r\n   https://arrow.apache.org/docs/developers/continuous_integration/docker.html\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-22T15:06:32.772+0000",
                    "updated": "2022-03-22T15:06:32.772+0000",
                    "started": "2022-03-22T15:06:32.771+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "745876",
                    "issueId": "13386955"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/worklog/745896",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11779:\nURL: https://github.com/apache/arrow/pull/11779#issuecomment-1075349128\n\n\n   @iajoiner the error about `pyarrow.dataset.OrcFileFormat` is actually an already existing warning and not related to this PR, I think (that was already added to /docs/source/python/api/dataset.rst a long time ago). It's still something we should try to fix of course (but that can be done separately from this PR), but the error we see here should have some other cause.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-03-22T16:00:19.993+0000",
                    "updated": "2022-03-22T16:00:19.993+0000",
                    "started": "2022-03-22T16:00:19.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "745896",
                    "issueId": "13386955"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 28200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5de9410f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16dc50db[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4814e034[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3cba2b65[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28c7eb67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@667440d2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@90e0968[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6402fa2f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7309b91b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@373f0578[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e831fbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3d2347c3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 28200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 04 08:55:07 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-04-04T08:55:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13231/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-07-01T05:29:45.000+0000",
        "updated": "2022-04-04T09:01:06.000+0000",
        "timeoriginalestimate": null,
        "description": "__From our website it is not at call clear that Arrow supports ORC, let alone in both reading and writing. Documentation needs to be added to show users how to use the ORC adapters.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 28200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Docs][C++][Python] Add ORC documentation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13386955/comment/17516693",
                    "id": "17516693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 11779\n[https://github.com/apache/arrow/pull/11779]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2022-04-04T08:55:07.068+0000",
                    "updated": "2022-04-04T08:55:07.068+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0shkw:",
        "customfield_12314139": null
    }
}