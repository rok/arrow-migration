{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13398757",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757",
    "key": "ARROW-13847",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=laurent",
            "name": "laurent",
            "key": "laurentgo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=laurentgo&avatarId=18552",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=laurentgo&avatarId=18552",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=laurentgo&avatarId=18552",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=laurentgo&avatarId=18552"
            },
            "displayName": "Laurent Goujon",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=laurent",
            "name": "laurent",
            "key": "laurentgo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=laurentgo&avatarId=18552",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=laurentgo&avatarId=18552",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=laurentgo&avatarId=18552",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=laurentgo&avatarId=18552"
            },
            "displayName": "Laurent Goujon",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=laurent",
            "name": "laurent",
            "key": "laurentgo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=laurentgo&avatarId=18552",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=laurentgo&avatarId=18552",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=laurentgo&avatarId=18552",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=laurentgo&avatarId=18552"
            },
            "displayName": "Laurent Goujon",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13847/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645475",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "laurentgo opened a new pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063\n\n\n   There are several occurences in Arrow Java codebase where temporary\r\n   collections are being created and immediately discarded like when going\r\n   over a sequence of elements, or when making a copy of a collection\r\n   provided as an argument to a constructor.\r\n   \r\n   This change adds a couple of methods to Collections2 and AutoCloseables,\r\n   along with some changes to the codebase to remove those extra copies.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T18:32:14.383+0000",
                    "updated": "2021-09-01T18:32:14.383+0000",
                    "started": "2021-09-01T18:32:14.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645475",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#issuecomment-910551870\n\n\n   https://issues.apache.org/jira/browse/ARROW-13847\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T18:32:28.482+0000",
                    "updated": "2021-09-01T18:32:28.482+0000",
                    "started": "2021-09-01T18:32:28.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645476",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700629594\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n+  }\n+\n+\n   /** Copies the elements of <code>map</code> to a new unmodifiable map. */\n   public static <K, V> Map<K, V> immutableMapCopy(Map<K, V> map) {\n-    Map<K, V> newMap = new HashMap<>();\n-    newMap.putAll(map);\n-    return java.util.Collections.unmodifiableMap(newMap);\n+    return Collections.unmodifiableMap(new HashMap<>(map));\n   }\n \n   /** Copies the elements of list to a new unmodifiable list. */\n   public static <V> List<V> immutableListCopy(List<V> list) {\n-    return Collections.unmodifiableList(list.stream().collect(Collectors.toList()));\n+    return Collections.unmodifiableList(new ArrayList<>(list));\n   }\n \n   /** Copies the values to a new unmodifiable list. */\n   public static <V> List<V> asImmutableList(V...values) {\n     return Collections.unmodifiableList(Arrays.asList(values));\n   }\n+\n+  /**\n+   * Creates a human readable string from the remaining elements in iterator.\n+   *\n+   * The output should be similar to {@code Arrays#toString(Object[])}\n+   */\n+  public static String toString(Iterator<?> iterator) {\n+    if (!iterator.hasNext()) {\n\nReview comment:\n       Isn't there a better stream-y way to do this with join?\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Schema.java\n##########\n@@ -97,7 +97,7 @@ public static Schema convertSchema(org.apache.arrow.flatbuf.Schema schema) {\n       String value = kv.value();\n       metadata.put(key == null ? \"\" : key, value == null ? \"\" : value);\n     }\n-    return new Schema(Collections2.immutableListCopy(fields), Collections2.immutableMapCopy(metadata));\n+    return new Schema(true, Collections.unmodifiableList(fields), Collections.unmodifiableMap(metadata));\n\nReview comment:\n       You're skipping the defensive copy here? Seems like a change in behavior.\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/types/pojo/FieldType.java\n##########\n@@ -68,11 +69,9 @@ public FieldType(boolean nullable, ArrowType type, DictionaryEncoding dictionary\n       extensionMetadata.put(ExtensionType.EXTENSION_METADATA_KEY_NAME, ((ExtensionType) type).extensionName());\n       extensionMetadata.put(ExtensionType.EXTENSION_METADATA_KEY_METADATA, ((ExtensionType) type).serialize());\n       if (metadata != null) {\n-        for (Map.Entry<String, String> entry : metadata.entrySet()) {\n-          extensionMetadata.put(entry.getKey(), entry.getValue());\n-        }\n+        extensionMetadata.putAll(metadata);\n       }\n-      this.metadata = Collections2.immutableMapCopy(extensionMetadata);\n+      this.metadata = Collections.unmodifiableMap(extensionMetadata);\n\nReview comment:\n       You're removing the copy here. Is this safe?\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n\nReview comment:\n       Can we specialize this so it avoids a copy if the existing set is unmodifiable with a safe backing. Same with the unmodifiable map below. Seems like you could then keep the defensive copies you've removed below in Schema and FieldType\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T23:07:09.118+0000",
                    "updated": "2021-09-01T23:07:09.118+0000",
                    "started": "2021-09-01T23:07:09.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645628",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "laurentgo commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700647478\n\n\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/types/pojo/FieldType.java\n##########\n@@ -68,11 +69,9 @@ public FieldType(boolean nullable, ArrowType type, DictionaryEncoding dictionary\n       extensionMetadata.put(ExtensionType.EXTENSION_METADATA_KEY_NAME, ((ExtensionType) type).extensionName());\n       extensionMetadata.put(ExtensionType.EXTENSION_METADATA_KEY_METADATA, ((ExtensionType) type).serialize());\n       if (metadata != null) {\n-        for (Map.Entry<String, String> entry : metadata.entrySet()) {\n-          extensionMetadata.put(entry.getKey(), entry.getValue());\n-        }\n+        extensionMetadata.putAll(metadata);\n       }\n-      this.metadata = Collections2.immutableMapCopy(extensionMetadata);\n+      this.metadata = Collections.unmodifiableMap(extensionMetadata);\n\nReview comment:\n       because `extensionMetadata` is being by the constructor itself and not exposed else, I believe this to be safe, yes.\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n+  }\n+\n+\n   /** Copies the elements of <code>map</code> to a new unmodifiable map. */\n   public static <K, V> Map<K, V> immutableMapCopy(Map<K, V> map) {\n-    Map<K, V> newMap = new HashMap<>();\n-    newMap.putAll(map);\n-    return java.util.Collections.unmodifiableMap(newMap);\n+    return Collections.unmodifiableMap(new HashMap<>(map));\n   }\n \n   /** Copies the elements of list to a new unmodifiable list. */\n   public static <V> List<V> immutableListCopy(List<V> list) {\n-    return Collections.unmodifiableList(list.stream().collect(Collectors.toList()));\n+    return Collections.unmodifiableList(new ArrayList<>(list));\n   }\n \n   /** Copies the values to a new unmodifiable list. */\n   public static <V> List<V> asImmutableList(V...values) {\n     return Collections.unmodifiableList(Arrays.asList(values));\n   }\n+\n+  /**\n+   * Creates a human readable string from the remaining elements in iterator.\n+   *\n+   * The output should be similar to {@code Arrays#toString(Object[])}\n+   */\n+  public static String toString(Iterator<?> iterator) {\n+    if (!iterator.hasNext()) {\n\nReview comment:\n       I guess something like \r\n   ```\r\n   return StreamSupport.stream(Spliterators.spliteratorUnknownSize(iterator, Spliterator.ORDERED), false)\r\n           .map(String::valueOf)\r\n           .collect(Collectors.joining(\", \", \"[\", \"]\"));\r\n   ```\r\n   should work\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n\nReview comment:\n       Unlike Guava `Immutable*` collections, there's no officlal way to inspect for a collection to check if the collection is unmodifiable. Probably the best way would be to introduce Arrow's own set of immutable collections, but that's a way bigger issue. In this patch I tried to only focus on the obvious copy duplicates\n\n##########\nFile path: java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Schema.java\n##########\n@@ -97,7 +97,7 @@ public static Schema convertSchema(org.apache.arrow.flatbuf.Schema schema) {\n       String value = kv.value();\n       metadata.put(key == null ? \"\" : key, value == null ? \"\" : value);\n     }\n-    return new Schema(Collections2.immutableListCopy(fields), Collections2.immutableMapCopy(metadata));\n+    return new Schema(true, Collections.unmodifiableList(fields), Collections.unmodifiableMap(metadata));\n\nReview comment:\n       Both defensive copies are done by the constructor itself when the original argument is processed to create a `fields` and a `metadata` collections\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T23:53:38.491+0000",
                    "updated": "2021-09-01T23:53:38.491+0000",
                    "started": "2021-09-01T23:53:38.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645637",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700650320\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n+  }\n+\n+\n   /** Copies the elements of <code>map</code> to a new unmodifiable map. */\n   public static <K, V> Map<K, V> immutableMapCopy(Map<K, V> map) {\n-    Map<K, V> newMap = new HashMap<>();\n-    newMap.putAll(map);\n-    return java.util.Collections.unmodifiableMap(newMap);\n+    return Collections.unmodifiableMap(new HashMap<>(map));\n   }\n \n   /** Copies the elements of list to a new unmodifiable list. */\n   public static <V> List<V> immutableListCopy(List<V> list) {\n-    return Collections.unmodifiableList(list.stream().collect(Collectors.toList()));\n+    return Collections.unmodifiableList(new ArrayList<>(list));\n   }\n \n   /** Copies the values to a new unmodifiable list. */\n   public static <V> List<V> asImmutableList(V...values) {\n     return Collections.unmodifiableList(Arrays.asList(values));\n   }\n+\n+  /**\n+   * Creates a human readable string from the remaining elements in iterator.\n+   *\n+   * The output should be similar to {@code Arrays#toString(Object[])}\n+   */\n+  public static String toString(Iterator<?> iterator) {\n+    if (!iterator.hasNext()) {\n\nReview comment:\n       Up to you whether worth changing. I figured that might be slightly clearer...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T23:59:24.510+0000",
                    "updated": "2021-09-01T23:59:24.510+0000",
                    "started": "2021-09-01T23:59:24.510+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645640",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700651265\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n\nReview comment:\n       Sad. Any chance we can source something small that already does that (in a separate jira)? Otherwise I expect we'll probably need another patch here in the future since we're still probably doing excessive copies.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-02T00:02:19.435+0000",
                    "updated": "2021-09-02T00:02:19.435+0000",
                    "started": "2021-09-02T00:02:19.435+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645642",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "laurentgo commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700668610\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n\nReview comment:\n       Not to knowledge\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-02T00:55:28.959+0000",
                    "updated": "2021-09-02T00:55:28.959+0000",
                    "started": "2021-09-02T00:55:28.959+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645650",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "laurentgo commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700668677\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/Collections2.java\n##########\n@@ -46,23 +45,55 @@ private Collections2() {}\n    * Converts the iterable into a new {@link List}.\n    */\n   public static <T> List<T> toList(Iterable<T> iterable) {\n-    return StreamSupport.stream(iterable.spliterator(), false).collect(Collectors.toList());\n+    if (iterable instanceof Collection<?>) {\n+      // If iterable is a collection, take advantage of it for a more efficient copy\n+      return new ArrayList<T>((Collection<T>) iterable);\n+    }\n+    return toList(iterable.iterator());\n   }\n \n+  /**\n+   * Converts the iterable into a new immutable {@link List}.\n+   */\n+  public static <T> List<T> toImmutableList(Iterable<T> iterable) {\n+    return Collections.unmodifiableList(toList(iterable));\n+  }\n+\n+\n   /** Copies the elements of <code>map</code> to a new unmodifiable map. */\n   public static <K, V> Map<K, V> immutableMapCopy(Map<K, V> map) {\n-    Map<K, V> newMap = new HashMap<>();\n-    newMap.putAll(map);\n-    return java.util.Collections.unmodifiableMap(newMap);\n+    return Collections.unmodifiableMap(new HashMap<>(map));\n   }\n \n   /** Copies the elements of list to a new unmodifiable list. */\n   public static <V> List<V> immutableListCopy(List<V> list) {\n-    return Collections.unmodifiableList(list.stream().collect(Collectors.toList()));\n+    return Collections.unmodifiableList(new ArrayList<>(list));\n   }\n \n   /** Copies the values to a new unmodifiable list. */\n   public static <V> List<V> asImmutableList(V...values) {\n     return Collections.unmodifiableList(Arrays.asList(values));\n   }\n+\n+  /**\n+   * Creates a human readable string from the remaining elements in iterator.\n+   *\n+   * The output should be similar to {@code Arrays#toString(Object[])}\n+   */\n+  public static String toString(Iterator<?> iterator) {\n+    if (!iterator.hasNext()) {\n\nReview comment:\n       Added a commit to change it\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-02T00:55:42.145+0000",
                    "updated": "2021-09-02T00:55:42.145+0000",
                    "started": "2021-09-02T00:55:42.145+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645651",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r700718127\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/AutoCloseables.java\n##########\n@@ -113,9 +114,23 @@ public static void close(Iterable<? extends AutoCloseable> ac) throws Exception\n    */\n   @SafeVarargs\n   public static void close(Iterable<? extends AutoCloseable>...closeables) throws Exception {\n-    close(Arrays.asList(closeables).stream()\n-        .flatMap((Iterable<? extends AutoCloseable> t) -> Collections2.toList(t).stream())\n-        .collect(Collectors.toList()));\n+    close(flatten(closeables));\n+  }\n+\n+  @SafeVarargs\n+  private static Iterable<AutoCloseable> flatten(Iterable<? extends AutoCloseable>... closeables) {\n+    return new Iterable<AutoCloseable>() {\n+      // Cast from Iterable<? extends AutoCloseable> to Iterable<AutoCloseable> is safe in this context\n+      // since there's no modification of the original collection\n+      @SuppressWarnings(\"unchecked\")\n+      @Override\n+      public Iterator<AutoCloseable> iterator() {\n+        return Arrays.stream(closeables)\n+            .flatMap((Iterable<? extends AutoCloseable> i)\n+                -> StreamSupport.stream(((Iterable<AutoCloseable>) i).spliterator(), false))\n\nReview comment:\n       could you provide a parameter comment for the false literal?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-02T03:33:15.495+0000",
                    "updated": "2021-09-02T03:33:15.495+0000",
                    "started": "2021-09-02T03:33:15.495+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645691",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/645988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "laurentgo commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r701339753\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/AutoCloseables.java\n##########\n@@ -113,9 +114,23 @@ public static void close(Iterable<? extends AutoCloseable> ac) throws Exception\n    */\n   @SafeVarargs\n   public static void close(Iterable<? extends AutoCloseable>...closeables) throws Exception {\n-    close(Arrays.asList(closeables).stream()\n-        .flatMap((Iterable<? extends AutoCloseable> t) -> Collections2.toList(t).stream())\n-        .collect(Collectors.toList()));\n+    close(flatten(closeables));\n+  }\n+\n+  @SafeVarargs\n+  private static Iterable<AutoCloseable> flatten(Iterable<? extends AutoCloseable>... closeables) {\n+    return new Iterable<AutoCloseable>() {\n+      // Cast from Iterable<? extends AutoCloseable> to Iterable<AutoCloseable> is safe in this context\n+      // since there's no modification of the original collection\n+      @SuppressWarnings(\"unchecked\")\n+      @Override\n+      public Iterator<AutoCloseable> iterator() {\n+        return Arrays.stream(closeables)\n+            .flatMap((Iterable<? extends AutoCloseable> i)\n+                -> StreamSupport.stream(((Iterable<AutoCloseable>) i).spliterator(), false))\n\nReview comment:\n       Hopefully addressed by latest commit\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-02T18:49:38.678+0000",
                    "updated": "2021-09-02T18:49:38.678+0000",
                    "started": "2021-09-02T18:49:38.677+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645988",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/649743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#discussion_r706911128\n\n\n\n##########\nFile path: java/memory/memory-core/src/main/java/org/apache/arrow/util/AutoCloseables.java\n##########\n@@ -113,9 +114,23 @@ public static void close(Iterable<? extends AutoCloseable> ac) throws Exception\n    */\n   @SafeVarargs\n   public static void close(Iterable<? extends AutoCloseable>...closeables) throws Exception {\n-    close(Arrays.asList(closeables).stream()\n-        .flatMap((Iterable<? extends AutoCloseable> t) -> Collections2.toList(t).stream())\n-        .collect(Collectors.toList()));\n+    close(flatten(closeables));\n+  }\n+\n+  @SafeVarargs\n+  private static Iterable<AutoCloseable> flatten(Iterable<? extends AutoCloseable>... closeables) {\n+    return new Iterable<AutoCloseable>() {\n+      // Cast from Iterable<? extends AutoCloseable> to Iterable<AutoCloseable> is safe in this context\n+      // since there's no modification of the original collection\n+      @SuppressWarnings(\"unchecked\")\n+      @Override\n+      public Iterator<AutoCloseable> iterator() {\n+        return Arrays.stream(closeables)\n+            .flatMap((Iterable<? extends AutoCloseable> i)\n+                -> StreamSupport.stream(((Iterable<AutoCloseable>) i).spliterator(), false))\n\nReview comment:\n       ```suggestion\r\n                   -> StreamSupport.stream(((Iterable<AutoCloseable>) i).spliterator(), /*parallel=*/false))\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-12T21:00:52.318+0000",
                    "updated": "2021-09-12T21:00:52.318+0000",
                    "started": "2021-09-12T21:00:52.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649743",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/649744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063#issuecomment-917709739\n\n\n   +1 will merge on green.  \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-12T21:02:55.608+0000",
                    "updated": "2021-09-12T21:02:55.608+0000",
                    "started": "2021-09-12T21:02:55.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "649744",
                    "issueId": "13398757"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/worklog/655214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield closed pull request #11063:\nURL: https://github.com/apache/arrow/pull/11063\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-26T03:15:46.169+0000",
                    "updated": "2021-09-26T03:15:46.169+0000",
                    "started": "2021-09-26T03:15:46.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655214",
                    "issueId": "13398757"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@870f09d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58145c59[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e63d8e4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@34efb3e5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5903e85d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5979a503[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@98df230[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@40b4187f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b35134[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1276bd5c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@740cc150[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@149b484e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Sep 26 03:15:46 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-26T03:15:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13847/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-01T16:42:56.000+0000",
        "updated": "2021-09-26T03:15:47.000+0000",
        "timeoriginalestimate": null,
        "description": "There are several occurences of unnecessary copies of collections in Arrow Java code.\r\n\r\nOne typical example is for a constructor to copy a collection provided as an argument, and then invoking {{Collections2}} method to create a immutable copy of it, like for {{Schema}} ([https://github.com/apache/arrow/blob/247a7a9bf1b7090b1bffc14bec84d188dccb52dc/java/vector/src/main/java/org/apache/arrow/vector/types/pojo/Schema.java#L113)]\r\n{code:java}\r\n\r\n  /**\r\n   * Constructor with metadata.\r\n   */\r\n  public Schema(Iterable<Field> fields,\r\n                Map<String, String> metadata) {\r\n    List<Field> fieldList = new ArrayList<>();\r\n    for (Field field : fields) {\r\n      fieldList.add(field);\r\n    }\r\n    this.fields = Collections2.immutableListCopy(fieldList);\r\n    this.metadata = metadata == null ? Collections.emptyMap() : Collections2.immutableMapCopy(metadata);\r\n  } {code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "Avoid unnecessary copies of collection",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398757/comment/17420192",
                    "id": "17420192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 11063\n[https://github.com/apache/arrow/pull/11063]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield",
                        "name": "emkornfield",
                        "key": "emkornfield",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-26T03:15:46.583+0000",
                    "updated": "2021-09-26T03:15:46.583+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uibs:",
        "customfield_12314139": null
    }
}