{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13478472",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472",
    "key": "ARROW-17520",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=DKang",
            "name": "DKang",
            "key": "JIRAUSER294894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Donghe Kang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=DKang",
            "name": "DKang",
            "key": "JIRAUSER294894",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Donghe Kang",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17520/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/810596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #14186:\nURL: https://github.com/apache/arrow/pull/14186\n\n   This PR includes the initial version of union operator support for Substrait->Acero.\n\n\n",
                    "created": "2022-09-21T03:26:19.574+0000",
                    "updated": "2022-09-21T03:26:19.574+0000",
                    "started": "2022-09-21T03:26:19.573+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810596",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/810597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r975999698\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +541,52 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_MINUS_PRIMARY:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_MINUS_MULTISET:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_INTERSECTION_PRIMARY:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_INTERSECTION_MULTISET:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_UNION_DISTINCT:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_UNION_ALL:\n+          break;\n+        default:\n+          return Status::Invalid(\"Unsupported union type\");\n+      }\n+      int input_size = set.inputs_size();\n+      compute::Declaration union_declr{\"union\", compute::ExecNodeOptions{}};\n+      std::shared_ptr<Schema> union_schema;\n+      for (int input_id = 0; input_id < input_size; input_id++) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            auto input, FromProto(set.inputs(input_id), ext_set, conversion_options));\n+        union_declr.inputs.emplace_back(std::move(input.declaration));\n+        if (union_schema == nullptr) {\n+          union_schema = input.output_schema;\n\nReview Comment:\n   Is there a better way? \r\n   \r\n   cc @westonpace \n\n\n\n",
                    "created": "2022-09-21T03:27:44.173+0000",
                    "updated": "2022-09-21T03:27:44.173+0000",
                    "started": "2022-09-21T03:27:44.173+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810597",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/810598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#issuecomment-1253159362\n\n   cc @westonpace @jvanstraten \n\n\n",
                    "created": "2022-09-21T03:27:52.152+0000",
                    "updated": "2022-09-21T03:27:52.152+0000",
                    "started": "2022-09-21T03:27:52.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810598",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/810604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#issuecomment-1253174650\n\n   https://issues.apache.org/jira/browse/ARROW-17520\n\n\n",
                    "created": "2022-09-21T04:01:17.303+0000",
                    "updated": "2022-09-21T04:01:17.303+0000",
                    "started": "2022-09-21T04:01:17.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810604",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/810605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#issuecomment-1253174655\n\n   :warning: Ticket **has no components in JIRA**, make sure you assign one.\n\n\n",
                    "created": "2022-09-21T04:01:19.301+0000",
                    "updated": "2022-09-21T04:01:19.301+0000",
                    "started": "2022-09-21T04:01:19.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "810605",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r978980117\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +541,52 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n\nReview Comment:\n   Maybe you can use [EnumToString](https://github.com/apache/arrow/blob/356e7f836c145966ebbeb65c3b65d82348e4234e/cpp/src/arrow/engine/substrait/expression_internal.cc#L81) to have a better error message.\n\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -3082,5 +3082,125 @@ TEST(Substrait, AggregateRelEmit) {\n                        buf, {}, conversion_options);\n }\n \n+TEST(Substrait, SetRelationBasic) {\n+  compute::ExecContext exec_context;\n+  auto dummy_schema =\n+      schema({field(\"A\", int32()), field(\"B\", int32()), field(\"C\", int32())});\n+\n+  // creating a dummy dataset using a dummy table\n+  auto table1 = TableFromJSON(dummy_schema, {R\"([\n+      [10, 1, 80],\n+      [20, 2, 70],\n+      [30, 3, 30],\n+      [40, 4, 20],\n+      [40, 5, 40],\n+      [20, 6, 20],\n+      [30, 7, 30]\n+  ])\"});\n+\n+  auto table2 = TableFromJSON(dummy_schema, {R\"([\n+      [11, 1, 82],\n+      [21, 2, 72],\n+      [31, 3, 32],\n+      [41, 4, 22],\n+      [41, 5, 42],\n+      [21, 6, 22],\n+      [31, 7, 32]\n+  ])\"});\n+\n+  NamedTableProvider table_provider = [table1,\n+                                       table2](const std::vector<std::string>& names) {\n+    std::shared_ptr<Table> output_table;\n+    for (const auto& name : names) {\n+      if (name == \"T1\") {\n+        output_table = table1;\n+      }\n+      if (name == \"T2\") {\n+        output_table = table2;\n+      }\n+    }\n+    std::shared_ptr<compute::ExecNodeOptions> options =\n+        std::make_shared<compute::TableSourceNodeOptions>(std::move(output_table));\n+    return compute::Declaration(\"table_source\", {}, options, \"mock_source\");\n+  };\n+\n+  ConversionOptions conversion_options;\n+  conversion_options.named_table_provider = std::move(table_provider);\n+\n+  std::string substrait_json = R\"({\n+    \"relations\": [{\n+      \"root\": {\n+        \"input\": {\n+          \"set\": {\n+            \"inputs\": [{\n+              \"read\": {\n+                \"baseSchema\": {\n+                  \"names\": [\"FOO\"],\n+                  \"struct\": {\n+                    \"types\": [{\n+                      \"i32\": {\n+                        \"typeVariationReference\": 0,\n+                        \"nullability\": \"NULLABILITY_NULLABLE\"\n+                      }\n+                    }],\n+                    \"typeVariationReference\": 0,\n+                    \"nullability\": \"NULLABILITY_REQUIRED\"\n+                  }\n+                },\n+                \"namedTable\": {\n+                  \"names\": [\"T1\"]\n+                }\n+              }  \n+            }, {\n+              \"read\": {\n+                \"baseSchema\": {\n+                  \"names\": [\"BAR\"],\n+                  \"struct\": {\n+                    \"types\": [{\n+                      \"i32\": {\n+                        \"typeVariationReference\": 0,\n+                        \"nullability\": \"NULLABILITY_NULLABLE\"\n+                      }\n+                    }],\n+                    \"typeVariationReference\": 0,\n+                    \"nullability\": \"NULLABILITY_REQUIRED\"\n+                  }\n+                },\n+                \"namedTable\": {\n+                  \"names\": [\"T2\"]\n+                }\n+              }\n+            }],\n+            \"op\": \"SET_OP_UNION_ALL\"\n+          }\n+        },\n+        \"names\": [\"FOO\"]\n+      }\n+    }]\n+  })\";\n+\n+  ASSERT_OK_AND_ASSIGN(auto buf, internal::SubstraitFromJSON(\"Plan\", substrait_json));\n+\n+  auto expected_table = TableFromJSON(dummy_schema, {R\"([\n+      [11, 1, 82],\n+      [21, 2, 72],\n+      [31, 3, 32],\n+      [41, 4, 22],\n+      [41, 5, 42],\n+      [21, 6, 22],\n+      [31, 7, 32],\n+      [10, 1, 80],\n+      [20, 2, 70],\n+      [30, 3, 30],\n+      [40, 4, 20],\n+      [40, 5, 40],\n+      [20, 6, 20],\n+      [30, 7, 30]\n+  ])\"});\n+\n+  CheckRoundTripResult(dummy_schema, std::move(expected_table), exec_context, buf, {},\n\nReview Comment:\n   I don't think the union node makes any guarantee on ordering so you might need to use the unordered round trip result that you added to the tests for glob.\n\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +541,52 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_MINUS_PRIMARY:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_MINUS_MULTISET:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_INTERSECTION_PRIMARY:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_INTERSECTION_MULTISET:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_UNION_DISTINCT:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n+        case substrait::SetRel::SET_OP_UNION_ALL:\n+          break;\n+        default:\n+          return Status::Invalid(\"Unsupported union type\");\n+      }\n+      int input_size = set.inputs_size();\n+      compute::Declaration union_declr{\"union\", compute::ExecNodeOptions{}};\n+      std::shared_ptr<Schema> union_schema;\n+      for (int input_id = 0; input_id < input_size; input_id++) {\n+        ARROW_ASSIGN_OR_RAISE(\n+            auto input, FromProto(set.inputs(input_id), ext_set, conversion_options));\n+        union_declr.inputs.emplace_back(std::move(input.declaration));\n+        if (union_schema == nullptr) {\n+          union_schema = input.output_schema;\n\nReview Comment:\n   This is fine.  My first thought was that we could validate that the output schema of all the inputs is identical but the union node itself will do this when it is eventually converted into an exec plan.\n\n\n\n",
                    "created": "2022-09-23T19:43:15.248+0000",
                    "updated": "2022-09-23T19:43:15.248+0000",
                    "started": "2022-09-23T19:43:15.248+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811698",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811788",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144072\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +541,52 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\"NotImplemented union type\");\n\nReview Comment:\n   To use this, I did a minor refactor. I will point it out below. \n\n\n\n",
                    "created": "2022-09-24T02:57:07.316+0000",
                    "updated": "2022-09-24T02:57:07.316+0000",
                    "started": "2022-09-24T02:57:07.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811788",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144149\n\n\n##########\ncpp/src/arrow/engine/substrait/expression_internal.cc:\n##########\n@@ -82,15 +83,6 @@ Result<SubstraitCall> DecodeScalarFunction(\n   return std::move(call);\n }\n \n-std::string EnumToString(int value, const google::protobuf::EnumDescriptor* descriptor) {\n-  const google::protobuf::EnumValueDescriptor* value_desc =\n-      descriptor->FindValueByNumber(value);\n-  if (value_desc == nullptr) {\n-    return \"unknown\";\n-  }\n-  return value_desc->name();\n-}\n-\n\nReview Comment:\n   I removed this method from `expression_internal.cc` since this can be a generic util. And put it to the `util.cc`\n\n\n\n",
                    "created": "2022-09-24T02:57:47.419+0000",
                    "updated": "2022-09-24T02:57:47.419+0000",
                    "started": "2022-09-24T02:57:47.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811789",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144207\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +542,64 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\n+              \"NotImplemented union type : \",\n+              EnumToString(op, substrait::SetRel_SetOp_descriptor()));\n\nReview Comment:\n   updated the strings here with `EnumToString`\n\n\n\n",
                    "created": "2022-09-24T02:58:07.394+0000",
                    "updated": "2022-09-24T02:58:07.394+0000",
                    "started": "2022-09-24T02:58:07.394+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811790",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811791",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144234\n\n\n##########\ncpp/src/arrow/engine/substrait/serde_test.cc:\n##########\n@@ -179,7 +179,8 @@ void CheckRoundTripResult(const std::shared_ptr<Schema> output_schema,\n                           compute::ExecContext& exec_context,\n                           std::shared_ptr<Buffer>& buf,\n                           const std::vector<int>& include_columns = {},\n-                          const ConversionOptions& conversion_options = {}) {\n+                          const ConversionOptions& conversion_options = {},\n+                          const compute::SortOptions* sort_options = NULLPTR) {\n\nReview Comment:\n   the logic here is the same as the glob PR. \n\n\n\n",
                    "created": "2022-09-24T02:58:32.410+0000",
                    "updated": "2022-09-24T02:58:32.410+0000",
                    "started": "2022-09-24T02:58:32.410+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811791",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811792",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144265\n\n\n##########\ncpp/src/arrow/engine/substrait/util.cc:\n##########\n@@ -147,6 +147,15 @@ const std::string& default_extension_types_uri() {\n   return uri;\n }\n \n+std::string EnumToString(int value, const google::protobuf::EnumDescriptor* descriptor) {\n+  const google::protobuf::EnumValueDescriptor* value_desc =\n+      descriptor->FindValueByNumber(value);\n+  if (value_desc == nullptr) {\n+    return \"unknown\";\n+  }\n+  return value_desc->name();\n+}\n+\n\nReview Comment:\n   I moved the `EnumToString` function to `util.h`\n\n\n\n",
                    "created": "2022-09-24T02:58:57.440+0000",
                    "updated": "2022-09-24T02:58:57.440+0000",
                    "started": "2022-09-24T02:58:57.439+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811792",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811794",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979144342\n\n\n##########\ncpp/src/arrow/engine/substrait/util.h:\n##########\n@@ -25,6 +25,8 @@\n #include \"arrow/engine/substrait/options.h\"\n #include \"arrow/util/iterator.h\"\n \n+#include \"substrait/algebra.pb.h\"  // IWYU pragma: export\n\nReview Comment:\n   This part is not very sure. We could include proto headers which is required for this, but what is the best practice here? Since there would be more utils like this which could reference the interfaces in the `algebra.pb.h`, we could use it. But as per this PR what is the best? \n\n\n\n",
                    "created": "2022-09-24T03:00:02.523+0000",
                    "updated": "2022-09-24T03:00:02.523+0000",
                    "started": "2022-09-24T03:00:02.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811794",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#issuecomment-1256841907\n\n   @westonpace thanks for the review, and I updated it with a few changes out of scope. Please check it. \n\n\n",
                    "created": "2022-09-24T03:00:20.943+0000",
                    "updated": "2022-09-24T03:00:20.943+0000",
                    "started": "2022-09-24T03:00:20.943+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811795",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979290333\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +542,64 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\n+              \"NotImplemented union type : \",\n+              EnumToString(op, substrait::SetRel_SetOp_descriptor()));\n\nReview Comment:\n   Thanks! Can we chain the case statements here?  So instead of:\r\n   \r\n   ```\r\n   case 0:\r\n     return foo();\r\n   case 1:\r\n     return foo();\r\n   ```\r\n   \r\n   we can have:\r\n   \r\n   ```\r\n   case 0:\r\n   case 1:\r\n     return foo();\r\n   ```\n\n\n\n",
                    "created": "2022-09-24T18:58:49.274+0000",
                    "updated": "2022-09-24T18:58:49.274+0000",
                    "started": "2022-09-24T18:58:49.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811862",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/811875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r979327493\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -541,6 +542,64 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+          return Status::NotImplemented(\n+              \"NotImplemented union type : \",\n+              EnumToString(op, substrait::SetRel_SetOp_descriptor()));\n\nReview Comment:\n   Ah yes\n\n\n\n",
                    "created": "2022-09-24T22:57:09.229+0000",
                    "updated": "2022-09-24T22:57:09.229+0000",
                    "started": "2022-09-24T22:57:09.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "811875",
                    "issueId": "13478472"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/worklog/825986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #14186:\nURL: https://github.com/apache/arrow/pull/14186#discussion_r1022350402\n\n\n##########\ncpp/src/arrow/engine/substrait/relation_internal.cc:\n##########\n@@ -619,6 +620,49 @@ Result<DeclarationInfo> FromProto(const substrait::Rel& rel, const ExtensionSet&\n                          std::move(aggregate_schema));\n     }\n \n+    case substrait::Rel::RelTypeCase::kSet: {\n+      const auto& set = rel.set();\n+      RETURN_NOT_OK(CheckRelCommon(set, conversion_options));\n+\n+      if (set.inputs_size() < 2) {\n+        return Status::Invalid(\n+            \"substrait::SetRel with inadequate number of input relations, \",\n+            set.inputs_size());\n+      }\n+      substrait::SetRel_SetOp op = set.op();\n+      // Note: at the moment Acero only supports UNION_ALL operation\n+      switch (op) {\n+        case substrait::SetRel::SET_OP_UNSPECIFIED:\n+        case substrait::SetRel::SET_OP_MINUS_PRIMARY:\n+        case substrait::SetRel::SET_OP_MINUS_MULTISET:\n+        case substrait::SetRel::SET_OP_INTERSECTION_PRIMARY:\n+        case substrait::SetRel::SET_OP_INTERSECTION_MULTISET:\n+        case substrait::SetRel::SET_OP_UNION_DISTINCT:\n+          return Status::NotImplemented(\n+              \"NotImplemented union type : \",\n+              EnumToString(op, substrait::SetRel_SetOp_descriptor()));\n+        case substrait::SetRel::SET_OP_UNION_ALL:\n+          break;\n+        default:\n+          return Status::Invalid(\"Unsupported union type\");\n\nReview Comment:\n   ```suggestion\r\n             return Status::Invalid(\"Unknown union type\");\r\n   ```\n\n\n\n##########\ncpp/src/arrow/engine/substrait/util.h:\n##########\n@@ -25,6 +25,8 @@\n #include \"arrow/engine/substrait/options.h\"\n #include \"arrow/util/iterator.h\"\n \n+#include \"substrait/algebra.pb.h\"  // IWYU pragma: export\n\nReview Comment:\n   Unfortunately, we can't do this.  I made the same mistake playing around with extension rels.  However, this is part of the public API (these methods are used by python).\r\n   \r\n   I agree it would be useful to have this method in a common spot.  Can you make a `util_internal.h`  for this?\n\n\n\n",
                    "created": "2022-11-15T06:04:57.747+0000",
                    "updated": "2022-11-15T06:04:57.747+0000",
                    "started": "2022-11-15T06:04:57.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "825986",
                    "issueId": "13478472"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@10d8245e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a6c6c88[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ae4afa2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6365865a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3743dc9b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@707929bc[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3faf01ae[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@70370757[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59b9bace[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@60345c8c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27d18355[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6f943547[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 24 23:33:58 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17520/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-08-24T18:48:10.000+0000",
        "updated": "2022-11-15T06:04:57.000+0000",
        "timeoriginalestimate": null,
        "description": "The SetRel operator in Substrait is a critical operator to merge data from several branches in the query plan. The operator has a few options like MINUS, INTERSECTION and UNION. The UNIONALL option that directly merges data flows is the foundation of other options and is easier to implement. As I know, Acero already has the union operator and we could easily map the UNIONALL in Substrait to the Union operator in Acero.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement SubStrait SetRel (UnionAll)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13478472/comment/17584503",
                    "id": "17584503",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "CC [~vibhatha]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-08-24T23:33:58.982+0000",
                    "updated": "2022-08-24T23:33:58.982+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z181fc:",
        "customfield_12314139": null
    }
}