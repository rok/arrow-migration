{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13411496",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496",
    "key": "ARROW-14694",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14694/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 37,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751\n\n\n   This adds `$code()` to `DataType` objects in R, which is then used by `Schema$code()`. \r\n   \r\n   In both case, `$code()` produces an R call, e.g. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   #> See arrow_info() for available features\r\n   \r\n   int32()$code()\r\n   #> int32()\r\n   struct(a = timestamp())$code()\r\n   #> struct(a = timestamp(unit = \"s\"))\r\n   \r\n   schema(\r\n     a = float64(), \r\n     b = list_of(large_utf8()), \r\n     c = struct(\r\n       d = fixed_size_binary(byte_width = 7L), \r\n       e = null()\r\n     )\r\n   )$code()\r\n   #> schema(a = float64(), b = list_of(large_utf8()), c = struct(d = fixed_size_binary(byte_width = 7L), \r\n   #>     e = null()))\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-22 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1.9000)</sup>\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:10:21.567+0000",
                    "updated": "2021-11-22T13:10:21.567+0000",
                    "started": "2021-11-22T13:10:21.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684676",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684677",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#issuecomment-975506969\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:10:44.441+0000",
                    "updated": "2021-11-22T13:10:44.441+0000",
                    "started": "2021-11-22T13:10:44.440+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684677",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#issuecomment-975508079\n\n\n   This does not yet deal with metadata. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:12:07.428+0000",
                    "updated": "2021-11-22T13:12:07.428+0000",
                    "started": "2021-11-22T13:12:07.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684678",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754289690\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -107,17 +111,48 @@ UInt32 <- R6Class(\"UInt32\", inherit = FixedWidthType)\n UInt64 <- R6Class(\"UInt64\", inherit = FixedWidthType)\n Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n-Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n+Float64 <- R6Class(\"Float64\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    code = function() call(\"float64\")\n+  )\n+)\n\nReview comment:\n       Just wondering; because we support using `double()` to create `float64` objects, could this potentially lead to confusion for users, e.g. \r\n   \r\n   ```\r\n   s <- schema(x = double())\r\n   s\r\n   # Schema\r\n   # x: double\r\n   s$code()\r\n   # schema(x = float64())\r\n   ```\r\n   \r\n   I think this perhaps doesn't matter though, given in the docs we do say \"When called inside an arrow function, such as schema() or cast(), double() also is supported as a way of creating a float64()\"\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Just out of curiosity, what us this bit doing here with \"unknown_type\"?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T13:43:59.459+0000",
                    "updated": "2021-11-22T13:43:59.459+0000",
                    "started": "2021-11-22T13:43:59.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684705",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754310306\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Probably no longer needed. \r\n   \r\n   It's just so that when it's not implemented for a type, at least you get something. Perhaps that can be replaced by a call to `abort()` instead of giving a call to a function that does not exist ?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:07:01.563+0000",
                    "updated": "2021-11-22T14:07:01.563+0000",
                    "started": "2021-11-22T14:07:01.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684720",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754315922\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -107,17 +111,48 @@ UInt32 <- R6Class(\"UInt32\", inherit = FixedWidthType)\n UInt64 <- R6Class(\"UInt64\", inherit = FixedWidthType)\n Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n-Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n+Float64 <- R6Class(\"Float64\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    code = function() call(\"float64\")\n+  )\n+)\n\nReview comment:\n       ooh nice. I did not know that. using `double()` now. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:13:28.458+0000",
                    "updated": "2021-11-22T14:13:28.458+0000",
                    "started": "2021-11-22T14:13:28.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684727",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754316667\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -107,17 +111,48 @@ UInt32 <- R6Class(\"UInt32\", inherit = FixedWidthType)\n UInt64 <- R6Class(\"UInt64\", inherit = FixedWidthType)\n Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n-Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n+Float64 <- R6Class(\"Float64\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    code = function() call(\"float64\")\n+  )\n+)\n\nReview comment:\n       \ud83e\udd14 however the flip side is that when not used in `schema()` this is confusing now:\r\n   \r\n   ``` r\r\n   arrow::float64()$code()\r\n   #> double()\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-22 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1.9000)</sup>\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:14:11.779+0000",
                    "updated": "2021-11-22T14:14:11.779+0000",
                    "started": "2021-11-22T14:14:11.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684728",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754329549\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -107,17 +111,48 @@ UInt32 <- R6Class(\"UInt32\", inherit = FixedWidthType)\n UInt64 <- R6Class(\"UInt64\", inherit = FixedWidthType)\n Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n-Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n+Float64 <- R6Class(\"Float64\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    code = function() call(\"float64\")\n+  )\n+)\n\nReview comment:\n       Yeah, that's why I was wondering if it was something to change or not - I think it's inevitably a little confusing either way! Perhaps having it show `float64()` as it was before would be better as it matches the corresponding C++ function?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:28:57.028+0000",
                    "updated": "2021-11-22T14:28:57.028+0000",
                    "started": "2021-11-22T14:28:57.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684737",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684738",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754290055\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Just out of curiosity, what is this bit doing here with \"unknown_type\"?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:29:19.852+0000",
                    "updated": "2021-11-22T14:29:19.852+0000",
                    "started": "2021-11-22T14:29:19.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684738",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754334616\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Yeah - I don't 100% understand all of this - but I guess that approach would mean that errors would be more obvious, more likely to get reported, and then we know to implement the `code` public method?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:34:22.037+0000",
                    "updated": "2021-11-22T14:34:22.037+0000",
                    "started": "2021-11-22T14:34:22.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684748",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754334616\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Yeah - I don't 100% understand all of this - but I guess that approach would mean that errors would be more obvious, more likely to get reported, and then we know to implement the `code` public method for that class?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:35:20.882+0000",
                    "updated": "2021-11-22T14:35:20.882+0000",
                    "started": "2021-11-22T14:35:20.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684751",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754335864\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       There are a bunch of types we don't have R functions for, e.g. `DECIMAL256`, `MAP` ... but then I'm not sure how I would test it, because I would need to get one of them in the first place ...\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T14:35:46.505+0000",
                    "updated": "2021-11-22T14:35:46.505+0000",
                    "started": "2021-11-22T14:35:46.505+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684753",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684860",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754478418\n\n\n\n##########\nFile path: r/R/schema.R\n##########\n@@ -121,7 +121,25 @@ Schema <- R6Class(\"Schema\",\n     Equals = function(other, check_metadata = FALSE, ...) {\n       inherits(other, \"Schema\") && Schema__Equals(self, other, isTRUE(check_metadata))\n     },\n-    export_to_c = function(ptr) ExportSchema(self, ptr)\n+    export_to_c = function(ptr) ExportSchema(self, ptr),\n+    code = function() {\n+      names <- self$names\n+      codes <- map2(names, self$fields, function(name, field){\n+        withCallingHandlers(\n+          field$type$code(),\n+          error = function(cnd) {\n+            abort(\n+              glue::glue('Error getting code for field \"{name}\"'),\n\nReview comment:\n       I think this (and the other one) might need to be a `paste()` as `glue` isn't a package we depend on currently.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T17:10:15.751+0000",
                    "updated": "2021-11-22T17:10:15.751+0000",
                    "started": "2021-11-22T17:10:15.751+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684860",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754496837\n\n\n\n##########\nFile path: r/R/schema.R\n##########\n@@ -121,7 +121,25 @@ Schema <- R6Class(\"Schema\",\n     Equals = function(other, check_metadata = FALSE, ...) {\n       inherits(other, \"Schema\") && Schema__Equals(self, other, isTRUE(check_metadata))\n     },\n-    export_to_c = function(ptr) ExportSchema(self, ptr)\n+    export_to_c = function(ptr) ExportSchema(self, ptr),\n+    code = function() {\n+      names <- self$names\n+      codes <- map2(names, self$fields, function(name, field){\n+        withCallingHandlers(\n+          field$type$code(),\n+          error = function(cnd) {\n+            abort(\n+              glue::glue('Error getting code for field \"{name}\"'),\n\nReview comment:\n       oops. will fix. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T17:33:58.542+0000",
                    "updated": "2021-11-22T17:33:58.542+0000",
                    "started": "2021-11-22T17:33:58.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684863",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754518629\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       So I added `arrow:::DayTimeInterval__initialize()` to make a `DayTimeInterval` type, which don't have an R function yet. Bit artificial, but then we get to be able to test what it looks like when we error, e.g. \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   #> See arrow_info() for available features\r\n   \r\n   try_ <- function(code) tryCatch(code, error = function(cnd) print(cnd, backtrace = FALSE))\r\n   \r\n   try_(\r\n     arrow:::DayTimeInterval__initialize()$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`: Unsupported type: <day_time_interval>.\r\n   #> \u2139 The arrow package currently has no function to make these.\r\n   \r\n   try_(\r\n     schema(x = int32(), y = arrow:::DayTimeInterval__initialize())$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for field \"y\".\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   try_(\r\n     struct(a = arrow:::DayTimeInterval__initialize())$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for field \"a\".\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   try_(\r\n     list_of(arrow:::DayTimeInterval__initialize())$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for list type.\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   try_(\r\n     large_list_of(arrow:::DayTimeInterval__initialize())$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for large list type.\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   try_(\r\n     fixed_size_list_of(arrow:::DayTimeInterval__initialize(), list_size = 4L)$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for fixed size list type.\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   try_(\r\n     schema(x = int32(), y = struct(a = arrow:::DayTimeInterval__initialize()))$code()\r\n   )\r\n   #> <error/rlang_error>\r\n   #> Error in `code()`:\r\n   #>   Problem getting code for field \"y\".\r\n   #> Caused by error in `code()`:\r\n   #>   Problem getting code for field \"a\".\r\n   #> Caused by error in `code()`:\r\n   #>   Unsupported type: <day_time_interval>.\r\n   #>   \u2139 The arrow package currently has no function to make these.\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-22 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1.9000)</sup>\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T18:03:27.798+0000",
                    "updated": "2021-11-22T18:03:27.798+0000",
                    "started": "2021-11-22T18:03:27.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684878",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754522878\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       The bit we had previously with an artificial call to `unknown_type()` allowed to have almost all the schema, with just these as placeholders: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   #> See arrow_info() for available features\r\n   \r\n   try_ <- function(code) tryCatch(code, error = function(cnd) print(cnd, backtrace = FALSE))\r\n   \r\n   try_(\r\n     schema(x = int32(), y = struct(a = arrow:::DayTimeInterval__initialize()))$code()\r\n   )\r\n   #> schema(x = int32(), y = struct(a = unknown_type(\"day_time_interval\")))\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-22 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1.9000)</sup>\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T18:09:35.958+0000",
                    "updated": "2021-11-22T18:09:35.958+0000",
                    "started": "2021-11-22T18:09:35.957+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684884",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/684885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754522878\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       The bit we had previously with an artificial call to `unknown_type()` allowed to have almost all the schema, with just these as placeholders: \r\n   \r\n   ``` r\r\n   library(arrow, warn.conflicts = FALSE)\r\n   #> See arrow_info() for available features\r\n   schema(x = int32(), y = struct(a = arrow:::DayTimeInterval__initialize()))$code()\r\n   #> schema(x = int32(), y = struct(a = unknown_type(\"day_time_interval\")))\r\n   ```\r\n   \r\n   <sup>Created on 2021-11-22 by the [reprex package](https://reprex.tidyverse.org) (v2.0.1.9000)</sup>\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-22T18:10:09.040+0000",
                    "updated": "2021-11-22T18:10:09.040+0000",
                    "started": "2021-11-22T18:10:09.040+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "684885",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/685017",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754732325\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -40,7 +40,8 @@ DataType <- R6Class(\"DataType\",\n     fields = function() {\n       DataType__fields(self)\n     },\n-    export_to_c = function(ptr) ExportType(self, ptr)\n+    export_to_c = function(ptr) ExportType(self, ptr),\n+    code = function() call2(\"unknown_type\", self$ToString())\n\nReview comment:\n       Another way that we could test types that we don't have functions for (though that's really only useful insofar as we are creating skipped tests with jiras to implement them...) would be to create an object with a schema and then cast values to the types that we don't have direct support for.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-23T00:32:27.230+0000",
                    "updated": "2021-11-23T00:32:27.230+0000",
                    "started": "2021-11-23T00:32:27.230+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685017",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/685019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754733032\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -109,15 +116,41 @@ Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n Boolean <- R6Class(\"Boolean\", inherit = FixedWidthType)\n-Utf8 <- R6Class(\"Utf8\", inherit = DataType)\n-LargeUtf8 <- R6Class(\"LargeUtf8\", inherit = DataType)\n-Binary <- R6Class(\"Binary\", inherit = DataType)\n-FixedSizeBinary <- R6Class(\"FixedSizeBinary\", inherit = FixedWidthType)\n-LargeBinary <- R6Class(\"LargeBinary\", inherit = DataType)\n+Utf8 <- R6Class(\"Utf8\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"utf8\")\n+  )\n+)\n+LargeUtf8 <- R6Class(\"LargeUtf8\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"large_utf8\")\n+  )\n+)\n+Binary <- R6Class(\"Binary\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"binary\")\n+  )\n+)\n+LargeBinary <- R6Class(\"LargeBinary\",\n+  inherit = DataType, public = list(\n+    code = function() call(\"large_binary\")\n+  )\n+)\n+FixedSizeBinary <- R6Class(\"FixedSizeBinary\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    byte_width = function() FixedSizeBinary__byte_width(self),\n+    code = function() call2(\"fixed_size_binary\", byte_width = self$byte_width())\n+  )\n+)\n\nReview comment:\n       Would it be beneficial to have some sort of generic method in DataType and then an attribute in each of these classes that is the quoted string? It's not _much_ code that's repeated here, but it's a few lines per class\n\n##########\nFile path: r/tests/testthat/test-data-type.R\n##########\n@@ -427,3 +427,74 @@ test_that(\"DataType to C-interface\", {\n   # must clean up the pointer or we leak\n   delete_arrow_schema(ptr)\n })\n+\n+test_that(\"DataType$code()\", {\n+  expect_identical(int8()$code(), call(\"int8\"))\n+  expect_identical(uint8()$code(), call(\"uint8\"))\n+  expect_identical(int16()$code(), call(\"int16\"))\n+  expect_identical(uint16()$code(), call(\"uint16\"))\n+  expect_identical(int32()$code(), call(\"int32\"))\n+  expect_identical(uint32()$code(), call(\"uint32\"))\n+  expect_identical(int64()$code(), call(\"int64\"))\n+  expect_identical(uint64()$code(), call(\"uint64\"))\n+\n+  expect_identical(float16()$code(), call(\"halffloat\"))\n+  expect_identical(float32()$code(), call(\"float\"))\n+  expect_identical(float64()$code(), call(\"double\"))\n+\n+  expect_identical(null()$code(), call(\"null\"))\n+\n+  expect_identical(boolean()$code(), call(\"bool\"))\n+  expect_identical(utf8()$code(), call(\"utf8\"))\n+  expect_identical(large_utf8()$code(), call(\"large_utf8\"))\n+\n+  expect_identical(binary()$code(), call(\"binary\"))\n+  expect_identical(large_binary()$code(), call(\"large_binary\"))\n+  expect_identical(fixed_size_binary(byte_width = 91)$code(), call(\"fixed_size_binary\", byte_width = 91L))\n+\n+  expect_identical(date32()$code(), call(\"date32\"))\n+  expect_identical(date64()$code(), call(\"date64\"))\n+\n+  expect_identical(time32()$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"ms\")$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"s\")$code(), call(\"time32\", unit = \"s\"))\n+\n+  expect_identical(time64()$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"ns\")$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"us\")$code(), call(\"time64\", unit = \"us\"))\n+\n+  expect_identical(timestamp()$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"s\" )$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"ms\")$code(), call(\"timestamp\", unit = \"ms\"))\n+  expect_identical(timestamp(unit = \"ns\")$code(), call(\"timestamp\", unit = \"ns\"))\n+  expect_identical(timestamp(unit = \"us\")$code(), call(\"timestamp\", unit = \"us\"))\n+\n+  expect_identical(timestamp(unit = \"s\" , timezone = \"CET\")$code(), call(\"timestamp\", unit = \"s\" , timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"ms\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"ms\", timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"ns\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"ns\", timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"us\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"us\", timezone = \"CET\"))\n+\n+  expect_identical(decimal(precision = 3, scale = 5)$code(), call(\"decimal\", precision = 3L, scale = 5L))\n+\n+  expect_identical(\n+    struct(a = int32(), b = struct(c = list_of(utf8())), d = float64())$code(),\n+    quote(struct(a = int32(), b = struct(c = list_of(utf8())), d = double()))\n+  )\n+\n+  expect_identical(list_of(int32())$code(), quote(list_of(int32())))\n+  expect_identical(large_list_of(int32())$code(), quote(large_list_of(int32())))\n+  expect_identical(fixed_size_list_of(int32(), list_size = 7L)$code(), quote(fixed_size_list_of(int32(), list_size = 7L)))\n+\n+  skip(\"until rlang 1.0\")\n+  expect_snapshot({\n+    (expect_error(\n+      DayTimeInterval__initialize()$code()\n+    ))\n+    (expect_error(\n+      struct(a = DayTimeInterval__initialize())$code()\n+    ))\n+  })\n+\n+})\n+\n+\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-data-type.R\n##########\n@@ -427,3 +427,74 @@ test_that(\"DataType to C-interface\", {\n   # must clean up the pointer or we leak\n   delete_arrow_schema(ptr)\n })\n+\n+test_that(\"DataType$code()\", {\n+  expect_identical(int8()$code(), call(\"int8\"))\n+  expect_identical(uint8()$code(), call(\"uint8\"))\n+  expect_identical(int16()$code(), call(\"int16\"))\n+  expect_identical(uint16()$code(), call(\"uint16\"))\n+  expect_identical(int32()$code(), call(\"int32\"))\n+  expect_identical(uint32()$code(), call(\"uint32\"))\n+  expect_identical(int64()$code(), call(\"int64\"))\n+  expect_identical(uint64()$code(), call(\"uint64\"))\n+\n+  expect_identical(float16()$code(), call(\"halffloat\"))\n+  expect_identical(float32()$code(), call(\"float\"))\n+  expect_identical(float64()$code(), call(\"double\"))\n+\n+  expect_identical(null()$code(), call(\"null\"))\n+\n+  expect_identical(boolean()$code(), call(\"bool\"))\n+  expect_identical(utf8()$code(), call(\"utf8\"))\n+  expect_identical(large_utf8()$code(), call(\"large_utf8\"))\n+\n+  expect_identical(binary()$code(), call(\"binary\"))\n+  expect_identical(large_binary()$code(), call(\"large_binary\"))\n+  expect_identical(fixed_size_binary(byte_width = 91)$code(), call(\"fixed_size_binary\", byte_width = 91L))\n+\n+  expect_identical(date32()$code(), call(\"date32\"))\n+  expect_identical(date64()$code(), call(\"date64\"))\n+\n+  expect_identical(time32()$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"ms\")$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"s\")$code(), call(\"time32\", unit = \"s\"))\n+\n+  expect_identical(time64()$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"ns\")$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"us\")$code(), call(\"time64\", unit = \"us\"))\n+\n+  expect_identical(timestamp()$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"s\" )$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"ms\")$code(), call(\"timestamp\", unit = \"ms\"))\n+  expect_identical(timestamp(unit = \"ns\")$code(), call(\"timestamp\", unit = \"ns\"))\n+  expect_identical(timestamp(unit = \"us\")$code(), call(\"timestamp\", unit = \"us\"))\n+\n+  expect_identical(timestamp(unit = \"s\" , timezone = \"CET\")$code(), call(\"timestamp\", unit = \"s\" , timezone = \"CET\"))\n\nReview comment:\n       ```suggestion\r\n     expect_identical(timestamp(unit = \"s\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"s\", timezone = \"CET\"))\r\n   ```\n\n##########\nFile path: r/R/type.R\n##########\n@@ -109,15 +116,41 @@ Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n Boolean <- R6Class(\"Boolean\", inherit = FixedWidthType)\n-Utf8 <- R6Class(\"Utf8\", inherit = DataType)\n-LargeUtf8 <- R6Class(\"LargeUtf8\", inherit = DataType)\n-Binary <- R6Class(\"Binary\", inherit = DataType)\n-FixedSizeBinary <- R6Class(\"FixedSizeBinary\", inherit = FixedWidthType)\n-LargeBinary <- R6Class(\"LargeBinary\", inherit = DataType)\n+Utf8 <- R6Class(\"Utf8\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"utf8\")\n+  )\n+)\n+LargeUtf8 <- R6Class(\"LargeUtf8\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"large_utf8\")\n+  )\n+)\n+Binary <- R6Class(\"Binary\",\n+  inherit = DataType,\n+  public = list(\n+    code = function() call(\"binary\")\n+  )\n+)\n+LargeBinary <- R6Class(\"LargeBinary\",\n+  inherit = DataType, public = list(\n+    code = function() call(\"large_binary\")\n+  )\n+)\n+FixedSizeBinary <- R6Class(\"FixedSizeBinary\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    byte_width = function() FixedSizeBinary__byte_width(self),\n+    code = function() call2(\"fixed_size_binary\", byte_width = self$byte_width())\n+  )\n+)\n\nReview comment:\n       Oh, actually I see below we have one for all the non-exceptionally named ones. This is probably fine since it's a limited number of classes where we need to do it\n\n##########\nFile path: r/tests/testthat/test-data-type.R\n##########\n@@ -427,3 +427,74 @@ test_that(\"DataType to C-interface\", {\n   # must clean up the pointer or we leak\n   delete_arrow_schema(ptr)\n })\n+\n+test_that(\"DataType$code()\", {\n+  expect_identical(int8()$code(), call(\"int8\"))\n+  expect_identical(uint8()$code(), call(\"uint8\"))\n+  expect_identical(int16()$code(), call(\"int16\"))\n+  expect_identical(uint16()$code(), call(\"uint16\"))\n+  expect_identical(int32()$code(), call(\"int32\"))\n+  expect_identical(uint32()$code(), call(\"uint32\"))\n+  expect_identical(int64()$code(), call(\"int64\"))\n+  expect_identical(uint64()$code(), call(\"uint64\"))\n+\n+  expect_identical(float16()$code(), call(\"halffloat\"))\n+  expect_identical(float32()$code(), call(\"float\"))\n+  expect_identical(float64()$code(), call(\"double\"))\n+\n+  expect_identical(null()$code(), call(\"null\"))\n+\n+  expect_identical(boolean()$code(), call(\"bool\"))\n+  expect_identical(utf8()$code(), call(\"utf8\"))\n+  expect_identical(large_utf8()$code(), call(\"large_utf8\"))\n+\n+  expect_identical(binary()$code(), call(\"binary\"))\n+  expect_identical(large_binary()$code(), call(\"large_binary\"))\n+  expect_identical(fixed_size_binary(byte_width = 91)$code(), call(\"fixed_size_binary\", byte_width = 91L))\n+\n+  expect_identical(date32()$code(), call(\"date32\"))\n+  expect_identical(date64()$code(), call(\"date64\"))\n+\n+  expect_identical(time32()$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"ms\")$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"s\")$code(), call(\"time32\", unit = \"s\"))\n+\n+  expect_identical(time64()$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"ns\")$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"us\")$code(), call(\"time64\", unit = \"us\"))\n+\n+  expect_identical(timestamp()$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"s\" )$code(), call(\"timestamp\", unit = \"s\"))\n\nReview comment:\n       ```suggestion\r\n     expect_identical(timestamp(unit = \"s\")$code(), call(\"timestamp\", unit = \"s\"))\r\n   ```\n\n##########\nFile path: r/R/schema.R\n##########\n@@ -121,7 +121,25 @@ Schema <- R6Class(\"Schema\",\n     Equals = function(other, check_metadata = FALSE, ...) {\n       inherits(other, \"Schema\") && Schema__Equals(self, other, isTRUE(check_metadata))\n     },\n-    export_to_c = function(ptr) ExportSchema(self, ptr)\n+    export_to_c = function(ptr) ExportSchema(self, ptr),\n+    code = function() {\n+      names <- self$names\n+      codes <- map2(names, self$fields, function(name, field){\n\nReview comment:\n       ```suggestion\r\n         codes <- map2(names, self$fields, function(name, field) {\r\n   ```\n\n##########\nFile path: r/tests/testthat/test-data-type.R\n##########\n@@ -427,3 +427,74 @@ test_that(\"DataType to C-interface\", {\n   # must clean up the pointer or we leak\n   delete_arrow_schema(ptr)\n })\n+\n+test_that(\"DataType$code()\", {\n+  expect_identical(int8()$code(), call(\"int8\"))\n+  expect_identical(uint8()$code(), call(\"uint8\"))\n+  expect_identical(int16()$code(), call(\"int16\"))\n+  expect_identical(uint16()$code(), call(\"uint16\"))\n+  expect_identical(int32()$code(), call(\"int32\"))\n+  expect_identical(uint32()$code(), call(\"uint32\"))\n+  expect_identical(int64()$code(), call(\"int64\"))\n+  expect_identical(uint64()$code(), call(\"uint64\"))\n+\n+  expect_identical(float16()$code(), call(\"halffloat\"))\n+  expect_identical(float32()$code(), call(\"float\"))\n+  expect_identical(float64()$code(), call(\"double\"))\n+\n+  expect_identical(null()$code(), call(\"null\"))\n+\n+  expect_identical(boolean()$code(), call(\"bool\"))\n+  expect_identical(utf8()$code(), call(\"utf8\"))\n+  expect_identical(large_utf8()$code(), call(\"large_utf8\"))\n+\n+  expect_identical(binary()$code(), call(\"binary\"))\n+  expect_identical(large_binary()$code(), call(\"large_binary\"))\n+  expect_identical(fixed_size_binary(byte_width = 91)$code(), call(\"fixed_size_binary\", byte_width = 91L))\n+\n+  expect_identical(date32()$code(), call(\"date32\"))\n+  expect_identical(date64()$code(), call(\"date64\"))\n+\n+  expect_identical(time32()$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"ms\")$code(), call(\"time32\", unit = \"ms\"))\n+  expect_identical(time32(unit = \"s\")$code(), call(\"time32\", unit = \"s\"))\n+\n+  expect_identical(time64()$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"ns\")$code(), call(\"time64\", unit = \"ns\"))\n+  expect_identical(time64(unit = \"us\")$code(), call(\"time64\", unit = \"us\"))\n+\n+  expect_identical(timestamp()$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"s\" )$code(), call(\"timestamp\", unit = \"s\"))\n+  expect_identical(timestamp(unit = \"ms\")$code(), call(\"timestamp\", unit = \"ms\"))\n+  expect_identical(timestamp(unit = \"ns\")$code(), call(\"timestamp\", unit = \"ns\"))\n+  expect_identical(timestamp(unit = \"us\")$code(), call(\"timestamp\", unit = \"us\"))\n+\n+  expect_identical(timestamp(unit = \"s\" , timezone = \"CET\")$code(), call(\"timestamp\", unit = \"s\" , timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"ms\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"ms\", timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"ns\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"ns\", timezone = \"CET\"))\n+  expect_identical(timestamp(unit = \"us\", timezone = \"CET\")$code(), call(\"timestamp\", unit = \"us\", timezone = \"CET\"))\n+\n+  expect_identical(decimal(precision = 3, scale = 5)$code(), call(\"decimal\", precision = 3L, scale = 5L))\n+\n+  expect_identical(\n+    struct(a = int32(), b = struct(c = list_of(utf8())), d = float64())$code(),\n+    quote(struct(a = int32(), b = struct(c = list_of(utf8())), d = double()))\n+  )\n+\n+  expect_identical(list_of(int32())$code(), quote(list_of(int32())))\n+  expect_identical(large_list_of(int32())$code(), quote(large_list_of(int32())))\n+  expect_identical(fixed_size_list_of(int32(), list_size = 7L)$code(), quote(fixed_size_list_of(int32(), list_size = 7L)))\n\nReview comment:\n       ```suggestion\r\n     expect_identical(\r\n       fixed_size_list_of(int32(), list_size = 7L)$code(), \r\n       quote(fixed_size_list_of(int32(), list_size = 7L))\r\n     )\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-23T00:41:08.282+0000",
                    "updated": "2021-11-23T00:41:08.282+0000",
                    "started": "2021-11-23T00:41:08.282+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685019",
                    "issueId": "13411496"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/worklog/685131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #11751:\nURL: https://github.com/apache/arrow/pull/11751#discussion_r754895944\n\n\n\n##########\nFile path: r/R/type.R\n##########\n@@ -107,17 +111,48 @@ UInt32 <- R6Class(\"UInt32\", inherit = FixedWidthType)\n UInt64 <- R6Class(\"UInt64\", inherit = FixedWidthType)\n Float16 <- R6Class(\"Float16\", inherit = FixedWidthType)\n Float32 <- R6Class(\"Float32\", inherit = FixedWidthType)\n-Float64 <- R6Class(\"Float64\", inherit = FixedWidthType)\n+Float64 <- R6Class(\"Float64\",\n+  inherit = FixedWidthType,\n+  public = list(\n+    code = function() call(\"float64\")\n+  )\n+)\n\nReview comment:\n       reverted to `float64()` \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-23T08:40:55.482+0000",
                    "updated": "2021-11-23T08:40:55.482+0000",
                    "started": "2021-11-23T08:40:55.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "685131",
                    "issueId": "13411496"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@22e8f245[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5313e967[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5369fd9b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1f7d6e40[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5aacd8ed[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5e0060e9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4219cb97[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3662b2fa[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ab57f6b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@57ef51fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ba66de5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@78f0f109[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 13 13:40:47 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-13T13:40:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14694/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-11-12T14:38:06.000+0000",
        "updated": "2022-01-14T09:41:22.000+0000",
        "timeoriginalestimate": null,
        "description": "Right now there's no way to get the R code that would create a schema from a schema. It would be nice to be able to do something like {{dput(schema)}} and return a string that is the R code that would reconstruct the schema. ",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Let me dput a schema",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/comment/17442776",
                    "id": "17442776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "This would be *incredibly* useful as I was somewhat frustrated yesterday doing this manually!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2021-11-12T14:40:45.163+0000",
                    "updated": "2021-11-12T14:40:45.163+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/comment/17442863",
                    "id": "17442863",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "dput/deparse aren't generics so we can't just add methods, but perhaps look into what rlang does in its deparsing code. Maybe rlang provides (or could provide) something we could define a method for? (If it doesn't, we could make an issue and ask.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-11-12T17:16:01.401+0000",
                    "updated": "2021-11-12T17:16:01.401+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/comment/17442865",
                    "id": "17442865",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "_nods_ yeah I intended {dput} here to be a gesture at functionality not literally that (if only because I don't want to document \"to get a schema you can copy and paste use the super obviously named {dput}\". We should definitely find a better name ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-11-12T17:19:18.691+0000",
                    "updated": "2021-11-12T17:19:18.691+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/comment/17442868",
                    "id": "17442868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Also seems like something that R6 might want to define a framework for (so that you don't just deparse to \"<environment>\")",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-11-12T17:23:02.780+0000",
                    "updated": "2021-11-12T17:23:02.780+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13411496/comment/17475368",
                    "id": "17475368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Issue resolved by pull request 11751\n[https://github.com/apache/arrow/pull/11751]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-13T13:40:47.273+0000",
                    "updated": "2022-01-13T13:40:47.273+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wor4:",
        "customfield_12314139": null
    }
}