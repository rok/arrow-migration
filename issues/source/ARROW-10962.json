{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13346827",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827",
    "key": "ARROW-10962",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12605147",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12605147",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13346354",
                    "key": "ARROW-10939",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346354",
                    "fields": {
                        "summary": "[C#][FlightRPC] incompatible with java client for empty record batches",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12605148",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12605148",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13346810",
                    "key": "ARROW-10960",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346810",
                    "fields": {
                        "summary": "[C++][FlightRPC] Missing protobuf data_body should result in default value of empty bytes, not null",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10962/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 19,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/526126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963\n\n\n   Fixes compatibility with standard Protobuf implementations, which may omit serialization of an empty field. In the case of an empty record batch, this would cause the Java client to fail a precondition check since there would be no body buffer instead of a single empty body buffer.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-18T19:54:07.612+0000",
                    "updated": "2020-12-18T19:54:07.612+0000",
                    "started": "2020-12-18T19:54:07.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "526126",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/526127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-748291786\n\n\n   https://issues.apache.org/jira/browse/ARROW-10962\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-18T19:59:36.987+0000",
                    "updated": "2020-12-18T19:59:36.987+0000",
                    "started": "2020-12-18T19:59:36.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "526127",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/529775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-752936953\n\n\n   Requesting review from @praveenbingo and @liyafan82 as they seem to have merged the last few Java PRs into the arrow repo. \r\n   \r\n   The background here is that we are working on flight integration tests in Rust (e.g. https://github.com/apache/arrow/pull/9049) and we found an edge case for flight integration. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T11:53:15.152+0000",
                    "updated": "2020-12-31T11:53:15.152+0000",
                    "started": "2020-12-31T11:53:15.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529775",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/529776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb edited a comment on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-752936953\n\n\n   Requesting review from @praveenbingo and @liyafan82 as they seem to have merged the last few Java PRs into the arrow repo. \r\n   \r\n   The background here is that we are working on flight integration tests in Rust (e.g. https://github.com/apache/arrow/pull/9049) and we found an edge case in the flight protobuf integration. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T11:53:38.036+0000",
                    "updated": "2020-12-31T11:53:38.036+0000",
                    "started": "2020-12-31T11:53:38.036+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529776",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/530499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-753717290\n\n\n   Sorry for my late response. Will take a look late today.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T01:49:33.635+0000",
                    "updated": "2021-01-04T01:49:33.635+0000",
                    "started": "2021-01-04T01:49:33.635+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530499",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/530633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551292760\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n\nReview comment:\n       10939 -> 10962?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T12:38:14.298+0000",
                    "updated": "2021-01-04T12:38:14.298+0000",
                    "started": "2021-01-04T12:38:14.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530633",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/530634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551293114\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufCompat() throws Exception {\n\nReview comment:\n       Compat -> Compact?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T12:38:47.326+0000",
                    "updated": "2021-01-04T12:38:47.326+0000",
                    "started": "2021-01-04T12:38:47.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530634",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/530638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551295036\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufCompat() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n\nReview comment:\n       nit: do you think we also need a test case for which a schema has an empty body?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T12:43:24.615+0000",
                    "updated": "2021-01-04T12:43:24.615+0000",
                    "started": "2021-01-04T12:43:24.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530638",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/530669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551326743\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufCompat() throws Exception {\n\nReview comment:\n       Expanded to 'compatibility'\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n\nReview comment:\n       Good catch, fixed.\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,39 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10939: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufCompat() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n\nReview comment:\n       Yup, I added a test for this as well.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-04T13:49:21.307+0000",
                    "updated": "2021-01-04T13:49:21.307+0000",
                    "started": "2021-01-04T13:49:21.307+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530669",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/531125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551866156\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.SCHEMA, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage)\n+          .toBuilder()\n+          .setDataBody(ByteString.EMPTY)\n+          .build();\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asSchema();\n\nReview comment:\n       Maybe we need to assign the schema to an object and verify that its body is null?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T11:10:37.493+0000",
                    "updated": "2021-01-05T11:10:37.493+0000",
                    "started": "2021-01-05T11:10:37.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531125",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/531126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551866948\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.SCHEMA, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n\nReview comment:\n       We can extract a common method for the logic of writing the message to a ByteArrayOutputStream?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T11:12:27.015+0000",
                    "updated": "2021-01-05T11:12:27.015+0000",
                    "started": "2021-01-05T11:12:27.014+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531126",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/531127",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551867296\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n\nReview comment:\n       Do we need to check the message body here?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T11:13:10.113+0000",
                    "updated": "2021-01-05T11:13:10.113+0000",
                    "started": "2021-01-05T11:13:10.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531127",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/531235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551954971\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.SCHEMA, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage)\n+          .toBuilder()\n+          .setDataBody(ByteString.EMPTY)\n+          .build();\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asSchema();\n\nReview comment:\n       The schema itself has no body. I've added a test to check the parsed message.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T14:11:37.966+0000",
                    "updated": "2021-01-05T14:11:37.966+0000",
                    "started": "2021-01-05T14:11:37.966+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531235",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/531240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#discussion_r551959223\n\n\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n\nReview comment:\n       I've added assertions here.\n\n##########\nFile path: java/flight/flight-core/src/test/java/org/apache/arrow/flight/TestBasicOperation.java\n##########\n@@ -317,6 +325,71 @@ private void test(BiConsumer<FlightClient, BufferAllocator> consumer) throws Exc\n     }\n   }\n \n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufRecordBatchCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE);\n+         final VectorSchemaRoot root = VectorSchemaRoot.create(schema, allocator)) {\n+      final VectorUnloader unloader = new VectorUnloader(root);\n+      root.setRowCount(0);\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      try (final ArrowMessage message = new ArrowMessage(unloader.getRecordBatch(), null, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.RECORD_BATCH, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n+          final byte[] buf = new byte[1024];\n+          while (true) {\n+            int read = serialized.read(buf);\n+            if (read < 0) {\n+              break;\n+            }\n+            baos.write(buf, 0, read);\n+          }\n+        }\n+      }\n+      final byte[] serializedMessage = baos.toByteArray();\n+      final Flight.FlightData protobufData = Flight.FlightData.parseFrom(serializedMessage);\n+      Assert.assertEquals(0, protobufData.getDataBody().size());\n+      // Should not throw\n+      final ArrowRecordBatch rb =\n+          marshaller.parse(new ByteArrayInputStream(protobufData.toByteArray())).asRecordBatch();\n+      Assert.assertEquals(rb.computeBodyLength(), 0);\n+    }\n+  }\n+\n+  /** ARROW-10962: accept FlightData messages generated by Protobuf (which can omit empty fields). */\n+  @Test\n+  public void testProtobufSchemaCompatibility() throws Exception {\n+    final Schema schema = new Schema(Collections.singletonList(Field.nullable(\"foo\", new ArrowType.Int(32, true))));\n+    try (final BufferAllocator allocator = new RootAllocator(Integer.MAX_VALUE)) {\n+      final MethodDescriptor.Marshaller<ArrowMessage> marshaller = ArrowMessage.createMarshaller(allocator);\n+      final ByteArrayOutputStream baos = new ByteArrayOutputStream();\n+      Flight.FlightDescriptor descriptor = FlightDescriptor.command(new byte[0]).toProtocol();\n+      try (final ArrowMessage message = new ArrowMessage(descriptor, schema, new IpcOption())) {\n+        Assert.assertEquals(ArrowMessage.HeaderType.SCHEMA, message.getMessageType());\n+        try (final InputStream serialized = marshaller.stream(message)) {\n\nReview comment:\n       Done.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T14:18:40.275+0000",
                    "updated": "2021-01-05T14:18:40.275+0000",
                    "started": "2021-01-05T14:18:40.275+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531240",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/532624",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-756239945\n\n\n   https://github.com/apache/arrow/pull/9049 is still blocked on getting this PR merged. Any chance you can do so @liyafan82 ? \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-07T16:55:21.423+0000",
                    "updated": "2021-01-07T16:55:21.423+0000",
                    "started": "2021-01-07T16:55:21.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532624",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/532798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-756495843\n\n\n   Merging. Thanks for your effort. @lidavidm @alamb \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-08T01:50:59.445+0000",
                    "updated": "2021-01-08T01:50:59.445+0000",
                    "started": "2021-01-08T01:50:59.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532798",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/532799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 closed pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-08T01:55:06.328+0000",
                    "updated": "2021-01-08T01:55:06.328+0000",
                    "started": "2021-01-08T01:55:06.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532799",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/532971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-756711085\n\n\n   \ud83c\udf89  thanks @liyafan82  -- I didn't do anything, it was all @lidavidm . Thanks @lidavidm for the efforts!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-08T11:39:47.947+0000",
                    "updated": "2021-01-08T11:39:47.947+0000",
                    "started": "2021-01-08T11:39:47.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "532971",
                    "issueId": "13346827"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/worklog/533565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #8963:\nURL: https://github.com/apache/arrow/pull/8963#issuecomment-756711085\n\n\n   \ud83c\udf89  thanks @liyafan82  -- I didn't do anything, it was all @lidavidm . Thanks @lidavidm for the efforts!\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-10T03:56:07.451+0000",
                    "updated": "2021-01-10T03:56:07.451+0000",
                    "started": "2021-01-10T03:56:07.451+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533565",
                    "issueId": "13346827"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@d5c5ba2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55d0d0b1[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1042fc72[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@43c4e393[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2d0dd7cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@33f4fcda[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34d237ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@506e82c8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@139e9cbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@718b03b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22523885[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@68e86c5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 08 01:55:07 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-08T01:55:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10962/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-12-18T16:48:39.000+0000",
        "updated": "2021-01-10T03:56:08.000+0000",
        "timeoriginalestimate": null,
        "description": "To be compatible with Protobuf implementations, missing fields should not be treated as an error. The C++ implementation has the same issue, and this is causing issues with the C# and Rust implementations (and presumably the Go implementation)",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java][FlightRPC] FlightData deserializer should accept missing fields",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13346827/comment/17260917",
                    "id": "17260917",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "body": "Issue resolved by pull request 8963\n[https://github.com/apache/arrow/pull/8963]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
                        "name": "fan_li_ya",
                        "key": "fan_li_ya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Liya Fan",
                        "active": true,
                        "timeZone": "Asia/Shanghai"
                    },
                    "created": "2021-01-08T01:55:07.541+0000",
                    "updated": "2021-01-08T01:55:07.541+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lnhc:",
        "customfield_12314139": null
    }
}