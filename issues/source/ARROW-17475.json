{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13477618",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618",
    "key": "ARROW-17475",
    "fields": {
        "parent": {
            "id": "13477296",
            "key": "ARROW-17454",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13477296",
            "fields": {
                "summary": "[Go] Implement First Pass Native Go compute",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17475/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1220800334\n\n   https://issues.apache.org/jira/browse/ARROW-17475\n\n\n",
                    "created": "2022-08-19T15:20:33.517+0000",
                    "updated": "2022-08-19T15:20:33.517+0000",
                    "started": "2022-08-19T15:20:33.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802047",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1220801168\n\n   I don't know who else would be good to review this, I'm pulling small pieces out of #13909 in order to have them be small enough for reasonable reviewing. Feel free to add anyone else that might be relevant / be able to give good advice or ideas. Thanks!\n\n\n",
                    "created": "2022-08-19T15:21:28.144+0000",
                    "updated": "2022-08-19T15:21:28.144+0000",
                    "started": "2022-08-19T15:21:28.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802048",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1220807547\n\n   Sorry if I missed it, but is there an overall design doc or something?\n\n\n",
                    "created": "2022-08-19T15:28:04.676+0000",
                    "updated": "2022-08-19T15:28:04.676+0000",
                    "started": "2022-08-19T15:28:04.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802054",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1220816277\n\n   @lidavidm I'm pretty much following the design of the existing C++ compute library rather than trying to engineer something new on my own. So as a result I didn't make a separate design doc, unless you think it would still be a good idea to do that in which case I'll pause this to go do that\n\n\n",
                    "created": "2022-08-19T15:37:42.139+0000",
                    "updated": "2022-08-19T15:37:42.139+0000",
                    "started": "2022-08-19T15:37:42.139+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802058",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1220830257\n\n   No worries, if it's meant to be based on the C++ library then I'll read through it with that in mind. Thanks!\n\n\n",
                    "created": "2022-08-19T15:52:35.889+0000",
                    "updated": "2022-08-19T15:52:35.889+0000",
                    "started": "2022-08-19T15:52:35.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802063",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r950464998\n\n\n##########\ngo/arrow/compute/doc.go:\n##########\n@@ -0,0 +1,29 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package compute is a native-go implementation of an Acero-like\n+// arrow compute engine.\n\nReview Comment:\n   Ah, so not just arrow::compute, but Acero itself is the goal. \n\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,266 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionOptionsType interface {\n\nReview Comment:\n   FWIW I think we only did this for C++ metaprogramming reasons. Is there a more Go-like way to do this? For instance Copy() could be a regular method and Compare() could become Equal()?\n\n\n\n##########\ngo/arrow/compute/functions.go:\n##########\n@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"context\"\n+)\n+\n+type Function interface {\n+\tName() string\n+\tKind() FuncKind\n+\tArity() Arity\n+\tDoc() FunctionDoc\n+\tNumKernels() int\n\nReview Comment:\n   Is it worth exposing this without also having a public concept of Kernels?\n\n\n\n",
                    "created": "2022-08-19T18:33:33.800+0000",
                    "updated": "2022-08-19T18:33:33.800+0000",
                    "started": "2022-08-19T18:33:33.799+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802110",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r950472899\n\n\n##########\ngo/arrow/compute/doc.go:\n##########\n@@ -0,0 +1,29 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+// Package compute is a native-go implementation of an Acero-like\n+// arrow compute engine.\n\nReview Comment:\n   That's the goal yup. But it's a lofty goal. The first milestone is just simple scalar function execution...\n\n\n\n",
                    "created": "2022-08-19T18:36:34.266+0000",
                    "updated": "2022-08-19T18:36:34.266+0000",
                    "started": "2022-08-19T18:36:34.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802111",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802112",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r950473801\n\n\n##########\ngo/arrow/compute/functions.go:\n##########\n@@ -0,0 +1,63 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"context\"\n+)\n+\n+type Function interface {\n+\tName() string\n+\tKind() FuncKind\n+\tArity() Arity\n+\tDoc() FunctionDoc\n+\tNumKernels() int\n\nReview Comment:\n   I have a setup concept for Kernels, just haven't placed the interface in here yet (for the sake of keeping the size of this PR down) but they will almost certainly make into the 10.0.0 release so I'm okay with leaving this.\n\n\n\n",
                    "created": "2022-08-19T18:37:24.359+0000",
                    "updated": "2022-08-19T18:37:24.359+0000",
                    "started": "2022-08-19T18:37:24.358+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802112",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r950477307\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,266 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionOptionsType interface {\n\nReview Comment:\n   Hmm, OptionsTypes get registered in the registry, but looking at things, I don't actually see a direct tie of `Function`s -> their options types other than by the name (unless i'm missing something). So what is the actual use for registering the Options types in the Function Registry in the C++ Compute lib. You're right that I could place `Copy` and `Compare` as part of the `FunctionOptions` interface (as `Clone` and `Equals`) rather than needing a separate `FunctionOptionsType` interface. I think i'll do that\n\n\n\n",
                    "created": "2022-08-19T18:42:39.831+0000",
                    "updated": "2022-08-19T18:42:39.831+0000",
                    "started": "2022-08-19T18:42:39.831+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802113",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r950480750\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,266 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionOptionsType interface {\n\nReview Comment:\n   It was to allow metaprogramming/serialization so you may still need an OptionsType or something like that (or maybe not depending on how those get implemented) but yeah, I would be surprised if you needed the exact same interface in Golang as C++.\n\n\n\n",
                    "created": "2022-08-19T18:48:30.196+0000",
                    "updated": "2022-08-19T18:48:30.196+0000",
                    "started": "2022-08-19T18:48:30.195+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802114",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r951027061\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,194 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionRegistry interface {\n+\tCanAddFunction(fn Function, allowOverwrite bool) bool\n+\tAddFunction(fn Function, allowOverwrite bool) bool\n+\tCanAddAlias(target, source string) bool\n+\tAddAlias(target, source string) bool\n+\tGetFunction(name string) (Function, bool)\n+\tGetFunctionNames() []string\n+\tNumFunctions() int\n+\n+\tcanAddFuncName(string, bool) bool\n+}\n+\n+var (\n+\tregistry FunctionRegistry\n+\tonce     sync.Once\n+)\n+\n+func GetFunctionRegistry() FunctionRegistry {\n+\tonce.Do(func() {\n+\t\tregistry = NewRegistry()\n+\t\t// initialize the others\n+\t})\n+\treturn registry\n+}\n+\n+func NewRegistry() FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+func NewChildRegistry(parent FunctionRegistry) FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tparent:         parent.(*funcRegistry),\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+type funcRegistry struct {\n+\tparent *funcRegistry\n+\n+\tmx             sync.RWMutex\n+\tnameToFunction map[string]Function\n+}\n+\n+func (reg *funcRegistry) getLocker(add bool) sync.Locker {\n+\tif add {\n+\t\treturn &reg.mx\n+\t}\n+\treturn reg.mx.RLocker()\n+}\n+\n+func (reg *funcRegistry) CanAddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, false)\n+}\n+\n+func (reg *funcRegistry) AddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, true)\n+}\n+\n+func (reg *funcRegistry) CanAddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\treturn reg.doAddAlias(target, source, false)\n+}\n+\n+func (reg *funcRegistry) AddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddAlias(target, source, true)\n+}\n+\n+func (reg *funcRegistry) GetFunction(name string) (Function, bool) {\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tif fn, ok := reg.nameToFunction[name]; ok {\n+\t\treturn fn, ok\n+\t}\n+\n+\tif reg.parent != nil {\n+\t\treturn reg.parent.GetFunction(name)\n+\t}\n+\n+\treturn nil, false\n+}\n+\n+func (reg *funcRegistry) GetFunctionNames() (out []string) {\n+\tif reg.parent != nil {\n+\t\tout = reg.parent.GetFunctionNames()\n+\t} else {\n+\t\tout = make([]string, 0, len(reg.nameToFunction))\n+\t}\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tout = append(out, maps.Keys(reg.nameToFunction)...)\n+\tslices.Sort(out)\n+\treturn\n+}\n+\n+func (reg *funcRegistry) NumFunctions() (n int) {\n+\tif reg.parent != nil {\n+\t\tn = reg.parent.NumFunctions()\n+\t}\n+\treturn n + len(reg.nameToFunction)\n+}\n+\n+func (reg *funcRegistry) canAddFuncName(name string, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(name, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\tif !allowOverwrite {\n+\t\t_, ok := reg.nameToFunction[name]\n\nReview Comment:\n   `reg.parent.lock` looks not locked, will it be a problem?\n\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,194 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionRegistry interface {\n+\tCanAddFunction(fn Function, allowOverwrite bool) bool\n+\tAddFunction(fn Function, allowOverwrite bool) bool\n+\tCanAddAlias(target, source string) bool\n+\tAddAlias(target, source string) bool\n+\tGetFunction(name string) (Function, bool)\n+\tGetFunctionNames() []string\n+\tNumFunctions() int\n+\n+\tcanAddFuncName(string, bool) bool\n+}\n+\n+var (\n+\tregistry FunctionRegistry\n+\tonce     sync.Once\n+)\n+\n+func GetFunctionRegistry() FunctionRegistry {\n+\tonce.Do(func() {\n+\t\tregistry = NewRegistry()\n+\t\t// initialize the others\n+\t})\n+\treturn registry\n+}\n+\n+func NewRegistry() FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+func NewChildRegistry(parent FunctionRegistry) FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tparent:         parent.(*funcRegistry),\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+type funcRegistry struct {\n+\tparent *funcRegistry\n+\n+\tmx             sync.RWMutex\n+\tnameToFunction map[string]Function\n+}\n+\n+func (reg *funcRegistry) getLocker(add bool) sync.Locker {\n+\tif add {\n+\t\treturn &reg.mx\n+\t}\n+\treturn reg.mx.RLocker()\n+}\n+\n+func (reg *funcRegistry) CanAddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, false)\n+}\n+\n+func (reg *funcRegistry) AddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, true)\n+}\n+\n+func (reg *funcRegistry) CanAddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\treturn reg.doAddAlias(target, source, false)\n+}\n+\n+func (reg *funcRegistry) AddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddAlias(target, source, true)\n+}\n+\n+func (reg *funcRegistry) GetFunction(name string) (Function, bool) {\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tif fn, ok := reg.nameToFunction[name]; ok {\n+\t\treturn fn, ok\n+\t}\n+\n+\tif reg.parent != nil {\n+\t\treturn reg.parent.GetFunction(name)\n+\t}\n+\n+\treturn nil, false\n+}\n+\n+func (reg *funcRegistry) GetFunctionNames() (out []string) {\n+\tif reg.parent != nil {\n+\t\tout = reg.parent.GetFunctionNames()\n+\t} else {\n+\t\tout = make([]string, 0, len(reg.nameToFunction))\n+\t}\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tout = append(out, maps.Keys(reg.nameToFunction)...)\n+\tslices.Sort(out)\n+\treturn\n+}\n+\n+func (reg *funcRegistry) NumFunctions() (n int) {\n+\tif reg.parent != nil {\n+\t\tn = reg.parent.NumFunctions()\n+\t}\n+\treturn n + len(reg.nameToFunction)\n\nReview Comment:\n   Is `RLock` required here?\n\n\n\n",
                    "created": "2022-08-22T05:40:45.718+0000",
                    "updated": "2022-08-22T05:40:45.718+0000",
                    "started": "2022-08-22T05:40:45.717+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802333",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802506",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on code in PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#discussion_r951559020\n\n\n##########\ngo/arrow/compute/registry.go:\n##########\n@@ -0,0 +1,194 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package compute\n+\n+import (\n+\t\"sync\"\n+\n+\t\"github.com/apache/arrow/go/v10/arrow/internal/debug\"\n+\t\"golang.org/x/exp/maps\"\n+\t\"golang.org/x/exp/slices\"\n+)\n+\n+type FunctionRegistry interface {\n+\tCanAddFunction(fn Function, allowOverwrite bool) bool\n+\tAddFunction(fn Function, allowOverwrite bool) bool\n+\tCanAddAlias(target, source string) bool\n+\tAddAlias(target, source string) bool\n+\tGetFunction(name string) (Function, bool)\n+\tGetFunctionNames() []string\n+\tNumFunctions() int\n+\n+\tcanAddFuncName(string, bool) bool\n+}\n+\n+var (\n+\tregistry FunctionRegistry\n+\tonce     sync.Once\n+)\n+\n+func GetFunctionRegistry() FunctionRegistry {\n+\tonce.Do(func() {\n+\t\tregistry = NewRegistry()\n+\t\t// initialize the others\n+\t})\n+\treturn registry\n+}\n+\n+func NewRegistry() FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+func NewChildRegistry(parent FunctionRegistry) FunctionRegistry {\n+\treturn &funcRegistry{\n+\t\tparent:         parent.(*funcRegistry),\n+\t\tnameToFunction: make(map[string]Function)}\n+}\n+\n+type funcRegistry struct {\n+\tparent *funcRegistry\n+\n+\tmx             sync.RWMutex\n+\tnameToFunction map[string]Function\n+}\n+\n+func (reg *funcRegistry) getLocker(add bool) sync.Locker {\n+\tif add {\n+\t\treturn &reg.mx\n+\t}\n+\treturn reg.mx.RLocker()\n+}\n+\n+func (reg *funcRegistry) CanAddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, false)\n+}\n+\n+func (reg *funcRegistry) AddFunction(fn Function, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.CanAddFunction(fn, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddFunction(fn, allowOverwrite, true)\n+}\n+\n+func (reg *funcRegistry) CanAddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\treturn reg.doAddAlias(target, source, false)\n+}\n+\n+func (reg *funcRegistry) AddAlias(target, source string) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(target, false) {\n+\t\treturn false\n+\t}\n+\n+\treturn reg.doAddAlias(target, source, true)\n+}\n+\n+func (reg *funcRegistry) GetFunction(name string) (Function, bool) {\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tif fn, ok := reg.nameToFunction[name]; ok {\n+\t\treturn fn, ok\n+\t}\n+\n+\tif reg.parent != nil {\n+\t\treturn reg.parent.GetFunction(name)\n+\t}\n+\n+\treturn nil, false\n+}\n+\n+func (reg *funcRegistry) GetFunctionNames() (out []string) {\n+\tif reg.parent != nil {\n+\t\tout = reg.parent.GetFunctionNames()\n+\t} else {\n+\t\tout = make([]string, 0, len(reg.nameToFunction))\n+\t}\n+\treg.mx.RLock()\n+\tdefer reg.mx.RUnlock()\n+\n+\tout = append(out, maps.Keys(reg.nameToFunction)...)\n+\tslices.Sort(out)\n+\treturn\n+}\n+\n+func (reg *funcRegistry) NumFunctions() (n int) {\n+\tif reg.parent != nil {\n+\t\tn = reg.parent.NumFunctions()\n+\t}\n+\treturn n + len(reg.nameToFunction)\n+}\n+\n+func (reg *funcRegistry) canAddFuncName(name string, allowOverwrite bool) bool {\n+\tif reg.parent != nil && !reg.parent.canAddFuncName(name, allowOverwrite) {\n+\t\treturn false\n+\t}\n+\tif !allowOverwrite {\n+\t\t_, ok := reg.nameToFunction[name]\n\nReview Comment:\n   good catch! i'll add a lock of `reg.parent.mx` here.\n\n\n\n",
                    "created": "2022-08-22T15:08:04.334+0000",
                    "updated": "2022-08-22T15:08:04.334+0000",
                    "started": "2022-08-22T15:08:04.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802506",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade merged PR #13924:\nURL: https://github.com/apache/arrow/pull/13924\n\n\n",
                    "created": "2022-08-22T15:08:46.068+0000",
                    "updated": "2022-08-22T15:08:46.068+0000",
                    "started": "2022-08-22T15:08:46.068+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802508",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1223229952\n\n   Benchmark runs are scheduled for baseline = 5f6670895f50b6a71d274c1b46615a3bdc9fa2f8 and contender = 5f84335fbb1e1467eed07563be00e9338a06ff03. 5f84335fbb1e1467eed07563be00e9338a06ff03 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/09aadcb9c1d4452aaba27b4995a12120...cd84c0128a684dfdbf761706f8178973/)\n   [Finished :arrow_down:0.27% :arrow_up:0.0%] [test-mac-arm](https://conbench.ursa.dev/compare/runs/733a1fa0d2b7402e8af5b04a2423d7e2...ddc86a3d1ace4a978aa96668142be3f3/)\n   [Failed :arrow_down:0.82% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/a41e6e2b858e47229e7525caafd52140...b21db04da68c4dd9b4015a049331f97b/)\n   [Finished :arrow_down:0.11% :arrow_up:0.11%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/6d6ffcbbc24145d7b154339ce05a86c2...ed3f203b071f40d99e00e3bc156a1713/)\n   Buildkite builds:\n   [Finished] [`5f84335f` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1347)\n   [Finished] [`5f84335f` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1363)\n   [Failed] [`5f84335f` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1345)\n   [Finished] [`5f84335f` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1362)\n   [Finished] [`5f667089` ec2-t3-xlarge-us-east-2](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ec2-t3-xlarge-us-east-2/builds/1346)\n   [Finished] [`5f667089` test-mac-arm](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-test-mac-arm/builds/1362)\n   [Failed] [`5f667089` ursa-i9-9960x](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-i9-9960x/builds/1344)\n   [Finished] [`5f667089` ursa-thinkcentre-m75q](https://buildkite.com/apache-arrow/arrow-bci-benchmark-on-ursa-thinkcentre-m75q/builds/1361)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python, R. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n",
                    "created": "2022-08-22T22:22:32.166+0000",
                    "updated": "2022-08-22T22:22:32.166+0000",
                    "started": "2022-08-22T22:22:32.165+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802642",
                    "issueId": "13477618"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/worklog/802643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on PR #13924:\nURL: https://github.com/apache/arrow/pull/13924#issuecomment-1223230685\n\n   ['Python', 'R'] benchmarks have high level of regressions.\n   [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/a41e6e2b858e47229e7525caafd52140...b21db04da68c4dd9b4015a049331f97b/)\n   \n\n\n",
                    "created": "2022-08-22T22:22:51.129+0000",
                    "updated": "2022-08-22T22:22:51.129+0000",
                    "started": "2022-08-22T22:22:51.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802643",
                    "issueId": "13477618"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@43acf98d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26ca3b0d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@228e7bcb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@556b3ec4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@72227a60[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@20ea14d0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@71eb6325[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7dfaeec2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c6a7a67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6c56b1ae[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@468e154a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6c287fa7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Aug 22 15:08:46 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-08-22T15:08:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17475/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-08-19T14:43:03.000+0000",
        "updated": "2022-08-22T22:22:51.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] Function Interface and Registry implementation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13477618/comment/17583025",
                    "id": "17583025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13924\n[https://github.com/apache/arrow/pull/13924]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-08-22T15:08:46.920+0000",
                    "updated": "2022-08-22T15:08:46.920+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z17w74:",
        "customfield_12314139": null
    }
}