{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13188062",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062",
    "key": "ARROW-3347",
    "fields": {
        "parent": {
            "id": "13179854",
            "key": "ARROW-3089",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13179854",
            "fields": {
                "summary": "[Rust] Add ArrayBuilder for different Arrow arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 27600,
            "total": 27600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27600,
            "total": 27600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3347/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 48,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran opened a new pull request #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648\n \n \n   This is a sub task of ARROW-3089.  The scope of this builder is just for types that implement the `ArrowPrimitiveType` trait, i.e. `PrimitiveArray`'s.\r\n   \r\n   There are a number of follow up items that need to be addressed below.  I will create JIRA's for these once/if this PR is accepted.  I wanted to ensure that others agree with the approach and get some feedback.\r\n   \r\n   Follow up items (JIRA's to be created upon merging this PR):\r\n    - support for `Option<T> where T: ArrowPrimitiveType`\r\n    - add padding up to 64 bytes, `From<Vec<T>>` does not do this at the moment and I am testing against it\r\n    - expand the `add_primitive_array_impl` macro to `u8` and `i8` (this frustrated me no end...)\r\n    - expand capacity and copy over array when capacity is reached?\r\n   \r\n   cc @kszucs @sunchao @andygrove \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T03:02:50.315+0000",
                    "updated": "2018-09-28T03:02:50.315+0000",
                    "started": "2018-09-28T03:02:50.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149004",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149007",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425308694\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=h1) Report\n   > Merging [#2648](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/3a503ef64fa8191b5b9642e9584f9ee06ae96ca9?src=pr&el=desc) will **increase** coverage by `0.97%`.\n   > The diff coverage is `92.95%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2648/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2648      +/-   ##\n   ==========================================\n   + Coverage   87.19%   88.17%   +0.97%     \n   ==========================================\n     Files         381       13     -368     \n     Lines       59223     1463   -57760     \n   ==========================================\n   - Hits        51642     1290   -50352     \n   + Misses       7507      173    -7334     \n   + Partials       74        0      -74\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [rust/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZGF0YXR5cGVzLnJz) | `75.31% <100%> (+1.89%)` | :arrow_up: |\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | `86.25% <100%> (+1.07%)` | :arrow_up: |\n   | [rust/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVmZmVyLnJz) | `91.04% <64.28%> (-3.13%)` | :arrow_down: |\n   | [python/pyarrow/ipc.pxi](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvaXBjLnB4aQ==) | | |\n   | [cpp/src/parquet/column\\_page.h](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9wYWdlLmg=) | | |\n   | [cpp/src/parquet/bloom\\_filter-test.cc](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2Jsb29tX2ZpbHRlci10ZXN0LmNj) | | |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | | |\n   | [cpp/src/arrow/io/test-common.h](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pby90ZXN0LWNvbW1vbi5o) | | |\n   | [cpp/src/arrow/ipc/metadata-internal.h](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9pcGMvbWV0YWRhdGEtaW50ZXJuYWwuaA==) | | |\n   | ... and [362 more](https://codecov.io/gh/apache/arrow/pull/2648/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=footer). Last update [3a503ef...7ae8f35](https://codecov.io/gh/apache/arrow/pull/2648?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T03:20:07.137+0000",
                    "updated": "2018-09-28T03:20:07.137+0000",
                    "started": "2018-09-28T03:20:07.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149007",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425580691\n \n \n   Thanks @paddyhoran , and my apologies for being late on ARROW-3089. \r\n   \r\n   > The general idea here was to implement the Write trait for Buffer this allows Buffer to use the WriteBytesExt extension trait from the byteorder crate which allows Buffer to remain untyped while allowing types that implement ArrowPrimitiveType to be written to a Buffer instance.\r\n   \r\n   I wonder if we can add a `MutableBuffer` struct, alongside the existing `Buffer`. The former supports growing as well as modification (perhaps by implementing the `Write` trait), and also conversion into a `Buffer`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-28T22:13:48.317+0000",
                    "updated": "2018-09-28T22:13:48.317+0000",
                    "started": "2018-09-28T22:13:48.316+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149504",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425601930\n \n \n   @sunchao no worries, thanks for the feedback.\r\n   \r\n   I think `Buffer` is designed to be immutable (in fact I just saw that in a comment that I should have updated), adding `MutableBuffer` seems like a good idea.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T00:51:52.288+0000",
                    "updated": "2018-09-29T00:51:52.288+0000",
                    "started": "2018-09-29T00:51:52.288+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149525",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425605634\n \n \n   Great. Actually I\u2019ve already have an implementation for this. Do you mind if I post a PR for this and review it perhaps? I can create a separate Jira for it. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T01:43:07.160+0000",
                    "updated": "2018-09-29T01:43:07.160+0000",
                    "started": "2018-09-29T01:43:07.159+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149529",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2648: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425605798\n \n \n   Sure, sounds good.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-09-29T01:45:25.295+0000",
                    "updated": "2018-09-29T01:45:25.295+0000",
                    "started": "2018-09-29T01:45:25.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149531",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2648: ARROW-3347: [WIP] [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648#issuecomment-425782033\n \n \n   Closing as there is no need for the byteorder crate dependency when we have `MutableBuffer` and `ToByteSlice`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-01T03:44:48.507+0000",
                    "updated": "2018-10-01T03:44:48.507+0000",
                    "started": "2018-10-01T03:44:48.507+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149886",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/149887",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran closed pull request #2648: ARROW-3347: [WIP] [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2648\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/rust/Cargo.toml b/rust/Cargo.toml\nindex b618ea96a3..738f949b63 100644\n--- a/rust/Cargo.toml\n+++ b/rust/Cargo.toml\n@@ -34,6 +34,7 @@ name = \"arrow\"\n path = \"src/lib.rs\"\n \n [dependencies]\n+byteorder = \"1.2.6\"\n bytes = \"0.4\"\n libc = \"0.2\"\n serde_json = \"1.0.13\"\ndiff --git a/rust/src/array.rs b/rust/src/array.rs\nindex b3488f9d6e..256ac30a5a 100644\n--- a/rust/src/array.rs\n+++ b/rust/src/array.rs\n@@ -18,6 +18,7 @@\n ///! Array types\n use std::any::Any;\n use std::convert::From;\n+use std::marker::PhantomData;\n use std::mem;\n use std::ptr;\n use std::sync::Arc;\n@@ -139,6 +140,11 @@ macro_rules! def_primitive_array {\n                 PrimitiveArray::from(array_data)\n             }\n \n+            /// Returns a builder to construct a `PrimitiveArray` instance.\n+            pub fn builder(capacity: i64) -> PrimitiveArrayBuilder<$native_ty> {\n+                PrimitiveArrayBuilder::<$native_ty>::with_capacity(capacity)\n+            }\n+\n             /// Returns a `Buffer` holds all the values of this array.\n             ///\n             /// Note this doesn't take account into the offset of this array.\n@@ -283,6 +289,40 @@ def_primitive_array!(DataType::Int64, i64);\n def_primitive_array!(DataType::Float32, f32);\n def_primitive_array!(DataType::Float64, f64);\n \n+pub struct PrimitiveArrayBuilder<T: ArrowPrimitiveType> {\n+    values_buffer: Buffer,\n+    len: i64,\n+    capacity: i64,\n+    _marker: PhantomData<T>,\n+}\n+\n+impl<T: ArrowPrimitiveType> PrimitiveArrayBuilder<T> {\n+    pub fn with_capacity(capacity: i64) -> Self {\n+        let byte_capacity = capacity * mem::size_of::<T>() as i64;\n+        let buffer = Buffer::with_capacity(byte_capacity);\n+        Self {\n+            values_buffer: buffer,\n+            len: 0,\n+            capacity,\n+            _marker: PhantomData,\n+        }\n+    }\n+\n+    pub fn capacity(&self) -> i64 {\n+        self.capacity\n+    }\n+\n+    pub fn push(&mut self, val: T) {\n+        val.write_to_buffer(&mut self.values_buffer, self.len)\n+            .expect(\"Builders capacity is not large enough.\");\n+        self.len += 1;\n+    }\n+\n+    pub fn build(self) -> PrimitiveArray<i32> {\n+        PrimitiveArray::<i32>::new(self.len, self.values_buffer, 0, 0)\n+    }\n+}\n+\n /// A list array where each element is a variable-sized sequence of values with the same\n /// type.\n pub struct ListArray {\n@@ -615,6 +655,40 @@ mod tests {\n         }\n     }\n \n+    macro_rules! create_vec_builder_compare_tests {\n+    ($($name:ident: $native_ty:ident, $value:expr,)*) => {\n+        $(\n+            #[test]\n+            fn $name() {\n+                let (val1, val2, val3) = $value;\n+                let pa = PrimitiveArray::<$native_ty>::from(vec![val1, val2, val3]);\n+                let mut builder = PrimitiveArray::<$native_ty>::builder(3);\n+                builder.push(val1);\n+                builder.push(val2);\n+                builder.push(val3);\n+\n+                let ba = builder.build();\n+                for (i, j) in pa.data().buffers()[0].data().iter().zip(ba.data().buffers()[0].data().iter()) {\n+                    assert_eq!(i, j);\n+                }\n+            }\n+        )*\n+    }}\n+\n+    create_vec_builder_compare_tests! {\n+        bool_vec_builder_compare: bool, (true, false, true),\n+        i8_vec_builder_compare: i8, (-3, 4, 120),\n+        i16_vec_builder_compare: i16, (-214, 50, 32),\n+        i32_vec_builder_compare: i32, (-590, 34, 6432),\n+        i64_vec_builder_compare: i64, (-2345, 3543, 9023),\n+        u8_vec_builder_compare: u8, (0, 45, 255),\n+        u16_vec_builder_compare: u16, (0, 30000, 65535),\n+        u32_vec_builder_compare: u32, (590, 34, 6432),\n+        u64_vec_builder_compare: u64, (2345, 3543, 9023),\n+        f32_vec_builder_compare: f32, (34.56, 32.12, 89.0),\n+        f64_vec_builder_compare: f64, (543.9809, 324.89, 34.89),\n+    }\n+\n     #[test]\n     #[should_panic(\n         expected = \"PrimitiveArray data should contain a single buffer only (values buffer)\"\ndiff --git a/rust/src/buffer.rs b/rust/src/buffer.rs\nindex 1cad425846..f4dece4790 100644\n--- a/rust/src/buffer.rs\n+++ b/rust/src/buffer.rs\n@@ -15,6 +15,8 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+use std::io;\n+use std::io::Write;\n use std::mem;\n use std::sync::Arc;\n \n@@ -106,6 +108,30 @@ impl Buffer {\n     pub fn empty() -> Self {\n         Self::from_raw_parts(::std::ptr::null(), 0)\n     }\n+\n+    pub fn with_capacity(capacity: i64) -> Self {\n+        let buffer = memory::allocate_aligned(capacity).unwrap();\n+        Self::from_raw_parts(buffer, capacity as usize)\n+    }\n+}\n+\n+impl Write for Buffer {\n+    fn write(&mut self, buf: &[u8]) -> io::Result<usize> {\n+        if buf.len() > self.len() {\n+            return Err(io::Error::new(\n+                io::ErrorKind::Other,\n+                \"Buffer not big enough\",\n+            ));\n+        }\n+        unsafe {\n+            memory::memcpy(self.raw_data() as *mut u8, buf.as_ptr(), buf.len());\n+            Ok(buf.len())\n+        }\n+    }\n+\n+    fn flush(&mut self) -> io::Result<()> {\n+        Ok(())\n+    }\n }\n \n impl Clone for Buffer {\ndiff --git a/rust/src/datatypes.rs b/rust/src/datatypes.rs\nindex ec9b852b5b..02d08f63be 100644\n--- a/rust/src/datatypes.rs\n+++ b/rust/src/datatypes.rs\n@@ -21,7 +21,10 @@\n //! regarding data-types and memory layouts see\n //! [here](https://arrow.apache.org/docs/memory_layout.html).\n \n+use buffer::Buffer;\n+use byteorder::{NativeEndian, WriteBytesExt};\n use std::fmt;\n+use std::io;\n use std::mem::size_of;\n use std::slice::from_raw_parts;\n \n@@ -72,19 +75,52 @@ pub struct Field {\n ///\n /// This trait is a marker trait to indicate a primitive type, i.e. a type that occupies a fixed\n /// size in memory as indicated in bit or byte width.\n-pub trait ArrowPrimitiveType: Send + Sync + Copy + PartialOrd + 'static {}\n-\n-impl ArrowPrimitiveType for bool {}\n-impl ArrowPrimitiveType for u8 {}\n-impl ArrowPrimitiveType for u16 {}\n-impl ArrowPrimitiveType for u32 {}\n-impl ArrowPrimitiveType for u64 {}\n-impl ArrowPrimitiveType for i8 {}\n-impl ArrowPrimitiveType for i16 {}\n-impl ArrowPrimitiveType for i32 {}\n-impl ArrowPrimitiveType for i64 {}\n-impl ArrowPrimitiveType for f32 {}\n-impl ArrowPrimitiveType for f64 {}\n+pub trait ArrowPrimitiveType: Send + Sync + Copy + PartialOrd + 'static {\n+    fn write_to_buffer(&self, buffer: &mut Buffer, position: i64) -> io::Result<()>;\n+}\n+\n+macro_rules! add_primitive_array_impl {\n+    ($($native_ty:ident: $write_method:ident,)*) => {\n+        $(\n+        impl ArrowPrimitiveType for $native_ty {\n+            fn write_to_buffer(&self, buffer: &mut Buffer, position: i64) -> io::Result<()> {\n+                let offset = position as usize * size_of::<Self>();\n+                buffer.slice(offset).$write_method::<NativeEndian>(*self)\n+            }\n+}\n+        )*\n+    }}\n+\n+add_primitive_array_impl! {\n+    i16: write_i16,\n+    i32: write_i32,\n+    i64: write_i64,\n+    u16: write_u16,\n+    u32: write_u32,\n+    u64: write_u64,\n+    f32: write_f32,\n+    f64: write_f64,\n+}\n+\n+impl ArrowPrimitiveType for bool {\n+    fn write_to_buffer(&self, buffer: &mut Buffer, position: i64) -> io::Result<()> {\n+        let raw_ptr = buffer.slice(position as usize).raw_data() as *mut bool;\n+        unsafe { *raw_ptr = *self };\n+        Ok(())\n+    }\n+}\n+impl ArrowPrimitiveType for u8 {\n+    fn write_to_buffer(&self, buffer: &mut Buffer, position: i64) -> io::Result<()> {\n+        let offset = position as usize * size_of::<Self>();\n+        buffer.slice(offset).write_u8(*self)\n+    }\n+}\n+impl ArrowPrimitiveType for i8 {\n+    fn write_to_buffer(&self, buffer: &mut Buffer, position: i64) -> io::Result<()> {\n+        let offset = position as usize * size_of::<Self>();\n+        buffer.slice(offset).write_i8(*self)\n+    }\n+}\n \n /// Allows conversion from supported Arrow types to a byte slice.\n pub trait ToByteSlice {\ndiff --git a/rust/src/lib.rs b/rust/src/lib.rs\nindex d4983416f3..2abd15b71d 100644\n--- a/rust/src/lib.rs\n+++ b/rust/src/lib.rs\n@@ -15,6 +15,7 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+extern crate byteorder;\n extern crate bytes;\n extern crate libc;\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-01T03:44:48.875+0000",
                    "updated": "2018-10-01T03:44:48.875+0000",
                    "started": "2018-10-01T03:44:48.875+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "149887",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/159789",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran opened a new pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858\n \n \n   Adds builder for `PrimitiveArray`.\r\n   \r\n   @sunchao has mentioned that it's unfortunate that we have to reply on macros to define the `impl` block for types implementing `ArrowPrimitiveType`.  When specialization lands in stable we can remove much/all of this but for now we have to rely on macros.\r\n   \r\n   This implementation mostly focuses on being correct.  However, maybe we should add `push_value_raw` and `push_null_raw` and allow the caller to handle updating the bitmap (i.e. avoid checking if the bitmap `is_some` on every `push`)?  If so, I can add this as a separate PR (along with other optimizations).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T01:37:26.986+0000",
                    "updated": "2018-10-29T01:37:26.986+0000",
                    "started": "2018-10-29T01:37:26.986+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159789",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/159795",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#issuecomment-433767858\n \n \n   cc @kszucs @crepererum @sunchao @andygrove \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T02:12:42.824+0000",
                    "updated": "2018-10-29T02:12:42.824+0000",
                    "started": "2018-10-29T02:12:42.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159795",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/159798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#issuecomment-433769197\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=h1) Report\n   > Merging [#2858](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d61988d9bc1c9ca92789523593055da0996e9509?src=pr&el=desc) will **increase** coverage by `0.89%`.\n   > The diff coverage is `94.37%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2858/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2858      +/-   ##\n   ==========================================\n   + Coverage   87.55%   88.45%   +0.89%     \n   ==========================================\n     Files         410      360      -50     \n     Lines       63486    61268    -2218     \n   ==========================================\n   - Hits        55586    54195    -1391     \n   + Misses       7828     7073     -755     \n   + Partials       72        0      -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/src/array.rs](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYXJyYXkucnM=) | `87.61% <100%> (+0.11%)` | :arrow_up: |\n   | [rust/src/builder.rs](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-cnVzdC9zcmMvYnVpbGRlci5ycw==) | `95% <94.15%> (-0.7%)` | :arrow_down: |\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | ... and [42 more](https://codecov.io/gh/apache/arrow/pull/2858/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=footer). Last update [d61988d...76fa157](https://codecov.io/gh/apache/arrow/pull/2858?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T02:23:39.823+0000",
                    "updated": "2018-10-29T02:23:39.823+0000",
                    "started": "2018-10-29T02:23:39.823+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "159798",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r228806125\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n \n Review comment:\n   Not sure how much we can save by making this an option, and having multiple checks in `push*` doesn't look good - can we start with a allocated `bitmap_builder` and optimize later if this is indeed an issue?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T16:39:18.710+0000",
                    "updated": "2018-10-29T16:39:18.710+0000",
                    "started": "2018-10-29T16:39:18.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160050",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160051",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r228808948\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n+            pub fn capacity(&self) -> i64 {\n+                self.values_builder.capacity()\n+            }\n+\n+            /// Returns the length of this builder measured in slots of type T\n+            pub fn len(&self) -> i64 {\n+                self.values_builder.len()\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push(&mut self, v: $native_ty) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(true)?;\n+                }\n+                self.values_builder.push(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push_slice(&mut self, v: &[$native_ty]) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder\n+                        .as_mut()\n+                        .unwrap()\n+                        .push_slice(&vec![true; v.len()][..])?;\n+                }\n+                self.values_builder.push_slice(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a null slot into the builder\n+            pub fn push_null(&mut self) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(false)?;\n+                } else {\n+                    let mut b = BufferBuilder::<bool>::new(self.capacity());\n+                    b.push_slice(&vec![true; self.len() as usize][..])?;\n+                    b.push(false)?;\n+                    self.bitmap_builder = Some(b);\n+                }\n+                self.values_builder.advance(1)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes an Option<T> into the builder\n+            pub fn push_option(&mut self, v: Option<$native_ty>) -> Result<()> {\n \n Review comment:\n   Like C++, perhaps we can have a version with the following interface:\r\n   \r\n   ```\r\n   push_values(&mut self, values: &[$native_ty], is_valid: &[u8])\r\n   ```\r\n   \r\n   which can allow us to efficiently `memcpy` the values and null array.  \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T16:39:18.711+0000",
                    "updated": "2018-10-29T16:39:18.711+0000",
                    "started": "2018-10-29T16:39:18.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160051",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160052",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229004697\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n+            pub fn capacity(&self) -> i64 {\n+                self.values_builder.capacity()\n+            }\n+\n+            /// Returns the length of this builder measured in slots of type T\n+            pub fn len(&self) -> i64 {\n+                self.values_builder.len()\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push(&mut self, v: $native_ty) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(true)?;\n+                }\n+                self.values_builder.push(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push_slice(&mut self, v: &[$native_ty]) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder\n+                        .as_mut()\n+                        .unwrap()\n+                        .push_slice(&vec![true; v.len()][..])?;\n+                }\n+                self.values_builder.push_slice(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a null slot into the builder\n+            pub fn push_null(&mut self) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(false)?;\n+                } else {\n+                    let mut b = BufferBuilder::<bool>::new(self.capacity());\n+                    b.push_slice(&vec![true; self.len() as usize][..])?;\n+                    b.push(false)?;\n+                    self.bitmap_builder = Some(b);\n+                }\n+                self.values_builder.advance(1)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes an Option<T> into the builder\n \n Review comment:\n   nit: also `Option<T>`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T16:39:18.712+0000",
                    "updated": "2018-10-29T16:39:18.712+0000",
                    "started": "2018-10-29T16:39:18.711+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160052",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r228806163\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n+            pub fn capacity(&self) -> i64 {\n+                self.values_builder.capacity()\n+            }\n+\n+            /// Returns the length of this builder measured in slots of type T\n+            pub fn len(&self) -> i64 {\n+                self.values_builder.len()\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push(&mut self, v: $native_ty) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n \n Review comment:\n   We can use `if let` syntax - it looks nicer :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T16:39:18.740+0000",
                    "updated": "2018-10-29T16:39:18.740+0000",
                    "started": "2018-10-29T16:39:18.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160053",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229004611\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n \n Review comment:\n   nit: can we use `T` (with backticks) in all the places?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T16:39:18.806+0000",
                    "updated": "2018-10-29T16:39:18.806+0000",
                    "started": "2018-10-29T16:39:18.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160054",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229023709\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n \n Review comment:\n   Yea, I was on the fence about this.  Sounds good, I'll remove the `Option`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T17:26:05.451+0000",
                    "updated": "2018-10-29T17:26:05.451+0000",
                    "started": "2018-10-29T17:26:05.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160087",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229023861\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n+            pub fn capacity(&self) -> i64 {\n+                self.values_builder.capacity()\n+            }\n+\n+            /// Returns the length of this builder measured in slots of type T\n+            pub fn len(&self) -> i64 {\n+                self.values_builder.len()\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push(&mut self, v: $native_ty) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n \n Review comment:\n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T17:26:24.729+0000",
                    "updated": "2018-10-29T17:26:24.729+0000",
                    "started": "2018-10-29T17:26:24.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160088",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229024111\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n+            pub fn capacity(&self) -> i64 {\n+                self.values_builder.capacity()\n+            }\n+\n+            /// Returns the length of this builder measured in slots of type T\n+            pub fn len(&self) -> i64 {\n+                self.values_builder.len()\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push(&mut self, v: $native_ty) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(true)?;\n+                }\n+                self.values_builder.push(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a value of type T into the builder\n+            pub fn push_slice(&mut self, v: &[$native_ty]) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder\n+                        .as_mut()\n+                        .unwrap()\n+                        .push_slice(&vec![true; v.len()][..])?;\n+                }\n+                self.values_builder.push_slice(v)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes a null slot into the builder\n+            pub fn push_null(&mut self) -> Result<()> {\n+                if self.bitmap_builder.is_some() {\n+                    self.bitmap_builder.as_mut().unwrap().push(false)?;\n+                } else {\n+                    let mut b = BufferBuilder::<bool>::new(self.capacity());\n+                    b.push_slice(&vec![true; self.len() as usize][..])?;\n+                    b.push(false)?;\n+                    self.bitmap_builder = Some(b);\n+                }\n+                self.values_builder.advance(1)?;\n+                Ok(())\n+            }\n+\n+            /// Pushes an Option<T> into the builder\n+            pub fn push_option(&mut self, v: Option<$native_ty>) -> Result<()> {\n \n Review comment:\n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T17:27:06.913+0000",
                    "updated": "2018-10-29T17:27:06.913+0000",
                    "started": "2018-10-29T17:27:06.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160091",
                    "issueId": "13188062"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/worklog/160093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2858: ARROW-3347: [Rust] Implement PrimitiveArrayBuilder\nURL: https://github.com/apache/arrow/pull/2858#discussion_r229024344\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -202,8 +222,121 @@ impl BufferBuilder<bool> {\n     }\n }\n \n+///  Array builder for fixed-width primitive types\n+pub struct PrimitiveArrayBuilder<T>\n+where\n+    T: ArrowPrimitiveType,\n+{\n+    values_builder: BufferBuilder<T>,\n+    bitmap_builder: Option<BufferBuilder<bool>>,\n+}\n+\n+macro_rules! impl_primitive_array_builder {\n+    ($data_ty:path, $native_ty:ident) => {\n+        impl PrimitiveArrayBuilder<$native_ty> {\n+            /// Creates a new primitive array builder\n+            pub fn new(capacity: i64) -> Self {\n+                Self {\n+                    values_builder: BufferBuilder::<$native_ty>::new(capacity),\n+                    bitmap_builder: None,\n+                }\n+            }\n+\n+            /// Returns the capacity of this builder measured in slots of type T\n \n Review comment:\n   Sure, agreed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-29T17:27:43.384+0000",
                    "updated": "2018-10-29T17:27:43.384+0000",
                    "started": "2018-10-29T17:27:43.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "160093",
                    "issueId": "13188062"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 27600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@23ec3835[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@583ae428[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@552d375[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ac66c53[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74a716b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5807cac4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b5d63ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@72403a06[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e1ee829[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@58a944c4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@784a3f28[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@b29ba2d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Nov 01 18:31:31 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-01T18:31:31.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3347/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-09-28T02:50:51.000+0000",
        "updated": "2018-11-01T20:08:08.000+0000",
        "timeoriginalestimate": null,
        "description": "This is a sub-task of ARROW-3089",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Implement PrimitiveArrayBuilder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13188062/comment/16671977",
                    "id": "16671977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 2858\n[https://github.com/apache/arrow/pull/2858]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-11-01T18:31:31.581+0000",
                    "updated": "2018-11-01T18:31:31.581+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3yljj:",
        "customfield_12314139": null
    }
}