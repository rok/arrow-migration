{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13034358",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358",
    "key": "ARROW-480",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Licht-T",
            "name": "Licht-T",
            "key": "licht-t",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=licht-t&avatarId=33236",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=licht-t&avatarId=33236",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=licht-t&avatarId=33236",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=licht-t&avatarId=33236"
            },
            "displayName": "Licht Takeuchi",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-480/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@32af314e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2aee94a4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ccc5106[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@12d9b78f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@225780dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@34cc4426[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1a2677d8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@451cdedc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b53e7c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@d6875fb[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24d94b39[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7908b40[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 06 05:03:22 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-06T05:03:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-480/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-01-12T14:26:54.000+0000",
        "updated": "2017-11-06T05:03:22.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add accessors for Parquet column statistics ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/15980567",
                    "id": "15980567",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm going to let this one slip to 0.4. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-04-23T22:39:57.929+0000",
                    "updated": "2017-04-23T22:39:57.929+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16147820",
                    "id": "16147820",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Could use some help with this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-08-30T18:49:15.288+0000",
                    "updated": "2017-08-30T18:49:15.288+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16211534",
                    "id": "16211534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "GitHub user Licht-T opened a pull request:\n\n    https://github.com/apache/arrow/pull/1215\n\n    ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\n\n    This is the patch for [ARROW-480](https://issues.apache.org/jira/projects/ARROW/issues/ARROW-480).\n\nYou can merge this pull request into a Git repository by running:\n\n    $ git pull https://github.com/Licht-T/arrow feature-column-metadata\n\nAlternatively you can review and apply these changes as the patch at:\n\n    https://github.com/apache/arrow/pull/1215.patch\n\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\n\n    This closes #1215\n    \n----\ncommit bdc0bdca3d0205285b4d2f168112a1715e0d69f9\nAuthor: Licht-T <licht-t@outlook.jp>\nDate:   2017-10-19T10:31:24Z\n\n    ENH: Implement RowGroupMetaData.ColumnChunk\n\ncommit 33c087a4aac1cf8d02c0eb9c2b67b972aaebe9d5\nAuthor: Licht-T <licht-t@outlook.jp>\nDate:   2017-10-19T18:32:12Z\n\n    TST: Fix Parquet MetaData test\n\n----\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-19T18:48:11.501+0000",
                    "updated": "2017-10-19T18:48:11.501+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16212779",
                    "id": "16212779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Github user Licht-T commented on the issue:\n\n    https://github.com/apache/arrow/pull/1215\n  \n    Now, I will make new tests!\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-20T15:23:38.646+0000",
                    "updated": "2017-10-20T15:23:38.646+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16212781",
                    "id": "16212781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Github user Licht-T commented on the issue:\n\n    https://github.com/apache/arrow/pull/1215\n  \n    @wesm Thanks!\r\n    - Removed unnecessary class and methods.\r\n    - Using Cython `bint` as C++ boolean type.\r\n        http://cython.readthedocs.io/en/latest/src/userguide/language_basics.html#types\r\n    - Renamed camel to snake.\r\n    - Converting C++ `std::string` to Python `str` by `frombytes`.\r\n    - Changed `EncodeMin`/`EncodeMax` to `min`/`max` decoded by `FormatStatValue`.\r\n    - Fixed `RowGroupStatistics.__repr__`\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-20T15:23:51.770+0000",
                    "updated": "2017-10-20T15:23:51.770+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16225524",
                    "id": "16225524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-340545326\n \n \n   hi @Licht-T, will you have time to finish this PR? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-30T18:44:35.150+0000",
                    "updated": "2017-10-30T18:44:35.150+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16226028",
                    "id": "16226028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-340622851\n \n \n   @wesm Yes! I'll do this in the couple of days.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-31T00:18:40.659+0000",
                    "updated": "2017-10-31T00:18:40.659+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16238652",
                    "id": "16238652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-341859653\n \n \n   @Licht-T how's it looking on this? Out of the PRs you have open, any that I or @cpcloud can help with? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-04T00:51:45.207+0000",
                    "updated": "2017-11-04T00:51:45.207+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16238894",
                    "id": "16238894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-341886702\n \n \n   @wesm Sorry for my late reply. Finally added the tests.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-04T10:31:13.022+0000",
                    "updated": "2017-11-04T10:31:13.022+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16238895",
                    "id": "16238895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-341886702\n \n \n   @wesm Sorry for my late reply. Finally added the tests!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-04T10:31:19.533+0000",
                    "updated": "2017-11-04T10:31:19.533+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16238931",
                    "id": "16238931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#discussion_r148928449\n \n \n\n ##########\n File path: python/pyarrow/tests/test_parquet.py\n ##########\n @@ -469,14 +469,62 @@ def test_parquet_metadata_api():\n         schema[-1]\n \n     # Row group\n-    rg_meta = meta.row_group(0)\n-    repr(rg_meta)\n+    for rg in range(meta.num_row_groups):\n+        rg_meta = meta.row_group(rg)\n+        repr(rg_meta)\n+\n+        for col in range(rg_meta.num_columns):\n+            col_meta = rg_meta.column(col)\n+            repr(col_meta)\n \n     assert rg_meta.num_rows == len(df)\n     assert rg_meta.num_columns == ncols + 1  # +1 for index\n \n \n @parquet\n+@pytest.mark.parametrize(\n+    'data, dtype, min_value, max_value, null_count, num_values',\n+    [\n+        ([1, 2, 2, None, 4], np.uint8, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint16, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint32, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint64, u'1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int16, u'-1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int32, u'-1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int64, u'-1', u'4', 1, 4),\n+        ([-1.1, 2.2, 2.3, None, 4.4], np.float32, u'-1.1', u'4.4', 1, 4),\n+        ([-1.1, 2.2, 2.3, None, 4.4], np.float64, u'-1.1', u'4.4', 1, 4),\n+        (\n+            [u'', u'b', unichar(1000), None, u'aaa'],\n+            str, u' ', unichar(1000).encode('utf-8') + ' ', 1, 4\n \n Review comment:\n   This line fails with Python 3, you probably need to change it to `, unichar(1000).encode('utf-8') + b' '`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-04T11:36:15.125+0000",
                    "updated": "2017-11-04T11:36:15.125+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16238949",
                    "id": "16238949",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Licht-T commented on issue #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215#issuecomment-341891945\n \n \n   @xhochy Thanks! Fixed!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-04T12:08:45.593+0000",
                    "updated": "2017-11-04T12:08:45.593+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16239912",
                    "id": "16239912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1215: ARROW-480: [Python] Implement RowGroupMetaData.ColumnChunk\nURL: https://github.com/apache/arrow/pull/1215\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/_parquet.pxd b/python/pyarrow/_parquet.pxd\nindex 5094232bd..04a5b1368 100644\n--- a/python/pyarrow/_parquet.pxd\n+++ b/python/pyarrow/_parquet.pxd\n@@ -105,6 +105,11 @@ cdef extern from \"parquet/api/schema.h\" namespace \"parquet\" nogil:\n         ParquetVersion_V1\" parquet::ParquetVersion::PARQUET_1_0\"\n         ParquetVersion_V2\" parquet::ParquetVersion::PARQUET_2_0\"\n \n+    enum ParquetSortOrder\" parquet::SortOrder::type\":\n+        ParquetSortOrder_SIGNED\" parquet::SortOrder::SIGNED\"\n+        ParquetSortOrder_UNSIGNED\" parquet::SortOrder::UNSIGNED\"\n+        ParquetSortOrder_UNKNOWN\" parquet::SortOrder::UNKNOWN\"\n+\n     cdef cppclass ColumnDescriptor:\n         c_bool Equals(const ColumnDescriptor& other)\n \n@@ -126,6 +131,8 @@ cdef extern from \"parquet/api/schema.h\" namespace \"parquet\" nogil:\n         c_bool Equals(const SchemaDescriptor& other)\n         int num_columns()\n \n+    cdef c_string FormatStatValue(ParquetType parquet_type, const char* val)\n+\n \n cdef extern from \"parquet/api/reader.h\" namespace \"parquet\" nogil:\n     cdef cppclass ColumnReader:\n@@ -155,10 +162,52 @@ cdef extern from \"parquet/api/reader.h\" namespace \"parquet\" nogil:\n     cdef cppclass RowGroupReader:\n         pass\n \n+    cdef cppclass CEncodedStatistics\" parquet::EncodedStatistics\":\n+        const c_string& max() const\n+        const c_string& min() const\n+        int64_t null_count\n+        int64_t distinct_count\n+        bint has_min\n+        bint has_max\n+        bint has_null_count\n+        bint has_distinct_count\n+\n+    cdef cppclass CRowGroupStatistics\" parquet::RowGroupStatistics\":\n+        int64_t null_count() const\n+        int64_t distinct_count() const\n+        int64_t num_values() const\n+        bint HasMinMax()\n+        void Reset()\n+        c_string EncodeMin()\n+        c_string EncodeMax()\n+        CEncodedStatistics Encode()\n+        void SetComparator()\n+        ParquetType physical_type() const\n+\n+    cdef cppclass CColumnChunkMetaData\" parquet::ColumnChunkMetaData\":\n+        int64_t file_offset() const\n+        const c_string& file_path() const\n+\n+        ParquetType type() const\n+        int64_t num_values() const\n+        shared_ptr[ColumnPath] path_in_schema() const\n+        bint is_stats_set() const\n+        shared_ptr[CRowGroupStatistics] statistics() const;\n+        ParquetCompression compression() const\n+        const vector[ParquetEncoding]& encodings() const\n+\n+        bint has_dictionary_page() const\n+        int64_t dictionary_page_offset() const\n+        int64_t data_page_offset() const\n+        int64_t index_page_offset() const\n+        int64_t total_compressed_size() const\n+        int64_t total_uncompressed_size() const\n+\n     cdef cppclass CRowGroupMetaData\" parquet::RowGroupMetaData\":\n         int num_columns()\n         int64_t num_rows()\n         int64_t total_byte_size()\n+        unique_ptr[CColumnChunkMetaData] ColumnChunk(int i) const\n \n     cdef cppclass CFileMetaData\" parquet::FileMetaData\":\n         uint32_t size()\ndiff --git a/python/pyarrow/_parquet.pyx b/python/pyarrow/_parquet.pyx\nindex b096fa1b4..eca6b201b 100644\n--- a/python/pyarrow/_parquet.pyx\n+++ b/python/pyarrow/_parquet.pyx\n@@ -35,6 +35,212 @@ from pyarrow.lib import ArrowException, NativeFile\n \n import six\n \n+try:\n+    from textwrap import indent\n+except ImportError:\n+    def indent(text, prefix):\n+        lines = [prefix + line for line in text.splitlines(True)]\n+        return ''.join(lines)\n+\n+\n+cdef class RowGroupStatistics:\n+    cdef:\n+        shared_ptr[CRowGroupStatistics] statistics\n+\n+    def __cinit__(self):\n+        pass\n+\n+    cdef init(self, const shared_ptr[CRowGroupStatistics]& statistics):\n+        self.statistics = statistics\n+\n+    def __repr__(self):\n+        return \"\"\"{0}\n+  has_min_max: {1}\n+  min: {2}\n+  max: {3}\n+  null_count: {4}\n+  distinct_count: {5}\n+  num_values: {6}\n+  physical_type: {7}\"\"\".format(object.__repr__(self),\n+                               self.has_min_max,\n+                               self.min,\n+                               self.max,\n+                               self.null_count,\n+                               self.distinct_count,\n+                               self.num_values,\n+                               self.physical_type)\n+\n+    property has_min_max:\n+\n+        def __get__(self):\n+            return self.statistics.get().HasMinMax()\n+\n+    property min:\n+\n+        def __get__(self):\n+            raw_physical_type = self.statistics.get().physical_type()\n+            encode_min = self.statistics.get().EncodeMin()\n+\n+            min_value = FormatStatValue(raw_physical_type, encode_min.c_str())\n+            return frombytes(min_value)\n+\n+    property max:\n+\n+        def __get__(self):\n+            raw_physical_type = self.statistics.get().physical_type()\n+            encode_max = self.statistics.get().EncodeMax()\n+\n+            max_value = FormatStatValue(raw_physical_type, encode_max.c_str())\n+            return frombytes(max_value)\n+\n+    property null_count:\n+\n+        def __get__(self):\n+            return self.statistics.get().null_count()\n+\n+    property distinct_count:\n+\n+        def __get__(self):\n+            return self.statistics.get().distinct_count()\n+\n+    property num_values:\n+\n+        def __get__(self):\n+            return self.statistics.get().num_values()\n+\n+    property physical_type:\n+\n+        def __get__(self):\n+            physical_type = self.statistics.get().physical_type()\n+            return physical_type_name_from_enum(physical_type)\n+\n+\n+cdef class ColumnChunkMetaData:\n+    cdef:\n+        unique_ptr[CColumnChunkMetaData] up_metadata\n+        CColumnChunkMetaData* metadata\n+\n+    def __cinit__(self):\n+        pass\n+\n+    cdef init(self, const CRowGroupMetaData& row_group_metadata, int i):\n+        self.up_metadata = row_group_metadata.ColumnChunk(i)\n+        self.metadata = self.up_metadata.get()\n+\n+    def __repr__(self):\n+        statistics = indent(repr(self.statistics), 4 * ' ')\n+        return \"\"\"{0}\n+  file_offset: {1}\n+  file_path: {2}\n+  type: {3}\n+  num_values: {4}\n+  path_in_schema: {5}\n+  is_stats_set: {6}\n+  statistics:\n+{7}\n+  compression: {8}\n+  encodings: {9}\n+  has_dictionary_page: {10}\n+  dictionary_page_offset: {11}\n+  data_page_offset: {12}\n+  index_page_offset: {13}\n+  total_compressed_size: {14}\n+  total_uncompressed_size: {15}\"\"\".format(object.__repr__(self),\n+                                          self.file_offset,\n+                                          self.file_path,\n+                                          self.type,\n+                                          self.num_values,\n+                                          self.path_in_schema,\n+                                          self.is_stats_set,\n+                                          statistics,\n+                                          self.compression,\n+                                          self.encodings,\n+                                          self.has_dictionary_page,\n+                                          self.dictionary_page_offset,\n+                                          self.data_page_offset,\n+                                          self.index_page_offset,\n+                                          self.total_compressed_size,\n+                                          self.total_uncompressed_size)\n+\n+    property file_offset:\n+\n+        def __get__(self):\n+            return self.metadata.file_offset()\n+\n+    property file_path:\n+\n+        def __get__(self):\n+            return frombytes(self.metadata.file_path())\n+\n+    property type:\n+\n+        def __get__(self):\n+            return physical_type_name_from_enum(self.metadata.type())\n+\n+    property num_values:\n+\n+        def __get__(self):\n+            return self.metadata.num_values()\n+\n+    property path_in_schema:\n+\n+        def __get__(self):\n+            path = self.metadata.path_in_schema().get().ToDotString()\n+            return frombytes(path)\n+\n+    property is_stats_set:\n+\n+        def __get__(self):\n+            return self.metadata.is_stats_set()\n+\n+    property statistics:\n+\n+        def __get__(self):\n+            statistics = RowGroupStatistics()\n+            statistics.init(self.metadata.statistics())\n+            return statistics\n+\n+    property compression:\n+\n+        def __get__(self):\n+            return self.metadata.compression()\n+\n+    property encodings:\n+\n+        def __get__(self):\n+            return map(encoding_name_from_enum,\n+                       self.metadata.encodings())\n+\n+    property has_dictionary_page:\n+\n+        def __get__(self):\n+            return self.metadata.has_dictionary_page()\n+\n+    property dictionary_page_offset:\n+\n+        def __get__(self):\n+            return self.metadata.dictionary_page_offset()\n+\n+    property data_page_offset:\n+\n+        def __get__(self):\n+            return self.metadata.data_page_offset()\n+\n+    property index_page_offset:\n+\n+        def __get__(self):\n+            return self.metadata.index_page_offset()\n+\n+    property total_compressed_size:\n+\n+        def __get__(self):\n+            return self.metadata.total_compressed_size()\n+\n+    property total_uncompressed_size:\n+\n+        def __get__(self):\n+            return self.metadata.total_uncompressed_size()\n+\n \n cdef class RowGroupMetaData:\n     cdef:\n@@ -52,6 +258,11 @@ cdef class RowGroupMetaData:\n         self.metadata = self.up_metadata.get()\n         self.parent = parent\n \n+    def column(self, int i):\n+        chunk = ColumnChunkMetaData()\n+        chunk.init(deref(self.metadata), i)\n+        return chunk\n+\n     def __repr__(self):\n         return \"\"\"{0}\n   num_columns: {1}\n@@ -371,6 +582,19 @@ cdef logical_type_name_from_enum(ParquetLogicalType type_):\n     }.get(type_, 'UNKNOWN')\n \n \n+cdef encoding_name_from_enum (ParquetEncoding encoding_):\n+    return {\n+        ParquetEncoding_PLAIN: \"PLAIN\",\n+        ParquetEncoding_PLAIN_DICTIONARY: \"PLAIN_DICTIONARY\",\n+        ParquetEncoding_RLE: \"RLE\",\n+        ParquetEncoding_BIT_PACKED: \"BIT_PACKED\",\n+        ParquetEncoding_DELTA_BINARY_PACKED: \"DELTA_BINARY_PACKED\",\n+        ParquetEncoding_DELTA_LENGTH_BYTE_ARRAY: \"DELTA_LENGTH_BYTE_ARRAY\",\n+        ParquetEncoding_DELTA_BYTE_ARRAY: \"DELTA_BYTE_ARRAY\",\n+        ParquetEncoding_RLE_DICTIONARY: \"RLE_DICTIONARY\",\n+    }.get(encoding_, 'UNKNOWN')\n+\n+\n cdef class ParquetReader:\n     cdef:\n         object source\ndiff --git a/python/pyarrow/compat.py b/python/pyarrow/compat.py\nindex f9c148b14..866cbdd96 100644\n--- a/python/pyarrow/compat.py\n+++ b/python/pyarrow/compat.py\n@@ -103,6 +103,9 @@ def tobytes(o):\n \n     def frombytes(o):\n         return o\n+\n+    def unichar(s):\n+        return unichr(s)\n else:\n     unicode_type = str\n     def lzip(*x):\n@@ -131,6 +134,9 @@ def tobytes(o):\n     def frombytes(o):\n         return o.decode('utf8')\n \n+    def unichar(s):\n+        return chr(s)\n+\n try:\n     import cloudpickle as pickle\n except ImportError:\ndiff --git a/python/pyarrow/tests/test_parquet.py b/python/pyarrow/tests/test_parquet.py\nindex 95dd6a471..e2e6863c4 100644\n--- a/python/pyarrow/tests/test_parquet.py\n+++ b/python/pyarrow/tests/test_parquet.py\n@@ -22,7 +22,7 @@\n import json\n import pytest\n \n-from pyarrow.compat import guid, u, BytesIO\n+from pyarrow.compat import guid, u, BytesIO, unichar, frombytes\n from pyarrow.filesystem import LocalFileSystem\n import pyarrow as pa\n from .pandas_examples import dataframe_with_arrays, dataframe_with_lists\n@@ -469,14 +469,62 @@ def test_parquet_metadata_api():\n         schema[-1]\n \n     # Row group\n-    rg_meta = meta.row_group(0)\n-    repr(rg_meta)\n+    for rg in range(meta.num_row_groups):\n+        rg_meta = meta.row_group(rg)\n+        repr(rg_meta)\n+\n+        for col in range(rg_meta.num_columns):\n+            col_meta = rg_meta.column(col)\n+            repr(col_meta)\n \n     assert rg_meta.num_rows == len(df)\n     assert rg_meta.num_columns == ncols + 1  # +1 for index\n \n \n @parquet\n+@pytest.mark.parametrize(\n+    'data, dtype, min_value, max_value, null_count, num_values',\n+    [\n+        ([1, 2, 2, None, 4], np.uint8, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint16, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint32, u'1', u'4', 1, 4),\n+        ([1, 2, 2, None, 4], np.uint64, u'1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int16, u'-1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int32, u'-1', u'4', 1, 4),\n+        ([-1, 2, 2, None, 4], np.int64, u'-1', u'4', 1, 4),\n+        ([-1.1, 2.2, 2.3, None, 4.4], np.float32, u'-1.1', u'4.4', 1, 4),\n+        ([-1.1, 2.2, 2.3, None, 4.4], np.float64, u'-1.1', u'4.4', 1, 4),\n+        (\n+            [u'', u'b', unichar(1000), None, u'aaa'],\n+            str, u' ', frombytes((unichar(1000) + u' ').encode('utf-8')), 1, 4\n+        ),\n+        ([True, False, False, True, True], np.bool, u'0', u'1', 0, 5),\n+    ]\n+)\n+def test_parquet_column_statistics_api(\n+        data,\n+        dtype,\n+        min_value,\n+        max_value,\n+        null_count,\n+        num_values):\n+    df = pd.DataFrame({'data': data}, dtype=dtype)\n+\n+    fileh = make_sample_file(df)\n+\n+    meta = fileh.metadata\n+\n+    rg_meta = meta.row_group(0)\n+    col_meta = rg_meta.column(0)\n+\n+    stat = col_meta.statistics\n+    assert stat.min == min_value\n+    assert stat.max == max_value\n+    assert stat.null_count == null_count\n+    assert stat.num_values == num_values\n+\n+\n+@parquet\n def test_compare_schemas():\n     df = alltypes_sample(size=10000)\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-06T05:02:51.560+0000",
                    "updated": "2017-11-06T05:02:51.560+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13034358/comment/16239913",
                    "id": "16239913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1215\n[https://github.com/apache/arrow/pull/1215]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-06T05:03:22.780+0000",
                    "updated": "2017-11-06T05:03:22.780+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|i38mvr:",
        "customfield_12314139": null
    }
}