{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13133268",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133268",
    "key": "ARROW-2024",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
            "name": "robertnishihara",
            "key": "robertnishihara",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Robert Nishihara",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2024/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@354449bc[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c5c3399[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52482aeb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5f050bc0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@290b9019[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@583ef3de[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bb28540[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3c9edcfd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4960082f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@66efa2de[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@39a8b3c6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@731be93a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Feb 01 17:17:56 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-02-01T17:17:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2024/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-01-24T04:14:41.000+0000",
        "updated": "2018-02-21T20:30:35.000+0000",
        "timeoriginalestimate": null,
        "description": "We should get rid of the global variables {{{{_default_serialization_context}}}}\u00a0and {{{{pandas_serialization_context}}}}\u00a0and replace them with functions {{{{default_serialization_context()}}}}\u00a0and {{{{pandas_serialization_context()}}}}.\r\n\r\nThis will also make it faster to do {{{{import pyarrow}}}}.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Remove global SerializationContext variables",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133268/comment/16346145",
                    "id": "16346145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "robertnishihara opened a new pull request #1538: ARROW-2024: [Python] Remove torch serialization from default serialization context.\nURL: https://github.com/apache/arrow/pull/1538\n \n \n   See discussion in #1223.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T02:21:28.431+0000",
                    "updated": "2018-01-31T02:21:28.431+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133268/comment/16346244",
                    "id": "16346244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "robertnishihara commented on issue #1538: ARROW-2024: [Python] Remove torch serialization from default serialization context.\nURL: https://github.com/apache/arrow/pull/1538#issuecomment-361820372\n \n \n   cc @ppwwyyxx.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-31T04:29:04.726+0000",
                    "updated": "2018-01-31T04:29:04.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133268/comment/16348939",
                    "id": "16348939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1538\n[https://github.com/apache/arrow/pull/1538]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-02-01T17:17:53.210+0000",
                    "updated": "2018-02-01T17:17:53.210+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13133268/comment/16348940",
                    "id": "16348940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1538: ARROW-2024: [Python] Remove torch serialization from default serialization context.\nURL: https://github.com/apache/arrow/pull/1538\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex a245fe679..8b3cba924 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -124,9 +124,10 @@\n \n localfs = LocalFileSystem.get_instance()\n \n-from pyarrow.serialization import (_default_serialization_context,\n+from pyarrow.serialization import (default_serialization_context,\n                                    pandas_serialization_context,\n-                                   register_default_serialization_handlers)\n+                                   register_default_serialization_handlers,\n+                                   register_torch_serialization_handlers)\n \n import pyarrow.types as types\n \ndiff --git a/python/pyarrow/serialization.py b/python/pyarrow/serialization.py\nindex 61f2e83f3..c8b72b748 100644\n--- a/python/pyarrow/serialization.py\n+++ b/python/pyarrow/serialization.py\n@@ -22,7 +22,8 @@\n import numpy as np\n \n from pyarrow.compat import builtin_pickle\n-from pyarrow.lib import _default_serialization_context, frombuffer\n+from pyarrow.lib import (SerializationContext, _default_serialization_context,\n+                         frombuffer)\n \n try:\n     import cloudpickle\n@@ -102,6 +103,31 @@ def _deserialize_pandas_series(data):\n         custom_deserializer=_deserialize_pandas_dataframe)\n \n \n+def register_torch_serialization_handlers(serialization_context):\n+    # ----------------------------------------------------------------------\n+    # Set up serialization for pytorch tensors\n+\n+    try:\n+        import torch\n+\n+        def _serialize_torch_tensor(obj):\n+            return obj.numpy()\n+\n+        def _deserialize_torch_tensor(data):\n+            return torch.from_numpy(data)\n+\n+        for t in [torch.FloatTensor, torch.DoubleTensor, torch.HalfTensor,\n+                  torch.ByteTensor, torch.CharTensor, torch.ShortTensor,\n+                  torch.IntTensor, torch.LongTensor]:\n+            serialization_context.register_type(\n+                t, \"torch.\" + t.__name__,\n+                custom_serializer=_serialize_torch_tensor,\n+                custom_deserializer=_deserialize_torch_tensor)\n+    except ImportError:\n+        # no torch\n+        pass\n+\n+\n def register_default_serialization_handlers(serialization_context):\n \n     # ----------------------------------------------------------------------\n@@ -154,37 +180,21 @@ def _deserialize_default_dict(data):\n         custom_serializer=_serialize_numpy_array_list,\n         custom_deserializer=_deserialize_numpy_array_list)\n \n-    # ----------------------------------------------------------------------\n-    # Set up serialization for pytorch tensors\n-\n-    try:\n-        import torch\n-\n-        def _serialize_torch_tensor(obj):\n-            return obj.numpy()\n+    _register_custom_pandas_handlers(serialization_context)\n \n-        def _deserialize_torch_tensor(data):\n-            return torch.from_numpy(data)\n \n-        for t in [torch.FloatTensor, torch.DoubleTensor, torch.HalfTensor,\n-                  torch.ByteTensor, torch.CharTensor, torch.ShortTensor,\n-                  torch.IntTensor, torch.LongTensor]:\n-            serialization_context.register_type(\n-                t, \"torch.\" + t.__name__,\n-                custom_serializer=_serialize_torch_tensor,\n-                custom_deserializer=_deserialize_torch_tensor)\n-    except ImportError:\n-        # no torch\n-        pass\n-\n-    _register_custom_pandas_handlers(serialization_context)\n+def default_serialization_context():\n+    context = SerializationContext()\n+    register_default_serialization_handlers(context)\n+    return context\n \n \n register_default_serialization_handlers(_default_serialization_context)\n \n-pandas_serialization_context = _default_serialization_context.clone()\n \n-pandas_serialization_context.register_type(\n-    np.ndarray, 'np.array',\n-    custom_serializer=_serialize_numpy_array_pickle,\n-    custom_deserializer=_deserialize_numpy_array_pickle)\n+def pandas_serialization_context():\n+    context = default_serialization_context()\n+    context.register_type(np.ndarray, 'np.array',\n+                          custom_serializer=_serialize_numpy_array_pickle,\n+                          custom_deserializer=_deserialize_numpy_array_pickle)\n+    return context\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex fa265e55c..ca2f1e361 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -1404,7 +1404,7 @@ def _fully_loaded_dataframe_example():\n \n \n def _check_serialize_components_roundtrip(df):\n-    ctx = pa.pandas_serialization_context\n+    ctx = pa.pandas_serialization_context()\n \n     components = ctx.serialize(df).to_components()\n     deserialized = ctx.deserialize_components(components)\ndiff --git a/python/pyarrow/tests/test_serialization.py b/python/pyarrow/tests/test_serialization.py\nindex 284c7fb4c..7a420106f 100644\n--- a/python/pyarrow/tests/test_serialization.py\n+++ b/python/pyarrow/tests/test_serialization.py\n@@ -190,8 +190,7 @@ class CustomError(Exception):\n \n \n def make_serialization_context():\n-\n-    context = pa._default_serialization_context\n+    context = pa.default_serialization_context()\n \n     context.register_type(Foo, \"Foo\")\n     context.register_type(Bar, \"Bar\")\n@@ -207,26 +206,27 @@ def make_serialization_context():\n     return context\n \n \n-serialization_context = make_serialization_context()\n+global_serialization_context = make_serialization_context()\n \n \n-def serialization_roundtrip(value, scratch_buffer, ctx=serialization_context):\n+def serialization_roundtrip(value, scratch_buffer,\n+                            context=global_serialization_context):\n     writer = pa.FixedSizeBufferWriter(scratch_buffer)\n-    pa.serialize_to(value, writer, ctx)\n+    pa.serialize_to(value, writer, context=context)\n \n     reader = pa.BufferReader(scratch_buffer)\n-    result = pa.deserialize_from(reader, None, ctx)\n+    result = pa.deserialize_from(reader, None, context=context)\n     assert_equal(value, result)\n \n-    _check_component_roundtrip(value)\n+    _check_component_roundtrip(value, context=context)\n \n \n-def _check_component_roundtrip(value):\n+def _check_component_roundtrip(value, context=global_serialization_context):\n     # Test to/from components\n-    serialized = pa.serialize(value)\n+    serialized = pa.serialize(value, context=context)\n     components = serialized.to_components()\n     from_comp = pa.SerializedPyObject.from_components(components)\n-    recons = from_comp.deserialize()\n+    recons = from_comp.deserialize(context=context)\n     assert_equal(value, recons)\n \n \n@@ -252,7 +252,7 @@ def test_primitive_serialization(large_buffer):\n     for obj in PRIMITIVE_OBJECTS:\n         serialization_roundtrip(obj, large_buffer)\n         serialization_roundtrip(obj, large_buffer,\n-                                pa.pandas_serialization_context)\n+                                pa.pandas_serialization_context())\n \n \n def test_serialize_to_buffer():\n@@ -318,22 +318,26 @@ def test_datetime_serialization(large_buffer):\n def test_torch_serialization(large_buffer):\n     pytest.importorskip(\"torch\")\n     import torch\n+\n+    serialization_context = pa.default_serialization_context()\n+    pa.register_torch_serialization_handlers(serialization_context)\n     # These are the only types that are supported for the\n     # PyTorch to NumPy conversion\n     for t in [\"float32\", \"float64\",\n               \"uint8\", \"int16\", \"int32\", \"int64\"]:\n         obj = torch.from_numpy(np.random.randn(1000).astype(t))\n-        serialization_roundtrip(obj, large_buffer)\n+        serialization_roundtrip(obj, large_buffer,\n+                                context=serialization_context)\n \n \n def test_numpy_immutable(large_buffer):\n     obj = np.zeros([10])\n \n     writer = pa.FixedSizeBufferWriter(large_buffer)\n-    pa.serialize_to(obj, writer, serialization_context)\n+    pa.serialize_to(obj, writer, global_serialization_context)\n \n     reader = pa.BufferReader(large_buffer)\n-    result = pa.deserialize_from(reader, None, serialization_context)\n+    result = pa.deserialize_from(reader, None, global_serialization_context)\n     with pytest.raises(ValueError):\n         result[0] = 1.0\n \n@@ -351,12 +355,12 @@ def serialize_dummy_class(obj):\n     def deserialize_dummy_class(serialized_obj):\n         return serialized_obj\n \n-    pa._default_serialization_context.register_type(\n-        DummyClass, \"DummyClass\",\n-        custom_serializer=serialize_dummy_class,\n-        custom_deserializer=deserialize_dummy_class)\n+    context = pa.default_serialization_context()\n+    context.register_type(DummyClass, \"DummyClass\",\n+                          custom_serializer=serialize_dummy_class,\n+                          custom_deserializer=deserialize_dummy_class)\n \n-    pa.serialize(DummyClass())\n+    pa.serialize(DummyClass(), context=context)\n \n \n def test_buffer_serialization():\n@@ -370,13 +374,14 @@ def serialize_buffer_class(obj):\n     def deserialize_buffer_class(serialized_obj):\n         return serialized_obj\n \n-    pa._default_serialization_context.register_type(\n+    context = pa.default_serialization_context()\n+    context.register_type(\n         BufferClass, \"BufferClass\",\n         custom_serializer=serialize_buffer_class,\n         custom_deserializer=deserialize_buffer_class)\n \n-    b = pa.serialize(BufferClass()).to_buffer()\n-    assert pa.deserialize(b).to_pybytes() == b\"hello\"\n+    b = pa.serialize(BufferClass(), context=context).to_buffer()\n+    assert pa.deserialize(b, context=context).to_pybytes() == b\"hello\"\n \n \n @pytest.mark.skip(reason=\"extensive memory requirements\")\n@@ -485,15 +490,16 @@ def test_serialize_subclasses():\n     # with register_type will result in faster and more memory\n     # efficient serialization.\n \n-    serialization_context.register_type(\n+    context = pa.default_serialization_context()\n+    context.register_type(\n         Serializable, \"Serializable\",\n         custom_serializer=serialize_serializable,\n         custom_deserializer=deserialize_serializable)\n \n     a = SerializableClass()\n-    serialized = pa.serialize(a)\n+    serialized = pa.serialize(a, context=context)\n \n-    deserialized = serialized.deserialize()\n+    deserialized = serialized.deserialize(context=context)\n     assert type(deserialized).__name__ == SerializableClass.__name__\n     assert deserialized.value == 3\n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-01T17:17:56.134+0000",
                    "updated": "2018-02-01T17:17:56.134+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3paa7:",
        "customfield_12314139": null
    }
}