{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13112076",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112076",
    "key": "ARROW-1732",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1732/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3b755742[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74ef7758[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74d6e554[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7b8c0921[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a3f4697[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1c1ea7c1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f211d53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@44ffc297[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4342f61[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6dfda089[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ae1f3e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@306551[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 26 12:16:28 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-10-26T12:16:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1732/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-10-25T19:09:01.000+0000",
        "updated": "2017-10-26T12:16:28.000+0000",
        "timeoriginalestimate": null,
        "description": "I believe this should have well-defined behavior and not raise an error:\r\n\r\n{code}\r\nIn [5]: pa.RecordBatch.from_pandas(pd.DataFrame({}), preserve_index=False)\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n<ipython-input-5-4dda72b47dbd> in <module>()\r\n----> 1 pa.RecordBatch.from_pandas(pd.DataFrame({}), preserve_index=False)\r\n\r\n~/code/arrow/python/pyarrow/table.pxi in pyarrow.lib.RecordBatch.from_pandas (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/lib.cxx:39957)()\r\n    586             df, schema, preserve_index, nthreads=nthreads\r\n    587         )\r\n--> 588         return cls.from_arrays(arrays, names, metadata)\r\n    589 \r\n    590     @staticmethod\r\n\r\n~/code/arrow/python/pyarrow/table.pxi in pyarrow.lib.RecordBatch.from_arrays (/home/wesm/code/arrow/python/build/temp.linux-x86_64-3.5/lib.cxx:40130)()\r\n    615 \r\n    616         if not number_of_arrays:\r\n--> 617             raise ValueError('Record batch cannot contain no arrays (for now)')\r\n    618 \r\n    619         num_rows = len(arrays[0])\r\n\r\nValueError: Record batch cannot contain no arrays (for now)\r\n{code}",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] RecordBatch.from_pandas fails on DataFrame with no columns when preserve_index=False",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112076/comment/16219886",
                    "id": "16219886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1252: ARROW-1732: [Python] Permit creating record batches with no columns, test pandas roundtrips\nURL: https://github.com/apache/arrow/pull/1252\n \n \n   I ran into this rough edge today, invariably serialization code paths will need to send across a DataFrame with no columns, this will need to work even if `preserve_index=False`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T03:00:25.388+0000",
                    "updated": "2017-10-26T03:00:25.388+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112076/comment/16220363",
                    "id": "16220363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1252: ARROW-1732: [Python] Permit creating record batches with no columns, test pandas roundtrips\nURL: https://github.com/apache/arrow/pull/1252\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex 694fe9190..eb1911592 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -308,8 +308,8 @@ cdef shared_ptr[const CKeyValueMetadata] unbox_metadata(dict metadata):\n             make_shared[CKeyValueMetadata](unordered_metadata))\n \n \n-cdef int _schema_from_arrays(\n-        arrays, names, dict metadata, shared_ptr[CSchema]* schema) except -1:\n+cdef _schema_from_arrays(arrays, names, dict metadata,\n+                         shared_ptr[CSchema]* schema):\n     cdef:\n         Column col\n         c_string c_name\n@@ -317,10 +317,11 @@ cdef int _schema_from_arrays(\n         shared_ptr[CDataType] type_\n         Py_ssize_t K = len(arrays)\n \n-    fields.resize(K)\n+    if K == 0:\n+        schema.reset(new CSchema(fields, unbox_metadata(metadata)))\n+        return\n \n-    if not K:\n-        raise ValueError('Must pass at least one array')\n+    fields.resize(K)\n \n     if isinstance(arrays[0], Column):\n         for i in range(K):\n@@ -346,7 +347,6 @@ cdef int _schema_from_arrays(\n             fields[i].reset(new CField(c_name, type_, True))\n \n     schema.reset(new CSchema(fields, unbox_metadata(metadata)))\n-    return 0\n \n \n cdef class RecordBatch:\n@@ -613,10 +613,10 @@ cdef class RecordBatch:\n             int64_t i\n             int64_t number_of_arrays = len(arrays)\n \n-        if not number_of_arrays:\n-            raise ValueError('Record batch cannot contain no arrays (for now)')\n-\n-        num_rows = len(arrays[0])\n+        if len(arrays) > 0:\n+            num_rows = len(arrays[0])\n+        else:\n+            num_rows = 0\n         _schema_from_arrays(arrays, names, metadata, &schema)\n \n         c_arrays.reserve(len(arrays))\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 527466e6e..6d146f977 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -71,11 +71,11 @@ def tearDown(self):\n     def _check_pandas_roundtrip(self, df, expected=None, nthreads=1,\n                                 expected_schema=None,\n                                 check_dtype=True, schema=None,\n-                                check_index=False,\n+                                preserve_index=False,\n                                 as_batch=False):\n         klass = pa.RecordBatch if as_batch else pa.Table\n         table = klass.from_pandas(df, schema=schema,\n-                                  preserve_index=check_index,\n+                                  preserve_index=preserve_index,\n                                   nthreads=nthreads)\n \n         result = table.to_pandas(nthreads=nthreads)\n@@ -83,7 +83,9 @@ def _check_pandas_roundtrip(self, df, expected=None, nthreads=1,\n             assert table.schema.equals(expected_schema)\n         if expected is None:\n             expected = df\n-        tm.assert_frame_equal(result, expected, check_dtype=check_dtype)\n+        tm.assert_frame_equal(result, expected, check_dtype=check_dtype,\n+                              check_index_type=('equiv' if preserve_index\n+                                                else False))\n \n     def _check_series_roundtrip(self, s, type_=None):\n         arr = pa.array(s, from_pandas=True, type=type_)\n@@ -131,14 +133,14 @@ def test_non_string_columns(self):\n     def test_column_index_names_are_preserved(self):\n         df = pd.DataFrame({'data': [1, 2, 3]})\n         df.columns.names = ['a']\n-        self._check_pandas_roundtrip(df, check_index=True)\n+        self._check_pandas_roundtrip(df, preserve_index=True)\n \n     def test_multiindex_columns(self):\n         columns = pd.MultiIndex.from_arrays([\n             ['one', 'two'], ['X', 'Y']\n         ])\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')], columns=columns)\n-        self._check_pandas_roundtrip(df, check_index=True)\n+        self._check_pandas_roundtrip(df, preserve_index=True)\n \n     def test_multiindex_columns_with_dtypes(self):\n         columns = pd.MultiIndex.from_arrays(\n@@ -149,11 +151,11 @@ def test_multiindex_columns_with_dtypes(self):\n             names=['level_1', 'level_2'],\n         )\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')], columns=columns)\n-        self._check_pandas_roundtrip(df, check_index=True)\n+        self._check_pandas_roundtrip(df, preserve_index=True)\n \n     def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n-        self._check_pandas_roundtrip(df, check_index=True)\n+        self._check_pandas_roundtrip(df, preserve_index=True)\n \n     def test_categorical_column_index(self):\n         # I *really* hope no one uses category dtypes for single level column\n@@ -1095,6 +1097,15 @@ def test_table_str_to_categorical(self):\n         expected = pd.DataFrame({'strings': pd.Categorical(values)})\n         tm.assert_frame_equal(result, expected, check_dtype=True)\n \n+    def test_table_batch_empty_dataframe(self):\n+        df = pd.DataFrame({})\n+        self._check_pandas_roundtrip(df)\n+        self._check_pandas_roundtrip(df, as_batch=True)\n+\n+        df2 = pd.DataFrame({}, index=[0, 1, 2])\n+        self._check_pandas_roundtrip(df2, preserve_index=True)\n+        self._check_pandas_roundtrip(df2, as_batch=True, preserve_index=True)\n+\n     def test_array_from_pandas_date_with_mask(self):\n         m = np.array([True, False, True])\n         data = pd.Series([\ndiff --git a/python/pyarrow/tests/test_table.py b/python/pyarrow/tests/test_table.py\nindex 50190f597..428222466 100644\n--- a/python/pyarrow/tests/test_table.py\n+++ b/python/pyarrow/tests/test_table.py\n@@ -82,6 +82,14 @@ def test_recordbatch_basics():\n         batch[2]\n \n \n+def test_recordbatch_no_fields():\n+    batch = pa.RecordBatch.from_arrays([], [])\n+\n+    assert len(batch) == 0\n+    assert batch.num_rows == 0\n+    assert batch.num_columns == 0\n+\n+\n def test_recordbatch_from_arrays_invalid_names():\n     data = [\n         pa.array(range(5)),\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-10-26T12:14:01.174+0000",
                    "updated": "2017-10-26T12:14:01.174+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13112076/comment/16220366",
                    "id": "16220366",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Resolved by PR #1252",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2017-10-26T12:16:28.875+0000",
                    "updated": "2017-10-26T12:16:28.875+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3lpdj:",
        "customfield_12314139": null
    }
}