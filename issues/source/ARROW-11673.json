{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13359111",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111",
    "key": "ARROW-11673",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12617599",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12617599",
                "type": {
                    "id": "10020",
                    "name": "Cloners",
                    "inward": "is cloned by",
                    "outward": "is a clone of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10020"
                },
                "inwardIssue": {
                    "id": "13384238",
                    "key": "ARROW-13102",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13384238",
                    "fields": {
                        "summary": "[Python] Casting between dictionary types",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niranda",
            "name": "niranda",
            "key": "niranda",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39936",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39936",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39936",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39936"
            },
            "displayName": "Niranda Perera",
            "active": true,
            "timeZone": "America/Indiana/Indianapolis"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
            "name": "jorisvandenbossche",
            "key": "jorisvandenbossche",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Joris Van den Bossche",
            "active": true,
            "timeZone": "Europe/Brussels"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11673/votes",
            "votes": 2,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/597047",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce opened a new pull request #10330:\nURL: https://github.com/apache/arrow/pull/10330\n\n\n   This PR provides functionality to cast Dictionary indices between integral types.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T01:37:48.299+0000",
                    "updated": "2021-05-15T01:37:48.299+0000",
                    "started": "2021-05-15T01:37:48.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597047",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/597048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10330:\nURL: https://github.com/apache/arrow/pull/10330#issuecomment-841580077\n\n\n   https://issues.apache.org/jira/browse/ARROW-11673\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-15T01:38:12.463+0000",
                    "updated": "2021-05-15T01:38:12.463+0000",
                    "started": "2021-05-15T01:38:12.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "597048",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/622759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera opened a new pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721\n\n\n   This PR adds casting from one dictionary type to anther dictionary type:\r\n   ex:\r\n   ```\r\n   dictionary(int8(), int16()) --> dictionary(int32(), int64())\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-14T22:01:49.609+0000",
                    "updated": "2021-07-14T22:01:49.609+0000",
                    "started": "2021-07-14T22:01:49.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622759",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/622760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880238653\n\n\n   https://issues.apache.org/jira/browse/ARROW-11673\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-14T22:02:02.885+0000",
                    "updated": "2021-07-14T22:02:02.885+0000",
                    "started": "2021-07-14T22:02:02.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622760",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/622996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670384702\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1911,5 +1911,35 @@ TEST(Cast, ExtensionTypeToIntDowncast) {\n   }\n }\n \n+TEST(Cast, DictTypeToAnotherDict) {\n+  auto check_cast = [&](const std::shared_ptr<DataType>& in_type,\n+                        const std::shared_ptr<DataType>& out_type,\n+                        const std::string& json_str,\n+                        const CastOptions& options = CastOptions()) {\n+    auto arr = ArrayFromJSON(in_type, json_str);\n+    auto exp = in_type->Equals(out_type) ? arr : ArrayFromJSON(out_type, json_str);\n+    // this checks for scalars as well\n+    CheckCast(arr, exp, options);\n+  };\n+\n+  //    check same type passed on to casting\n+  check_cast(dictionary(int8(), int16()), dictionary(int8(), int16()),\n+             \"[1, 2, 3, 1, null, 3]\");\n+  check_cast(dictionary(int8(), int16()), dictionary(int32(), int64()),\n+             \"[1, 2, 3, 1, null, 3]\");\n+  check_cast(dictionary(int32(), utf8()), dictionary(int8(), utf8()),\n+             R\"([\"a\", \"b\", \"a\", null])\");\n+\n+  auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n+  // check unsafe\n+  ASSERT_OK_AND_ASSIGN(auto casted,\n+                       Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n+  ValidateOutput(casted);\n\nReview comment:\n       Maybe it's worth individually checking unsafe casts of the index and dictionary type?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_dictionary.cc\n##########\n@@ -0,0 +1,123 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Implementation of casting to dictionary type\n+\n+#include <arrow/util/bitmap_ops.h>\n+\n+#include \"arrow/array/builder_primitive.h\"\n+#include \"arrow/compute/cast_internal.h\"\n+#include \"arrow/compute/kernels/scalar_cast_internal.h\"\n+#include \"arrow/compute/kernels/util_internal.h\"\n+#include \"arrow/util/int_util.h\"\n+\n+namespace arrow {\n+using internal::CopyBitmap;\n+\n+namespace compute {\n+namespace internal {\n+\n+Status CastDictionary(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const CastOptions& options = CastState::Get(ctx);\n+  auto out_type = std::static_pointer_cast<DictionaryType>(out->type());\n+\n+  // if out type is same as in type, return input\n+  if (out_type->Equals(batch[0].type())) {\n+    *out = batch[0];\n+    return Status::OK();\n+  }\n+\n+  if (batch[0].is_scalar()) {  // if input is scalar\n+    auto in_scalar = std::static_pointer_cast<DictionaryScalar>(batch[0].scalar());\n\nReview comment:\n       nit: use internal::checked_cast?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_dictionary.cc\n##########\n@@ -0,0 +1,123 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Implementation of casting to dictionary type\n+\n+#include <arrow/util/bitmap_ops.h>\n+\n+#include \"arrow/array/builder_primitive.h\"\n+#include \"arrow/compute/cast_internal.h\"\n+#include \"arrow/compute/kernels/scalar_cast_internal.h\"\n+#include \"arrow/compute/kernels/util_internal.h\"\n+#include \"arrow/util/int_util.h\"\n+\n+namespace arrow {\n+using internal::CopyBitmap;\n+\n+namespace compute {\n+namespace internal {\n+\n+Status CastDictionary(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const CastOptions& options = CastState::Get(ctx);\n+  auto out_type = std::static_pointer_cast<DictionaryType>(out->type());\n+\n+  // if out type is same as in type, return input\n+  if (out_type->Equals(batch[0].type())) {\n+    *out = batch[0];\n+    return Status::OK();\n+  }\n+\n+  if (batch[0].is_scalar()) {  // if input is scalar\n+    auto in_scalar = std::static_pointer_cast<DictionaryScalar>(batch[0].scalar());\n+\n+    // if invalid scalar, return null scalar\n+    if (!in_scalar->is_valid) {\n+      *out = MakeNullScalar(out_type);\n+      return Status::OK();\n+    }\n+\n+    Datum casted_index, casted_dict;\n+    if (in_scalar->value.index->type->Equals(out_type->index_type())) {\n+      casted_index = in_scalar->value.index;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(casted_index,\n+                            Cast(in_scalar->value.index, out_type->index_type(), options,\n+                                 ctx->exec_context()));\n+    }\n+\n+    if (in_scalar->value.dictionary->type()->Equals(out_type->value_type())) {\n+      casted_dict = in_scalar->value.dictionary;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(\n+          casted_dict, Cast(in_scalar->value.dictionary, out_type->value_type(), options,\n+                            ctx->exec_context()));\n+    }\n+\n+    *out = std::static_pointer_cast<Scalar>(\n+        DictionaryScalar::Make(casted_index.scalar(), casted_dict.make_array()));\n+\n+    return Status::OK();\n+  }\n+\n+  // if input is array\n+  const std::shared_ptr<ArrayData>& in_array = batch[0].array();\n+  auto in_type = std::static_pointer_cast<DictionaryType>(in_array->type);\n+\n+  ArrayData* out_array = out->mutable_array();\n+\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n+    out_array->buffers[0] = in_array->buffers[0];\n+    out_array->buffers[1] = in_array->buffers[1];\n+  } else {\n+    // for indices, create a dummy ArrayData with index_type()\n+    const std::shared_ptr<ArrayData>& indices_arr =\n+        ArrayData::Make(in_type->index_type(), in_array->length, in_array->buffers,\n+                        in_array->GetNullCount(), in_array->offset);\n+    ARROW_ASSIGN_OR_RAISE(auto casted_indices, Cast(indices_arr, out_type->index_type(),\n+                                                    options, ctx->exec_context()));\n+    out_array->buffers[0] = std::move(casted_indices.array()->buffers[0]);\n+    out_array->buffers[1] = std::move(casted_indices.array()->buffers[1]);\n+  }\n+\n+  // data (dict)\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n\nReview comment:\n       Shouldn't this be checking value_type?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_dictionary.cc\n##########\n@@ -0,0 +1,123 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Implementation of casting to dictionary type\n+\n+#include <arrow/util/bitmap_ops.h>\n+\n+#include \"arrow/array/builder_primitive.h\"\n+#include \"arrow/compute/cast_internal.h\"\n+#include \"arrow/compute/kernels/scalar_cast_internal.h\"\n+#include \"arrow/compute/kernels/util_internal.h\"\n+#include \"arrow/util/int_util.h\"\n+\n+namespace arrow {\n+using internal::CopyBitmap;\n+\n+namespace compute {\n+namespace internal {\n+\n+Status CastDictionary(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const CastOptions& options = CastState::Get(ctx);\n+  auto out_type = std::static_pointer_cast<DictionaryType>(out->type());\n+\n+  // if out type is same as in type, return input\n+  if (out_type->Equals(batch[0].type())) {\n+    *out = batch[0];\n+    return Status::OK();\n+  }\n+\n+  if (batch[0].is_scalar()) {  // if input is scalar\n+    auto in_scalar = std::static_pointer_cast<DictionaryScalar>(batch[0].scalar());\n+\n+    // if invalid scalar, return null scalar\n+    if (!in_scalar->is_valid) {\n+      *out = MakeNullScalar(out_type);\n+      return Status::OK();\n+    }\n+\n+    Datum casted_index, casted_dict;\n+    if (in_scalar->value.index->type->Equals(out_type->index_type())) {\n+      casted_index = in_scalar->value.index;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(casted_index,\n+                            Cast(in_scalar->value.index, out_type->index_type(), options,\n+                                 ctx->exec_context()));\n+    }\n+\n+    if (in_scalar->value.dictionary->type()->Equals(out_type->value_type())) {\n+      casted_dict = in_scalar->value.dictionary;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(\n+          casted_dict, Cast(in_scalar->value.dictionary, out_type->value_type(), options,\n+                            ctx->exec_context()));\n+    }\n+\n+    *out = std::static_pointer_cast<Scalar>(\n+        DictionaryScalar::Make(casted_index.scalar(), casted_dict.make_array()));\n+\n+    return Status::OK();\n+  }\n+\n+  // if input is array\n+  const std::shared_ptr<ArrayData>& in_array = batch[0].array();\n+  auto in_type = std::static_pointer_cast<DictionaryType>(in_array->type);\n+\n+  ArrayData* out_array = out->mutable_array();\n+\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n+    out_array->buffers[0] = in_array->buffers[0];\n+    out_array->buffers[1] = in_array->buffers[1];\n\nReview comment:\n       What if there's an offset? I suppose it does pass CheckCast which does do slicing\u2026\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_dictionary.cc\n##########\n@@ -0,0 +1,123 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Implementation of casting to dictionary type\n+\n+#include <arrow/util/bitmap_ops.h>\n+\n+#include \"arrow/array/builder_primitive.h\"\n+#include \"arrow/compute/cast_internal.h\"\n+#include \"arrow/compute/kernels/scalar_cast_internal.h\"\n+#include \"arrow/compute/kernels/util_internal.h\"\n+#include \"arrow/util/int_util.h\"\n+\n+namespace arrow {\n+using internal::CopyBitmap;\n+\n+namespace compute {\n+namespace internal {\n+\n+Status CastDictionary(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const CastOptions& options = CastState::Get(ctx);\n+  auto out_type = std::static_pointer_cast<DictionaryType>(out->type());\n+\n+  // if out type is same as in type, return input\n+  if (out_type->Equals(batch[0].type())) {\n+    *out = batch[0];\n+    return Status::OK();\n+  }\n+\n+  if (batch[0].is_scalar()) {  // if input is scalar\n+    auto in_scalar = std::static_pointer_cast<DictionaryScalar>(batch[0].scalar());\n+\n+    // if invalid scalar, return null scalar\n+    if (!in_scalar->is_valid) {\n+      *out = MakeNullScalar(out_type);\n+      return Status::OK();\n+    }\n+\n+    Datum casted_index, casted_dict;\n+    if (in_scalar->value.index->type->Equals(out_type->index_type())) {\n+      casted_index = in_scalar->value.index;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(casted_index,\n+                            Cast(in_scalar->value.index, out_type->index_type(), options,\n+                                 ctx->exec_context()));\n+    }\n+\n+    if (in_scalar->value.dictionary->type()->Equals(out_type->value_type())) {\n+      casted_dict = in_scalar->value.dictionary;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(\n+          casted_dict, Cast(in_scalar->value.dictionary, out_type->value_type(), options,\n+                            ctx->exec_context()));\n+    }\n+\n+    *out = std::static_pointer_cast<Scalar>(\n+        DictionaryScalar::Make(casted_index.scalar(), casted_dict.make_array()));\n+\n+    return Status::OK();\n+  }\n+\n+  // if input is array\n+  const std::shared_ptr<ArrayData>& in_array = batch[0].array();\n+  auto in_type = std::static_pointer_cast<DictionaryType>(in_array->type);\n+\n+  ArrayData* out_array = out->mutable_array();\n+\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n+    out_array->buffers[0] = in_array->buffers[0];\n+    out_array->buffers[1] = in_array->buffers[1];\n\nReview comment:\n       It would also be nice to copy null_count.\n\n##########\nFile path: cpp/src/arrow/CMakeLists.txt\n##########\n@@ -385,7 +385,8 @@ if(ARROW_COMPUTE)\n        compute/kernels/scalar_arithmetic.cc\n        compute/kernels/scalar_boolean.cc\n        compute/kernels/scalar_cast_boolean.cc\n-       compute/kernels/scalar_cast_internal.cc\n+          compute/kernels/scalar_cast_dictionary.cc\n+          compute/kernels/scalar_cast_internal.cc\n\nReview comment:\n       nit: this needs to be cmake-formatted\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T12:04:10.832+0000",
                    "updated": "2021-07-15T12:04:10.832+0000",
                    "started": "2021-07-15T12:04:10.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622996",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670450370\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_dictionary.cc\n##########\n@@ -0,0 +1,123 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Implementation of casting to dictionary type\n+\n+#include <arrow/util/bitmap_ops.h>\n+\n+#include \"arrow/array/builder_primitive.h\"\n+#include \"arrow/compute/cast_internal.h\"\n+#include \"arrow/compute/kernels/scalar_cast_internal.h\"\n+#include \"arrow/compute/kernels/util_internal.h\"\n+#include \"arrow/util/int_util.h\"\n+\n+namespace arrow {\n+using internal::CopyBitmap;\n+\n+namespace compute {\n+namespace internal {\n+\n+Status CastDictionary(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+  const CastOptions& options = CastState::Get(ctx);\n+  auto out_type = std::static_pointer_cast<DictionaryType>(out->type());\n+\n+  // if out type is same as in type, return input\n+  if (out_type->Equals(batch[0].type())) {\n+    *out = batch[0];\n+    return Status::OK();\n+  }\n+\n+  if (batch[0].is_scalar()) {  // if input is scalar\n+    auto in_scalar = std::static_pointer_cast<DictionaryScalar>(batch[0].scalar());\n+\n+    // if invalid scalar, return null scalar\n+    if (!in_scalar->is_valid) {\n+      *out = MakeNullScalar(out_type);\n+      return Status::OK();\n+    }\n+\n+    Datum casted_index, casted_dict;\n+    if (in_scalar->value.index->type->Equals(out_type->index_type())) {\n+      casted_index = in_scalar->value.index;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(casted_index,\n+                            Cast(in_scalar->value.index, out_type->index_type(), options,\n+                                 ctx->exec_context()));\n+    }\n+\n+    if (in_scalar->value.dictionary->type()->Equals(out_type->value_type())) {\n+      casted_dict = in_scalar->value.dictionary;\n+    } else {\n+      ARROW_ASSIGN_OR_RAISE(\n+          casted_dict, Cast(in_scalar->value.dictionary, out_type->value_type(), options,\n+                            ctx->exec_context()));\n+    }\n+\n+    *out = std::static_pointer_cast<Scalar>(\n+        DictionaryScalar::Make(casted_index.scalar(), casted_dict.make_array()));\n+\n+    return Status::OK();\n+  }\n+\n+  // if input is array\n+  const std::shared_ptr<ArrayData>& in_array = batch[0].array();\n+  auto in_type = std::static_pointer_cast<DictionaryType>(in_array->type);\n+\n+  ArrayData* out_array = out->mutable_array();\n+\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n+    out_array->buffers[0] = in_array->buffers[0];\n+    out_array->buffers[1] = in_array->buffers[1];\n+  } else {\n+    // for indices, create a dummy ArrayData with index_type()\n+    const std::shared_ptr<ArrayData>& indices_arr =\n+        ArrayData::Make(in_type->index_type(), in_array->length, in_array->buffers,\n+                        in_array->GetNullCount(), in_array->offset);\n+    ARROW_ASSIGN_OR_RAISE(auto casted_indices, Cast(indices_arr, out_type->index_type(),\n+                                                    options, ctx->exec_context()));\n+    out_array->buffers[0] = std::move(casted_indices.array()->buffers[0]);\n+    out_array->buffers[1] = std::move(casted_indices.array()->buffers[1]);\n+  }\n+\n+  // data (dict)\n+  if (in_type->index_type()->Equals(out_type->index_type())) {\n\nReview comment:\n       Lol! indeed! :open_mouth: \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T13:15:11.491+0000",
                    "updated": "2021-07-15T13:15:11.491+0000",
                    "started": "2021-07-15T13:15:11.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623040",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670495304\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1931,14 +1931,29 @@ TEST(Cast, DictTypeToAnotherDict) {\n              R\"([\"a\", \"b\", \"a\", null])\");\n \n   auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n-  // check unsafe\n+  // check unsafe values\n   ASSERT_OK_AND_ASSIGN(auto casted,\n                        Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n   ValidateOutput(casted);\n-  // check safe\n+  // check safe values\n   EXPECT_RAISES_WITH_MESSAGE_THAT(\n       Invalid, testing::HasSubstr(\"Integer value 1000 not in range\"),\n       Cast(arr, dictionary(int8(), int8()), CastOptions::Safe()));\n+\n+  // check unsafe indices\n+  random::RandomArrayGenerator rand(/*seed=*/0);\n+  int64_t len = 1000;\n+  auto val_arr = rand.ArrayOf(int32(), len, /*null_probability=*/0.01);\n+  ASSERT_OK_AND_ASSIGN(auto arr2, DictionaryEncode(val_arr));\n+  // check unsafe indices. Cannot validate this array because ValidateOutput throws an\n\nReview comment:\n       Sorry - now that I look at the JIRA again, it seems having unsafe casts isn't useful for this case? What do you think? If it produces invalid output (presumably, negative and out of bounds indices?), then it seems kind of pointless.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T14:05:30.497+0000",
                    "updated": "2021-07-15T14:05:30.497+0000",
                    "started": "2021-07-15T14:05:30.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623071",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670562007\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1931,14 +1931,29 @@ TEST(Cast, DictTypeToAnotherDict) {\n              R\"([\"a\", \"b\", \"a\", null])\");\n \n   auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n-  // check unsafe\n+  // check unsafe values\n   ASSERT_OK_AND_ASSIGN(auto casted,\n                        Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n   ValidateOutput(casted);\n-  // check safe\n+  // check safe values\n   EXPECT_RAISES_WITH_MESSAGE_THAT(\n       Invalid, testing::HasSubstr(\"Integer value 1000 not in range\"),\n       Cast(arr, dictionary(int8(), int8()), CastOptions::Safe()));\n+\n+  // check unsafe indices\n+  random::RandomArrayGenerator rand(/*seed=*/0);\n+  int64_t len = 1000;\n+  auto val_arr = rand.ArrayOf(int32(), len, /*null_probability=*/0.01);\n+  ASSERT_OK_AND_ASSIGN(auto arr2, DictionaryEncode(val_arr));\n+  // check unsafe indices. Cannot validate this array because ValidateOutput throws an\n\nReview comment:\n       I was also thinking about this. OTOH I was thinking whether the ValidataOutput should check the validity of dictionary array in DictionaryType. :thinking: \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:19:51.488+0000",
                    "updated": "2021-07-15T15:19:51.488+0000",
                    "started": "2021-07-15T15:19:51.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623107",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670575574\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1931,14 +1931,29 @@ TEST(Cast, DictTypeToAnotherDict) {\n              R\"([\"a\", \"b\", \"a\", null])\");\n \n   auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n-  // check unsafe\n+  // check unsafe values\n   ASSERT_OK_AND_ASSIGN(auto casted,\n                        Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n   ValidateOutput(casted);\n-  // check safe\n+  // check safe values\n   EXPECT_RAISES_WITH_MESSAGE_THAT(\n       Invalid, testing::HasSubstr(\"Integer value 1000 not in range\"),\n       Cast(arr, dictionary(int8(), int8()), CastOptions::Safe()));\n+\n+  // check unsafe indices\n+  random::RandomArrayGenerator rand(/*seed=*/0);\n+  int64_t len = 1000;\n+  auto val_arr = rand.ArrayOf(int32(), len, /*null_probability=*/0.01);\n+  ASSERT_OK_AND_ASSIGN(auto arr2, DictionaryEncode(val_arr));\n+  // check unsafe indices. Cannot validate this array because ValidateOutput throws an\n\nReview comment:\n       It looks like it does - are you saying it shouldn't?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:34:52.532+0000",
                    "updated": "2021-07-15T15:34:52.532+0000",
                    "started": "2021-07-15T15:34:52.532+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623113",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10330:\nURL: https://github.com/apache/arrow/pull/10330#issuecomment-880804363\n\n\n   Niranda is tackling this in #10721 - maybe we can close this one?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:44:42.330+0000",
                    "updated": "2021-07-15T15:44:42.330+0000",
                    "started": "2021-07-15T15:44:42.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623124",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880805221\n\n\n   @lidavidm is this a known test failure? `[  FAILED  ] Expression.ReplaceFieldsWithKnownValues`\r\n   https://github.com/apache/arrow/pull/10721/checks?check_run_id=3078144913\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:46:01.620+0000",
                    "updated": "2021-07-15T15:46:01.620+0000",
                    "started": "2021-07-15T15:46:01.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623125",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623130",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880809036\n\n\n   ```\r\n   Expected 'ReplaceFieldsWithKnownValues( KnownFieldValues{{{\"dict_str\", dict_i32}}}, expr)' to fail with NotImplemented, but got OK\r\n   ```\r\n   \r\n   Looks like this enables something that didn't work before?\r\n   \r\n   ```\r\n     ASSERT_OK_AND_ASSIGN(auto expr, field_ref(\"dict_str\").Bind(*kBoringSchema));\r\n     Datum dict_i32{\r\n         DictionaryScalar::Make(MakeScalar<int32_t>(0), ArrayFromJSON(int32(), R\"([3])\"))};\r\n     // Unsupported cast dictionary(int32(), int32()) -> dictionary(int32(), utf8())\r\n     ASSERT_RAISES(NotImplemented, ReplaceFieldsWithKnownValues(\r\n                                       KnownFieldValues{{{\"dict_str\", dict_i32}}}, expr));\r\n     // Unsupported cast dictionary(int8(), utf8()) -> dictionary(int32(), utf8())\r\n     dict_str = Datum{\r\n         DictionaryScalar::Make(MakeScalar<int8_t>(0), ArrayFromJSON(utf8(), R\"([\"a\"])\"))};\r\n     ASSERT_RAISES(NotImplemented, ReplaceFieldsWithKnownValues(\r\n                                       KnownFieldValues{{{\"dict_str\", dict_str}}}, expr));\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:51:14.013+0000",
                    "updated": "2021-07-15T15:51:14.013+0000",
                    "started": "2021-07-15T15:51:14.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623130",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce closed pull request #10330:\nURL: https://github.com/apache/arrow/pull/10330\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T15:57:12.830+0000",
                    "updated": "2021-07-15T15:57:12.830+0000",
                    "started": "2021-07-15T15:57:12.830+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623135",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623147",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880824036\n\n\n   > ```\r\n   > Expected 'ReplaceFieldsWithKnownValues( KnownFieldValues{{{\"dict_str\", dict_i32}}}, expr)' to fail with NotImplemented, but got OK\r\n   > ```\r\n   > \r\n   > Looks like this enables something that didn't work before?\r\n   > \r\n   > ```\r\n   >   ASSERT_OK_AND_ASSIGN(auto expr, field_ref(\"dict_str\").Bind(*kBoringSchema));\r\n   >   Datum dict_i32{\r\n   >       DictionaryScalar::Make(MakeScalar<int32_t>(0), ArrayFromJSON(int32(), R\"([3])\"))};\r\n   >   // Unsupported cast dictionary(int32(), int32()) -> dictionary(int32(), utf8())\r\n   >   ASSERT_RAISES(NotImplemented, ReplaceFieldsWithKnownValues(\r\n   >                                     KnownFieldValues{{{\"dict_str\", dict_i32}}}, expr));\r\n   >   // Unsupported cast dictionary(int8(), utf8()) -> dictionary(int32(), utf8())\r\n   >   dict_str = Datum{\r\n   >       DictionaryScalar::Make(MakeScalar<int8_t>(0), ArrayFromJSON(utf8(), R\"([\"a\"])\"))};\r\n   >   ASSERT_RAISES(NotImplemented, ReplaceFieldsWithKnownValues(\r\n   >                                     KnownFieldValues{{{\"dict_str\", dict_str}}}, expr));\r\n   > ```\r\n   \r\n   Ah! indeed! thanks... \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T16:08:09.721+0000",
                    "updated": "2021-07-15T16:08:09.721+0000",
                    "started": "2021-07-15T16:08:09.720+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623147",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670777411\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/expression_test.cc\n##########\n@@ -942,14 +942,14 @@ TEST(Expression, ReplaceFieldsWithKnownValues) {\n   ASSERT_OK_AND_ASSIGN(auto expr, field_ref(\"dict_str\").Bind(*kBoringSchema));\n\nReview comment:\n       nit: this isn't used anymore\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:18:19.739+0000",
                    "updated": "2021-07-15T20:18:19.739+0000",
                    "started": "2021-07-15T20:18:19.739+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623277",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623278",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880986006\n\n\n   I think this is good now, thanks! (Just one nit about an unused variable)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:18:33.076+0000",
                    "updated": "2021-07-15T20:18:33.076+0000",
                    "started": "2021-07-15T20:18:33.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623278",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623280",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880986142\n\n\n   I take that back, it's used after all.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:18:50.525+0000",
                    "updated": "2021-07-15T20:18:50.525+0000",
                    "started": "2021-07-15T20:18:50.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623280",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm edited a comment on pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#issuecomment-880986142\n\n\n   ~I take that back, it's used after all.~ I had local changes, there's an unused variable :slightly_smiling_face: \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:19:16.856+0000",
                    "updated": "2021-07-15T20:19:16.856+0000",
                    "started": "2021-07-15T20:19:16.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623282",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623298",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670801214\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1931,14 +1931,29 @@ TEST(Cast, DictTypeToAnotherDict) {\n              R\"([\"a\", \"b\", \"a\", null])\");\n \n   auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n-  // check unsafe\n+  // check unsafe values\n   ASSERT_OK_AND_ASSIGN(auto casted,\n                        Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n   ValidateOutput(casted);\n-  // check safe\n+  // check safe values\n   EXPECT_RAISES_WITH_MESSAGE_THAT(\n       Invalid, testing::HasSubstr(\"Integer value 1000 not in range\"),\n       Cast(arr, dictionary(int8(), int8()), CastOptions::Safe()));\n+\n+  // check unsafe indices\n+  random::RandomArrayGenerator rand(/*seed=*/0);\n+  int64_t len = 1000;\n+  auto val_arr = rand.ArrayOf(int32(), len, /*null_probability=*/0.01);\n+  ASSERT_OK_AND_ASSIGN(auto arr2, DictionaryEncode(val_arr));\n+  // check unsafe indices. Cannot validate this array because ValidateOutput throws an\n\nReview comment:\n       I dont think ValidateOutput checks the validity of `ArrayData::dictionary` field. That's why ValidateOutput passes for unsafe valies AFAIU. :thin\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T20:59:11.242+0000",
                    "updated": "2021-07-15T20:59:11.242+0000",
                    "started": "2021-07-15T20:59:11.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623298",
                    "issueId": "13359111"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/worklog/623302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10721:\nURL: https://github.com/apache/arrow/pull/10721#discussion_r670803188\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -1931,14 +1931,29 @@ TEST(Cast, DictTypeToAnotherDict) {\n              R\"([\"a\", \"b\", \"a\", null])\");\n \n   auto arr = ArrayFromJSON(dictionary(int32(), int32()), \"[1, 1000]\");\n-  // check unsafe\n+  // check unsafe values\n   ASSERT_OK_AND_ASSIGN(auto casted,\n                        Cast(arr, dictionary(int8(), int8()), CastOptions::Unsafe()));\n   ValidateOutput(casted);\n-  // check safe\n+  // check safe values\n   EXPECT_RAISES_WITH_MESSAGE_THAT(\n       Invalid, testing::HasSubstr(\"Integer value 1000 not in range\"),\n       Cast(arr, dictionary(int8(), int8()), CastOptions::Safe()));\n+\n+  // check unsafe indices\n+  random::RandomArrayGenerator rand(/*seed=*/0);\n+  int64_t len = 1000;\n+  auto val_arr = rand.ArrayOf(int32(), len, /*null_probability=*/0.01);\n+  ASSERT_OK_AND_ASSIGN(auto arr2, DictionaryEncode(val_arr));\n+  // check unsafe indices. Cannot validate this array because ValidateOutput throws an\n\nReview comment:\n       It looks like it does: https://github.com/apache/arrow/blob/dbeed527dff79f3fa4576722a821fb7af3abd878/cpp/src/arrow/array/validate.cc#L565-L572\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-15T21:02:41.862+0000",
                    "updated": "2021-07-15T21:02:41.862+0000",
                    "started": "2021-07-15T21:02:41.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "623302",
                    "issueId": "13359111"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4c0b4013[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78b4f007[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@24301606[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7bdbee4f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62eba0ab[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3e861efd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1aa2bf0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3e2f9380[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1fe9216[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@f810522[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@549908[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4225b911[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 20 16:40:35 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-20T16:40:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11673/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2021-02-17T16:56:29.000+0000",
        "updated": "2021-07-20T16:40:48.000+0000",
        "timeoriginalestimate": null,
        "description": "It's currently not implemented to cast from one dictionary type to another dictionary type to change the index type. \r\n\r\nSmall example:\r\n\r\n{code}\r\nIn [2]: arr = pa.array(['a', 'b', 'a']).dictionary_encode()\r\n\r\nIn [3]: arr.type\r\nOut[3]: DictionaryType(dictionary<values=string, indices=int32, ordered=0>)\r\n\r\nIn [5]: arr.cast(pa.dictionary(pa.int8(), pa.string()))\r\n...\r\nArrowNotImplementedError: Unsupported cast from dictionary<values=string, indices=int32, ordered=0> to dictionary<values=string, indices=int8, ordered=0> (no available cast function for target type)\r\n../src/arrow/compute/cast.cc:112  GetCastFunctionInternal(cast_options->to_type, args[0].type().get())\r\n{code}\r\n\r\nFrom https://stackoverflow.com/questions/66223730/how-to-change-column-datatype-with-pyarrow",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Casting dictionary type to use different index type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17329257",
                    "id": "17329257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~edponce]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-04-22T16:25:47.726+0000",
                    "updated": "2021-04-22T16:25:47.726+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17329344",
                    "id": "17329344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I would be glad to help with this issue.\r\n\r\nA question that naturally follows is: What is the expected behavior when casting from a larger to a smaller type and the index overflows?\r\n\r\nPossible solution: I think that triggering an error stating that the current data does not allows such cast to occur.\r\n\r\nIf dictionary types keep track of its largest index value, there is no need to iterate through the indices when casting in order to validate the type change.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-22T18:23:18.857+0000",
                    "updated": "2021-04-22T18:26:41.125+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17329349",
                    "id": "17329349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Also, the conversions supported would be between any of the integral types.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=edponce",
                        "name": "edponce",
                        "key": "edponce",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=edponce&avatarId=45496",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=edponce&avatarId=45496",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=edponce&avatarId=45496",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=edponce&avatarId=45496"
                        },
                        "displayName": "Eduardo Ponce",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-22T18:33:11.200+0000",
                    "updated": "2021-04-22T18:33:11.200+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17330333",
                    "id": "17330333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "bq. What is the expected behavior when casting from a larger to a smaller type and the index overflows?\r\n\r\nFor a safe cast, I certainly expect that to raise an error. For plain integers it behaves like this:\r\n\r\n{code}\r\nIn [6]: pa.array([1, 1000], \"int64\").cast(\"int8\")\r\n...\r\nArrowInvalid: Integer value 1000 not in range: -128 to 127\r\n\r\nIn [7]: pa.array([1, 1000], \"int64\").cast(\"int8\", safe=False)\r\nOut[7]: \r\n<pyarrow.lib.Int8Array object at 0x7f42ecdc69a0>\r\n[\r\n  1,\r\n  -24\r\n]\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-04-23T09:24:26.147+0000",
                    "updated": "2021-04-23T09:24:26.147+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17330335",
                    "id": "17330335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "There is no reason to accept unsafe casts for this feature. A dictionary with invalid indices would not have merely incorrect data, it would crash as soon as you would access it.\r\n\r\nAlso, we have internal utilities to do this: https://github.com/apache/arrow/blob/master/cpp/src/arrow/util/int_util.h",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-04-23T09:27:43.892+0000",
                    "updated": "2021-04-23T09:27:43.892+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17343211",
                    "id": "17343211",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~niranda]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-05-12T12:24:11.107+0000",
                    "updated": "2021-05-12T12:24:11.107+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359111/comment/17384383",
                    "id": "17384383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Issue resolved by pull request 10721\n[https://github.com/apache/arrow/pull/10721]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2021-07-20T16:40:35.302+0000",
                    "updated": "2021-07-20T16:40:35.302+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nrfc:",
        "customfield_12314139": null
    }
}