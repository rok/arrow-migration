{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13470666",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13470666",
    "key": "ARROW-17014",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351550",
                "id": "12351550",
                "name": "9.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-08-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=raulcd",
            "name": "raulcd",
            "key": "JIRAUSER287560",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Ra\u00fal Cumplido",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333244",
                "id": "12333244",
                "name": "Continuous Integration"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=raulcd",
            "name": "raulcd",
            "key": "JIRAUSER287560",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Ra\u00fal Cumplido",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=raulcd",
            "name": "raulcd",
            "key": "JIRAUSER287560",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Ra\u00fal Cumplido",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 5400,
            "total": 5400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17014/votes",
            "votes": 0,
            "hasVoted": false
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 5400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@70495045[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b6c4d24[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@424aa568[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1b16d568[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c7ca2e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c2dd9b5[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2bdb4abd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@64b673b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7fd9a6b9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2deb2886[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c940124[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1bbd732[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 5400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jul 08 19:25:28 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-07-08T19:25:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17014/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-07-08T09:56:45.000+0000",
        "updated": "2022-07-08T19:25:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Two cython tests are failing on Appveyor builds ([https://ci.appveyor.com/project/ApacheSoftwareFoundation/arrow/builds/44114739/job/rresg43jos1wpbtv):]\r\n{code:java}\r\n_______________________________ test_cython_api _______________________________\r\ntmpdir = local('C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\1\\\\pytest-of-appveyor\\\\pytest-0\\\\test_cython_api0')\r\n\u00a0 \u00a0 @pytest.mark.cython\r\n\u00a0 \u00a0 def test_cython_api(tmpdir):\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\r\n\u00a0 \u00a0 \u00a0 \u00a0 Basic test for the Cython API.\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\r\n\u00a0 \u00a0 \u00a0 \u00a0 # Fail early if cython is not found\r\n\u00a0 \u00a0 \u00a0 \u00a0 import cython \u00a0# noqa\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 with tmpdir.as_cwd():\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Set up temporary workspace\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pyx_file = 'pyarrow_cython_example.pyx'\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 shutil.copyfile(os.path.join(here, pyx_file),\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os.path.join(str(tmpdir), pyx_file))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Create setup.py file\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 setup_code = setup_template.format(pyx_file=pyx_file,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0compiler_opts=compiler_opts,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0test_ld_path=test_ld_path)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with open('setup.py', 'w') as f:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f.write(setup_code)\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # ARROW-2263: Make environment with this pyarrow/ package first on the\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # PYTHONPATH, for local dev environments\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess_env = test_util.get_modified_env_with_pythonpath()\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Compile extension module\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess.check_call([sys.executable, 'setup.py',\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'build_ext', '--inplace'],\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 env=subprocess_env)\r\npyarrow\\tests\\test_cython.py:107:\u00a0\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npopenargs = (['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace'],)\r\nkwargs = {'env': {'7ZIP': '\"C:\\\\Program Files\\\\7-Zip\\\\7z.exe\"', 'ALLUSERSPROFILE': 'C:\\\\ProgramData', 'APPDATA': 'C:\\\\Users\\\\appveyor\\\\AppData\\\\Roaming', 'APPVEYOR': 'True', ...}}\r\nretcode = 1\r\ncmd = ['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace']\r\n\u00a0 \u00a0 def check_call(*popenargs, **kwargs):\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"Run command with arguments. \u00a0Wait for command to complete. \u00a0If\r\n\u00a0 \u00a0 \u00a0 \u00a0 the exit code was zero then return, otherwise raise\r\n\u00a0 \u00a0 \u00a0 \u00a0 CalledProcessError. \u00a0The CalledProcessError object will have the\r\n\u00a0 \u00a0 \u00a0 \u00a0 return code in the returncode attribute.\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 The arguments are the same as for the call function. \u00a0Example:\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 check_call([\"ls\", \"-l\"])\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\r\n\u00a0 \u00a0 \u00a0 \u00a0 retcode = call(*popenargs, **kwargs)\r\n\u00a0 \u00a0 \u00a0 \u00a0 if retcode:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cmd = kwargs.get(\"args\")\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if cmd is None:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cmd = popenargs[0]\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 raise CalledProcessError(retcode, cmd)\r\nE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess.CalledProcessError: Command '['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace']' returned non-zero exit status 1.\r\nC:\\Miniconda37-x64\\envs\\arrow\\lib\\subprocess.py:364: CalledProcessError\r\n---------------------------- Captured stdout call -----------------------------\r\nCompiling pyarrow_cython_example.pyx because it changed.\r\n[1/1] Cythonizing pyarrow_cython_example.pyx\r\nExtension module: <setuptools.extension.Extension('pyarrow_cython_example') at 0x2804221ae10> ['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\lib\\\\site-packages\\\\numpy\\\\core\\\\include', 'c:\\\\projects\\\\arrow\\\\python\\\\pyarrow\\\\include'] ['arrow', 'arrow_python'] ['c:\\\\projects\\\\arrow\\\\python\\\\pyarrow', 'C:/Miniconda37-x64/envs/arrow/Library/lib', 'C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\Library\\\\lib']\r\nrunning build_ext\r\nbuilding 'pyarrow_cython_example' extension\r\ncreating build\r\ncreating build\\temp.win-amd64-cpython-38\r\ncreating build\\temp.win-amd64-cpython-38\\Release\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe\" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\\Miniconda37-x64\\envs\\arrow\\lib\\site-packages\\numpy\\core\\include -Ic:\\projects\\arrow\\python\\pyarrow\\include -IC:\\Miniconda37-x64\\envs\\arrow\\include -IC:\\Miniconda37-x64\\envs\\arrow\\Include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /EHsc /Tppyarrow_cython_example.cpp /Fobuild\\temp.win-amd64-cpython-38\\Release\\pyarrow_cython_example.obj\r\npyarrow_cython_example.cpp\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1271): error C2338: You've instantiated std::aligned_storage<Len, Align> with an extended alignment (in other words, Align > alignof(max_align_t)). Before VS 2017 15.8, the member type would non-conformingly have an alignment of only alignof(max_align_t). VS 2017 15.8 was fixed to handle this correctly, but the fix inherently changes layout and breaks binary compatibility (*only* for uses of aligned_storage with extended alignments). Please define either (1) _ENABLE_EXTENDED_ALIGNED_STORAGE to acknowledge that you understand this message and that you actually want a type with an extended alignment, or (2) _DISABLE_EXTENDED_ALIGNED_STORAGE to silence this message and get the old non-conformant behavior.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1291): note: see reference to class template instantiation 'std::_Aligned<192,64,double,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1298): note: see reference to class template instantiation 'std::_Aligned<192,64,int,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1305): note: see reference to class template instantiation 'std::_Aligned<192,64,short,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1312): note: see reference to class template instantiation 'std::_Aligned<192,64,char,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1320): note: see reference to class template instantiation 'std::aligned_storage<192,64>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1352): note: see reference to alias template instantiation 'std::aligned_storage_t<192,64>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(132): note: see reference to class template instantiation 'std::aligned_union<0,arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(140): note: see reference to class template instantiation 'arrow::util::detail::VariantStorage<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(157): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(157): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(245): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>,arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/compute/exec.h(313): note: see reference to class template instantiation 'arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/vendored/datetime/date.h(182): note: see reference to class template instantiation 'std::chrono::duration<int,std::ratio<86400,1>>' being compiled\r\n---------------------------- Captured stderr call -----------------------------\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.16.27023\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n_____________________________ test_visit_strings ______________________________\r\ntmpdir = local('C:\\\\Users\\\\appveyor\\\\AppData\\\\Local\\\\Temp\\\\1\\\\pytest-of-appveyor\\\\pytest-0\\\\test_visit_strings0')\r\n\u00a0 \u00a0 @pytest.mark.cython\r\n\u00a0 \u00a0 def test_visit_strings(tmpdir):\r\n\u00a0 \u00a0 \u00a0 \u00a0 with tmpdir.as_cwd():\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Set up temporary workspace\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 pyx_file = 'bound_function_visit_strings.pyx'\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 shutil.copyfile(os.path.join(here, pyx_file),\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 os.path.join(str(tmpdir), pyx_file))\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Create setup.py file\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 setup_code = setup_template.format(pyx_file=pyx_file,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0compiler_opts=compiler_opts,\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0test_ld_path=test_ld_path)\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 with open('setup.py', 'w') as f:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 f.write(setup_code)\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess_env = test_util.get_modified_env_with_pythonpath()\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 # Compile extension module\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess.check_call([sys.executable, 'setup.py',\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0'build_ext', '--inplace'],\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 env=subprocess_env)\r\npyarrow\\tests\\test_cython.py:162:\u00a0\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\npopenargs = (['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace'],)\r\nkwargs = {'env': {'7ZIP': '\"C:\\\\Program Files\\\\7-Zip\\\\7z.exe\"', 'ALLUSERSPROFILE': 'C:\\\\ProgramData', 'APPDATA': 'C:\\\\Users\\\\appveyor\\\\AppData\\\\Roaming', 'APPVEYOR': 'True', ...}}\r\nretcode = 1\r\ncmd = ['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace']\r\n\u00a0 \u00a0 def check_call(*popenargs, **kwargs):\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"Run command with arguments. \u00a0Wait for command to complete. \u00a0If\r\n\u00a0 \u00a0 \u00a0 \u00a0 the exit code was zero then return, otherwise raise\r\n\u00a0 \u00a0 \u00a0 \u00a0 CalledProcessError. \u00a0The CalledProcessError object will have the\r\n\u00a0 \u00a0 \u00a0 \u00a0 return code in the returncode attribute.\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 The arguments are the same as for the call function. \u00a0Example:\r\n\u00a0 \u00a0\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 check_call([\"ls\", \"-l\"])\r\n\u00a0 \u00a0 \u00a0 \u00a0 \"\"\"\r\n\u00a0 \u00a0 \u00a0 \u00a0 retcode = call(*popenargs, **kwargs)\r\n\u00a0 \u00a0 \u00a0 \u00a0 if retcode:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cmd = kwargs.get(\"args\")\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if cmd is None:\r\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 cmd = popenargs[0]\r\n> \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 raise CalledProcessError(retcode, cmd)\r\nE \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 subprocess.CalledProcessError: Command '['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\python.exe', 'setup.py', 'build_ext', '--inplace']' returned non-zero exit status 1.\r\nC:\\Miniconda37-x64\\envs\\arrow\\lib\\subprocess.py:364: CalledProcessError\r\n---------------------------- Captured stdout call -----------------------------\r\nCompiling bound_function_visit_strings.pyx because it changed.\r\n[1/1] Cythonizing bound_function_visit_strings.pyx\r\nExtension module: <setuptools.extension.Extension('bound_function_visit_strings') at 0x28ba9d0df00> ['C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\lib\\\\site-packages\\\\numpy\\\\core\\\\include', 'c:\\\\projects\\\\arrow\\\\python\\\\pyarrow\\\\include'] ['arrow', 'arrow_python'] ['c:\\\\projects\\\\arrow\\\\python\\\\pyarrow', 'C:/Miniconda37-x64/envs/arrow/Library/lib', 'C:\\\\Miniconda37-x64\\\\envs\\\\arrow\\\\Library\\\\lib']\r\nrunning build_ext\r\nbuilding 'bound_function_visit_strings' extension\r\ncreating build\r\ncreating build\\temp.win-amd64-cpython-38\r\ncreating build\\temp.win-amd64-cpython-38\\Release\r\n\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe\" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -IC:\\Miniconda37-x64\\envs\\arrow\\lib\\site-packages\\numpy\\core\\include -Ic:\\projects\\arrow\\python\\pyarrow\\include -IC:\\Miniconda37-x64\\envs\\arrow\\include -IC:\\Miniconda37-x64\\envs\\arrow\\Include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.18362.0\\cppwinrt\" /EHsc /Tpbound_function_visit_strings.cpp /Fobuild\\temp.win-amd64-cpython-38\\Release\\bound_function_visit_strings.obj\r\nbound_function_visit_strings.cpp\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1271): error C2338: You've instantiated std::aligned_storage<Len, Align> with an extended alignment (in other words, Align > alignof(max_align_t)). Before VS 2017 15.8, the member type would non-conformingly have an alignment of only alignof(max_align_t). VS 2017 15.8 was fixed to handle this correctly, but the fix inherently changes layout and breaks binary compatibility (*only* for uses of aligned_storage with extended alignments). Please define either (1) _ENABLE_EXTENDED_ALIGNED_STORAGE to acknowledge that you understand this message and that you actually want a type with an extended alignment, or (2) _DISABLE_EXTENDED_ALIGNED_STORAGE to silence this message and get the old non-conformant behavior.\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1291): note: see reference to class template instantiation 'std::_Aligned<192,64,double,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1298): note: see reference to class template instantiation 'std::_Aligned<192,64,int,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1305): note: see reference to class template instantiation 'std::_Aligned<192,64,short,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1312): note: see reference to class template instantiation 'std::_Aligned<192,64,char,false>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1320): note: see reference to class template instantiation 'std::aligned_storage<192,64>' being compiled\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\\type_traits(1352): note: see reference to alias template instantiation 'std::aligned_storage_t<192,64>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(132): note: see reference to class template instantiation 'std::aligned_union<0,arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(140): note: see reference to class template instantiation 'arrow::util::detail::VariantStorage<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(157): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(157): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/util/variant.h(245): note: see reference to class template instantiation 'arrow::util::detail::VariantImpl<arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>,arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/compute/exec.h(313): note: see reference to class template instantiation 'arrow::util::Variant<arrow::ArraySpan,std::shared_ptr<arrow::ArrayData>>' being compiled\r\nc:\\projects\\arrow\\python\\pyarrow\\include\\arrow/vendored/datetime/date.h(182): note: see reference to class template instantiation 'std::chrono::duration<int,std::ratio<86400,1>>' being compiled\r\n---------------------------- Captured stderr call -----------------------------\r\nerror: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.16.27023{code}\r\nIt seems to have been failing on master since this was merged [https://github.com/apache/arrow/commit/6cc37cf2d1ba72c46b64fbc7ac499bd0d7296d20]",
        "customfield_10010": null,
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python][C++] Appveyor cython tests are failing",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "customfield_12311820": "0|z16pg0:",
        "customfield_12314139": null
    }
}