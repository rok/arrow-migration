{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13308792",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792",
    "key": "ARROW-9001",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 36600,
            "total": 36600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9001/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 61,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256\n\n\n   call_function() internally unbox to the right R6 class. \r\n   \r\n   This probably needs some more work, e.g. not sure how to deal with this function: \r\n   \r\n   ```r\r\n   .guess_result_class <- function(arg) {\r\n     # HACK HACK HACK delete this when call_function returns an ArrowObject itself\r\n     if (inherits(arg, \"ArrowObject\")) {\r\n       return(class(arg)[1])\r\n     } else if (inherits(arg, \"array_expression\")) {\r\n       return(arg$result_class)\r\n     } else {\r\n       stop(\"Not implemented\")\r\n     }\r\n   }\r\n   ```\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T12:02:08.445+0000",
                    "updated": "2020-09-24T12:02:08.445+0000",
                    "started": "2020-09-24T12:02:08.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490164",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698302396\n\n\n   https://issues.apache.org/jira/browse/ARROW-9001\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T12:08:27.326+0000",
                    "updated": "2020-09-24T12:08:27.326+0000",
                    "started": "2020-09-24T12:08:27.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490167",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490195",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698321096\n\n\n   Turns out we just don't need to keep track of the result_type anymore I think. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T12:46:18.563+0000",
                    "updated": "2020-09-24T12:46:18.563+0000",
                    "started": "2020-09-24T12:46:18.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490195",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490268",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494402171\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -127,15 +127,15 @@ match_arrow.Array <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  Array$create(call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n \n #' @export\n match_arrow.ChunkedArray <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  shared_ptr(ChunkedArray, call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n\nReview comment:\n       This can be `match_arrow.ChunkedArray <- match_arrow.Array` now since they're the same. There are probably a few others like this (I see `Ops` also, for example).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T15:19:38.794+0000",
                    "updated": "2020-09-24T15:19:38.794+0000",
                    "started": "2020-09-24T15:19:38.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490268",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698439528\n\n\n   > I love this and I want this everywhere :)\r\n   \r\n   I sort of assumed you would go there, as I was working on #8246 too. So in short we would create the R6 object in C++ and don't have to manipulate the external pointers in R ? I can see the appeal, but I need to work out some logistics. \r\n   \r\n   We would retain the same signatures ? e.g. \r\n   \r\n   ```cpp\r\n   // [[arrow::export]]\r\n   std::shared_ptr<arrow::DataType> Int8__initialize() { return arrow::int8(); }\r\n   ``` \r\n   \r\n   presently before this goes to R, this is wrapped in the external pointer, so we have a `cpp11::external_pointer<std::shared_ptr<arrow::DataType>>`, then in the R side it gets wrapped into a (subclass of) `DataType`, but I suppose that we could have that the `std::shared_ptr<arrow::DataType>`  is directly wrapped to the correct R6 instance or NULL, this is essentially moving the weird `..dispatch` method down C++ layer.  \r\n   \r\n   \r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:05:53.122+0000",
                    "updated": "2020-09-24T16:05:53.122+0000",
                    "started": "2020-09-24T16:05:53.122+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490290",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698445894\n\n\n   > So in short we would create the R6 object in C++ and don't have to manipulate the external pointers in R ? \r\n   \r\n   Ideally, right?\r\n   \r\n   > We would retain the same signatures ?\r\n   \r\n   Right, I think the most developer-friendly experience would be to pack the externalptr -> R6 logic into the as_sexp method. And yeah `..dispatch` would probably go away entirely because you'd directly instantiate the correct subclass; that dispatch is because the R side didn't know exactly which subclass it was getting returned.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:17:23.770+0000",
                    "updated": "2020-09-24T16:17:23.770+0000",
                    "started": "2020-09-24T16:17:23.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490293",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490327",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494467875\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -123,19 +123,19 @@ arrow::Datum as_cpp<arrow::Datum>(SEXP x) {\n SEXP from_datum(arrow::Datum datum) {\n\nReview comment:\n       Someday this should probably be\r\n   ```c++\r\n   SEXP as_sexp(arrow::Datum datum)\r\n   ```\r\n   so that we don't need to wrap datums in `from_datum`\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n\nReview comment:\n       ```suggestion\r\n     // make call:  <symbol>$<fun_symbol>(<x>)\r\n   ```\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n\nReview comment:\n       This seems like something we'd like to use cpp11::function for, but among other things that always calls the function in R_GlobalEnv\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n+}\n+\n+template <typename T>\n+SEXP R6_new(SEXP symbol, const std::shared_ptr<T>& x) {\n+  return R6_make(symbol, arrow::r::symbols::new_, x);\n+}\n+\n+template <typename T>\n+SEXP R6_create(SEXP symbol, const std::shared_ptr<T>& x) {\n+  return R6_make(symbol, arrow::r::symbols::create, x);\n+}\n\nReview comment:\n       This isn't shared_ptr specific; we could just write\r\n   ```suggestion\r\n   template <typename T>\r\n   SEXP R6_new(SEXP symbol, T x) {\r\n     return R6_make(symbol, arrow::r::symbols::new_, std::move(x));\r\n   }\r\n   \r\n   template <typename T>\r\n   SEXP R6_create(SEXP symbol, T x) {\r\n     return R6_make(symbol, arrow::r::symbols::create, std::move(x));\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-24T16:52:58.327+0000",
                    "updated": "2020-09-24T16:52:58.327+0000",
                    "started": "2020-09-24T16:52:58.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490327",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494775017\n\n\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n\nReview comment:\n       Perhaps this is more of a hypothetical `cpp11::call` thing, e.g. \r\n   \r\n   ```cpp\r\n   cpp11::call call(cpp11::call(R_DollarSymbol, symbol, fun_symbol), xp);\r\n   cpp11::sexp result = call.eval(arrow::r::ns::arrow);\r\n   ```\r\n   \r\n   Then I guess `cpp11::function` could factor out some of its logic in `cpp11::call` \r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T06:31:40.925+0000",
                    "updated": "2020-09-25T06:31:40.925+0000",
                    "started": "2020-09-25T06:31:40.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490593",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494775915\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -123,19 +123,19 @@ arrow::Datum as_cpp<arrow::Datum>(SEXP x) {\n SEXP from_datum(arrow::Datum datum) {\n\nReview comment:\n       Would that still do the dispatch internally before reaching the R side or would there be an R6 class for `arrow::Datum`. Probably the latter. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T06:34:04.786+0000",
                    "updated": "2020-09-25T06:34:04.786+0000",
                    "started": "2020-09-25T06:34:04.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490594",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494783594\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -127,15 +127,15 @@ match_arrow.Array <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  Array$create(call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n \n #' @export\n match_arrow.ChunkedArray <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  shared_ptr(ChunkedArray, call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n\nReview comment:\n       We can go further when tackling this: https://issues.apache.org/jira/browse/ARROW-10089\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T06:53:05.419+0000",
                    "updated": "2020-09-25T06:53:05.419+0000",
                    "started": "2020-09-25T06:53:05.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490604",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698808913\n\n\n   ``` r\r\n   library(tidyverse)\r\n   \r\n   brio::read_lines(\"~/git/apache/arrow/r/src/arrowExports.cpp\") %>% \r\n     str_subset(\"^std::[a-z]+_ptr<\") %>% \r\n     str_remove(\" .*$\") %>% \r\n     unique() %>% \r\n     str_remove(\"^.*<\") %>% \r\n     str_remove(\">\")\r\n   #>  [1] \"arrow::Array\"                      \"arrow::DataType\"                  \r\n   #>  [3] \"arrow::ArrayData\"                  \"arrow::ChunkedArray\"              \r\n   #>  [5] \"arrow::Buffer\"                     \"arrow::util::Codec\"               \r\n   #>  [7] \"arrow::io::CompressedOutputStream\" \"arrow::io::CompressedInputStream\" \r\n   #>  [9] \"arrow::compute::CastOptions\"       \"arrow::RecordBatch\"               \r\n   #> [11] \"arrow::Table\"                      \"arrow::csv::ReadOptions\"          \r\n   #> [13] \"arrow::csv::ParseOptions\"          \"arrow::csv::ConvertOptions\"       \r\n   #> [15] \"arrow::csv::TableReader\"           \"ds::ScannerBuilder\"               \r\n   #> [17] \"arrow::Schema\"                     \"ds::Dataset\"                      \r\n   #> [19] \"ds::UnionDataset\"                  \"ds::InMemoryDataset\"              \r\n   #> [21] \"ds::FileFormat\"                    \"fs::FileSystem\"                   \r\n   #> [23] \"ds::DatasetFactory\"                \"ds::ParquetFileFormat\"            \r\n   #> [25] \"ds::IpcFileFormat\"                 \"ds::CsvFileFormat\"                \r\n   #> [27] \"ds::Partitioning\"                  \"ds::PartitioningFactory\"          \r\n   #> [29] \"ds::Scanner\"                       \"arrow::Field\"                     \r\n   #> [31] \"ds::Expression\"                    \"arrow::ipc::feather::Reader\"      \r\n   #> [33] \"fs::FileSelector\"                  \"arrow::io::InputStream\"           \r\n   #> [35] \"arrow::io::RandomAccessFile\"       \"arrow::io::OutputStream\"          \r\n   #> [37] \"fs::LocalFileSystem\"               \"fs::SubTreeFileSystem\"            \r\n   #> [39] \"fs::S3FileSystem\"                  \"arrow::io::MemoryMappedFile\"      \r\n   #> [41] \"arrow::io::ReadableFile\"           \"arrow::io::BufferReader\"          \r\n   #> [43] \"arrow::io::FileOutputStream\"       \"arrow::io::BufferOutputStream\"    \r\n   #> [45] \"arrow::json::ReadOptions\"          \"arrow::json::ParseOptions\"        \r\n   #> [47] \"arrow::json::TableReader\"          \"arrow::MemoryPool\"                \r\n   #> [49] \"arrow::ipc::MessageReader\"         \"arrow::ipc::Message\"              \r\n   #> [51] \"parquet::ArrowReaderProperties\"    \"parquet::arrow::FileReader\"       \r\n   #> [53] \"parquet::ArrowWriterProperties\"    \"parquet::WriterPropertiesBuilder\" \r\n   #> [55] \"parquet::WriterProperties\"         \"parquet::arrow::FileWriter\"       \r\n   #> [57] \"arrow::RecordBatchReader\"          \"arrow::ipc::RecordBatchFileReader\"\r\n   #> [59] \"arrow::ipc::RecordBatchWriter\"     \"arrow::Scalar\"\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-25 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T08:51:55.715+0000",
                    "updated": "2020-09-25T08:51:55.715+0000",
                    "started": "2020-09-25T08:51:55.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490632",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490636",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698808913\n\n\n   ``` r\r\n   library(tidyverse)\r\n   \r\n   brio::read_lines(\"~/git/apache/arrow/r/src/arrowExports.cpp\") %>% \r\n     str_subset(\"^std::[a-z]+_ptr<\") %>% \r\n     str_remove(\" .*$\") %>% \r\n     unique() \r\n   #>  [1] \"std::shared_ptr<arrow::Array>\"                     \r\n   #>  [2] \"std::shared_ptr<arrow::DataType>\"                  \r\n   #>  [3] \"std::shared_ptr<arrow::ArrayData>\"                 \r\n   #>  [4] \"std::shared_ptr<arrow::ChunkedArray>\"              \r\n   #>  [5] \"std::shared_ptr<arrow::Buffer>\"                    \r\n   #>  [6] \"std::shared_ptr<arrow::util::Codec>\"               \r\n   #>  [7] \"std::shared_ptr<arrow::io::CompressedOutputStream>\"\r\n   #>  [8] \"std::shared_ptr<arrow::io::CompressedInputStream>\" \r\n   #>  [9] \"std::shared_ptr<arrow::compute::CastOptions>\"      \r\n   #> [10] \"std::shared_ptr<arrow::RecordBatch>\"               \r\n   #> [11] \"std::shared_ptr<arrow::Table>\"                     \r\n   #> [12] \"std::shared_ptr<arrow::csv::ReadOptions>\"          \r\n   #> [13] \"std::shared_ptr<arrow::csv::ParseOptions>\"         \r\n   #> [14] \"std::shared_ptr<arrow::csv::ConvertOptions>\"       \r\n   #> [15] \"std::shared_ptr<arrow::csv::TableReader>\"          \r\n   #> [16] \"std::shared_ptr<ds::ScannerBuilder>\"               \r\n   #> [17] \"std::shared_ptr<arrow::Schema>\"                    \r\n   #> [18] \"std::shared_ptr<ds::Dataset>\"                      \r\n   #> [19] \"std::shared_ptr<ds::UnionDataset>\"                 \r\n   #> [20] \"std::shared_ptr<ds::InMemoryDataset>\"              \r\n   #> [21] \"std::shared_ptr<ds::FileFormat>\"                   \r\n   #> [22] \"std::shared_ptr<fs::FileSystem>\"                   \r\n   #> [23] \"std::shared_ptr<ds::DatasetFactory>\"               \r\n   #> [24] \"std::shared_ptr<ds::ParquetFileFormat>\"            \r\n   #> [25] \"std::shared_ptr<ds::IpcFileFormat>\"                \r\n   #> [26] \"std::shared_ptr<ds::CsvFileFormat>\"                \r\n   #> [27] \"std::shared_ptr<ds::Partitioning>\"                 \r\n   #> [28] \"std::shared_ptr<ds::PartitioningFactory>\"          \r\n   #> [29] \"std::shared_ptr<ds::Scanner>\"                      \r\n   #> [30] \"std::shared_ptr<arrow::Field>\"                     \r\n   #> [31] \"std::shared_ptr<ds::Expression>\"                   \r\n   #> [32] \"std::shared_ptr<arrow::ipc::feather::Reader>\"      \r\n   #> [33] \"std::shared_ptr<fs::FileSelector>\"                 \r\n   #> [34] \"std::shared_ptr<arrow::io::InputStream>\"           \r\n   #> [35] \"std::shared_ptr<arrow::io::RandomAccessFile>\"      \r\n   #> [36] \"std::shared_ptr<arrow::io::OutputStream>\"          \r\n   #> [37] \"std::shared_ptr<fs::LocalFileSystem>\"              \r\n   #> [38] \"std::shared_ptr<fs::SubTreeFileSystem>\"            \r\n   #> [39] \"std::shared_ptr<fs::S3FileSystem>\"                 \r\n   #> [40] \"std::shared_ptr<arrow::io::MemoryMappedFile>\"      \r\n   #> [41] \"std::shared_ptr<arrow::io::ReadableFile>\"          \r\n   #> [42] \"std::shared_ptr<arrow::io::BufferReader>\"          \r\n   #> [43] \"std::shared_ptr<arrow::io::FileOutputStream>\"      \r\n   #> [44] \"std::shared_ptr<arrow::io::BufferOutputStream>\"    \r\n   #> [45] \"std::shared_ptr<arrow::json::ReadOptions>\"         \r\n   #> [46] \"std::shared_ptr<arrow::json::ParseOptions>\"        \r\n   #> [47] \"std::shared_ptr<arrow::json::TableReader>\"         \r\n   #> [48] \"std::shared_ptr<arrow::MemoryPool>\"                \r\n   #> [49] \"std::shared_ptr<arrow::ipc::MessageReader>\"        \r\n   #> [50] \"std::shared_ptr<arrow::ipc::Message>\"              \r\n   #> [51] \"std::shared_ptr<parquet::ArrowReaderProperties>\"   \r\n   #> [52] \"std::shared_ptr<parquet::arrow::FileReader>\"       \r\n   #> [53] \"std::shared_ptr<parquet::ArrowWriterProperties>\"   \r\n   #> [54] \"std::shared_ptr<parquet::WriterPropertiesBuilder>\" \r\n   #> [55] \"std::shared_ptr<parquet::WriterProperties>\"        \r\n   #> [56] \"std::shared_ptr<parquet::arrow::FileWriter>\"       \r\n   #> [57] \"std::shared_ptr<arrow::RecordBatchReader>\"         \r\n   #> [58] \"std::shared_ptr<arrow::ipc::RecordBatchFileReader>\"\r\n   #> [59] \"std::shared_ptr<arrow::ipc::RecordBatchWriter>\"    \r\n   #> [60] \"std::shared_ptr<arrow::Scalar>\"\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-25 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T09:03:01.593+0000",
                    "updated": "2020-09-25T09:03:01.593+0000",
                    "started": "2020-09-25T09:03:01.592+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490636",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490784",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698302396\n\n\n   https://issues.apache.org/jira/browse/ARROW-9001\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:12:26.808+0000",
                    "updated": "2020-09-25T13:12:26.808+0000",
                    "started": "2020-09-25T13:12:26.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490784",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698321096\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:21:36.858+0000",
                    "updated": "2020-09-25T13:21:36.858+0000",
                    "started": "2020-09-25T13:21:36.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490872",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494402171\n\n\n\n##########\nFile path: r/R/compute.R\n##########\n@@ -127,15 +127,15 @@ match_arrow.Array <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  Array$create(call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n \n #' @export\n match_arrow.ChunkedArray <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  shared_ptr(ChunkedArray, call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n\nReview comment:\n       This can be `match_arrow.ChunkedArray <- match_arrow.Array` now since they're the same. There are probably a few others like this (I see `Ops` also, for example).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:29:20.587+0000",
                    "updated": "2020-09-25T13:29:20.587+0000",
                    "started": "2020-09-25T13:29:20.587+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490955",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/490984",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494775017\n\n\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n\nReview comment:\n       Perhaps this is more of a hypothetical `cpp11::call` thing, e.g. \r\n   \r\n   ```cpp\r\n   cpp11::call call(cpp11::call(R_DollarSymbol, symbol, fun_symbol), xp);\r\n   cpp11::sexp result = call.eval(arrow::r::ns::arrow);\r\n   ```\r\n   \r\n   Then I guess `cpp11::function` could factor out some of its logic in `cpp11::call` \r\n   \n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -123,19 +123,19 @@ arrow::Datum as_cpp<arrow::Datum>(SEXP x) {\n SEXP from_datum(arrow::Datum datum) {\n\nReview comment:\n       Would that still do the dispatch internally before reaching the R side or would there be an R6 class for `arrow::Datum`. Probably the latter. \n\n##########\nFile path: r/R/compute.R\n##########\n@@ -127,15 +127,15 @@ match_arrow.Array <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  Array$create(call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n \n #' @export\n match_arrow.ChunkedArray <- function(x, table, ...) {\n   if (!inherits(table, c(\"Array\", \"ChunkedArray\"))) {\n     table <- Array$create(table)\n   }\n-  shared_ptr(ChunkedArray, call_function(\"index_in_meta_binary\", x, table))\n+  call_function(\"index_in_meta_binary\", x, table)\n }\n\nReview comment:\n       We can go further when tackling this: https://issues.apache.org/jira/browse/ARROW-10089\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:32:13.947+0000",
                    "updated": "2020-09-25T13:32:13.947+0000",
                    "started": "2020-09-25T13:32:13.947+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "490984",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/491024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois opened a new pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256\n\n\n   call_function() internally unbox to the right R6 class. \r\n   \r\n   This probably needs some more work, e.g. not sure how to deal with this function: \r\n   \r\n   ```r\r\n   .guess_result_class <- function(arg) {\r\n     # HACK HACK HACK delete this when call_function returns an ArrowObject itself\r\n     if (inherits(arg, \"ArrowObject\")) {\r\n       return(class(arg)[1])\r\n     } else if (inherits(arg, \"array_expression\")) {\r\n       return(arg$result_class)\r\n     } else {\r\n       stop(\"Not implemented\")\r\n     }\r\n   }\r\n   ```\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:36:08.812+0000",
                    "updated": "2020-09-25T13:36:08.812+0000",
                    "started": "2020-09-25T13:36:08.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491024",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/491029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#discussion_r494467875\n\n\n\n##########\nFile path: r/src/compute.cpp\n##########\n@@ -123,19 +123,19 @@ arrow::Datum as_cpp<arrow::Datum>(SEXP x) {\n SEXP from_datum(arrow::Datum datum) {\n\nReview comment:\n       Someday this should probably be\r\n   ```c++\r\n   SEXP as_sexp(arrow::Datum datum)\r\n   ```\r\n   so that we don't need to wrap datums in `from_datum`\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n\nReview comment:\n       ```suggestion\r\n     // make call:  <symbol>$<fun_symbol>(<x>)\r\n   ```\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n\nReview comment:\n       This seems like something we'd like to use cpp11::function for, but among other things that always calls the function in R_GlobalEnv\n\n##########\nFile path: r/src/arrow_cpp11.h\n##########\n@@ -310,4 +312,32 @@ enable_if_enum<E, SEXP> as_sexp(E e) {\n   return as_sexp(static_cast<int>(e));\n }\n \n+template <typename T>\n+SEXP R6_make(SEXP symbol, SEXP fun_symbol, const std::shared_ptr<T>& x) {\n+  if (x == nullptr) {\n+    return R_NilValue;\n+  }\n+  cpp11::external_pointer<std::shared_ptr<T>> xp(new std::shared_ptr<T>(x));\n+\n+  // make call:  <symbol>$new(<x>)\n+  SEXP call = PROTECT(Rf_lang3(R_DollarSymbol, symbol, fun_symbol));\n+  SEXP call2 = PROTECT(Rf_lang2(call, xp));\n+\n+  // and then eval:\n+  SEXP r6 = PROTECT(Rf_eval(call2, arrow::r::ns::arrow));\n+\n+  UNPROTECT(3);\n+  return r6;\n+}\n+\n+template <typename T>\n+SEXP R6_new(SEXP symbol, const std::shared_ptr<T>& x) {\n+  return R6_make(symbol, arrow::r::symbols::new_, x);\n+}\n+\n+template <typename T>\n+SEXP R6_create(SEXP symbol, const std::shared_ptr<T>& x) {\n+  return R6_make(symbol, arrow::r::symbols::create, x);\n+}\n\nReview comment:\n       This isn't shared_ptr specific; we could just write\r\n   ```suggestion\r\n   template <typename T>\r\n   SEXP R6_new(SEXP symbol, T x) {\r\n     return R6_make(symbol, arrow::r::symbols::new_, std::move(x));\r\n   }\r\n   \r\n   template <typename T>\r\n   SEXP R6_create(SEXP symbol, T x) {\r\n     return R6_make(symbol, arrow::r::symbols::create, std::move(x));\r\n   }\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:36:25.622+0000",
                    "updated": "2020-09-25T13:36:25.622+0000",
                    "started": "2020-09-25T13:36:25.622+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491029",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/491034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698445894\n\n\n   > So in short we would create the R6 object in C++ and don't have to manipulate the external pointers in R ? \r\n   \r\n   Ideally, right?\r\n   \r\n   > We would retain the same signatures ?\r\n   \r\n   Right, I think the most developer-friendly experience would be to pack the externalptr -> R6 logic into the as_sexp method. And yeah `..dispatch` would probably go away entirely because you'd directly instantiate the correct subclass; that dispatch is because the R side didn't know exactly which subclass it was getting returned.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:37:02.793+0000",
                    "updated": "2020-09-25T13:37:02.793+0000",
                    "started": "2020-09-25T13:37:02.793+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491034",
                    "issueId": "13308792"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/worklog/491190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois edited a comment on pull request #8256:\nURL: https://github.com/apache/arrow/pull/8256#issuecomment-698808913\n\n\n   ``` r\r\n   library(tidyverse)\r\n   \r\n   brio::read_lines(\"~/git/apache/arrow/r/src/arrowExports.cpp\") %>% \r\n     str_subset(\"^std::[a-z]+_ptr<\") %>% \r\n     str_remove(\" .*$\") %>% \r\n     unique() \r\n   #>  [1] \"std::shared_ptr<arrow::Array>\"                     \r\n   #>  [2] \"std::shared_ptr<arrow::DataType>\"                  \r\n   #>  [3] \"std::shared_ptr<arrow::ArrayData>\"                 \r\n   #>  [4] \"std::shared_ptr<arrow::ChunkedArray>\"              \r\n   #>  [5] \"std::shared_ptr<arrow::Buffer>\"                    \r\n   #>  [6] \"std::shared_ptr<arrow::util::Codec>\"               \r\n   #>  [7] \"std::shared_ptr<arrow::io::CompressedOutputStream>\"\r\n   #>  [8] \"std::shared_ptr<arrow::io::CompressedInputStream>\" \r\n   #>  [9] \"std::shared_ptr<arrow::compute::CastOptions>\"      \r\n   #> [10] \"std::shared_ptr<arrow::RecordBatch>\"               \r\n   #> [11] \"std::shared_ptr<arrow::Table>\"                     \r\n   #> [12] \"std::shared_ptr<arrow::csv::ReadOptions>\"          \r\n   #> [13] \"std::shared_ptr<arrow::csv::ParseOptions>\"         \r\n   #> [14] \"std::shared_ptr<arrow::csv::ConvertOptions>\"       \r\n   #> [15] \"std::shared_ptr<arrow::csv::TableReader>\"          \r\n   #> [16] \"std::shared_ptr<ds::ScannerBuilder>\"               \r\n   #> [17] \"std::shared_ptr<arrow::Schema>\"                    \r\n   #> [18] \"std::shared_ptr<ds::Dataset>\"                      \r\n   #> [19] \"std::shared_ptr<ds::UnionDataset>\"                 \r\n   #> [20] \"std::shared_ptr<ds::InMemoryDataset>\"              \r\n   #> [21] \"std::shared_ptr<ds::FileFormat>\"                   \r\n   #> [22] \"std::shared_ptr<fs::FileSystem>\"                   \r\n   #> [23] \"std::shared_ptr<ds::DatasetFactory>\"               \r\n   #> [24] \"std::shared_ptr<ds::ParquetFileFormat>\"            \r\n   #> [25] \"std::shared_ptr<ds::IpcFileFormat>\"                \r\n   #> [26] \"std::shared_ptr<ds::CsvFileFormat>\"                \r\n   #> [27] \"std::shared_ptr<ds::Partitioning>\"                 \r\n   #> [28] \"std::shared_ptr<ds::PartitioningFactory>\"          \r\n   #> [29] \"std::shared_ptr<ds::Scanner>\"                      \r\n   #> [30] \"std::shared_ptr<arrow::Field>\"                     \r\n   #> [31] \"std::shared_ptr<ds::Expression>\"                   \r\n   #> [32] \"std::shared_ptr<arrow::ipc::feather::Reader>\"      \r\n   #> [33] \"std::shared_ptr<fs::FileSelector>\"                 \r\n   #> [34] \"std::shared_ptr<arrow::io::InputStream>\"           \r\n   #> [35] \"std::shared_ptr<arrow::io::RandomAccessFile>\"      \r\n   #> [36] \"std::shared_ptr<arrow::io::OutputStream>\"          \r\n   #> [37] \"std::shared_ptr<fs::LocalFileSystem>\"              \r\n   #> [38] \"std::shared_ptr<fs::SubTreeFileSystem>\"            \r\n   #> [39] \"std::shared_ptr<fs::S3FileSystem>\"                 \r\n   #> [40] \"std::shared_ptr<arrow::io::MemoryMappedFile>\"      \r\n   #> [41] \"std::shared_ptr<arrow::io::ReadableFile>\"          \r\n   #> [42] \"std::shared_ptr<arrow::io::BufferReader>\"          \r\n   #> [43] \"std::shared_ptr<arrow::io::FileOutputStream>\"      \r\n   #> [44] \"std::shared_ptr<arrow::io::BufferOutputStream>\"    \r\n   #> [45] \"std::shared_ptr<arrow::json::ReadOptions>\"         \r\n   #> [46] \"std::shared_ptr<arrow::json::ParseOptions>\"        \r\n   #> [47] \"std::shared_ptr<arrow::json::TableReader>\"         \r\n   #> [48] \"std::shared_ptr<arrow::MemoryPool>\"                \r\n   #> [49] \"std::shared_ptr<arrow::ipc::MessageReader>\"        \r\n   #> [50] \"std::shared_ptr<arrow::ipc::Message>\"              \r\n   #> [51] \"std::shared_ptr<parquet::ArrowReaderProperties>\"   \r\n   #> [52] \"std::shared_ptr<parquet::arrow::FileReader>\"       \r\n   #> [53] \"std::shared_ptr<parquet::ArrowWriterProperties>\"   \r\n   #> [54] \"std::shared_ptr<parquet::WriterPropertiesBuilder>\" \r\n   #> [55] \"std::shared_ptr<parquet::WriterProperties>\"        \r\n   #> [56] \"std::shared_ptr<parquet::arrow::FileWriter>\"       \r\n   #> [57] \"std::shared_ptr<arrow::RecordBatchReader>\"         \r\n   #> [58] \"std::shared_ptr<arrow::ipc::RecordBatchFileReader>\"\r\n   #> [59] \"std::shared_ptr<arrow::ipc::RecordBatchWriter>\"    \r\n   #> [60] \"std::shared_ptr<arrow::Scalar>\"\r\n   ```\r\n   \r\n   <sup>Created on 2020-09-25 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-25T13:50:32.235+0000",
                    "updated": "2020-09-25T13:50:32.235+0000",
                    "started": "2020-09-25T13:50:32.235+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "491190",
                    "issueId": "13308792"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 36600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@d0f7768[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e43bf53[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@67a08844[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@54aa1ac4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@75f8a24f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@74d22676[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17537200[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@13ab2614[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@237114f4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@46f5677a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a3aded6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@ebca03[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 36600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 11 20:30:19 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-11T20:30:19.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9001/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-06-01T20:15:04.000+0000",
        "updated": "2020-11-11T21:04:57.000+0000",
        "timeoriginalestimate": null,
        "description": "This would prevent segfaults by putting the externalptr in the wrong kind of R6 container, plus allow us to skip a bunch of hackery where we try to track or guess the class of the object returned from call_function (could be Array, ChunkedArray, Scalar, RecordBatch, or Table).\r\n\r\nreticulate does something along these lines; it's a subclass of environment I think but not exactly an R6 class.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 36600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Box outputs as correct type in call_function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/comment/17209901",
                    "id": "17209901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~romainfrancois] [~npr] Based on the github conversation I assume we can postpone it to 3.0. Please reset the fix version if it can be included in 2.0.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2020-10-07T22:19:06.652+0000",
                    "updated": "2020-10-07T22:19:06.652+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13308792/comment/17230204",
                    "id": "17230204",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 8256\n[https://github.com/apache/arrow/pull/8256]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-11-11T20:30:19.804+0000",
                    "updated": "2020-11-11T20:30:19.804+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0febc:",
        "customfield_12314139": null
    }
}