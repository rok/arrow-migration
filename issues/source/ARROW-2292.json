{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13143795",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795",
    "key": "ARROW-2292",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2292/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4e1f8c83[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@165d345d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73b4d128[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c34ecdf[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5599bac2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7d7c5b57[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2814f841[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@36dbb88[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1bba5e8d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@483084e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bda2e6f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@65057567[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 12 18:10:40 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-12T18:10:37.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2292/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-03-09T04:25:04.000+0000",
        "updated": "2018-03-12T18:10:40.000+0000",
        "timeoriginalestimate": null,
        "description": "Now that we have {{pyarrow.foreign_buffer}}, things are a bit odd. We could call {{frombuffer}} something like {{py_buffer}} instead?",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] More consistent / intuitive name for pyarrow.frombuffer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16392389",
                    "id": "16392389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "cc [~pitrou]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-09T04:25:19.114+0000",
                    "updated": "2018-03-09T04:25:19.114+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16392652",
                    "id": "16392652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "{{py_buffer}} sounds reasonable to me (it's in line with {{to_pylist}}, {{to_pybytes}} etc.).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-03-09T09:39:00.481+0000",
                    "updated": "2018-03-09T09:39:00.481+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395313",
                    "id": "16395313",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1736: ARROW-2292: [Python] Rename frombuffer() to py_buffer()\nURL: https://github.com/apache/arrow/pull/1736\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T14:34:51.906+0000",
                    "updated": "2018-03-12T14:34:51.906+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395440",
                    "id": "16395440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1736: ARROW-2292: [Python] Rename frombuffer() to py_buffer()\nURL: https://github.com/apache/arrow/pull/1736#discussion_r173853157\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -849,6 +850,15 @@ def frombuffer(object obj):\n     return pyarrow_wrap_buffer(buf)\n \n \n+def frombuffer(object obj):\n+    \"\"\"\n+    Deprecated alias for `py_buffer`.\n+    \"\"\"\n+    warnings.warn(\"pa.frombuffer() is deprecated, use pa.py_buffer() instead\",\n+                  DeprecationWarning)\n \n Review comment:\n   I thought DeprecationWarning does not show up by default. FutureWarning instead?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T16:09:12.799+0000",
                    "updated": "2018-03-12T16:09:12.799+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395442",
                    "id": "16395442",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1736: ARROW-2292: [Python] Rename frombuffer() to py_buffer()\nURL: https://github.com/apache/arrow/pull/1736#discussion_r173853843\n \n \n\n ##########\n File path: python/pyarrow/io.pxi\n ##########\n @@ -849,6 +850,15 @@ def frombuffer(object obj):\n     return pyarrow_wrap_buffer(buf)\n \n \n+def frombuffer(object obj):\n+    \"\"\"\n+    Deprecated alias for `py_buffer`.\n+    \"\"\"\n+    warnings.warn(\"pa.frombuffer() is deprecated, use pa.py_buffer() instead\",\n+                  DeprecationWarning)\n \n Review comment:\n   Not by default, though it will show up in interactive settings such as IPython. I can switch to FutureWarning if you prefer.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T16:11:00.303+0000",
                    "updated": "2018-03-12T16:11:00.303+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395528",
                    "id": "16395528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1736: ARROW-2292: [Python] Rename frombuffer() to py_buffer()\nURL: https://github.com/apache/arrow/pull/1736#issuecomment-372388943\n \n \n   I tweaked to use the deprecation wrapper-maker and use FutureWarning (so this will show up even in non-interactive code -- this is the convention we've been using in pandas for visible deprecations so people should be used to it by now)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T17:12:48.493+0000",
                    "updated": "2018-03-12T17:12:48.493+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395626",
                    "id": "16395626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1736\n[https://github.com/apache/arrow/pull/1736]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-12T18:10:37.032+0000",
                    "updated": "2018-03-12T18:10:37.032+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13143795/comment/16395627",
                    "id": "16395627",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1736: ARROW-2292: [Python] Rename frombuffer() to py_buffer()\nURL: https://github.com/apache/arrow/pull/1736\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/doc/source/api.rst b/python/doc/source/api.rst\nindex 3db1a04b6d..cb9993302a 100644\n--- a/python/doc/source/api.rst\n+++ b/python/doc/source/api.rst\n@@ -213,7 +213,7 @@ Input / Output and Shared Memory\n    allocate_buffer\n    compress\n    decompress\n-   frombuffer\n+   py_buffer\n    foreign_buffer\n    Buffer\n    ResizableBuffer\ndiff --git a/python/doc/source/ipc.rst b/python/doc/source/ipc.rst\nindex bce8b1ed1e..c77888ab90 100644\n--- a/python/doc/source/ipc.rst\n+++ b/python/doc/source/ipc.rst\n@@ -296,12 +296,13 @@ which are zero-copy convertible to Python ``memoryview`` objects:\n \n    memoryview(components['data'][0])\n \n-A memoryview can be converted back to a ``Buffer`` with ``pyarrow.frombuffer``:\n+A memoryview can be converted back to a Arrow ``Buffer`` with\n+``pyarrow.py_buffer``:\n \n .. ipython:: python\n \n    mv = memoryview(components['data'][0])\n-   buf = pa.frombuffer(mv)\n+   buf = pa.py_buffer(mv)\n \n An object can be reconstructed from its component-based representation using\n ``deserialize_components``:\ndiff --git a/python/doc/source/memory.rst b/python/doc/source/memory.rst\nindex 4806bbb857..34664b898f 100644\n--- a/python/doc/source/memory.rst\n+++ b/python/doc/source/memory.rst\n@@ -50,7 +50,7 @@ implements the buffer protocol. Let's consider a bytes object:\n    import pyarrow as pa\n \n    data = b'abcdefghijklmnopqrstuvwxyz'\n-   buf = pa.frombuffer(data)\n+   buf = pa.py_buffer(data)\n    buf\n    buf.size\n \ndiff --git a/python/pyarrow/__init__.py b/python/pyarrow/__init__.py\nindex 965a37b4b9..bfd7d4db98 100644\n--- a/python/pyarrow/__init__.py\n+++ b/python/pyarrow/__init__.py\n@@ -28,7 +28,8 @@\n         def parse_version(root):\n             from setuptools_scm import version_from_scm\n             import setuptools_scm.git\n-            describe = setuptools_scm.git.DEFAULT_DESCRIBE + \" --match 'apache-arrow-[0-9]*'\"\n+            describe = (setuptools_scm.git.DEFAULT_DESCRIBE +\n+                        \" --match 'apache-arrow-[0-9]*'\")\n             # Strip catchall from the commandline\n             describe = describe.replace(\"--match *.*\", \"\")\n             version = setuptools_scm.git.parse(root, describe)\n@@ -86,8 +87,8 @@ def parse_version(root):\n from pyarrow.lib import TimestampType\n \n # Buffers, allocation\n-from pyarrow.lib import (Buffer, ResizableBuffer, foreign_buffer, compress,\n-                         decompress, allocate_buffer, frombuffer)\n+from pyarrow.lib import (Buffer, ResizableBuffer, foreign_buffer, py_buffer,\n+                         compress, decompress, allocate_buffer)\n \n from pyarrow.lib import (MemoryPool, total_allocated_bytes,\n                          set_memory_pool, default_memory_pool,\n@@ -163,7 +164,9 @@ def _plasma_store_entry_point():\n # ----------------------------------------------------------------------\n # Deprecations\n \n-from pyarrow.util import _deprecate_class  # noqa\n+from pyarrow.util import _deprecate_api  # noqa\n+\n+frombuffer = _deprecate_api('frombuffer', 'py_buffer', py_buffer, '0.9.0')\n \n # ----------------------------------------------------------------------\n # Returning absolute path to the pyarrow include directory (if bundled, e.g. in\ndiff --git a/python/pyarrow/io.pxi b/python/pyarrow/io.pxi\nindex 15ecd0164e..3947323233 100644\n--- a/python/pyarrow/io.pxi\n+++ b/python/pyarrow/io.pxi\n@@ -26,6 +26,7 @@ import six\n import sys\n import threading\n import time\n+import warnings\n \n \n # 64K\n@@ -211,7 +212,7 @@ cdef class NativeFile:\n         if isinstance(data, six.string_types):\n             data = tobytes(data)\n \n-        cdef Buffer arrow_buffer = frombuffer(data)\n+        cdef Buffer arrow_buffer = py_buffer(data)\n \n         cdef const uint8_t* buf = arrow_buffer.buffer.get().data()\n         cdef int64_t bufsize = len(arrow_buffer)\n@@ -833,14 +834,14 @@ cdef class BufferReader(NativeFile):\n         if isinstance(obj, Buffer):\n             self.buffer = obj\n         else:\n-            self.buffer = frombuffer(obj)\n+            self.buffer = py_buffer(obj)\n \n         self.rd_file.reset(new CBufferReader(self.buffer.buffer))\n         self.is_readable = True\n         self.closed = False\n \n \n-def frombuffer(object obj):\n+def py_buffer(object obj):\n     \"\"\"\n     Construct an Arrow buffer from a Python bytes object\n     \"\"\"\n@@ -966,7 +967,7 @@ def compress(object buf, codec='lz4', asbytes=False, memory_pool=None):\n         check_status(CCodec.Create(c_codec, &compressor))\n \n     if not isinstance(buf, Buffer):\n-        buf = frombuffer(buf)\n+        buf = py_buffer(buf)\n \n     c_buf = (<Buffer> buf).buffer.get()\n \n@@ -1031,7 +1032,7 @@ def decompress(object buf, decompressed_size=None, codec='lz4',\n         check_status(CCodec.Create(c_codec, &compressor))\n \n     if not isinstance(buf, Buffer):\n-        buf = frombuffer(buf)\n+        buf = py_buffer(buf)\n \n     c_buf = (<Buffer> buf).buffer.get()\n \ndiff --git a/python/pyarrow/serialization.py b/python/pyarrow/serialization.py\nindex bdf7535796..6c8df350bf 100644\n--- a/python/pyarrow/serialization.py\n+++ b/python/pyarrow/serialization.py\n@@ -23,7 +23,7 @@\n \n from pyarrow.compat import builtin_pickle\n from pyarrow.lib import (SerializationContext, _default_serialization_context,\n-                         frombuffer)\n+                         py_buffer)\n \n try:\n     import cloudpickle\n@@ -46,7 +46,7 @@ def _deserialize_numpy_array_list(data):\n \n def _pickle_to_buffer(x):\n     pickled = builtin_pickle.dumps(x, protocol=builtin_pickle.HIGHEST_PROTOCOL)\n-    return frombuffer(pickled)\n+    return py_buffer(pickled)\n \n \n def _load_pickle_from_buffer(data):\ndiff --git a/python/pyarrow/tests/test_io.py b/python/pyarrow/tests/test_io.py\nindex fe680133b4..591381085c 100644\n--- a/python/pyarrow/tests/test_io.py\n+++ b/python/pyarrow/tests/test_io.py\n@@ -170,7 +170,7 @@ def test_python_file_closing():\n def test_buffer_bytes():\n     val = b'some data'\n \n-    buf = pa.frombuffer(val)\n+    buf = pa.py_buffer(val)\n     assert isinstance(buf, pa.Buffer)\n     assert not buf.is_mutable\n \n@@ -182,7 +182,7 @@ def test_buffer_bytes():\n def test_buffer_memoryview():\n     val = b'some data'\n \n-    buf = pa.frombuffer(val)\n+    buf = pa.py_buffer(val)\n     assert isinstance(buf, pa.Buffer)\n     assert not buf.is_mutable\n \n@@ -194,7 +194,7 @@ def test_buffer_memoryview():\n def test_buffer_bytearray():\n     val = bytearray(b'some data')\n \n-    buf = pa.frombuffer(val)\n+    buf = pa.py_buffer(val)\n     assert isinstance(buf, pa.Buffer)\n     assert buf.is_mutable\n \n@@ -206,14 +206,14 @@ def test_buffer_bytearray():\n def test_buffer_invalid():\n     with pytest.raises(TypeError,\n                        match=\"(bytes-like object|buffer interface)\"):\n-        pa.frombuffer(None)\n+        pa.py_buffer(None)\n \n \n def test_buffer_to_numpy():\n     # Make sure creating a numpy array from an arrow buffer works\n     byte_array = bytearray(20)\n     byte_array[0] = 42\n-    buf = pa.frombuffer(byte_array)\n+    buf = pa.py_buffer(byte_array)\n     array = np.frombuffer(buf, dtype=\"uint8\")\n     assert array[0] == byte_array[0]\n     byte_array[0] += 1\n@@ -224,14 +224,14 @@ def test_buffer_to_numpy():\n def test_buffer_from_numpy():\n     # C-contiguous\n     arr = np.arange(12, dtype=np.int8).reshape((3, 4))\n-    buf = pa.frombuffer(arr)\n+    buf = pa.py_buffer(arr)\n     assert buf.to_pybytes() == arr.tobytes()\n     # F-contiguous; note strides informations is lost\n-    buf = pa.frombuffer(arr.T)\n+    buf = pa.py_buffer(arr.T)\n     assert buf.to_pybytes() == arr.tobytes()\n     # Non-contiguous\n     with pytest.raises(ValueError, match=\"not contiguous\"):\n-        buf = pa.frombuffer(arr.T[::2])\n+        buf = pa.py_buffer(arr.T[::2])\n \n \n def test_buffer_equals():\n@@ -250,11 +250,11 @@ def ne(a, b):\n     b2 = bytearray(b1)\n     b3 = bytearray(b1)\n     b3[0] = 42\n-    buf1 = pa.frombuffer(b1)\n-    buf2 = pa.frombuffer(b2)\n-    buf3 = pa.frombuffer(b2)\n-    buf4 = pa.frombuffer(b3)\n-    buf5 = pa.frombuffer(np.frombuffer(b2, dtype=np.int16))\n+    buf1 = pa.py_buffer(b1)\n+    buf2 = pa.py_buffer(b2)\n+    buf3 = pa.py_buffer(b2)\n+    buf4 = pa.py_buffer(b3)\n+    buf5 = pa.py_buffer(np.frombuffer(b2, dtype=np.int16))\n     eq(buf1, buf1)\n     eq(buf1, buf2)\n     eq(buf2, buf3)\n@@ -266,7 +266,7 @@ def ne(a, b):\n def test_buffer_hashing():\n     # Buffers are unhashable\n     with pytest.raises(TypeError, match=\"unhashable\"):\n-        hash(pa.frombuffer(b'123'))\n+        hash(pa.py_buffer(b'123'))\n \n \n def test_foreign_buffer():\n@@ -307,7 +307,7 @@ def test_compress_decompress():\n     test_data = (np.random.randint(0, 255, size=INPUT_SIZE)\n                  .astype(np.uint8)\n                  .tostring())\n-    test_buf = pa.frombuffer(test_data)\n+    test_buf = pa.py_buffer(test_data)\n \n     codecs = ['lz4', 'snappy', 'gzip', 'zstd', 'brotli']\n     for codec in codecs:\n@@ -333,7 +333,7 @@ def test_compress_decompress():\n def test_buffer_memoryview_is_immutable():\n     val = b'some data'\n \n-    buf = pa.frombuffer(val)\n+    buf = pa.py_buffer(val)\n     assert not buf.is_mutable\n     assert isinstance(buf, pa.Buffer)\n \n@@ -368,9 +368,9 @@ def test_uninitialized_buffer():\n     with check_uninitialized():\n         memoryview(buf)\n     with check_uninitialized():\n-        buf.equals(pa.frombuffer(b''))\n+        buf.equals(pa.py_buffer(b''))\n     with check_uninitialized():\n-        pa.frombuffer(b'').equals(buf)\n+        pa.py_buffer(b'').equals(buf)\n \n \n def test_memory_output_stream():\n@@ -400,7 +400,7 @@ def test_inmemory_write_after_closed():\n \n def test_buffer_protocol_ref_counting():\n     def make_buffer(bytes_obj):\n-        return bytearray(pa.frombuffer(bytes_obj))\n+        return bytearray(pa.py_buffer(bytes_obj))\n \n     buf = make_buffer(b'foo')\n     gc.collect()\ndiff --git a/python/pyarrow/tests/test_serialization.py b/python/pyarrow/tests/test_serialization.py\nindex 64aab06712..7ddf3958e5 100644\n--- a/python/pyarrow/tests/test_serialization.py\n+++ b/python/pyarrow/tests/test_serialization.py\n@@ -445,7 +445,7 @@ class BufferClass(object):\n         pass\n \n     def serialize_buffer_class(obj):\n-        return pa.frombuffer(b\"hello\")\n+        return pa.py_buffer(b\"hello\")\n \n     def deserialize_buffer_class(serialized_obj):\n         return serialized_obj\n@@ -581,7 +581,7 @@ def test_serialize_subclasses():\n \n \n def test_serialize_to_components_invalid_cases():\n-    buf = pa.frombuffer(b'hello')\n+    buf = pa.py_buffer(b'hello')\n \n     components = {\n         'num_tensors': 0,\n@@ -631,7 +631,7 @@ def test_deserialize_buffer_in_different_process():\n     import subprocess\n \n     f = tempfile.NamedTemporaryFile(delete=False)\n-    b = pa.serialize(pa.frombuffer(b'hello')).to_buffer()\n+    b = pa.serialize(pa.py_buffer(b'hello')).to_buffer()\n     f.write(b.to_pybytes())\n     f.close()\n \ndiff --git a/python/pyarrow/util.py b/python/pyarrow/util.py\nindex d984e19215..b8825658d8 100644\n--- a/python/pyarrow/util.py\n+++ b/python/pyarrow/util.py\n@@ -27,11 +27,11 @@ def decorator(g):\n     return decorator\n \n \n-def _deprecate_class(old_name, new_name, klass, next_version='0.5.0'):\n+def _deprecate_api(old_name, new_name, api, next_version):\n     msg = ('pyarrow.{0} is deprecated as of {1}, please use {2} instead'\n            .format(old_name, next_version, new_name))\n \n-    def deprecated_factory(*args, **kwargs):\n+    def wrapper(*args, **kwargs):\n         warnings.warn(msg, FutureWarning)\n-        return klass(*args)\n-    return deprecated_factory\n+        return api(*args)\n+    return wrapper\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-12T18:10:40.246+0000",
                    "updated": "2018-03-12T18:10:40.246+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|i3r34n:",
        "customfield_12314139": null
    }
}