{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13150016",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016",
    "key": "ARROW-2391",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=suicas",
            "name": "suicas",
            "key": "suicas",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dave Challis",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=suicas",
            "name": "suicas",
            "key": "suicas",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dave Challis",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2391/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4e844603[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@224d1e19[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@468633f0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c7150ef[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22734e30[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7e969ff4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9f82a65[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@f88e59d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37b22892[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d9178af[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3572de7a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7d9e7144[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 09 20:27:20 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-09T19:54:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2391/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-04-04T14:16:16.000+0000",
        "updated": "2018-07-27T15:54:11.000+0000",
        "timeoriginalestimate": null,
        "description": "When trying to call `pyarrow.Table.from_pandas` with a `pandas.DataFrame` and a `pyarrow.Schema` provided, the function call results in a segmentation fault if Pandas `datetime64[ns]` column tries to be converted to a `pyarrow.date64` type.\r\n\r\nA minimal example which shows this is:\r\n{code:python}\r\nimport pandas as pd\r\nimport pyarrow as pa\r\n\r\ndf = pd.DataFrame({'created': ['2018-05-10T10:24:01']})\r\ndf['created'] = pd.to_datetime(df['created'])}}\r\nschema = pa.schema([pa.field('created', pa.date64())])\r\npa.Table.from_pandas(df, schema=schema)\r\n{code}\r\n\r\nExecuting the above causes the python interpreter to exit with \"Segmentation fault: 11\".\r\n\r\nAttempting to convert into various other datatypes (by specifying different schemas) either succeeds, or raises an exception if the conversion is invalid.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "Mac OS High Sierra\r\nPython 3.6",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16429289",
                    "id": "16429289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "Confirmed, it segfaults with the latest master.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-04-07T09:38:01.246+0000",
                    "updated": "2018-04-07T09:38:01.246+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430449",
                    "id": "16430449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "https://github.com/apache/arrow/pull/1859",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-04-09T12:27:02.666+0000",
                    "updated": "2018-04-09T12:27:02.666+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430464",
                    "id": "16430464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180075997\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   Looks like the `options.allow_time_truncate` test and also the `out_data` declaration could be factored out.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T12:39:45.271+0000",
                    "updated": "2018-04-09T12:39:45.271+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430465",
                    "id": "16430465",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180075435\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -807,6 +807,31 @@ def test_datetime64_to_date32(self):\n \n         assert arr2.equals(arr.cast('date32'))\n \n+    def test_pandas_datetime_to_date64(self):\n \n Review comment:\n   Could you expand the test to also check the case where a non-None mask is passed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T12:39:45.414+0000",
                    "updated": "2018-04-09T12:39:45.414+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430544",
                    "id": "16430544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180099320\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   @pitrou I'm not sure how should I factor out `options.allow_time_truncate` check. Use a single loop and check for the `null_count` inside?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T13:47:43.378+0000",
                    "updated": "2018-04-09T13:47:43.378+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430548",
                    "id": "16430548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180100389\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   `options.allow_time_truncate` is a constant accross this whole piece of code, so just add a higher-level `if` statement around all this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T13:51:11.240+0000",
                    "updated": "2018-04-09T13:51:11.240+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430564",
                    "id": "16430564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180102499\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   Doesn't the first value encountered with time part trigger the error - which has to be checked inside the loop?\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T13:57:35.363+0000",
                    "updated": "2018-04-09T13:57:35.363+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430566",
                    "id": "16430566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180103071\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   What I mean is that you can skip the whole thing is `options.allow_time_truncate` is true (the compiler might do the optimization for us, but still).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T13:59:18.102+0000",
                    "updated": "2018-04-09T13:59:18.102+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430574",
                    "id": "16430574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180106203\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   I might misunderstand, but:\r\n   \r\n   ```python\r\n   # with allow_time_truncate\r\n   [\r\n       '2018-05-10T00:00:00',\r\n       '2018-05-11T00:00:00',\r\n       '2018-05-12T10:24:01',\r\n   ]  # OK\r\n   \r\n   # without allow_time_truncate\r\n   [\r\n       '2018-05-10T00:00:00',\r\n       '2018-05-11T00:00:00',\r\n       '2018-05-12T10:24:01',  # <- fails here\r\n   ]  \r\n   \r\n   # with allow_time_truncate\r\n   [\r\n       '2018-05-10T00:00:00',\r\n       '2018-05-11T00:00:00',\r\n       '2018-05-12T00:00:00',\r\n   ]  # OK\r\n   \r\n   # without allow_time_truncate\r\n   [\r\n       '2018-05-10T00:00:00',\r\n       '2018-05-11T00:00:00',\r\n       '2018-05-12T00:00:00',\r\n   ]  # OK - this would fail if I test outside the loop\r\n   \r\n   \r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T14:08:49.217+0000",
                    "updated": "2018-04-09T14:08:49.217+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430623",
                    "id": "16430623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180118162\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   What I'm suggesting is:\r\n   ```cpp\r\n       if (!options.allow_time_truncate) {\r\n         // Ensure that intraday milliseconds have been zeroed out\r\n         auto out_data = GetMutableValues<int64_t>(output, 1);\r\n   \r\n         if (input.null_count != 0) {\r\n           internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\r\n                                             input.length);\r\n   \r\n           for (int64_t i = 0; i < input.length; ++i) {\r\n             const int64_t remainder = out_data[i] % kMillisecondsInDay;\r\n             if (ARROW_PREDICT_FALSE(remainder > 0 && bit_reader.IsSet())) {\r\n               ctx->SetStatus(\r\n                   Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\r\n               break;\r\n             }\r\n             out_data[i] -= remainder;\r\n             bit_reader.Next();\r\n           }\r\n         } else {\r\n           for (int64_t i = 0; i < input.length; ++i) {\r\n             const int64_t remainder = out_data[i] % kMillisecondsInDay;\r\n             if (ARROW_PREDICT_FALSE(remainder > 0)) {\r\n               ctx->SetStatus(\r\n                   Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\r\n               break;\r\n             }\r\n             out_data[i] -= remainder;\r\n           }\r\n         }\r\n       }\r\n   ```\r\n   \r\n   Does it make sense?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T14:44:17.233+0000",
                    "updated": "2018-04-09T14:44:17.233+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430645",
                    "id": "16430645",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180122730\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   Sure, but don't we need another branch then to handle when time truncation is allowed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T14:56:25.467+0000",
                    "updated": "2018-04-09T14:56:25.467+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430734",
                    "id": "16430734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180136727\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   Wow. Sorry, I had completely overlooked the `out_data[i] -= remainder;` line :-S\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T15:37:23.314+0000",
                    "updated": "2018-04-09T15:37:23.314+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430775",
                    "id": "16430775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#issuecomment-379803722\n \n \n   Waiting for the AppVeyor build before merging this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T16:01:45.332+0000",
                    "updated": "2018-04-09T16:01:45.332+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16430843",
                    "id": "16430843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on a change in pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#discussion_r180156054\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/cast.cc\n ##########\n @@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n \n-    // Ensure that intraday milliseconds have been zeroed out\n-    auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+      // Ensure that intraday milliseconds have been zeroed out\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      auto out_data = GetMutableValues<int64_t>(output, 1);\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n \n Review comment:\n   No problem :) I'm still learning arrow.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T16:36:42.447+0000",
                    "updated": "2018-04-09T16:36:42.447+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16431128",
                    "id": "16431128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou closed pull request #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/compute/kernels/cast.cc b/cpp/src/arrow/compute/kernels/cast.cc\nindex eaebd7cef..bfd519d18 100644\n--- a/cpp/src/arrow/compute/kernels/cast.cc\n+++ b/cpp/src/arrow/compute/kernels/cast.cc\n@@ -396,21 +396,34 @@ struct CastFunctor<Date64Type, TimestampType> {\n     ShiftTime<int64_t, int64_t>(ctx, options, conversion.first, conversion.second, input,\n                                 output);\n \n-    internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n-                                      input.length);\n-\n     // Ensure that intraday milliseconds have been zeroed out\n     auto out_data = GetMutableValues<int64_t>(output, 1);\n-    for (int64_t i = 0; i < input.length; ++i) {\n-      const int64_t remainder = out_data[i] % kMillisecondsInDay;\n-      if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n-                              remainder > 0)) {\n-        ctx->SetStatus(\n-            Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n-        break;\n+\n+    if (input.null_count != 0) {\n+      internal::BitmapReader bit_reader(input.buffers[0]->data(), input.offset,\n+                                        input.length);\n+\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && bit_reader.IsSet() &&\n+                                remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n+        bit_reader.Next();\n+      }\n+    } else {\n+      for (int64_t i = 0; i < input.length; ++i) {\n+        const int64_t remainder = out_data[i] % kMillisecondsInDay;\n+        if (ARROW_PREDICT_FALSE(!options.allow_time_truncate && remainder > 0)) {\n+          ctx->SetStatus(\n+              Status::Invalid(\"Timestamp value had non-zero intraday milliseconds\"));\n+          break;\n+        }\n+        out_data[i] -= remainder;\n       }\n-      out_data[i] -= remainder;\n-      bit_reader.Next();\n     }\n   }\n };\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex c6e2b75be..de6120176 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -807,6 +807,44 @@ def test_datetime64_to_date32(self):\n \n         assert arr2.equals(arr.cast('date32'))\n \n+    @pytest.mark.parametrize('mask', [\n+        None,\n+        np.ones(3),\n+        np.array([True, False, False]),\n+    ])\n+    def test_pandas_datetime_to_date64(self, mask):\n+        s = pd.to_datetime([\n+            '2018-05-10T00:00:00',\n+            '2018-05-11T00:00:00',\n+            '2018-05-12T00:00:00',\n+        ])\n+        arr = pa.Array.from_pandas(s, type=pa.date64(), mask=mask)\n+\n+        data = np.array([\n+            date(2018, 5, 10),\n+            date(2018, 5, 11),\n+            date(2018, 5, 12)\n+        ])\n+        expected = pa.array(data, mask=mask, type=pa.date64())\n+\n+        assert arr.equals(expected)\n+\n+    @pytest.mark.parametrize('mask', [\n+        None,\n+        np.ones(3),\n+        np.array([True, False, False])\n+    ])\n+    def test_pandas_datetime_to_date64_failures(self, mask):\n+        s = pd.to_datetime([\n+            '2018-05-10T10:24:01',\n+            '2018-05-11T10:24:01',\n+            '2018-05-12T10:24:01',\n+        ])\n+\n+        expected_msg = 'Timestamp value had non-zero intraday milliseconds'\n+        with pytest.raises(pa.ArrowInvalid, msg=expected_msg):\n+            pa.Array.from_pandas(s, type=pa.date64(), mask=mask)\n+\n     def test_date_infer(self):\n         df = pd.DataFrame({\n             'date': [date(2000, 1, 1),\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T19:54:51.671+0000",
                    "updated": "2018-04-09T19:54:51.671+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16431129",
                    "id": "16431129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 1859\n[https://github.com/apache/arrow/pull/1859]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-04-09T19:54:53.124+0000",
                    "updated": "2018-04-09T19:54:53.124+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16431167",
                    "id": "16431167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou commented on issue #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#issuecomment-379882116\n \n \n   Thank you @kszucs !\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T20:23:22.003+0000",
                    "updated": "2018-04-09T20:23:22.003+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13150016/comment/16431175",
                    "id": "16431175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kszucs commented on issue #1859: ARROW-2391: [C++/Python] Segmentation fault from PyArrow when mapping Pandas datetime column to pyarrow.date64\nURL: https://github.com/apache/arrow/pull/1859#issuecomment-379883273\n \n \n   My pleasure!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-09T20:27:20.290+0000",
                    "updated": "2018-04-09T20:27:20.290+0000"
                }
            ],
            "maxResults": 18,
            "total": 18,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s4yn:",
        "customfield_12314139": null
    }
}