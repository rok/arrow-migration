{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13375344",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344",
    "key": "ARROW-12567",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12567/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 30,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589732",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes opened a new pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173\n\n\n   #### Implement LPAD and RPAD functions for string input values.\r\n   \r\n   - LPAD([string] basetext, [number] x, [optional string] padtext)\r\n   - RPAD([string] basetext, [number] x, [optional string] padtext)\r\n   \r\n   #### Description\r\n   \r\n   lpad - Prepends padtext to basetext in a way that allows as many characters as possible from padtext given an output string length of x. When x is less than or equal to the length of basetext, only characters from basetext are printed in the output. If padtext is omitted then spaces are prepended.\r\n   \r\n   rpad - Appends padtext to basetext in a way that allows as many characters as possible from padtext given an output string length of x. When x is less than or equal to the length of basetext, only characters from basetext are printed in the output. If padtext is omitted then spaces are appended.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T13:24:10.205+0000",
                    "updated": "2021-04-27T13:24:10.205+0000",
                    "started": "2021-04-27T13:24:10.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589732",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173#issuecomment-827603931\n\n\n   https://issues.apache.org/jira/browse/ARROW-12567\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T13:24:37.125+0000",
                    "updated": "2021-04-27T13:24:37.125+0000",
                    "started": "2021-04-27T13:24:37.124+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589734",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589991",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 opened a new pull request #10178:\nURL: https://github.com/apache/arrow/pull/10178\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T19:38:16.218+0000",
                    "updated": "2021-04-27T19:38:16.218+0000",
                    "started": "2021-04-27T19:38:16.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589991",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589993",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10178:\nURL: https://github.com/apache/arrow/pull/10178#issuecomment-827866922\n\n\n   https://issues.apache.org/jira/browse/ARROW-12567\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T19:38:35.804+0000",
                    "updated": "2021-04-27T19:38:35.804+0000",
                    "started": "2021-04-27T19:38:35.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589993",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 closed pull request #10178:\nURL: https://github.com/apache/arrow/pull/10178\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T19:39:12.425+0000",
                    "updated": "2021-04-27T19:39:12.425+0000",
                    "started": "2021-04-27T19:39:12.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589995",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 opened a new pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T19:41:42.262+0000",
                    "updated": "2021-04-27T19:41:42.262+0000",
                    "started": "2021-04-27T19:41:42.261+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589998",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/589999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#issuecomment-827872895\n\n\n   https://issues.apache.org/jira/browse/ARROW-12567\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-27T19:42:15.830+0000",
                    "updated": "2021-04-27T19:42:15.830+0000",
                    "started": "2021-04-27T19:42:15.829+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "589999",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r621918985\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.h\n##########\n@@ -0,0 +1,61 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/like_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for SQL 'ilike'\n+class GANDIVA_EXPORT IlikeHolder : public FunctionHolder {\n\nReview comment:\n       You can reuse the LikeHolder class and provide the case-sensitivity option in the make method\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       this seems incorrect, they should be case-insensitive\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T08:12:34.466+0000",
                    "updated": "2021-04-28T08:12:34.466+0000",
                    "started": "2021-04-28T08:12:34.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590198",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173#discussion_r621930991\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -1422,6 +1422,239 @@ const char* replace_utf8_utf8_utf8(gdv_int64 context, const char* text,\n                                              out_len);\n }\n \n+FORCE_INLINE\n+const char* lpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (return_length == text_char_count ||\n+      (return_length > text_char_count && fill_text_len == 0)) {\n+    // case where the return length is same as the text's length, or if it need to\n+    // fill into text but \"fill_text\" is empty, then return text directly.\n+    *out_len = text_len;\n+    return text;\n+  } else if (return_length < text_char_count) {\n+    // case where it truncates the result on return length.\n+    *out_len = utf8_byte_pos(context, text, text_len, return_length);\n+    return text;\n+  } else {\n+    // case (return_length > text_char_count)\n+    // case where it needs to copy \"fill_text\" on the string left. The total number\n+    // of chars to copy is given by (return_length -  text_char_count)\n+    char* ret =\n+        reinterpret_cast<gdv_binary>(gdv_fn_context_arena_malloc(context, return_length));\n+    if (ret == nullptr) {\n+      gdv_fn_context_set_error_msg(context,\n+                                   \"Could not allocate memory for output string\");\n+      *out_len = 0;\n+      return \"\";\n+    }\n+    // try to fulfill the return string with the \"fill_text\" continuously\n+    int32_t copied_chars_count = 0;\n+    int32_t copied_chars_position = 0;\n+    while (copied_chars_count < return_length - text_char_count) {\n+      int32_t char_len;\n+      int32_t fill_index;\n+      // for each char, evaluate its length to consider it when mem copying\n+      for (fill_index = 0; fill_index < fill_text_len; fill_index += char_len) {\n+        if (copied_chars_count >= return_length - text_char_count) {\n+          break;\n+        }\n+        char_len = utf8_char_length(fill_text[fill_index]);\n+        copied_chars_count++;\n+      }\n+      memcpy(ret + copied_chars_position, fill_text, fill_index);\n+      copied_chars_position += fill_index;\n+    }\n+    // after fulfilling the text, copy the main string\n+    memcpy(ret + copied_chars_position, text, text_len);\n+    *out_len = copied_chars_position + text_len;\n+    return ret;\n+  }\n+}\n+\n+FORCE_INLINE\n+const char* rpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  if (return_length == text_char_count ||\n+      (return_length > text_char_count && fill_text_len == 0)) {\n+    // case where the return length is same as the text's length, or if it need to\n+    // fill into text but \"fill_text\" is empty, then return text directly.\n+    *out_len = text_len;\n+    return text;\n+  } else if (return_length < text_char_count) {\n+    // case where it truncates the result on return length.\n+    *out_len = utf8_byte_pos(context, text, text_len, return_length);\n+    return text;\n+  } else {\n+    // case (return_length > text_char_count)\n+    // case where it needs to copy \"fill_text\" on the string right\n+    char* ret =\n+        reinterpret_cast<gdv_binary>(gdv_fn_context_arena_malloc(context, return_length));\n+    if (ret == nullptr) {\n+      gdv_fn_context_set_error_msg(context,\n+                                   \"Could not allocate memory for output string\");\n+      *out_len = 0;\n+      return \"\";\n+    }\n+    // fulfill the initial text copying the main input string\n+    memcpy(ret, text, text_len);\n+    // try to fulfill the return string with the \"fill_text\" continuously\n+    int32_t copied_chars_count = 0;\n+    int32_t copied_chars_position = 0;\n+    while (text_char_count + copied_chars_count < return_length) {\n+      int32_t char_len;\n+      int32_t fill_length;\n+      // for each char, evaluate its length to consider it when mem copying\n+      for (fill_length = 0; fill_length < fill_text_len; fill_length += char_len) {\n+        if (text_char_count + copied_chars_count >= return_length) {\n+          break;\n+        }\n+        char_len = utf8_char_length(fill_text[fill_length]);\n+        copied_chars_count++;\n+      }\n+      memcpy(ret + text_len + copied_chars_position, fill_text, fill_length);\n+      copied_chars_position += fill_length;\n+    }\n+    *out_len = copied_chars_position + text_len;\n+    return ret;\n+  }\n+}\n+\n+FORCE_INLINE\n+const char* lpad_no_fill_text(gdv_int64 context, const char* text, gdv_int32 text_len,\n\nReview comment:\n       just have a single lpad & rpad impl and call that function with ' ' for no_fill case\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -1422,6 +1422,239 @@ const char* replace_utf8_utf8_utf8(gdv_int64 context, const char* text,\n                                              out_len);\n }\n \n+FORCE_INLINE\n+const char* lpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n\nReview comment:\n       i think its better to add a new function that ignores invalid utf8 chars (ie count as size 1) instead of silently returning empty string\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T10:25:13.639+0000",
                    "updated": "2021-04-28T10:25:13.639+0000",
                    "started": "2021-04-28T10:25:13.639+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590279",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622144893\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       not really, the pattern has (?i)(https://github.com/google/re2/issues/197) to turn case-insensitive on for the expression.\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       not really, the pattern has (?i)(https://github.com/google/re2/issues/197) to turn case-insensitive on for the pattern.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T12:48:57.297+0000",
                    "updated": "2021-04-28T12:48:57.297+0000",
                    "started": "2021-04-28T12:48:57.297+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590358",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590364",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622147228\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       this matching doesn't matter..actual starts_with, ends_with, sub_str are not case-insensitive\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T12:51:24.821+0000",
                    "updated": "2021-04-28T12:51:24.821+0000",
                    "started": "2021-04-28T12:51:24.820+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590364",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622148838\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       Here we match on the pattern for starts_with, ends_with cases, and replace with them..which won't be case-insensitive\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T12:53:29.415+0000",
                    "updated": "2021-04-28T12:53:29.415+0000",
                    "started": "2021-04-28T12:53:29.415+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590369",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622383395\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.h\n##########\n@@ -0,0 +1,61 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/like_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for SQL 'ilike'\n+class GANDIVA_EXPORT IlikeHolder : public FunctionHolder {\n\nReview comment:\n       Ok, I created a Make method and constructor for the ILIKE function on LikeHolder.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T17:15:56.267+0000",
                    "updated": "2021-04-28T17:15:56.267+0000",
                    "started": "2021-04-28T17:15:56.266+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590524",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622383395\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.h\n##########\n@@ -0,0 +1,61 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include <memory>\n+#include <string>\n+\n+#include <re2/re2.h>\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/like_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+\n+/// Function Holder for SQL 'ilike'\n+class GANDIVA_EXPORT IlikeHolder : public FunctionHolder {\n\nReview comment:\n       Ok, I created a Make method and constructor for the ILIKE function on LikeHolder, and deleted the IlikeHolder\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T17:16:21.946+0000",
                    "updated": "2021-04-28T17:16:21.946+0000",
                    "started": "2021-04-28T17:16:21.946+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590526",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622384628\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       Ok, now both like and ilike are using the same method.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T17:17:38.380+0000",
                    "updated": "2021-04-28T17:17:38.380+0000",
                    "started": "2021-04-28T17:17:38.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590528",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on a change in pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173#discussion_r622568548\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -1422,6 +1422,239 @@ const char* replace_utf8_utf8_utf8(gdv_int64 context, const char* text,\n                                              out_len);\n }\n \n+FORCE_INLINE\n+const char* lpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n\nReview comment:\n       @projjal Do you think it should have a new function signature with the same behavior but with only this difference? \r\n   Or it is better to modify this function for this behavior?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-28T21:23:55.814+0000",
                    "updated": "2021-04-28T21:23:55.814+0000",
                    "started": "2021-04-28T21:23:55.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590683",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590888",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r622833851\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       This is not yet fixed. You are still replacing with starts_with, ends_with which are case-sensitive. You need to disable TryOptimise for ILIKE\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T08:21:57.258+0000",
                    "updated": "2021-04-29T08:21:57.258+0000",
                    "started": "2021-04-29T08:21:57.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590888",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/590889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173#discussion_r622835316\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -1422,6 +1422,239 @@ const char* replace_utf8_utf8_utf8(gdv_int64 context, const char* text,\n                                              out_len);\n }\n \n+FORCE_INLINE\n+const char* lpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n\nReview comment:\n       Ah.  i mistyped. I meant modifying this function only.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T08:23:51.627+0000",
                    "updated": "2021-04-29T08:23:51.627+0000",
                    "started": "2021-04-29T08:23:51.627+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "590889",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/591008",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "frank400 commented on a change in pull request #10179:\nURL: https://github.com/apache/arrow/pull/10179#discussion_r623083315\n\n\n\n##########\nFile path: cpp/src/gandiva/ilike_holder.cc\n##########\n@@ -0,0 +1,101 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#include \"gandiva/ilike_holder.h\"\n+\n+#include <regex>\n+#include \"gandiva/node.h\"\n+#include \"gandiva/regex_util.h\"\n+\n+namespace gandiva {\n+RE2::Options IlikeHolder::regex_op_ = RE2::Options();\n+\n+RE2 IlikeHolder::starts_with_regex_(R\"((?i)(\\w|\\s)*\\.\\*)\");\n+RE2 IlikeHolder::ends_with_regex_(R\"((?i)\\.\\*(\\w|\\s)*)\");\n+RE2 IlikeHolder::is_substr_regex_(R\"((?i)\\.\\*(\\w|\\s)*\\.\\*)\");\n+\n+// Short-circuit pattern matches for the following common sub cases :\n+// - starts_with, ends_with and is_substr\n+const FunctionNode IlikeHolder::TryOptimize(const FunctionNode& node) {\n+  std::shared_ptr<IlikeHolder> holder;\n+  auto status = Make(node, &holder);\n+  if (status.ok()) {\n+    std::string& pattern = holder->pattern_;\n+    auto literal_type = node.children().at(1)->return_type();\n+\n+    if (RE2::FullMatch(pattern, starts_with_regex_)) {\n\nReview comment:\n       Done, sorry I thought first that it had no difference.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T14:03:01.603+0000",
                    "updated": "2021-04-29T14:03:01.603+0000",
                    "started": "2021-04-29T14:03:01.603+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591008",
                    "issueId": "13375344"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/worklog/591032",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jpedroantunes commented on a change in pull request #10173:\nURL: https://github.com/apache/arrow/pull/10173#discussion_r623128543\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/string_ops.cc\n##########\n@@ -1422,6 +1422,239 @@ const char* replace_utf8_utf8_utf8(gdv_int64 context, const char* text,\n                                              out_len);\n }\n \n+FORCE_INLINE\n+const char* lpad(gdv_int64 context, const char* text, gdv_int32 text_len,\n+                 gdv_int32 return_length, const char* fill_text, gdv_int32 fill_text_len,\n+                 gdv_int32* out_len) {\n+  // if the text length or the defined return length (number of characters to return)\n+  // is <=0, then return an empty string.\n+  if (text_len == 0 || return_length <= 0) {\n+    *out_len = 0;\n+    return \"\";\n+  }\n+\n+  // initially counts the number of utf8 characters in the defined text and fill_text\n+  int32_t text_char_count = utf8_length(context, text, text_len);\n+  int32_t fill_char_count = utf8_length(context, fill_text, fill_text_len);\n+  // text_char_count is zero if input has invalid utf8 char\n+  // fill_char_count is zero if fill_text_len is > 0 and its value has invalid utf8 char\n+  if (text_char_count == 0 || (fill_text_len > 0 && fill_char_count == 0)) {\n\nReview comment:\n       Waiting for confirmation to define if we should really implement this behavior of ignoring invalid characters\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-29T14:51:50.952+0000",
                    "updated": "2021-04-29T14:51:50.952+0000",
                    "started": "2021-04-29T14:51:50.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "591032",
                    "issueId": "13375344"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4daa4f9a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3adca0d3[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f79f95[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5af27dc0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e209473[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@52dcee8d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b6ec874[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@223ba4a4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18022f9c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2d9f1297[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30af4238[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4f4ece0d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 07 10:33:05 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-07T10:33:05.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12567/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-04-27T13:22:22.000+0000",
        "updated": "2021-07-06T11:39:16.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement LPAD and RPAD functions for string input values.\r\n * LPAD([string] basetext, [number] x, [optional string] padtext)\r\n * RPAD([string] basetext, [number] x, [optional string] padtext)\r\n\r\nlpad - Prepends padtext to basetext in a way that allows as many characters as possible from padtext given an output string length of x. When x is less than or equal to the length of basetext, only characters from basetext are printed in the output. If padtext is omitted then spaces are prepended.\r\n\r\nrpad - Appends padtext to basetext in a way that allows as many characters as possible from padtext given an output string length of x. When x is less than or equal to the length of basetext, only characters from basetext are printed in the output. If padtext is omitted then spaces are appended.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement LPAD and RPAD functions for string input values",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13375344/comment/17358499",
                    "id": "17358499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10173\n[https://github.com/apache/arrow/pull/10173]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=praveenbingo",
                        "name": "praveenbingo",
                        "key": "praveenbingo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Praveen Kumar",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-06-07T10:33:05.631+0000",
                    "updated": "2021-06-07T10:33:05.631+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qi28:",
        "customfield_12314139": null
    }
}