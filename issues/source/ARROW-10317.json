{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13335638",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638",
    "key": "ARROW-10317",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10317/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/703507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou opened a new pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076\n\n\n   Add docstrings for parameters of the various function options classes.\r\n   Automatically ingest those parameter docstrings into the generated compute function docstrings\r\n   (this uses vendored code from `numpydoc`).\r\n   \r\n   Example with the `min_max` parameter docs:\r\n   \r\n   * before:\r\n   ```\r\n   array : Array-like\r\n       Argument to compute function\r\n   skip_nulls : optional\r\n       Parameter for ScalarAggregateOptions constructor. Either `options`\r\n       or `skip_nulls` can be passed, but not both at the same time.\r\n   min_count : optional\r\n       Parameter for ScalarAggregateOptions constructor. Either `options`\r\n       or `min_count` can be passed, but not both at the same time.\r\n   options : pyarrow.compute.ScalarAggregateOptions, optional\r\n       Parameters altering compute function semantics.\r\n   memory_pool : pyarrow.MemoryPool, optional\r\n       If not passed, will allocate memory from the default memory pool.\r\n   ```\r\n   \r\n   * after:\r\n   ```\r\n   array : Array-like\r\n       Argument to compute function.\r\n   skip_nulls : bool, default True\r\n       Whether to skip (ignore) nulls in the input.\r\n       If False, any null in the input forces the output to null.\r\n   min_count : int, default 1\r\n       Minimum number of non-null values in the input.  If the number\r\n       of non-null values is below `min_count`, the output is null.\r\n   options : pyarrow.compute.ScalarAggregateOptions, optional\r\n       Alternative way of passing options.\r\n   memory_pool : pyarrow.MemoryPool, optional\r\n       If not passed, will allocate memory from the default memory pool.\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T19:39:35.670+0000",
                    "updated": "2022-01-04T19:39:35.670+0000",
                    "started": "2022-01-04T19:39:35.669+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703507",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/703509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#issuecomment-1005115834\n\n\n   https://issues.apache.org/jira/browse/ARROW-10317\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T19:39:51.488+0000",
                    "updated": "2022-01-04T19:39:51.488+0000",
                    "started": "2022-01-04T19:39:51.488+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703509",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/703510",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#issuecomment-1005115792\n\n\n   cc @amol- \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-04T19:39:54.353+0000",
                    "updated": "2022-01-04T19:39:54.353+0000",
                    "started": "2022-01-04T19:39:54.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "703510",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/706839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#issuecomment-1009966373\n\n\n   Ping @jorisvandenbossche \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T13:30:43.777+0000",
                    "updated": "2022-01-11T13:30:43.777+0000",
                    "started": "2022-01-11T13:30:43.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "706839",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/707018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#issuecomment-1009966373\n\n\n   Ping @jorisvandenbossche \r\n   \r\n   It would be nice for this PR to be reviewed soon because it needs rebasing and updating every time a new compute function is added.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-11T17:37:33.081+0000",
                    "updated": "2022-01-11T17:37:33.081+0000",
                    "started": "2022-01-11T17:37:33.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "707018",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783757541\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       Are we sure there is a strong guarantee that the options of `skip_nulls` and `min_count`\u00a0will always forever match with those of `ScalarAggregate`? I mean, now they match, but I'm concerned that in 6 months we will have forgotten that the docstrings influence multiple classes and might accidentally add options that don't exist in the classes that reuse the existing docstrings.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:03:54.953+0000",
                    "updated": "2022-01-13T09:03:54.953+0000",
                    "started": "2022-01-13T09:03:54.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708125",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708138",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783775442\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       I'm not sure what you mean? `skip_nulls` and `min_count` are individual options, not functions.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:26:44.782+0000",
                    "updated": "2022-01-13T09:26:44.782+0000",
                    "started": "2022-01-13T09:26:44.781+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708138",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783769781\n\n\n\n##########\nFile path: python/pyarrow/compute.py\n##########\n@@ -105,66 +117,70 @@ def _decorate_compute_function(wrapper, exposed_name, func, options_class):\n     doc_pieces = []\n \n     # 1. One-line summary\n-    cpp_doc = func._doc\n     summary = cpp_doc.summary\n     if not summary:\n         arg_str = \"arguments\" if func.arity > 1 else \"argument\"\n         summary = (\"Call compute function {!r} with the given {}\"\n                    .format(func.name, arg_str))\n \n-    description = cpp_doc.description\n-    arg_names = _get_arg_names(func)\n-\n-    doc_pieces.append(\"\"\"\\\n-        {}.\n-\n-        \"\"\".format(summary))\n+    doc_pieces.append(f\"{summary}.\\n\\n\")\n \n     # 2. Multi-line description\n+    description = cpp_doc.description\n     if description:\n-        doc_pieces.append(\"{}\\n\\n\".format(description))\n+        doc_pieces.append(f\"{description}\\n\\n\")\n \n     doc_addition = _compute_docstrings.function_doc_additions.get(func.name)\n \n     # 3. Parameter description\n-    doc_pieces.append(\"\"\"\\\n+    doc_pieces.append(dedent(\"\"\"\\\n         Parameters\n         ----------\n-        \"\"\")\n+        \"\"\"))\n \n+    # 3a. Compute function parameters\n+    arg_names = _get_arg_names(func)\n     for arg_name in arg_names:\n         if func.kind in ('vector', 'scalar_aggregate'):\n             arg_type = 'Array-like'\n         else:\n             arg_type = 'Array-like or scalar-like'\n-        doc_pieces.append(\"\"\"\\\n-            {} : {}\n-                Argument to compute function\n-            \"\"\".format(arg_name, arg_type))\n+        doc_pieces.append(f\"{arg_name} : {arg_type}\\n\")\n+        doc_pieces.append(\"    Argument to compute function.\\n\")\n \n+    # 3b. Compute function option values\n     if options_class is not None:\n-        options_sig = inspect.signature(options_class)\n-        for p in options_sig.parameters.values():\n-            doc_pieces.append(\"\"\"\\\n-            {0} : optional\n-                Parameter for {1} constructor. Either `options`\n-                or `{0}` can be passed, but not both at the same time.\n-            \"\"\".format(p.name, options_class.__name__))\n-        doc_pieces.append(\"\"\"\\\n-            options : pyarrow.compute.{0}, optional\n-                Parameters altering compute function semantics.\n-            \"\"\".format(options_class.__name__))\n-\n-    doc_pieces.append(\"\"\"\\\n+        options_class_doc = _scrape_options_class_doc(options_class)\n+        if options_class_doc:\n+            for p in options_class_doc.params:\n+                doc_pieces.append(f\"{p.name} : {p.type}\\n\")\n+                for s in p.desc:\n+                    doc_pieces.append(f\"    {s}\\n\")\n+        else:\n+            warnings.warn(f\"Options class {options_class.__name__} \"\n+                          f\"does not have a docstring\", RuntimeWarning)\n+            options_sig = inspect.signature(options_class)\n+            for p in options_sig.parameters.values():\n+                doc_pieces.append(dedent(\"\"\"\\\n+                {0} : optional\n+                    Parameter for {1} constructor. Either `options`\n+                    or `{0}` can be passed, but not both at the same time.\n+                \"\"\".format(p.name, options_class.__name__)))\n+        doc_pieces.append(dedent(f\"\"\"\\\n+            options : pyarrow.compute.{options_class.__name__}, optional\n+                Alternative way of passing options.\n+            \"\"\"))\n+\n+    doc_pieces.append(dedent(\"\"\"\\\n         memory_pool : pyarrow.MemoryPool, optional\n             If not passed, will allocate memory from the default memory pool.\n-        \"\"\")\n+        \"\"\"))\n \n     # 4. Custom addition (e.g. examples)\n     if doc_addition is not None:\n-        doc_pieces.append(\"\\n{}\\n\".format(doc_addition.strip(\"\\n\")))\n+        doc_pieces.append(\"\\n{}\\n\".format(dedent(doc_addition).strip(\"\\n\")))\n \n-    wrapper.__doc__ = \"\".join(dedent(s) for s in doc_pieces)\n+    wrapper.__doc__ = \"\".join(s for s in doc_pieces)\n\nReview comment:\n       ```suggestion\r\n       wrapper.__doc__ = \"\".join(doc_pieces)\r\n   ```\r\n   \r\n   `doc_pieces` is already a list I think? (so now we don't need the `dedent`, also don't need the loop)\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -690,6 +690,26 @@ cdef class _CastOptions(FunctionOptions):\n \n \n class CastOptions(_CastOptions):\n+    \"\"\"\n+    Options for the `cast` function.\n+\n+    Parameters\n+    ----------\n+    target_type : DataType, optional\n+        The PyArrow type to cast to.\n+    allow_int_overflow : bool, optional\n+        Whether integer overflow is allowed when casting.\n\nReview comment:\n       All those options indicate \"optional\", but I suppose they have an actual default? (all False?)\n\n##########\nFile path: python/pyarrow/tests/test_compute.py\n##########\n@@ -700,30 +702,126 @@ def test_generated_docstrings():\n         Parameters\n         ----------\n         x : Array-like or scalar-like\n-            Argument to compute function\n+            Argument to compute function.\n         y : Array-like or scalar-like\n-            Argument to compute function\n+            Argument to compute function.\n         memory_pool : pyarrow.MemoryPool, optional\n             If not passed, will allocate memory from the default memory pool.\n         \"\"\")\n+    # Varargs with options\n+    assert pc.min_element_wise.__doc__ == textwrap.dedent(\"\"\"\\\n+        Find the element-wise minimum value.\n+\n+        Nulls are ignored (by default) or propagated.\n+        NaN is preferred over null, but not over any valid value.\n+\n+        Parameters\n+        ----------\n+        *args : Array-like or scalar-like\n+            Argument to compute function.\n+        skip_nulls : bool, default True\n+            Whether to skip (ignore) nulls in the input.\n+            If False, any null in the input forces the output to null.\n+        options : pyarrow.compute.ElementWiseAggregateOptions, optional\n+            Alternative way of passing options.\n+        memory_pool : pyarrow.MemoryPool, optional\n+            If not passed, will allocate memory from the default memory pool.\n+        \"\"\")\n+    # Nullary with options\n+    assert pc.random.__doc__ == textwrap.dedent(\"\"\"\\\n+        Generate numbers in the range [0, 1).\n+\n+        Generated values are uniformly-distributed, double-precision \"\"\" +\n+                                                \"\"\"in range [0, 1).\n\nReview comment:\n       ```suggestion\r\n           Generated values are uniformly-distributed, double-precision \\\r\n   in range [0, 1).\r\n   ```\r\n   \r\n   This is an alternative way to do this, doesn't need to end/start triple quotes, but because of the strange indentation not necessarily nicer ..\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -950,6 +1132,16 @@ cdef class _FilterOptions(FunctionOptions):\n \n \n class FilterOptions(_FilterOptions):\n+    \"\"\"\n+    Options for selecting with a boolean filter.\n+\n+    Parameters\n+    ----------\n+    null_selection_behavior : str, default \"drop\"\n+        How to handle nulls in the input.\n\nReview comment:\n       ```suggestion\r\n           How to handle nulls in the selection filter.\r\n   ```\r\n   \r\n   (the `filter` docstring uses \"input\" for the values that are being filtered)\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1326,6 +1781,25 @@ cdef class _QuantileOptions(FunctionOptions):\n \n \n class QuantileOptions(_QuantileOptions):\n+    __doc__ = f\"\"\"\n+    Options for the `quantile` function.\n+\n+    Parameters\n+    ----------\n+    q : double or sequence of double, default 0.5\n+        Quantiles to compute. All values must be in [0, 1].\n+    interpolation : str, default \"linear\"\n+        How to break ties between competing data points for a given quantile.\n+        Accepted values are:\n+        - \"linear\": compute an interpolation\n\nReview comment:\n       ```suggestion\r\n   \r\n           - \"linear\": compute an interpolation\r\n   ```\r\n   \r\n   (it's ugly, but I seem to remember this is needed for proper rendering in the online docstring pages -> lists need to be surrounded by empty line in rst, but this is only within the description, so no white line is needed at the end of the description)\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -907,7 +1023,23 @@ cdef class _ReplaceSubstringOptions(FunctionOptions):\n \n \n class ReplaceSubstringOptions(_ReplaceSubstringOptions):\n-    def __init__(self, pattern, replacement, *, max_replacements=-1):\n+    \"\"\"\n+    Options for replacing matched substrings.\n+\n+    Parameters\n+    ----------\n+    pattern : str\n+        Substring pattern to look for inside input values.\n+    replacement : str\n+        What to replace the pattern with.\n+    max_replacements : int or None, default None\n+        If given, the maximum number of strings to replace in each\n+        input value.\n\nReview comment:\n       If not given, there is no limit in number of replacements?\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       You mean that they will stay the same for ScalarAggregateOptions vs ElementWiseAggregateOptions vs ... (the different places it is being used)? \r\n   \r\n   It seems quite unlikely to me that the general description will not be correct anymore for one of those functions, but we can also always then update it if that would change (also if we all inline them duplicated, we need to think about updating the docstring if behaviour in C++ would change ..)\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -907,7 +1023,23 @@ cdef class _ReplaceSubstringOptions(FunctionOptions):\n \n \n class ReplaceSubstringOptions(_ReplaceSubstringOptions):\n-    def __init__(self, pattern, replacement, *, max_replacements=-1):\n+    \"\"\"\n+    Options for replacing matched substrings.\n+\n+    Parameters\n+    ----------\n+    pattern : str\n+        Substring pattern to look for inside input values.\n+    replacement : str\n+        What to replace the pattern with.\n+    max_replacements : int or None, default None\n+        If given, the maximum number of strings to replace in each\n+        input value.\n\nReview comment:\n       For SplitOptions, you used \"(unlimited if None)\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:44:17.445+0000",
                    "updated": "2022-01-13T09:44:17.445+0000",
                    "started": "2022-01-13T09:44:17.445+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708145",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708146",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783785071\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       You mean whether they will stay the same for ScalarAggregateOptions vs ElementWiseAggregateOptions vs ... (the different places it is being used)? \r\n   \r\n   It seems quite unlikely to me that the general description will not be correct anymore for one of those functions, but we can also always then update it if that would change (also if we all inline them duplicated, we need to think about updating the docstring if behaviour in C++ would change ..)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:44:30.402+0000",
                    "updated": "2022-01-13T09:44:30.402+0000",
                    "started": "2022-01-13T09:44:30.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708146",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783796105\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       Yes, I mean that there might be a point where the various places where they are used are not aligned anymore.\r\n   I'm not concerned about the current state of things, the functions report the docstrings of individual options etc, I'm mostly concerned that in 1 year from now we will forget how we designed that to be and someone might think that it's reasonable for example to add one more option in `_skip_nulls_doc()` causing a wrong option to be added to one of the Option classes using that function.\r\n   \r\n   I guess one possible solution would be to have something inspecting the class and confirming the arguments in `__init__` match with those documented. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:51:05.655+0000",
                    "updated": "2022-01-13T09:51:05.655+0000",
                    "started": "2022-01-13T09:51:05.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708150",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783796105\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       Yes, I mean that there might be a point where the various places where they are used are not aligned anymore.\r\n   I'm not concerned about the current state of things, the functions report the docstrings of individual options etc, I'm mostly concerned that in 1 year from now we will forget how we designed that to be and someone might think that it's reasonable for example to add one more option in `_skip_nulls_doc()` causing a wrong option to be added to one of the Option classes using that function.\r\n   \r\n   I guess one possible solution would be to have something inspecting the class and confirming the arguments in `__init__` match with those documented. And throwing an error when they don't. At least developers would be informed when they break something.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:51:28.616+0000",
                    "updated": "2022-01-13T09:51:28.616+0000",
                    "started": "2022-01-13T09:51:28.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708151",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783802323\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > someone might think that it's reasonable for example to add one more option in _skip_nulls_doc() causing a wrong option to be added to one of the Option classes using that function.\r\n   \r\n   Hmm, I don't understand. Why would someone add an option there? \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T09:58:24.934+0000",
                    "updated": "2022-01-13T09:58:24.934+0000",
                    "started": "2022-01-13T09:58:24.933+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708155",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708159",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783804411\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > I guess one possible solution would be to have something inspecting the class and confirming the arguments in `__init__` match with those documented. \r\n   \r\n   We have numpydoc validation check that already should do something like that? (I don't remember if it is ran by default, or is ran for the compute module)\r\n   \r\n   But, that would also not really solve your concern that the \"meaning\" of the keyword would change for one of the functions (checking that the signature keywords match with the documented keywords doesn't guarantee anything about whether the description content is correct or not)\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > I guess one possible solution would be to have something inspecting the class and confirming the arguments in `__init__` match with those documented. \r\n   \r\n   We have numpydoc validation check that already should do something like that? (I don't remember if it is ran by default, or is ran for the compute module)\r\n   \r\n   But, that would also not really solve your concern that the \"meaning\" of the keyword would change for one of the functions? (checking that the signature keywords match with the documented keywords doesn't guarantee anything about whether the description content is correct or not)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:01:26.255+0000",
                    "updated": "2022-01-13T10:01:26.255+0000",
                    "started": "2022-01-13T10:01:26.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708159",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708161",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783802323\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > someone might think that it's reasonable for example to add one more option in _skip_nulls_doc() causing a wrong option to be added to one of the Option classes using that function.\r\n   \r\n   Hmm, I don't understand. Why would someone add an option there? \r\n   The entire purpose of `_skip_nulls_doc()` is to factor the documentation for a single _option `skip_nulls`. It's not documenting function named \"skip_nulls\" to which people would add other options.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:03:15.193+0000",
                    "updated": "2022-01-13T10:03:15.193+0000",
                    "started": "2022-01-13T10:03:15.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708161",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783802323\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > someone might think that it's reasonable for example to add one more option in _skip_nulls_doc() causing a wrong option to be added to one of the Option classes using that function.\r\n   \r\n   Hmm, I don't understand. Why would someone add an option there? \r\n   The entire purpose of `_skip_nulls_doc()` is to factor the documentation for a single _option_ `skip_nulls`. It's not documenting a hypothetical function named \"skip_nulls\" to which people would add other options.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:03:28.259+0000",
                    "updated": "2022-01-13T10:03:28.259+0000",
                    "started": "2022-01-13T10:03:28.258+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708162",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708164",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783808329\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > Hmm, I don't understand. Why would someone add an option there?\r\n   \r\n   I suppose that Alessandro means something like the following: assume that at some point we add an additional accepted value to `skip_nulls`, and document it in the `skip_nulls_doc()` function. But that new value might only be accepted by a subset of the compute kernels that have a `skip_nulls` argument, and thus we would get an incorrect docstring for the others. \r\n   \r\n   Now, since `skip_nulls` is a boolean keyword (True/False) currently, it seems not that likely there will be a new accepted value being added.  \r\n   And again, if that happens, I think we can handle it at that time, and I think we will remember that this `skip_nulls_doc()` is used in several places, and thus have to verify if our changes are correct for all places where this is being used.  \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:05:54.615+0000",
                    "updated": "2022-01-13T10:05:54.615+0000",
                    "started": "2022-01-13T10:05:54.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708164",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783810077\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       You are right, the numpydoc check would catch a set of issues. I'm wondering btw if it's actually running given that it didn't catch https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L714 \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:08:17.580+0000",
                    "updated": "2022-01-13T10:08:17.580+0000",
                    "started": "2022-01-13T10:08:17.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708167",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708193",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783826887\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       > I'm wondering btw if it's actually running given that it didn't catch https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L714\r\n   \r\n   I think the check for proper whitespace around the colon is not yet enabled. For now, https://github.com/apache/arrow/pull/7732 only enabled check \"PR01\", which checks if all parameters are present in the docstring\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:29:07.862+0000",
                    "updated": "2022-01-13T10:29:07.862+0000",
                    "started": "2022-01-13T10:29:07.861+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708193",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783840936\n\n\n\n##########\nFile path: python/pyarrow/_compute.pyx\n##########\n@@ -1027,6 +1266,15 @@ cdef class _ScalarAggregateOptions(FunctionOptions):\n \n \n class ScalarAggregateOptions(_ScalarAggregateOptions):\n+    __doc__ = f\"\"\"\n+    Options for scalar aggregations.\n+\n+    Parameters\n+    ----------\n+    {_skip_nulls_doc()}\n\nReview comment:\n       On further inspection, it seems that `archery numpydoc` doesn't check class methods, opened https://issues.apache.org/jira/browse/ARROW-15321\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T10:46:56.349+0000",
                    "updated": "2022-01-13T10:46:56.349+0000",
                    "started": "2022-01-13T10:46:56.349+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708210",
                    "issueId": "13335638"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/worklog/708231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12076:\nURL: https://github.com/apache/arrow/pull/12076#discussion_r783866373\n\n\n\n##########\nFile path: python/pyarrow/compute.py\n##########\n@@ -105,66 +117,70 @@ def _decorate_compute_function(wrapper, exposed_name, func, options_class):\n     doc_pieces = []\n \n     # 1. One-line summary\n-    cpp_doc = func._doc\n     summary = cpp_doc.summary\n     if not summary:\n         arg_str = \"arguments\" if func.arity > 1 else \"argument\"\n         summary = (\"Call compute function {!r} with the given {}\"\n                    .format(func.name, arg_str))\n \n-    description = cpp_doc.description\n-    arg_names = _get_arg_names(func)\n-\n-    doc_pieces.append(\"\"\"\\\n-        {}.\n-\n-        \"\"\".format(summary))\n+    doc_pieces.append(f\"{summary}.\\n\\n\")\n \n     # 2. Multi-line description\n+    description = cpp_doc.description\n     if description:\n-        doc_pieces.append(\"{}\\n\\n\".format(description))\n+        doc_pieces.append(f\"{description}\\n\\n\")\n \n     doc_addition = _compute_docstrings.function_doc_additions.get(func.name)\n \n     # 3. Parameter description\n-    doc_pieces.append(\"\"\"\\\n+    doc_pieces.append(dedent(\"\"\"\\\n         Parameters\n         ----------\n-        \"\"\")\n+        \"\"\"))\n \n+    # 3a. Compute function parameters\n+    arg_names = _get_arg_names(func)\n     for arg_name in arg_names:\n         if func.kind in ('vector', 'scalar_aggregate'):\n             arg_type = 'Array-like'\n         else:\n             arg_type = 'Array-like or scalar-like'\n-        doc_pieces.append(\"\"\"\\\n-            {} : {}\n-                Argument to compute function\n-            \"\"\".format(arg_name, arg_type))\n+        doc_pieces.append(f\"{arg_name} : {arg_type}\\n\")\n+        doc_pieces.append(\"    Argument to compute function.\\n\")\n \n+    # 3b. Compute function option values\n     if options_class is not None:\n-        options_sig = inspect.signature(options_class)\n-        for p in options_sig.parameters.values():\n-            doc_pieces.append(\"\"\"\\\n-            {0} : optional\n-                Parameter for {1} constructor. Either `options`\n-                or `{0}` can be passed, but not both at the same time.\n-            \"\"\".format(p.name, options_class.__name__))\n-        doc_pieces.append(\"\"\"\\\n-            options : pyarrow.compute.{0}, optional\n-                Parameters altering compute function semantics.\n-            \"\"\".format(options_class.__name__))\n-\n-    doc_pieces.append(\"\"\"\\\n+        options_class_doc = _scrape_options_class_doc(options_class)\n+        if options_class_doc:\n+            for p in options_class_doc.params:\n+                doc_pieces.append(f\"{p.name} : {p.type}\\n\")\n+                for s in p.desc:\n+                    doc_pieces.append(f\"    {s}\\n\")\n+        else:\n+            warnings.warn(f\"Options class {options_class.__name__} \"\n+                          f\"does not have a docstring\", RuntimeWarning)\n+            options_sig = inspect.signature(options_class)\n+            for p in options_sig.parameters.values():\n+                doc_pieces.append(dedent(\"\"\"\\\n+                {0} : optional\n+                    Parameter for {1} constructor. Either `options`\n+                    or `{0}` can be passed, but not both at the same time.\n+                \"\"\".format(p.name, options_class.__name__)))\n+        doc_pieces.append(dedent(f\"\"\"\\\n+            options : pyarrow.compute.{options_class.__name__}, optional\n+                Alternative way of passing options.\n+            \"\"\"))\n+\n+    doc_pieces.append(dedent(\"\"\"\\\n         memory_pool : pyarrow.MemoryPool, optional\n             If not passed, will allocate memory from the default memory pool.\n-        \"\"\")\n+        \"\"\"))\n \n     # 4. Custom addition (e.g. examples)\n     if doc_addition is not None:\n-        doc_pieces.append(\"\\n{}\\n\".format(doc_addition.strip(\"\\n\")))\n+        doc_pieces.append(\"\\n{}\\n\".format(dedent(doc_addition).strip(\"\\n\")))\n \n-    wrapper.__doc__ = \"\".join(dedent(s) for s in doc_pieces)\n+    wrapper.__doc__ = \"\".join(s for s in doc_pieces)\n\nReview comment:\n       Indeed :-)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-01-13T11:21:34.033+0000",
                    "updated": "2022-01-13T11:21:34.033+0000",
                    "started": "2022-01-13T11:21:34.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "708231",
                    "issueId": "13335638"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@1e599cc9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59670e3a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42c8e5d2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@23bf256f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21e89c54[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1d178ff6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@18f41ff3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@42bad5df[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2755fbe0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@69ca8c3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e2f3464[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2a2f0a53[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Jan 13 15:52:38 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-13T15:52:38.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10317/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-10-15T16:50:05.000+0000",
        "updated": "2022-01-14T13:21:21.000+0000",
        "timeoriginalestimate": null,
        "description": "This would allow generating improved documentation for bindings (e.g. Python).\r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Consider adding documentation for FunctionOption classes",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/comment/17368283",
                    "id": "17368283",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "This actually may not be so worthwhile for bindings, because the values may change. For example, where C++ uses enums such as {{JoinOptions::NullHandlingBehavior::\\{EMIT_NULL, SKIP, REPLACE\\}}}, Python takes a plain string (e.g. \"emit_null\", \"skip\", \"replace\").",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-23T15:35:33.158+0000",
                    "updated": "2021-06-23T15:35:33.158+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/comment/17368284",
                    "id": "17368284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~amol-]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-23T15:35:41.531+0000",
                    "updated": "2021-06-23T15:35:41.531+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/comment/17460893",
                    "id": "17460893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "My current inclination is towards adding Python-specific documentation for compute options. Some groundwork is being done in https://github.com/apache/arrow/pull/11955 by allowing custom additions to compute docstrings.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-16T17:18:36.280+0000",
                    "updated": "2021-12-16T17:18:36.280+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/comment/17466886",
                    "id": "17466886",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "One way to do this on the Python side would be to write regular Numpy-formatted docstrings for the options classes, then to parse them using {{numpydoc}} so as to extract parameter descriptions and inject them into the generated compute function docstrings.\r\n\r\nWe could for example vendor the {{docscrape}} module from {{numpydoc}}: https://github.com/numpy/numpydoc/blob/main/numpydoc/docscrape.py\r\n\r\n[~jorisvandenbossche] Does it sound reasonable?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-12-30T14:01:40.428+0000",
                    "updated": "2021-12-30T14:01:40.428+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13335638/comment/17475471",
                    "id": "17475471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 12076\n[https://github.com/apache/arrow/pull/12076]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-01-13T15:52:38.931+0000",
                    "updated": "2022-01-13T15:52:38.931+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jqj4:",
        "customfield_12314139": null
    }
}