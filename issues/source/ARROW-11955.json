{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13364999",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999",
    "key": "ARROW-11955",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Dandandan",
            "name": "Dandandan",
            "key": "dandandan",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Dani\u00ebl Heres",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11955/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565766",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan opened a new pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695\n\n\n   \r\n   This takes some code from cube-js repository commited by @paveltiunov with some minor tweaks. I believe the cube-js is still Apache licensed, right?\r\n   \r\n   https://github.com/cube-js/arrow/commit/954d0c773de542ed966055f3fb62ed7ff7e5e18f#diff-56b771da2cfe06d200722d36bf2421811e105aa45b2a06858421f5add73984b0\r\n   \r\n   TODO:\r\n   \r\n   * Add tests\r\n   * Add union to dataframe api\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-13T18:02:12.509+0000",
                    "updated": "2021-03-13T18:02:12.509+0000",
                    "started": "2021-03-13T18:02:12.508+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565766",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565768",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798711756\n\n\n   https://issues.apache.org/jira/browse/ARROW-11955\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-13T18:02:28.745+0000",
                    "updated": "2021-03-13T18:02:28.745+0000",
                    "started": "2021-03-13T18:02:28.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565768",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798734537\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=h1) Report\n   > Merging [#9695](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=desc) (f73dde3) into [master](https://codecov.io/gh/apache/arrow/commit/6a1320604a2021711e637c2ca586b374a593d66e?el=desc) (6a13206) will **decrease** coverage by `0.09%`.\n   > The diff coverage is `14.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9695/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9695      +/-   ##\n   ==========================================\n   - Coverage   82.57%   82.47%   -0.10%     \n   ==========================================\n     Files         248      249       +1     \n     Lines       58279    58356      +77     \n   ==========================================\n   + Hits        48121    48130       +9     \n   - Misses      10158    10226      +68     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `76.66% <0.00%> (-3.11%)` | :arrow_down: |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `92.30% <0.00%> (-0.36%)` | :arrow_down: |\n   | [...datafusion/src/optimizer/hash\\_build\\_probe\\_order.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvaGFzaF9idWlsZF9wcm9iZV9vcmRlci5ycw==) | `53.60% <0.00%> (-1.72%)` | :arrow_down: |\n   | [...t/datafusion/src/optimizer/projection\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvcHJvamVjdGlvbl9wdXNoX2Rvd24ucnM=) | `97.72% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `47.96% <0.00%> (-0.80%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `88.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/union.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VuaW9uLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.88% <16.66%> (-0.74%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `81.15% <25.58%> (-2.07%)` | :arrow_down: |\n   | ... and [1 more](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=footer). Last update [6a13206...f73dde3](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-13T18:18:55.917+0000",
                    "updated": "2021-03-13T18:18:55.917+0000",
                    "started": "2021-03-13T18:18:55.916+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565770",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798734537\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=h1) Report\n   > Merging [#9695](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=desc) (e7a4a80) into [master](https://codecov.io/gh/apache/arrow/commit/6a1320604a2021711e637c2ca586b374a593d66e?el=desc) (6a13206) will **decrease** coverage by `0.09%`.\n   > The diff coverage is `14.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9695/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9695      +/-   ##\n   ==========================================\n   - Coverage   82.57%   82.47%   -0.10%     \n   ==========================================\n     Files         248      249       +1     \n     Lines       58279    58356      +77     \n   ==========================================\n   + Hits        48121    48130       +9     \n   - Misses      10158    10226      +68     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `76.66% <0.00%> (-3.11%)` | :arrow_down: |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `92.30% <0.00%> (-0.36%)` | :arrow_down: |\n   | [...datafusion/src/optimizer/hash\\_build\\_probe\\_order.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvaGFzaF9idWlsZF9wcm9iZV9vcmRlci5ycw==) | `53.60% <0.00%> (-1.72%)` | :arrow_down: |\n   | [...t/datafusion/src/optimizer/projection\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvcHJvamVjdGlvbl9wdXNoX2Rvd24ucnM=) | `97.72% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `47.96% <0.00%> (-0.80%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `88.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/union.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VuaW9uLnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `78.88% <16.66%> (-0.74%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `81.15% <25.58%> (-2.07%)` | :arrow_down: |\n   | ... and [1 more](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=footer). Last update [6a13206...e7a4a80](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-13T22:15:50.336+0000",
                    "updated": "2021-03-13T22:15:50.336+0000",
                    "started": "2021-03-13T22:15:50.335+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565800",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565831",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r593822527\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! Unicode expressions\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new MergeExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(self.inputs.len())\n+    }\n+\n+    fn with_new_children(\n+        &self,\n+        children: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        Ok(Arc::new(UnionExec::new(children)))\n+    }\n+\n+    async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n+        self.inputs[partition].execute(0).await\n\nReview comment:\n       This seems to imply that the input plans can only have a single partition?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T00:59:44.015+0000",
                    "updated": "2021-03-14T00:59:44.015+0000",
                    "started": "2021-03-14T00:59:44.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565831",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r593856765\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! Unicode expressions\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new MergeExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(self.inputs.len())\n+    }\n+\n+    fn with_new_children(\n+        &self,\n+        children: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        Ok(Arc::new(UnionExec::new(children)))\n+    }\n+\n+    async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n+        self.inputs[partition].execute(0).await\n\nReview comment:\n       I believe that was \"solved\" by adding a `mergeexec` but I will probably change this part and add some tests.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T07:33:53.056+0000",
                    "updated": "2021-03-14T07:33:53.056+0000",
                    "started": "2021-03-14T07:33:53.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565854",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565872",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r593883069\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! Unicode expressions\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new MergeExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(self.inputs.len())\n+    }\n+\n+    fn with_new_children(\n+        &self,\n+        children: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        Ok(Arc::new(UnionExec::new(children)))\n+    }\n+\n+    async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n+        self.inputs[partition].execute(0).await\n\nReview comment:\n       I removed the `MergeExec` and changed this to what I believe Spark also does, which is return the sum of the input partitions and added a test for this.\r\n   \r\n   For now, this removes the information about the input partitioning and return `UnknownPartitioning`, which is not ideal when the partitioning info could be used somewhere else (for example a hash partitioning).\r\n   I added a TODO comment there. I think it would be OK to keep it for now like this and maybe create a JIRA issue for?\r\n    \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T11:12:04.839+0000",
                    "updated": "2021-03-14T11:12:04.839+0000",
                    "started": "2021-03-14T11:12:04.839+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565872",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798734537\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=h1) Report\n   > Merging [#9695](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=desc) (ac89542) into [master](https://codecov.io/gh/apache/arrow/commit/6a1320604a2021711e637c2ca586b374a593d66e?el=desc) (6a13206) will **decrease** coverage by `0.00%`.\n   > The diff coverage is `83.33%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9695/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9695      +/-   ##\n   ==========================================\n   - Coverage   82.57%   82.56%   -0.01%     \n   ==========================================\n     Files         248      249       +1     \n     Lines       58279    58443     +164     \n   ==========================================\n   + Hits        48121    48256     +135     \n   - Misses      10158    10187      +29     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `87.82% <0.00%> (-2.32%)` | :arrow_down: |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `92.30% <0.00%> (-0.36%)` | :arrow_down: |\n   | [...datafusion/src/optimizer/hash\\_build\\_probe\\_order.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvaGFzaF9idWlsZF9wcm9iZV9vcmRlci5ycw==) | `53.60% <0.00%> (-1.72%)` | :arrow_down: |\n   | [...t/datafusion/src/optimizer/projection\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvcHJvamVjdGlvbl9wdXNoX2Rvd24ucnM=) | `97.72% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `88.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `82.98% <74.00%> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/builder.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vYnVpbGRlci5ycw==) | `87.43% <76.92%> (-0.71%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `79.72% <78.57%> (-0.05%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/union.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VuaW9uLnJz) | `87.50% <87.50%> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/limit\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvbGltaXRfcHVzaF9kb3duLnJz) | `97.82% <100.00%> (+0.68%)` | :arrow_up: |\n   | ... and [7 more](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=footer). Last update [6a13206...ac89542](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T11:26:23.131+0000",
                    "updated": "2021-03-14T11:26:23.131+0000",
                    "started": "2021-03-14T11:26:23.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565877",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/565946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r593934133\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,76 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! Unicode expressions\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new MergeExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        Partitioning::UnknownPartitioning(self.inputs.len())\n+    }\n+\n+    fn with_new_children(\n+        &self,\n+        children: Vec<Arc<dyn ExecutionPlan>>,\n+    ) -> Result<Arc<dyn ExecutionPlan>> {\n+        Ok(Arc::new(UnionExec::new(children)))\n+    }\n+\n+    async fn execute(&self, partition: usize) -> Result<SendableRecordBatchStream> {\n+        self.inputs[partition].execute(0).await\n\nReview comment:\n       Thanks, this is looking good.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-14T17:28:57.574+0000",
                    "updated": "2021-03-14T17:28:57.574+0000",
                    "started": "2021-03-14T17:28:57.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "565946",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/566059",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798734537\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=h1) Report\n   > Merging [#9695](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=desc) (f9dea5e) into [master](https://codecov.io/gh/apache/arrow/commit/6a1320604a2021711e637c2ca586b374a593d66e?el=desc) (6a13206) will **increase** coverage by `0.02%`.\n   > The diff coverage is `84.21%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9695/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9695      +/-   ##\n   ==========================================\n   + Coverage   82.57%   82.59%   +0.02%     \n   ==========================================\n     Files         248      249       +1     \n     Lines       58279    58457     +178     \n   ==========================================\n   + Hits        48121    48283     +162     \n   - Misses      10158    10174      +16     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `87.82% <0.00%> (-2.32%)` | :arrow_down: |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `92.30% <0.00%> (-0.36%)` | :arrow_down: |\n   | [...datafusion/src/optimizer/hash\\_build\\_probe\\_order.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvaGFzaF9idWlsZF9wcm9iZV9vcmRlci5ycw==) | `53.60% <0.00%> (-1.72%)` | :arrow_down: |\n   | [...t/datafusion/src/optimizer/projection\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvcHJvamVjdGlvbl9wdXNoX2Rvd24ucnM=) | `98.66% <\u00f8> (+0.93%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `88.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `82.98% <74.00%> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/builder.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vYnVpbGRlci5ycw==) | `87.43% <76.92%> (-0.71%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/union.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VuaW9uLnJz) | `87.50% <87.50%> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `80.44% <91.66%> (+0.67%)` | :arrow_up: |\n   | [rust/datafusion/src/optimizer/limit\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvbGltaXRfcHVzaF9kb3duLnJz) | `97.82% <100.00%> (+0.68%)` | :arrow_up: |\n   | ... and [11 more](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=footer). Last update [6a13206...f9dea5e](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-15T08:10:51.810+0000",
                    "updated": "2021-03-15T08:10:51.810+0000",
                    "started": "2021-03-15T08:10:51.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "566059",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/566112",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-798734537\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=h1) Report\n   > Merging [#9695](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=desc) (8f2167b) into [master](https://codecov.io/gh/apache/arrow/commit/6a1320604a2021711e637c2ca586b374a593d66e?el=desc) (6a13206) will **increase** coverage by `0.02%`.\n   > The diff coverage is `83.68%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9695/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9695      +/-   ##\n   ==========================================\n   + Coverage   82.57%   82.59%   +0.02%     \n   ==========================================\n     Files         248      249       +1     \n     Lines       58279    58457     +178     \n   ==========================================\n   + Hits        48121    48283     +162     \n   - Misses      10158    10174      +16     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `87.82% <0.00%> (-2.32%)` | :arrow_down: |\n   | [rust/datafusion/src/optimizer/constant\\_folding.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvY29uc3RhbnRfZm9sZGluZy5ycw==) | `92.30% <0.00%> (-0.36%)` | :arrow_down: |\n   | [...datafusion/src/optimizer/hash\\_build\\_probe\\_order.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvaGFzaF9idWlsZF9wcm9iZV9vcmRlci5ycw==) | `53.60% <0.00%> (-1.72%)` | :arrow_down: |\n   | [...t/datafusion/src/optimizer/projection\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvcHJvamVjdGlvbl9wdXNoX2Rvd24ucnM=) | `98.66% <\u00f8> (+0.93%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/mod.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL21vZC5ycw==) | `88.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `82.98% <74.00%> (-0.24%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/builder.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vYnVpbGRlci5ycw==) | `87.43% <76.92%> (-0.71%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/plan.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vcGxhbi5ycw==) | `80.16% <83.33%> (+0.39%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/union.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VuaW9uLnJz) | `87.50% <87.50%> (\u00f8)` | |\n   | [rust/datafusion/src/optimizer/limit\\_push\\_down.rs](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvbGltaXRfcHVzaF9kb3duLnJz) | `97.82% <100.00%> (+0.68%)` | :arrow_up: |\n   | ... and [12 more](https://codecov.io/gh/apache/arrow/pull/9695/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=footer). Last update [6a13206...8f2167b](https://codecov.io/gh/apache/arrow/pull/9695?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-15T10:09:47.251+0000",
                    "updated": "2021-03-15T10:09:47.251+0000",
                    "started": "2021-03-15T10:09:47.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "566112",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/566558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-799760695\n\n\n   I plan to review this carefully either later today or tomorrow\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-15T21:21:45.613+0000",
                    "updated": "2021-03-15T21:21:45.613+0000",
                    "started": "2021-03-15T21:21:45.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "566558",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/567250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r595533737\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/plan.rs\n##########\n@@ -120,6 +120,15 @@ pub enum LogicalPlan {\n         /// The partitioning scheme\n         partitioning_scheme: Partitioning,\n     },\n+    /// Union multiple inputs\n+    Union {\n+        /// Inputs to merge\n+        inputs: Vec<LogicalPlan>,\n+        /// Union schema. Should be the same for all inputs.\n+        schema: DFSchemaRef,\n+        /// Union select alias\n\nReview comment:\n       ```suggestion\r\n           /// Union output relation alias \r\n   ```\n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,142 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! The Union operator combines multiple inputs with the same schema\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new UnionExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n\nReview comment:\n       ```suggestion\r\n       /// Output of the union is the union of all output partitions of all inputs\r\n   ```\r\n   \r\n   (this makes sense BTW) \n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -104,19 +104,75 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n \n     /// Generate a logic plan from an SQL query\n     pub fn query_to_plan(&self, query: &Query) -> Result<LogicalPlan> {\n-        let plan = match &query.body {\n-            SetExpr::Select(s) => self.select_to_plan(s.as_ref()),\n-            _ => Err(DataFusionError::NotImplemented(format!(\n-                \"Query {} not implemented yet\",\n-                query.body\n-            ))),\n-        }?;\n+        self.query_to_plan_with_alias(query, None)\n+    }\n+\n+    /// Generate a logic plan from an SQL query with optional alias\n+    pub fn query_to_plan_with_alias(\n+        &self,\n+        query: &Query,\n+        alias: Option<String>,\n+    ) -> Result<LogicalPlan> {\n+        let set_expr = &query.body;\n+        let plan = self.set_expr_to_plan(set_expr, alias)?;\n \n         let plan = self.order_by(&plan, &query.order_by)?;\n \n         self.limit(&plan, &query.limit)\n     }\n \n+    fn set_expr_to_plan(\n+        &self,\n+        set_expr: &SetExpr,\n+        alias: Option<String>,\n+    ) -> Result<LogicalPlan> {\n+        match set_expr {\n+            SetExpr::Select(s) => self.select_to_plan(s.as_ref()),\n+            SetExpr::SetOperation {\n+                op,\n+                left,\n+                right,\n+                all,\n+            } => match (op, all) {\n+                (SetOperator::Union, true) => {\n+                    let left_plan = self.set_expr_to_plan(left.as_ref(), None)?;\n+                    let right_plan = self.set_expr_to_plan(right.as_ref(), None)?;\n+                    let inputs = vec![left_plan, right_plan]\n+                        .into_iter()\n+                        .flat_map(|p| match p {\n+                            LogicalPlan::Union { inputs, .. } => inputs,\n+                            x => vec![x],\n+                        })\n+                        .collect::<Vec<_>>();\n+                    if inputs.is_empty() {\n+                        return Err(DataFusionError::Execution(format!(\n+                            \"Empty UNION: {}\",\n+                            set_expr\n+                        )));\n+                    }\n+                    if !inputs.iter().all(|s| s.schema() == inputs[0].schema()) {\n+                        return Err(DataFusionError::Execution(\n+                            \"UNION ALL schemas are expected to be the same\".to_string(),\n+                        ));\n+                    }\n+                    Ok(LogicalPlan::Union {\n+                        schema: inputs[0].schema().clone(),\n+                        inputs,\n+                        alias,\n+                    })\n+                }\n+                _ => Err(DataFusionError::NotImplemented(format!(\n+                    \"Only UNION ALL is supported: {}\",\n\nReview comment:\n       ```suggestion\r\n                       \"Only UNION ALL is supported, found {}\",\r\n   ```\n\n##########\nFile path: rust/datafusion/src/optimizer/limit_push_down.rs\n##########\n@@ -181,6 +207,28 @@ mod test {\n         Ok(())\n     }\n \n+    #[test]\n+    fn limit_should_push_down_union() -> Result<()> {\n\nReview comment:\n       \ud83d\udc4d \n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -2359,6 +2420,35 @@ mod tests {\n         quick_test(sql, expected);\n     }\n \n+    #[test]\n+    fn union() {\n+        let sql = \"SELECT order_id from orders UNION ALL SELECT order_id FROM orders\";\n+        let expected = \"Union\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\";\n+        quick_test(sql, expected);\n+    }\n+\n+    #[test]\n+    fn union_4_combined_in_one() {\n+        let sql = \"SELECT order_id from orders\n+                    UNION ALL SELECT order_id FROM orders\n+                    UNION ALL SELECT order_id FROM orders\n+                    UNION ALL SELECT order_id FROM orders\";\n+        let expected = \"Union\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\\\n+            \\n  Projection: #order_id\\\n+            \\n    TableScan: orders projection=None\";\n+        quick_test(sql, expected);\n+    }\n+\n\nReview comment:\n       I recommend two other (error) tests to ensure the error checks are working\r\n   \r\n   ```\r\n   \"SELECT order_id from orders UNION ALL SELECT customer_id FROM order\"\r\n   ```\r\n   \r\n   ```\r\n   \"SELECT order_id from orders UNION SELECT order_id FROM order\"\r\n   ```\r\n   \n\n##########\nFile path: rust/datafusion/src/physical_plan/union.rs\n##########\n@@ -0,0 +1,142 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+// Some of these functions reference the Postgres documentation\n+// or implementation to ensure compatibility and are subject to\n+// the Postgres license.\n+\n+//! The Union operator combines multiple inputs with the same schema\n+\n+use std::{any::Any, sync::Arc};\n+\n+use arrow::datatypes::SchemaRef;\n+\n+use super::{ExecutionPlan, Partitioning, SendableRecordBatchStream};\n+use crate::error::Result;\n+use async_trait::async_trait;\n+\n+/// UNION ALL execution plan\n+#[derive(Debug)]\n+pub struct UnionExec {\n+    /// Input execution plan\n+    inputs: Vec<Arc<dyn ExecutionPlan>>,\n+}\n+\n+impl UnionExec {\n+    /// Create a new UnionExec\n+    pub fn new(inputs: Vec<Arc<dyn ExecutionPlan>>) -> Self {\n+        UnionExec { inputs }\n+    }\n+}\n+\n+#[async_trait]\n+impl ExecutionPlan for UnionExec {\n+    /// Return a reference to Any that can be used for downcasting\n+    fn as_any(&self) -> &dyn Any {\n+        self\n+    }\n+\n+    fn schema(&self) -> SchemaRef {\n+        self.inputs[0].schema()\n+    }\n+\n+    fn children(&self) -> Vec<Arc<dyn ExecutionPlan>> {\n+        self.inputs.clone()\n+    }\n+\n+    /// Get the output partitioning of this plan\n+    fn output_partitioning(&self) -> Partitioning {\n+        // Sums all the output partitions\n+        let num_partitions = self\n+            .inputs\n+            .iter()\n+            .map(|plan| plan.output_partitioning().partition_count())\n+            .sum();\n+        // TODO: this loses partitioning info in case of same partitioning scheme\n\nReview comment:\n       it might be worth a follow on JIRA ticket, or also we can deal with it if it ever becomes a problem\n\n##########\nFile path: rust/datafusion/src/dataframe.rs\n##########\n@@ -132,6 +132,20 @@ pub trait DataFrame: Send + Sync {\n     /// ```\n     fn limit(&self, n: usize) -> Result<Arc<dyn DataFrame>>;\n \n+    /// Calculate the union two dataframes.\n\nReview comment:\n       ```suggestion\r\n       /// Calculate the union two [`DataFrame`]s.  The two [`DataFrame`]s must have exactly the same schema\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-16T21:06:15.697+0000",
                    "updated": "2021-03-16T21:06:15.697+0000",
                    "started": "2021-03-16T21:06:15.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567250",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/567254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r595540633\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/builder.rs\n##########\n@@ -178,6 +178,29 @@ impl LogicalPlanBuilder {\n         }))\n     }\n \n+    /// Apply a union\n+    pub fn union(&self, plan: LogicalPlan) -> Result<Self> {\n+        let schema = self.plan.schema();\n+\n+        if plan.schema() != schema {\n+            return Err(DataFusionError::Plan(\n+                \"Schema's for union should be the same \".to_string(),\n+            ));\n+        }\n+        // Add plan to existing union if possible\n+        let mut inputs = match &self.plan {\n\nReview comment:\n       I think this case should have its own test too (or remove this optimization) \r\n   \r\n   I am thinking something like \r\n   \r\n   ```\r\n   builder.union(p1)\r\n   .union(p2)\r\n   ```\r\n   and then verify there is only a single `LogicalPlan::Union` in the output\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-16T21:07:31.686+0000",
                    "updated": "2021-03-16T21:07:31.686+0000",
                    "started": "2021-03-16T21:07:31.686+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567254",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/567293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#issuecomment-800634472\n\n\n   Thanks @alamb for the extensive feedback. I think I addressed all of your comments.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-16T21:48:25.200+0000",
                    "updated": "2021-03-16T21:48:25.200+0000",
                    "started": "2021-03-16T21:48:25.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567293",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/567554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695#discussion_r595886251\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/builder.rs\n##########\n@@ -413,6 +436,32 @@ mod tests {\n         Ok(())\n     }\n \n+    #[test]\n+    fn plan_builder_union_combined_single_union() -> Result<()> {\n+        let plan = LogicalPlanBuilder::scan_empty(\n+            \"employee.csv\",\n+            &employee_schema(),\n+            Some(vec![3, 4]),\n+        )?;\n+\n+        let plan = plan\n+            .union(plan.build()?)?\n+            .union(plan.build()?)?\n+            .union(plan.build()?)?\n+            .build()?;\n+\n+        // output has only one union\n+        let expected = \"Union\\\n\nReview comment:\n       \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-17T10:22:18.476+0000",
                    "updated": "2021-03-17T10:22:18.476+0000",
                    "started": "2021-03-17T10:22:18.475+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567554",
                    "issueId": "13364999"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/worklog/567555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb closed pull request #9695:\nURL: https://github.com/apache/arrow/pull/9695\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-17T10:22:53.583+0000",
                    "updated": "2021-03-17T10:22:53.583+0000",
                    "started": "2021-03-17T10:22:53.583+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "567555",
                    "issueId": "13364999"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@55791385[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e4a8152[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ab1529f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@707b1c8a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@272f5a46[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@ccbc13b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c9e5f97[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@54a993c2[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9890e7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5b99c468[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55f54a6b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4ddaf494[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Mar 17 10:22:35 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-17T10:22:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11955/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-03-13T17:57:40.000+0000",
        "updated": "2021-03-17T10:22:54.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust][DataFusion] Support Union",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13364999/comment/17303274",
                    "id": "17303274",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9695\n[https://github.com/apache/arrow/pull/9695]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-03-17T10:22:35.268+0000",
                    "updated": "2021-03-17T10:22:35.268+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0oqz4:",
        "customfield_12314139": null
    }
}