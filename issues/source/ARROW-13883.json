{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13399114",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114",
    "key": "ARROW-13883",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "aggregateprogress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 27000,
            "total": 27000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13883/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 45,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-922774774\n\n\n   https://issues.apache.org/jira/browse/ARROW-13883\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T09:45:15.421+0000",
                    "updated": "2021-09-20T09:45:15.421+0000",
                    "started": "2021-09-20T09:45:15.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652859",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652867",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712038716\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n                                   VisitorFunc&& func) {\n-  if (mo == nullptr || !PyArray_Check(mo)) {\n-    return Status::Invalid(\"Null mask must be NumPy array\");\n-  }\n-\n-  PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n-  if (PyArray_NDIM(mask) != 1) {\n-    return Status::Invalid(\"Mask must be 1D array\");\n-  }\n+  if (PyArray_Check(mo)) {\n+    PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n+    if (PyArray_NDIM(mask) != 1) {\n+      return Status::Invalid(\"Mask must be 1D array\");\n+    }\n+    if (PyArray_SIZE(mask) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n-  const Py_ssize_t obj_size = PySequence_Size(obj);\n-  if (PyArray_SIZE(mask) != static_cast<int64_t>(obj_size)) {\n-    return Status::Invalid(\"Mask was a different length from sequence being converted\");\n-  }\n+    const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n+    if (dtype == NPY_BOOL) {\n+      Ndarray1DIndexer<uint8_t> mask_values(mask);\n \n-  const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n-  if (dtype == NPY_BOOL) {\n-    Ndarray1DIndexer<uint8_t> mask_values(mask);\n+      return VisitSequenceGeneric(\n+          obj, offset,\n+          [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n+            return func(value, mask_values[i], keep_going);\n+          });\n+    } else {\n+      return Status::Invalid(\"Mask must be boolean dtype\");\n+    }\n+  } else if (PySequence_Check(mo)) {\n+    if (PySequence_Size(mo) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n     return VisitSequenceGeneric(\n-        obj, offset, [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n-          return func(value, mask_values[i], keep_going);\n+        obj, offset, [&func, &mo](PyObject* value, int64_t i, bool* keep_going) {\n+          OwnedRef value_ref(PySequence_ITEM(mo, i));\n+          PyObject* value_obj = value_ref.obj();\n+          auto scalar = unwrap_scalar(value_obj);\n+          if (scalar.ok()) {\n+            BooleanScalar* z = dynamic_cast<BooleanScalar*>(scalar.ValueOrDie().get());\n\nReview comment:\n       Not exactly fond of this, but I couldn't find any better way to check if I'm dealing with a `BooleanScalar` than trying to `unwrap` it and then trying to downcast.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T10:16:19.858+0000",
                    "updated": "2021-09-20T10:16:19.858+0000",
                    "started": "2021-09-20T10:16:19.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652867",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712106785\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n\nReview comment:\n       Unrelated to the change, but could we use more descriptive argument names?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T12:09:45.269+0000",
                    "updated": "2021-09-20T12:09:45.269+0000",
                    "started": "2021-09-20T12:09:45.269+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652906",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712110860\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n                                   VisitorFunc&& func) {\n-  if (mo == nullptr || !PyArray_Check(mo)) {\n-    return Status::Invalid(\"Null mask must be NumPy array\");\n-  }\n-\n-  PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n-  if (PyArray_NDIM(mask) != 1) {\n-    return Status::Invalid(\"Mask must be 1D array\");\n-  }\n+  if (PyArray_Check(mo)) {\n+    PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n+    if (PyArray_NDIM(mask) != 1) {\n+      return Status::Invalid(\"Mask must be 1D array\");\n+    }\n+    if (PyArray_SIZE(mask) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n-  const Py_ssize_t obj_size = PySequence_Size(obj);\n-  if (PyArray_SIZE(mask) != static_cast<int64_t>(obj_size)) {\n-    return Status::Invalid(\"Mask was a different length from sequence being converted\");\n-  }\n+    const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n+    if (dtype == NPY_BOOL) {\n+      Ndarray1DIndexer<uint8_t> mask_values(mask);\n \n-  const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n-  if (dtype == NPY_BOOL) {\n-    Ndarray1DIndexer<uint8_t> mask_values(mask);\n+      return VisitSequenceGeneric(\n+          obj, offset,\n+          [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n+            return func(value, mask_values[i], keep_going);\n+          });\n+    } else {\n+      return Status::Invalid(\"Mask must be boolean dtype\");\n+    }\n+  } else if (PySequence_Check(mo)) {\n+    if (PySequence_Size(mo) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n     return VisitSequenceGeneric(\n-        obj, offset, [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n-          return func(value, mask_values[i], keep_going);\n+        obj, offset, [&func, &mo](PyObject* value, int64_t i, bool* keep_going) {\n+          OwnedRef value_ref(PySequence_ITEM(mo, i));\n+          PyObject* value_obj = value_ref.obj();\n+          auto scalar = unwrap_scalar(value_obj);\n+          if (scalar.ok()) {\n+            BooleanScalar* z = dynamic_cast<BooleanScalar*>(scalar.ValueOrDie().get());\n+            if (z == nullptr)\n+              return Status::Invalid(\"Mask must be made of boolean values\");\n+            return func(value, z->value, keep_going);\n+          } else if (PyBool_Check(value_obj)) {\n+            return func(value, value_obj == Py_True, keep_going);\n+          } else {\n+            return Status::Invalid(\"Mask must be made of boolean values\");\n+          }\n         });\n   } else {\n-    return Status::Invalid(\"Mask must be boolean dtype\");\n+    return Status::Invalid(\"Null mask must be a NumPy or Arrow array\");\n\nReview comment:\n       According to the tests below generic boolean list seems to be supported.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T12:16:07.582+0000",
                    "updated": "2021-09-20T12:16:07.582+0000",
                    "started": "2021-09-20T12:16:07.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652909",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712110860\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n                                   VisitorFunc&& func) {\n-  if (mo == nullptr || !PyArray_Check(mo)) {\n-    return Status::Invalid(\"Null mask must be NumPy array\");\n-  }\n-\n-  PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n-  if (PyArray_NDIM(mask) != 1) {\n-    return Status::Invalid(\"Mask must be 1D array\");\n-  }\n+  if (PyArray_Check(mo)) {\n+    PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n+    if (PyArray_NDIM(mask) != 1) {\n+      return Status::Invalid(\"Mask must be 1D array\");\n+    }\n+    if (PyArray_SIZE(mask) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n-  const Py_ssize_t obj_size = PySequence_Size(obj);\n-  if (PyArray_SIZE(mask) != static_cast<int64_t>(obj_size)) {\n-    return Status::Invalid(\"Mask was a different length from sequence being converted\");\n-  }\n+    const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n+    if (dtype == NPY_BOOL) {\n+      Ndarray1DIndexer<uint8_t> mask_values(mask);\n \n-  const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n-  if (dtype == NPY_BOOL) {\n-    Ndarray1DIndexer<uint8_t> mask_values(mask);\n+      return VisitSequenceGeneric(\n+          obj, offset,\n+          [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n+            return func(value, mask_values[i], keep_going);\n+          });\n+    } else {\n+      return Status::Invalid(\"Mask must be boolean dtype\");\n+    }\n+  } else if (PySequence_Check(mo)) {\n+    if (PySequence_Size(mo) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n     return VisitSequenceGeneric(\n-        obj, offset, [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n-          return func(value, mask_values[i], keep_going);\n+        obj, offset, [&func, &mo](PyObject* value, int64_t i, bool* keep_going) {\n+          OwnedRef value_ref(PySequence_ITEM(mo, i));\n+          PyObject* value_obj = value_ref.obj();\n+          auto scalar = unwrap_scalar(value_obj);\n+          if (scalar.ok()) {\n+            BooleanScalar* z = dynamic_cast<BooleanScalar*>(scalar.ValueOrDie().get());\n+            if (z == nullptr)\n+              return Status::Invalid(\"Mask must be made of boolean values\");\n+            return func(value, z->value, keep_going);\n+          } else if (PyBool_Check(value_obj)) {\n+            return func(value, value_obj == Py_True, keep_going);\n+          } else {\n+            return Status::Invalid(\"Mask must be made of boolean values\");\n+          }\n         });\n   } else {\n-    return Status::Invalid(\"Mask must be boolean dtype\");\n+    return Status::Invalid(\"Null mask must be a NumPy or Arrow array\");\n\nReview comment:\n       According to the tests below boolean list seems to be supported as well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T12:16:20.814+0000",
                    "updated": "2021-09-20T12:16:20.814+0000",
                    "started": "2021-09-20T12:16:20.814+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652910",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652915",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-922881009\n\n\n   @amol- seems like there is cython logic supposed to handle the [conversion of different mask types to an ndarray](https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L2423), but only in the case if the [input is array like](https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L224). \r\n   \r\n   It would be nice if we could consolidate some of the logic, especially since we may remove the hard runtime numpy dependency in the future. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T12:24:47.064+0000",
                    "updated": "2021-09-20T12:24:47.064+0000",
                    "started": "2021-09-20T12:24:47.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652915",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652923",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712121063\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n                                   VisitorFunc&& func) {\n-  if (mo == nullptr || !PyArray_Check(mo)) {\n-    return Status::Invalid(\"Null mask must be NumPy array\");\n-  }\n-\n-  PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n-  if (PyArray_NDIM(mask) != 1) {\n-    return Status::Invalid(\"Mask must be 1D array\");\n-  }\n+  if (PyArray_Check(mo)) {\n+    PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n+    if (PyArray_NDIM(mask) != 1) {\n+      return Status::Invalid(\"Mask must be 1D array\");\n+    }\n+    if (PyArray_SIZE(mask) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n-  const Py_ssize_t obj_size = PySequence_Size(obj);\n-  if (PyArray_SIZE(mask) != static_cast<int64_t>(obj_size)) {\n-    return Status::Invalid(\"Mask was a different length from sequence being converted\");\n-  }\n+    const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n+    if (dtype == NPY_BOOL) {\n+      Ndarray1DIndexer<uint8_t> mask_values(mask);\n \n-  const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n-  if (dtype == NPY_BOOL) {\n-    Ndarray1DIndexer<uint8_t> mask_values(mask);\n+      return VisitSequenceGeneric(\n+          obj, offset,\n+          [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n+            return func(value, mask_values[i], keep_going);\n+          });\n+    } else {\n+      return Status::Invalid(\"Mask must be boolean dtype\");\n+    }\n+  } else if (PySequence_Check(mo)) {\n\nReview comment:\n       If we would like to restrict this branch to pyarrow arrays, then you could try to \r\n   1. `unwrap_array(mo)` to access the underlying C++ array\r\n   2. then try to downcast it to BooleanArray\r\n   3. access the boolean value of the C++ array directly rather than going through the python scalar API\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T12:30:54.380+0000",
                    "updated": "2021-09-20T12:30:54.380+0000",
                    "started": "2021-09-20T12:30:54.380+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652923",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652954",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-922921240\n\n\n   > @amol- seems like there is cython logic supposed to handle the [conversion of different mask types to an ndarray](https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L2423), but only in the case if the [input is array like](https://github.com/apache/arrow/blob/master/python/pyarrow/array.pxi#L224).\r\n   > \r\n   > It would be nice if we could consolidate some of the logic, especially since we may remove the hard runtime numpy dependency in the future.\r\n   \r\n   That's a good point, I actually missed that when the first argument is a `numpy` array we go down a totally different code path into `numpy_to_arrow.cc`. That means that if you passed a `numpy.ndarray` as the first argument you would still be forced to use a `numpy` array for the mask too. \r\n   \r\n   I'll have to tweak `numpy_to_arrow.cc` too to deal with the situation where the array is a numpy one but the mask is not.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T13:19:48.789+0000",
                    "updated": "2021-09-20T13:19:48.789+0000",
                    "started": "2021-09-20T13:19:48.789+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652954",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/652963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-922936136\n\n\n   Due to duck typing we may end up a lot of combinations of `values` and `mask` object types. Perhaps it would be nice to accumulate the supported type combinations in a table since some of them may not make sense, like:\r\n   ```py\r\n   pa.array(pa.Array, mask=pa.Array)\r\n   ``` \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T13:37:38.656+0000",
                    "updated": "2021-09-20T13:37:38.656+0000",
                    "started": "2021-09-20T13:37:38.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "652963",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/653206",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "edponce commented on a change in pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#discussion_r712510539\n\n\n\n##########\nFile path: cpp/src/arrow/python/iterators.h\n##########\n@@ -97,31 +98,53 @@ inline Status VisitSequence(PyObject* obj, int64_t offset, VisitorFunc&& func) {\n template <class VisitorFunc>\n inline Status VisitSequenceMasked(PyObject* obj, PyObject* mo, int64_t offset,\n                                   VisitorFunc&& func) {\n-  if (mo == nullptr || !PyArray_Check(mo)) {\n-    return Status::Invalid(\"Null mask must be NumPy array\");\n-  }\n-\n-  PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n-  if (PyArray_NDIM(mask) != 1) {\n-    return Status::Invalid(\"Mask must be 1D array\");\n-  }\n+  if (PyArray_Check(mo)) {\n+    PyArrayObject* mask = reinterpret_cast<PyArrayObject*>(mo);\n+    if (PyArray_NDIM(mask) != 1) {\n+      return Status::Invalid(\"Mask must be 1D array\");\n+    }\n+    if (PyArray_SIZE(mask) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n-  const Py_ssize_t obj_size = PySequence_Size(obj);\n-  if (PyArray_SIZE(mask) != static_cast<int64_t>(obj_size)) {\n-    return Status::Invalid(\"Mask was a different length from sequence being converted\");\n-  }\n+    const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n+    if (dtype == NPY_BOOL) {\n+      Ndarray1DIndexer<uint8_t> mask_values(mask);\n \n-  const int dtype = fix_numpy_type_num(PyArray_DESCR(mask)->type_num);\n-  if (dtype == NPY_BOOL) {\n-    Ndarray1DIndexer<uint8_t> mask_values(mask);\n+      return VisitSequenceGeneric(\n+          obj, offset,\n+          [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n+            return func(value, mask_values[i], keep_going);\n+          });\n+    } else {\n+      return Status::Invalid(\"Mask must be boolean dtype\");\n+    }\n+  } else if (PySequence_Check(mo)) {\n+    if (PySequence_Size(mo) != static_cast<int64_t>(PySequence_Size(obj))) {\n+      return Status::Invalid(\"Mask was a different length from sequence being converted\");\n+    }\n \n     return VisitSequenceGeneric(\n-        obj, offset, [&func, &mask_values](PyObject* value, int64_t i, bool* keep_going) {\n-          return func(value, mask_values[i], keep_going);\n+        obj, offset, [&func, &mo](PyObject* value, int64_t i, bool* keep_going) {\n+          OwnedRef value_ref(PySequence_ITEM(mo, i));\n+          PyObject* value_obj = value_ref.obj();\n+          auto scalar = unwrap_scalar(value_obj);\n+          if (scalar.ok()) {\n+            BooleanScalar* z = dynamic_cast<BooleanScalar*>(scalar.ValueOrDie().get());\n\nReview comment:\n       If you have a derived `Scalar` type, you can check its type via the [`type` data member](https://github.com/apache/arrow/blob/master/cpp/src/arrow/scalar.h#L56). I would like to help with this but do not know how to run code found in `arrow/python`. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-20T21:03:50.202+0000",
                    "updated": "2021-09-20T21:03:50.202+0000",
                    "started": "2021-09-20T21:03:50.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653206",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/653492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-923893583\n\n\n   > I'll have to tweak numpy_to_arrow.cc too to deal with the situation where the array is a numpy one but the mask is not.\r\n   \r\n   Wouldn't it be simpler to at that point do a `mask =  np.asarray(mask)` or the like in the cython code (at that point we know that numpy is available), instead of making the numpy_to_arrow case more complex to handle generic sequence types? \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T11:32:39.731+0000",
                    "updated": "2021-09-21T11:32:39.731+0000",
                    "started": "2021-09-21T11:32:39.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653492",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/653493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche edited a comment on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-923893583\n\n\n   > I'll have to tweak numpy_to_arrow.cc too to deal with the situation where the array is a numpy one but the mask is not.\r\n   \r\n   Wouldn't it be simpler to at that point do a `mask =  np.asarray(mask)` or the like in the cython code (at that point we know that numpy is available), instead of making the numpy_to_arrow case more complex to handle generic sequence types? \r\n   \r\n   That would also allow to keep some more code in cython (like the dimensionality and length check)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T11:33:33.132+0000",
                    "updated": "2021-09-21T11:33:33.132+0000",
                    "started": "2021-09-21T11:33:33.131+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653493",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/653507",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-923919180\n\n\n   > > I'll have to tweak numpy_to_arrow.cc too to deal with the situation where the array is a numpy one but the mask is not.\r\n   > \r\n   > Wouldn't it be simpler to at that point do a `mask = np.asarray(mask)` or the like in the cython code (at that point we know that numpy is available), instead of making the numpy_to_arrow case more complex to handle generic sequence types?\r\n   > \r\n   > That would also allow to keep some more code in cython (like the dimensionality and length check)\r\n   \r\n   It would, but I thought we didn't want to go that way as it would mean scanning the mask twice (once to convert it to numpy, once to make the bitmap), thus introducing a slowdown when something different from a numpy arrays is used as a mask. At that point it would probably make sense to just raise a `\"mask must be a numpy array when data is a numpy array\"` error and make the user explicitly deal with the overhead\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T12:07:32.899+0000",
                    "updated": "2021-09-21T12:07:32.899+0000",
                    "started": "2021-09-21T12:07:32.899+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653507",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/653523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-923941907\n\n\n   >  thus introducing a slowdown when something different from a numpy arrays is used as a mask\r\n   \r\n   Did you check if it actually gives a noticeable slowdown? (accessing items in a general python sequence is not especially fast compared to arrays) \r\n   But even then I would say: if you (as user) would care about such a potential slowdown from this, you should not use a python sequence in the first place.\r\n   \r\n   > At that point it would probably make sense to just raise a \"mask must be a numpy array when data is a numpy array\" error and make the user explicitly deal with the overhead\r\n   \r\n   That would be fine as well I think, yes (although we generally accept array-likes in most places, so doing an `if mask is not None: mask = asarray(mask)` might be slightly more consistent)\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-21T12:33:42.484+0000",
                    "updated": "2021-09-21T12:33:42.484+0000",
                    "started": "2021-09-21T12:33:42.484+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "653523",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654077",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-924960889\n\n\n   > > At that point it would probably make sense to just raise a \"mask must be a numpy array when data is a numpy array\" error and make the user explicitly deal with the overhead\r\n   > \r\n   > That would be fine as well I think, yes (although we generally accept array-likes in most places, so doing an `if mask is not None: mask = asarray(mask)` might be slightly more consistent)\r\n   \r\n   I went a bit down that path, but instead of forcing the mask to be a `numpy.array` as it was before, I forced it to be a `pyarrow.array`. Before sending the mask down to C++ I `asarray` gets invoked to guarantee that C++ always receives a `BooleanArray` as a mask.\r\n   \r\n   That seemed a more suitable strategy because converting from `numpy.array` to `BooleanArray` should usually be zero copy and thus have little overhead as far as I can understand and it seems more reasonable that the codebase uses its own implementation of array for masks instead of relying on a third party library.\r\n   \r\n   For the end user not much has changed, he/she can provide anything (lists, numpy.array, pyarrow.array) as masks and they are all supported but the code complexity is in the end greatly reduced by only having to support `pyarrow.array`.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T14:01:33.468+0000",
                    "updated": "2021-09-22T14:01:33.468+0000",
                    "started": "2021-09-22T14:01:33.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654077",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-924965766\n\n\n   > That seemed a more suitable strategy because converting from `numpy.array` to `BooleanArray` should usually be zero copy and thus have little overhead\r\n   \r\n   That's not actually the case, unfortunately: numpy uses bytes for boolean arrays (like int8), while arrow uses bits. Now, whether this additional conversion step (instead of iterating over the numpy array directly) matters and has a noticeable impact, I don't know (you could time it)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T14:06:45.152+0000",
                    "updated": "2021-09-22T14:06:45.152+0000",
                    "started": "2021-09-22T14:06:45.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654080",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-924990970\n\n\n   > > That seemed a more suitable strategy because converting from `numpy.array` to `BooleanArray` should usually be zero copy and thus have little overhead\r\n   > \r\n   > That's not actually the case, unfortunately: numpy uses bytes for boolean arrays (like int8), while arrow uses bits. Now, whether this additional conversion step (instead of iterating over the numpy array directly) matters and has a noticeable impact, I don't know (you could time it)\r\n   \r\n   Ah, that's unfortunate, I thought we were using the same memory layout for all PrimitiveArrays.\r\n   I very roughly tested the difference using this snippet\r\n   ```\r\n   import pyarrow as pa\r\n   import numpy as np\r\n   NUM_ENTRIES = 100000000\r\n   arr = np.arange(NUM_ENTRIES)\r\n   mask = np.array([False, True]*(NUM_ENTRIES//2))\r\n   import timeit\r\n   timeit.timeit(lambda: pa.array(arr, mask=mask), number=1)\r\n   ```\r\n   \r\n   On master (thus without any conversion from numpy to pyarrow) I get 2.76 seconds\r\n   On my branch (thus converting numpy mask to pyarrow mask) I get 3.69 seconds\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T14:34:48.394+0000",
                    "updated": "2021-09-22T14:34:48.394+0000",
                    "started": "2021-09-22T14:34:48.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654091",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-925770284\n\n\n   @jorisvandenbossche I redacted the PR as you suggested to only accept `numpy` masks when a `numpy` array is being converted. When a generic sequence is converted instead we accept `numpy` arrays, `pyarrow` arrays or plain sequences as the mask.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T12:38:12.024+0000",
                    "updated": "2021-09-23T12:38:12.024+0000",
                    "started": "2021-09-23T12:38:12.024+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654499",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-925866703\n\n\n   > When a generic sequence is converted instead we accept numpy arrays, pyarrow arrays or plain sequences as the mask.\r\n   \r\n   I know the code is now already written, and we might want it in the future anyway, but as long as we don't accept pyarrow arrays for the values, I am not sure it makes sense from a user perspective to explicitly support pyarrow arrays for the mask ..\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T14:26:33.611+0000",
                    "updated": "2021-09-23T14:26:33.611+0000",
                    "started": "2021-09-23T14:26:33.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654555",
                    "issueId": "13399114"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/worklog/654556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche edited a comment on pull request #11185:\nURL: https://github.com/apache/arrow/pull/11185#issuecomment-925866703\n\n\n   > When a generic sequence is converted instead we accept numpy arrays, pyarrow arrays or plain sequences as the mask.\r\n   \r\n   I know the code is now already written, and we might want it in the future anyway, but as long as we don't accept pyarrow arrays for the values, I am not sure it makes sense from a user perspective to explicitly support pyarrow arrays for the mask ..\r\n   \r\n   (EDIT: but yes, so that was actually your original goal to add that, I remember now ..)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T14:27:47.732+0000",
                    "updated": "2021-09-23T14:27:47.732+0000",
                    "started": "2021-09-23T14:27:47.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654556",
                    "issueId": "13399114"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 27000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3b287e4[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27005c78[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58513bbf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7d975f51[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c515ba2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@2b4df70d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a90ad18[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3dba08cc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b80d892[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4fb1b370[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30363ff3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5da7bd51[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 27000,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 14 11:24:39 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-14T11:24:39.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13883/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2021-09-03T08:38:35.000+0000",
        "updated": "2021-10-17T00:34:08.000+0000",
        "timeoriginalestimate": null,
        "description": "At the moment we only allow using {{numpy}} arrays for masks when building new arrays. It would be helpful to allow using a {{pyarrow.Array}} too so that the user has more flexibility and we can avoid involving {{numpy}} in documentation examples for the sole purpose of creating masks.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 27000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Allow more than numpy.array as masks when creating arrays ",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/comment/17409378",
                    "id": "17409378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Masks are a Numpy-specific feature AFAIU, and Arrow only supports them for compatibility with Numpy.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-09-03T08:40:47.029+0000",
                    "updated": "2021-09-03T08:40:47.029+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/comment/17414244",
                    "id": "17414244",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "See also ARROW-7071 for a discussion about how to expose setting a validity bitmap to an existing array, which can be used for similar purposes as {{pa.array(..., mask=..}} if you have a mask as pyarrow array (there are differences though)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-09-13T14:54:26.895+0000",
                    "updated": "2021-09-13T14:54:26.895+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13399114/comment/17428761",
                    "id": "17428761",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Issue resolved by pull request 11185\n[https://github.com/apache/arrow/pull/11185]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-10-14T11:24:39.733+0000",
                    "updated": "2021-10-14T11:24:39.733+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ukiw:",
        "customfield_12314139": null
    }
}