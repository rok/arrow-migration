{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13194734",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734",
    "key": "ARROW-3644",
    "fields": {
        "parent": {
            "id": "13179854",
            "key": "ARROW-3089",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13179854",
            "fields": {
                "summary": "[Rust] Add ArrayBuilder for different Arrow arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
            "name": "paddyhoran",
            "key": "paddyhoran",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paddy Horan",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3644/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 25,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163336",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran opened a new pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914\n \n \n   This implementation is only for `List<T>` where `T: ArrowPrimitiveType`.\r\n   \r\n   It would be nice to allow the internal values builder to be any type of builder allowing the creation of `List<List<T>>` for instance.  I tried to do this but I struggled a little on how to design this.\r\n   \r\n   I'm submitting this as an initial implementation, `List<T>` is all I need right now.  However, I'm interested on others thoughts on how we can expand this (maybe I'll follow up on the mailing list).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T02:31:03.939+0000",
                    "updated": "2018-11-07T02:31:03.939+0000",
                    "started": "2018-11-07T02:31:03.937+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163336",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436486699\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=h1) Report\n   > Merging [#2914](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c9c7f9c09aa1f5bf17b53704c94ae39888f6fce7?src=pr&el=desc) will **increase** coverage by `14.8%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2914/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2914      +/-   ##\n   ==========================================\n   + Coverage   74.57%   89.37%   +14.8%     \n   ==========================================\n     Files          68       12      -56     \n     Lines        5160     1807    -3353     \n   ==========================================\n   - Hits         3848     1615    -2233     \n   + Misses       1222      192    -1030     \n   + Partials       90        0      -90\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [46 more](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=footer). Last update [c9c7f9c...0040ddb](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T02:54:27.384+0000",
                    "updated": "2018-11-07T02:54:27.384+0000",
                    "started": "2018-11-07T02:54:27.384+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163341",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436502351\n \n \n   cc @kszucs @andygrove @crepererum @sunchao\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T04:37:51.585+0000",
                    "updated": "2018-11-07T04:37:51.585+0000",
                    "started": "2018-11-07T04:37:51.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163356",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436763008\n \n \n   Thanks @paddyhoran . Overall it looks OK. I think we'll need a trait for `ArrayBuilder` and have all the builders to implement it. We have done similar thing in `array.rs`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T20:18:06.467+0000",
                    "updated": "2018-11-07T20:18:06.467+0000",
                    "started": "2018-11-07T20:18:06.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163639",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436783285\n \n \n   Thanks @sunchao \r\n   \r\n   An `ArrayBuilder` trait was my thinking also but how can we get around the different methods required by specific builders but not by others?\r\n   \r\n   For instance, to create a builder for `List<List<T>>` the builder behind `values` (which would be `T: ArrayBuilder`) would have to implement `append`, i.e. `append` would have to be part of the trait.\r\n   \r\n   But then `PrimitiveArrayBuilder` would have to implement `append` also...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T21:27:02.673+0000",
                    "updated": "2018-11-07T21:27:02.673+0000",
                    "started": "2018-11-07T21:27:02.672+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163657",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436809271\n \n \n   Why does the `ArrayBuilder` need to support `append`? In the case of `List<List<T>>`, the `ListBuilder` doesn't need to call `append` on its value builder, right? whoever build a list of lists should also initialize a value builder for `List<T>` and use that to build the value array. When doing that, we are dealing with `ListBuilder` instead of `ArrayBuilder`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-07T22:59:58.614+0000",
                    "updated": "2018-11-07T22:59:58.614+0000",
                    "started": "2018-11-07T22:59:58.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163720",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-437051700\n \n \n   Hey @sunchao,\r\n   \r\n   I guess I'm asking if it's possible to do the following and allow `values_builder` to be any builder type (including another `ListArrayBuilder`) as defined by a new `ArrayBuilder` trait?\r\n   \r\n   ```rust\r\n       let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(values_builder);\r\n       builder.values().push(0).unwrap();\r\n       builder.values().push(1).unwrap();\r\n       builder.values().push(2).unwrap();\r\n       builder.append(true).unwrap();\r\n       builder.append(false).unwrap();\r\n       builder.values().push(3).unwrap();\r\n       builder.values().push_null().unwrap();\r\n       builder.values().push(5).unwrap();\r\n       builder.append(true).unwrap();\r\n       let list_array = builder.finish();\r\n   ```\r\n   \r\n   The other option (which I'm starting to prefer) that I can think of is as follows:\r\n   ```rust\r\n       let mut values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(&values_builder);\r\n       values_builder.push(0).unwrap();\r\n       values_builder.push(1).unwrap();\r\n       values_builder.push(2).unwrap();\r\n       builder.append(true).unwrap();\r\n       builder.append(false).unwrap();\r\n       values_builder.push(3).unwrap();\r\n       values_builder.push_null().unwrap();\r\n       values_builder.push(5).unwrap();\r\n       builder.append(true).unwrap();\r\n       let list_array = builder.finish(values_builder); // consistency of values and offsets happens here\r\n   ```\r\n   \r\n   Using the second approach then we could have a few specific builders for common use cases like `PrimitiveListArrayBuilder` and `BinaryArrayBuilder`.\r\n   \r\n   Is the second approach above what you had in mind?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T16:07:31.633+0000",
                    "updated": "2018-11-08T16:07:31.633+0000",
                    "started": "2018-11-08T16:07:31.633+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163957",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran edited a comment on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-437051700\n \n \n   Hey @sunchao,\r\n   \r\n   I guess I'm asking if it's possible to do the following and allow `values_builder` to be any builder type (including another `ListArrayBuilder`) as defined by a new `ArrayBuilder` trait?\r\n   \r\n   ```rust\r\n       let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(values_builder);\r\n       builder.values().push(0).unwrap();\r\n       builder.values().push(1).unwrap();\r\n       builder.values().push(2).unwrap();\r\n       builder.append(true).unwrap();\r\n       builder.append(false).unwrap();\r\n       builder.values().push(3).unwrap();\r\n       builder.values().push_null().unwrap();\r\n       builder.values().push(5).unwrap();\r\n       builder.append(true).unwrap();\r\n       let list_array = builder.finish();\r\n   ```\r\n   \r\n   The other option (which I'm starting to prefer) that I can think of is as follows:\r\n   ```rust\r\n       let mut values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(&values_builder);\r\n       values_builder.push(0).unwrap();\r\n       values_builder.push(1).unwrap();\r\n       values_builder.push(2).unwrap();\r\n       builder.append(true).unwrap();\r\n       builder.append(false).unwrap();\r\n       values_builder.push(3).unwrap();\r\n       values_builder.push_null().unwrap();\r\n       values_builder.push(5).unwrap();\r\n       builder.append(true).unwrap();\r\n       let list_array = builder.finish(values_builder.finish()); // consistency of values and offsets happens here\r\n   ```\r\n   \r\n   Using the second approach then we could have a few specific builders for common use cases like `PrimitiveListArrayBuilder` and `BinaryArrayBuilder`.\r\n   \r\n   Is the second approach above what you had in mind?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T17:10:20.551+0000",
                    "updated": "2018-11-08T17:10:20.551+0000",
                    "started": "2018-11-08T17:10:20.550+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163981",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/163985",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran edited a comment on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-437051700\n \n \n   Hey @sunchao,\r\n   \r\n   I guess I'm asking if it's possible to do the following and allow `values_builder` to be any builder type (including another `ListArrayBuilder`) as defined by a new `ArrayBuilder` trait?\r\n   \r\n   ```rust\r\n       let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(values_builder);\r\n       builder.values().push(0).unwrap();\r\n       builder.values().push(1).unwrap();\r\n       builder.values().push(2).unwrap();\r\n       builder.append(true).unwrap();\r\n       builder.append(false).unwrap();\r\n       builder.values().push(3).unwrap();\r\n       builder.values().push_null().unwrap();\r\n       builder.values().push(5).unwrap();\r\n       builder.append(true).unwrap();\r\n       let list_array = builder.finish();\r\n   ```\r\n   \r\n   The other option (which I'm starting to prefer) that I can think of is as follows:\r\n   ```rust\r\n       let mut values_builder = PrimitiveArrayBuilder::<i32>::new(10);\r\n       let mut builder = ListArrayBuilder::new(&values_builder);\r\n       values_builder.push(0).unwrap();\r\n       values_builder.push(1).unwrap();\r\n       values_builder.push(2).unwrap();\r\n       builder.append(true, values_builder.len()).unwrap();\r\n       builder.append(false, values_builder.len()).unwrap();\r\n       values_builder.push(3).unwrap();\r\n       values_builder.push_null().unwrap();\r\n       values_builder.push(5).unwrap();\r\n       builder.append(true, values_builder.len()).unwrap();\r\n       let list_array = builder.finish(values_builder.finish()); // consistency of values and offsets happens here\r\n   ```\r\n   \r\n   Using the second approach then we could have a few specific builders for common use cases like `PrimitiveListArrayBuilder` and `BinaryArrayBuilder`.\r\n   \r\n   Is the second approach above what you had in mind?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T17:20:04.367+0000",
                    "updated": "2018-11-08T17:20:04.367+0000",
                    "started": "2018-11-08T17:20:04.367+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "163985",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/164028",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-437109614\n \n \n   @paddyhoran I'm thinking about something like this:\r\n   ```rust\r\n   let mut builder = ListArrayBuilder::new(PrimitiveArrayBuilder::<i32>::new(10));\r\n   let mut value_builder = builder.values().as_any().downcast_ref::<PrimitiveArrayBuilder<i32>>();\r\n   values_builder.push(0).unwrap();\r\n   values_builder.push(1).unwrap();\r\n   values_builder.push(2).unwrap();\r\n   builder.append(true).unwrap();\r\n   builder.append(false).unwrap();\r\n   values_builder.push(3).unwrap();\r\n   values_builder.push_null().unwrap();\r\n   values_builder.push(5).unwrap();\r\n   builder.append(true).unwrap();\r\n   let list_array = builder.finish(); // consistency of values and offsets happens here\r\n   ```\r\n   \r\n   This is more align with the cpp implementation. IMO the issue with option 2 is that you'd need two mutable references, one stored in `builder`, and another for adding values. We also should not need to pass `len` from `values_builder` and call its `finish` directly.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T18:39:50.538+0000",
                    "updated": "2018-11-08T18:39:50.538+0000",
                    "started": "2018-11-08T18:39:50.537+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164028",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/164057",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-437119952\n \n \n   Thanks @sunchao!\r\n   \r\n   Let me iterate on this, I was missing:\r\n   ```rust\r\n   let mut value_builder = builder.values().as_any().downcast_ref::<PrimitiveArrayBuilder<i32>>();\r\n   ```\r\n   \r\n   I have never really used the `Any` type or related features.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-08T19:10:53.319+0000",
                    "updated": "2018-11-08T19:10:53.319+0000",
                    "started": "2018-11-08T19:10:53.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "164057",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/165626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [WIP] [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-438420335\n \n \n   I think this is ready for another review.\r\n   \r\n   The new implementation is not fully generic over the new `ArrayBuilder` trait (does not support arbitrary nesting).  Our macro solution to the lack of specialization when using `ArrowPrimitiveType`  as a trait bound has knock on effects.  While implementing higher level structures I find myself trying to find that mix of using generics and macros that gives us what we want and satisfies the compiler.  I believe that when specialization lands on stable we will be able to simplify things considerably.  Until then I guess we just have to keep moving forward.\r\n   \r\n   This new implementation supports building arrays of type `List<T>` and `List<List<T>>`.  It would be trivial to add support for `List<List<List<T>>>` but I'm not sure how much this is used in practice.  Perhaps we can limit ourselves to supporting 2 levels of nesting until specialization lands (further nesting can always be achieved using `ArrayDataBuilder`), or maybe someone else can take a run at this post merge.\r\n   \r\n   I'd like to get this merged as a workable solution for now because it means I can move on to create a `BinaryArrayBuilder` which will be quite useful when creating arrays of strings.\r\n   \r\n   cc @kszucs @crepererum @sunchao @andygrove \r\n   \r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-13T20:14:41.662+0000",
                    "updated": "2018-11-13T20:14:41.662+0000",
                    "started": "2018-11-13T20:14:41.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "165626",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-438937822\n \n \n   Thanks @paddyhoran . The specialization feature will likely be a long shot.. I wonder if we have ever considered using nightly on this project before - I've seen multiple large projects that use Rust nightly and some features are very useful from my personal experience.\r\n   \r\n   The limitation on 2 levels looks unfortunate - I do have seen people use _many_ levels nested structure in real environment. On this case, I'm not sure if specialization can help. I wonder if you have considered making `ListArrayBuilder` non-generic. This may require a few tweaking on the existing structure, but possibly do-able. \r\n   \r\n   To me, I'm OK with moving and have another PR to address the issue later (I'm happy to take on the task as well). Will post a few comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T06:57:09.838+0000",
                    "updated": "2018-11-15T06:57:09.838+0000",
                    "started": "2018-11-15T06:57:09.837+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166299",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#discussion_r233729672\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -542,4 +679,178 @@ mod tests {\n             }\n         }\n     }\n+\n+    #[test]\n+    fn test_list_array_builder() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], [3, 4, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push(4).unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        let values = list_array.values().data().buffers()[0].clone();\n+        assert_eq!(\n+            Buffer::from(&[0, 1, 2, 3, 4, 5, 6, 7].to_byte_slice()),\n+            values\n+        );\n+        assert_eq!(\n+            Buffer::from(&[0, 3, 6, 8].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(6, list_array.value_offset(2));\n+        assert_eq!(2, list_array.value_length(2));\n+        for i in 0..3 {\n+            assert!(list_array.is_valid(i as i64));\n+            assert!(!list_array.is_null(i as i64));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_list_array_builder_nulls() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], null, [3, null, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.append(false).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push_null().unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(4, list_array.len());\n+        assert_eq!(1, list_array.null_count());\n+        assert_eq!(3, list_array.value_offset(2));\n+        assert_eq!(3, list_array.value_length(2));\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder() {\n+        let primitive_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let values_builder = ListArrayBuilder::new(primitive_builder);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[[1, 2], [3, 4]], [[5, 6, 7], null, [8]], [[9, 10]]]\n+        builder.values().values().push(1).unwrap();\n+        builder.values().values().push(2).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().values().push(3).unwrap();\n+        builder.values().values().push(4).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(5).unwrap();\n+        builder.values().values().push(6).unwrap();\n+        builder.values().values().push(7).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().append(false).unwrap();\n+        builder.values().values().push(8).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(9).unwrap();\n+        builder.values().values().push(10).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        let list_array = builder.finish();\n+\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 5, 6].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(6, list_array.values().data().len());\n+        assert_eq!(1, list_array.values().data().null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 4, 7, 7, 8, 10].to_byte_slice()),\n+            list_array.values().data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(10, list_array.values().data().child_data()[0].len());\n+        assert_eq!(0, list_array.values().data().child_data()[0].null_count());\n+        assert_eq!(\n+            Buffer::from(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].to_byte_slice()),\n+            list_array.values().data().child_data()[0].buffers()[0].clone()\n+        );\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder_nulls() {\n \n Review comment:\n   This looks very similar to the test above it. Can we either merge them or make them more distinct?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T07:01:37.677+0000",
                    "updated": "2018-11-15T07:01:37.677+0000",
                    "started": "2018-11-15T07:01:37.677+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166301",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#discussion_r233729771\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -294,6 +321,116 @@ impl_primitive_array_builder!(DataType::Int64, i64);\n impl_primitive_array_builder!(DataType::Float32, f32);\n impl_primitive_array_builder!(DataType::Float64, f64);\n \n+///  Array builder for `ListArray`\n+pub struct ListArrayBuilder<T>\n+where\n+    T: ArrayBuilder,\n+{\n+    offsets_builder: BufferBuilder<i32>,\n+    bitmap_builder: BufferBuilder<bool>,\n+    values_builder: T,\n+    len: i64,\n+}\n+\n+impl<T: ArrayBuilder> ListArrayBuilder<T> {\n+    /// Creates a new `ListArrayBuilder` from a given values array builder\n+    pub fn new(values_builder: T) -> Self {\n+        let mut offsets_builder = BufferBuilder::<i32>::new(values_builder.len() + 1);\n+        offsets_builder.push(0).unwrap();\n+        Self {\n+            offsets_builder,\n+            bitmap_builder: BufferBuilder::<bool>::new(values_builder.len()),\n+            values_builder,\n+            len: 0,\n+        }\n+    }\n+}\n+\n+macro_rules! impl_list_array_builder {\n+    ($native_ty:ty) => {\n \n Review comment:\n   `native_ty` is a bad name - can we change it to something like `builder_ty`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T07:01:37.839+0000",
                    "updated": "2018-11-15T07:01:37.839+0000",
                    "started": "2018-11-15T07:01:37.838+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166302",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#discussion_r233854343\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -542,4 +679,178 @@ mod tests {\n             }\n         }\n     }\n+\n+    #[test]\n+    fn test_list_array_builder() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], [3, 4, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push(4).unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        let values = list_array.values().data().buffers()[0].clone();\n+        assert_eq!(\n+            Buffer::from(&[0, 1, 2, 3, 4, 5, 6, 7].to_byte_slice()),\n+            values\n+        );\n+        assert_eq!(\n+            Buffer::from(&[0, 3, 6, 8].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(6, list_array.value_offset(2));\n+        assert_eq!(2, list_array.value_length(2));\n+        for i in 0..3 {\n+            assert!(list_array.is_valid(i as i64));\n+            assert!(!list_array.is_null(i as i64));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_list_array_builder_nulls() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], null, [3, null, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.append(false).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push_null().unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(4, list_array.len());\n+        assert_eq!(1, list_array.null_count());\n+        assert_eq!(3, list_array.value_offset(2));\n+        assert_eq!(3, list_array.value_length(2));\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder() {\n+        let primitive_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let values_builder = ListArrayBuilder::new(primitive_builder);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[[1, 2], [3, 4]], [[5, 6, 7], null, [8]], [[9, 10]]]\n+        builder.values().values().push(1).unwrap();\n+        builder.values().values().push(2).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().values().push(3).unwrap();\n+        builder.values().values().push(4).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(5).unwrap();\n+        builder.values().values().push(6).unwrap();\n+        builder.values().values().push(7).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().append(false).unwrap();\n+        builder.values().values().push(8).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(9).unwrap();\n+        builder.values().values().push(10).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        let list_array = builder.finish();\n+\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 5, 6].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(6, list_array.values().data().len());\n+        assert_eq!(1, list_array.values().data().null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 4, 7, 7, 8, 10].to_byte_slice()),\n+            list_array.values().data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(10, list_array.values().data().child_data()[0].len());\n+        assert_eq!(0, list_array.values().data().child_data()[0].null_count());\n+        assert_eq!(\n+            Buffer::from(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].to_byte_slice()),\n+            list_array.values().data().child_data()[0].buffers()[0].clone()\n+        );\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder_nulls() {\n \n Review comment:\n   Yea, I'll merge them.  Probably don't need to be separate tests.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T14:09:19.168+0000",
                    "updated": "2018-11-15T14:09:19.168+0000",
                    "started": "2018-11-15T14:09:19.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166440",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166441",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#discussion_r233854554\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -294,6 +321,116 @@ impl_primitive_array_builder!(DataType::Int64, i64);\n impl_primitive_array_builder!(DataType::Float32, f32);\n impl_primitive_array_builder!(DataType::Float64, f64);\n \n+///  Array builder for `ListArray`\n+pub struct ListArrayBuilder<T>\n+where\n+    T: ArrayBuilder,\n+{\n+    offsets_builder: BufferBuilder<i32>,\n+    bitmap_builder: BufferBuilder<bool>,\n+    values_builder: T,\n+    len: i64,\n+}\n+\n+impl<T: ArrayBuilder> ListArrayBuilder<T> {\n+    /// Creates a new `ListArrayBuilder` from a given values array builder\n+    pub fn new(values_builder: T) -> Self {\n+        let mut offsets_builder = BufferBuilder::<i32>::new(values_builder.len() + 1);\n+        offsets_builder.push(0).unwrap();\n+        Self {\n+            offsets_builder,\n+            bitmap_builder: BufferBuilder::<bool>::new(values_builder.len()),\n+            values_builder,\n+            len: 0,\n+        }\n+    }\n+}\n+\n+macro_rules! impl_list_array_builder {\n+    ($native_ty:ty) => {\n \n Review comment:\n   Yep, true.  I'll change this.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T14:09:52.717+0000",
                    "updated": "2018-11-15T14:09:52.717+0000",
                    "started": "2018-11-15T14:09:52.716+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166441",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166443",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-439056882\n \n \n   Regarding nightly, I would prefer to stay on stable but we should probably discuss on the mailing list if you think this is a good idea.\r\n   \r\n   The limitation on nesting *is* unfortunate, but this is only for a higher level builder.  Further nested data structures can always be created via `ArrayDataBuilder`.  In least in the short term I think this is fine.  It allows us to move forward.  I know you are working on the `StructArrayBuilder` and I believe you will encounter similar issues.  Once you post a solution to that I will study it to see how I might revise `ListArrayBuiler`.\r\n   \r\n   As always thanks for your input, I'll address your other comments when I get a chance.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T14:23:46.119+0000",
                    "updated": "2018-11-15T14:23:46.119+0000",
                    "started": "2018-11-15T14:23:46.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166443",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/166986",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on a change in pull request #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#discussion_r234300831\n \n \n\n ##########\n File path: rust/src/builder.rs\n ##########\n @@ -542,4 +679,178 @@ mod tests {\n             }\n         }\n     }\n+\n+    #[test]\n+    fn test_list_array_builder() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], [3, 4, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push(4).unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        let values = list_array.values().data().buffers()[0].clone();\n+        assert_eq!(\n+            Buffer::from(&[0, 1, 2, 3, 4, 5, 6, 7].to_byte_slice()),\n+            values\n+        );\n+        assert_eq!(\n+            Buffer::from(&[0, 3, 6, 8].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(6, list_array.value_offset(2));\n+        assert_eq!(2, list_array.value_length(2));\n+        for i in 0..3 {\n+            assert!(list_array.is_valid(i as i64));\n+            assert!(!list_array.is_null(i as i64));\n+        }\n+    }\n+\n+    #[test]\n+    fn test_list_array_builder_nulls() {\n+        let values_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[0, 1, 2], null, [3, null, 5], [6, 7]]\n+        builder.values().push(0).unwrap();\n+        builder.values().push(1).unwrap();\n+        builder.values().push(2).unwrap();\n+        builder.append(true).unwrap();\n+        builder.append(false).unwrap();\n+        builder.values().push(3).unwrap();\n+        builder.values().push_null().unwrap();\n+        builder.values().push(5).unwrap();\n+        builder.append(true).unwrap();\n+        builder.values().push(6).unwrap();\n+        builder.values().push(7).unwrap();\n+        builder.append(true).unwrap();\n+        let list_array = builder.finish();\n+\n+        assert_eq!(DataType::Int32, list_array.value_type());\n+        assert_eq!(4, list_array.len());\n+        assert_eq!(1, list_array.null_count());\n+        assert_eq!(3, list_array.value_offset(2));\n+        assert_eq!(3, list_array.value_length(2));\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder() {\n+        let primitive_builder = PrimitiveArrayBuilder::<i32>::new(10);\n+        let values_builder = ListArrayBuilder::new(primitive_builder);\n+        let mut builder = ListArrayBuilder::new(values_builder);\n+\n+        //  [[[1, 2], [3, 4]], [[5, 6, 7], null, [8]], [[9, 10]]]\n+        builder.values().values().push(1).unwrap();\n+        builder.values().values().push(2).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().values().push(3).unwrap();\n+        builder.values().values().push(4).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(5).unwrap();\n+        builder.values().values().push(6).unwrap();\n+        builder.values().values().push(7).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.values().append(false).unwrap();\n+        builder.values().values().push(8).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        builder.values().values().push(9).unwrap();\n+        builder.values().values().push(10).unwrap();\n+        builder.values().append(true).unwrap();\n+        builder.append(true).unwrap();\n+\n+        let list_array = builder.finish();\n+\n+        assert_eq!(3, list_array.len());\n+        assert_eq!(0, list_array.null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 5, 6].to_byte_slice()),\n+            list_array.data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(6, list_array.values().data().len());\n+        assert_eq!(1, list_array.values().data().null_count());\n+        assert_eq!(\n+            Buffer::from(&[0, 2, 4, 7, 7, 8, 10].to_byte_slice()),\n+            list_array.values().data().buffers()[0].clone()\n+        );\n+\n+        assert_eq!(10, list_array.values().data().child_data()[0].len());\n+        assert_eq!(0, list_array.values().data().child_data()[0].null_count());\n+        assert_eq!(\n+            Buffer::from(&[1, 2, 3, 4, 5, 6, 7, 8, 9, 10].to_byte_slice()),\n+            list_array.values().data().child_data()[0].buffers()[0].clone()\n+        );\n+    }\n+\n+    #[test]\n+    fn test_list_list_array_builder_nulls() {\n \n Review comment:\n   Actually, I think you are right, I just removed the second test...\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-16T18:15:02.905+0000",
                    "updated": "2018-11-16T18:15:02.905+0000",
                    "started": "2018-11-16T18:15:02.904+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166986",
                    "issueId": "13194734"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/worklog/167004",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on issue #2914: ARROW-3644: [Rust] Implement ListArrayBuilder\nURL: https://github.com/apache/arrow/pull/2914#issuecomment-436486699\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=h1) Report\n   > Merging [#2914](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/c9c7f9c09aa1f5bf17b53704c94ae39888f6fce7?src=pr&el=desc) will **increase** coverage by `14.87%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2914/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=tree)\n   \n   ```diff\n   @@             Coverage Diff             @@\n   ##           master    #2914       +/-   ##\n   ===========================================\n   + Coverage   74.57%   89.45%   +14.87%     \n   ===========================================\n     Files          68       12       -56     \n     Lines        5160     1811     -3349     \n   ===========================================\n   - Hits         3848     1620     -2228     \n   + Misses       1222      191     -1031     \n   + Partials       90        0       -90\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [go/arrow/array/table.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvdGFibGUuZ28=) | | |\n   | [go/arrow/math/uint64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYW1kNjQuZ28=) | | |\n   | [go/arrow/internal/testing/tools/bool.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9ib29sLmdv) | | |\n   | [go/arrow/internal/bitutil/bitutil.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvYml0dXRpbC9iaXR1dGlsLmdv) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/array/null.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvbnVsbC5nbw==) | | |\n   | [go/arrow/datatype\\_nested.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvZGF0YXR5cGVfbmVzdGVkLmdv) | | |\n   | [go/arrow/array/string.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvc3RyaW5nLmdv) | | |\n   | [go/arrow/math/uint64\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC91aW50NjRfYXZ4Ml9hbWQ2NC5nbw==) | | |\n   | [go/arrow/array/builder.go](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVpbGRlci5nbw==) | | |\n   | ... and [47 more](https://codecov.io/gh/apache/arrow/pull/2914/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=footer). Last update [c9c7f9c...796d40f](https://codecov.io/gh/apache/arrow/pull/2914?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-16T18:47:18.281+0000",
                    "updated": "2018-11-16T18:47:18.281+0000",
                    "started": "2018-11-16T18:47:18.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167004",
                    "issueId": "13194734"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@32e2a0cf[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@76f3bb8f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@644724bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f83c47b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b789cea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4899cb0d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15a67c7d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@497c2ae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b67811a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6d20fed8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b432295[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@71fb1be1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 07 02:04:44 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-08-29T14:14:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3644/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-29T02:23:31.000+0000",
        "updated": "2022-08-29T14:15:16.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Implement ListArrayBuilder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13194734/comment/16712257",
                    "id": "16712257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
                        "name": "paddyhoran",
                        "key": "paddyhoran",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paddy Horan",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Closed via [https://github.com/apache/arrow/pull/2914]\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paddyhoran",
                        "name": "paddyhoran",
                        "key": "paddyhoran",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paddy Horan",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-07T02:04:44.203+0000",
                    "updated": "2018-12-07T02:04:44.203+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zqhb:",
        "customfield_12314139": null
    }
}