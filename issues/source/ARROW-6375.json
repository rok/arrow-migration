{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13253529",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529",
    "key": "ARROW-6375",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ozars",
            "name": "ozars",
            "key": "ozars",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Omer Ozarslan",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ozars",
            "name": "ozars",
            "key": "ozars",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Omer Ozarslan",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ozars",
            "name": "ozars",
            "key": "ozars",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Omer Ozarslan",
            "active": true,
            "timeZone": "America/Chicago"
        },
        "aggregateprogress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7200,
            "total": 7200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6375/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/309250",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336\n \n \n   `ConversionTraits<T>` is extended to allow users to provide `AppendMultipleRows` method for a type. This method can be used for constructing `List` or `LargeList` more efficiently by calling value builder's `ApendValues()` method with a contiguous range (e.g. `std::vector`), instead of iterating over each element  with value builder's `Append()` method. Default is to fallback to the latter behavior if `AppendMultipleRows` isn't provided.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-09T21:13:40.507+0000",
                    "updated": "2019-09-09T21:13:40.507+0000",
                    "started": "2019-09-09T21:13:40.506+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "309250",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322944918\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -50,19 +52,33 @@ using BareTupleElement = typename std::remove_const<typename std::remove_referen\n template <typename T, typename Enable = void>\n struct ConversionTraits {};\n \n-#define ARROW_STL_CONVERSION(c_type, ArrowType_)                                    \\\n-  template <>                                                                       \\\n-  struct ConversionTraits<c_type> : public CTypeTraits<c_type> {                    \\\n-    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,  \\\n-                            c_type cell) {                                          \\\n-      return builder.Append(cell);                                                  \\\n-    }                                                                               \\\n-    static c_type GetEntry(const typename TypeTraits<ArrowType_>::ArrayType& array, \\\n-                           size_t j) {                                              \\\n-      return array.Value(j);                                                        \\\n-    }                                                                               \\\n-    constexpr static bool nullable = false;                                         \\\n-  };\n+#define ARROW_STL_CONVERSION(CType_, ArrowType_)                                         \\\n+  template <>                                                                            \\\n+  struct ConversionTraits<CType_> : public CTypeTraits<CType_> {                         \\\n+    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,       \\\n+                            CType_ cell) {                                               \\\n+      return builder.Append(cell);                                                       \\\n+    }                                                                                    \\\n+    template <typename Range>                                                            \\\n \n Review comment:\n   I don't think it's appropriate to make this a member of the ConversionTraits struct unless you standardize on std::vector for your cell range concept; it makes adding new implementations very verbose and detecting whether the functionality is available is now impossible at compile time:\r\n   ```c++\r\n   static_assert(\r\n       HasAppendMultipleRows<bool, BooleanBuilder, MemoryPool*>::value,\r\n       \"memory pool shouldn't be usable as a boolean cell range\");\r\n   ```\r\n   \r\n   Please make this a non member method or disallow non-vector cell ranges\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T20:36:13.284+0000",
                    "updated": "2019-09-10T20:36:13.284+0000",
                    "started": "2019-09-10T20:36:13.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310089",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322949619\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +103,88 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n+namespace internal {\n+using ::arrow::internal::void_t;\n+\n+template <typename CType, typename BuilderType, typename Range, typename Enable = void>\n+struct HasAppendMultipleRows : public std::false_type {};\n+\n+template <typename CType, typename BuilderType, typename Range>\n+struct HasAppendMultipleRows<CType, BuilderType, Range,\n+                             void_t<decltype(ConversionTraits<CType>::AppendMultipleRows(\n+                                 std::declval<BuilderType&>(), std::declval<Range>()))>>\n+    : public std::true_type {};\n+\n+template <typename ValueCType>\n+using ElementBuilderType =\n+    typename TypeTraits<typename ConversionTraits<ValueCType>::ArrowType>::BuilderType;\n+\n+template <typename ValueCType, typename BuilderType, typename Range,\n+          typename Enable = void>\n+struct AppendMultipleRowsHelper {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n     ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    for (auto const& value : cell_range) {\n+      ARROW_RETURN_NOT_OK(ConversionTraits<ValueCType>::AppendRow(value_builder, value));\n     }\n     return Status::OK();\n   }\n+};\n+\n+template <typename ValueCType, typename BuilderType, typename Range>\n+struct AppendMultipleRowsHelper<\n+    ValueCType, BuilderType, Range,\n+    typename std::enable_if<HasAppendMultipleRows<\n+        ValueCType, ElementBuilderType<ValueCType>, Range>::value>::type> {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n+    ARROW_RETURN_NOT_OK(builder.Append());\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    return ConversionTraits<ValueCType>::AppendMultipleRows(value_builder, cell_range);\n+  }\n+};\n+}  // namespace internal\n+\n+/// Add multiple rows to a (large) list builder.\n \n Review comment:\n   This is used to append a single value to a list builder; it appends multiple values to the child builder. Please update the comment and rename this function accordingly\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T20:36:13.286+0000",
                    "updated": "2019-09-10T20:36:13.286+0000",
                    "started": "2019-09-10T20:36:13.285+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310090",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322971223\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -50,19 +52,33 @@ using BareTupleElement = typename std::remove_const<typename std::remove_referen\n template <typename T, typename Enable = void>\n struct ConversionTraits {};\n \n-#define ARROW_STL_CONVERSION(c_type, ArrowType_)                                    \\\n-  template <>                                                                       \\\n-  struct ConversionTraits<c_type> : public CTypeTraits<c_type> {                    \\\n-    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,  \\\n-                            c_type cell) {                                          \\\n-      return builder.Append(cell);                                                  \\\n-    }                                                                               \\\n-    static c_type GetEntry(const typename TypeTraits<ArrowType_>::ArrayType& array, \\\n-                           size_t j) {                                              \\\n-      return array.Value(j);                                                        \\\n-    }                                                                               \\\n-    constexpr static bool nullable = false;                                         \\\n-  };\n+#define ARROW_STL_CONVERSION(CType_, ArrowType_)                                         \\\n+  template <>                                                                            \\\n+  struct ConversionTraits<CType_> : public CTypeTraits<CType_> {                         \\\n+    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,       \\\n+                            CType_ cell) {                                               \\\n+      return builder.Append(cell);                                                       \\\n+    }                                                                                    \\\n+    template <typename Range>                                                            \\\n \n Review comment:\n   Yes, that's a good point. How about using an enabler:\r\n   `template <typename Range, typename = enable_if<is_same<decay<Range>, std::vector<CType_>>>`\r\n   \r\n   This addresses HasAppendMultipleRows issue. Could you explain a bit more what you mean by adding new implementations?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T21:29:13.984+0000",
                    "updated": "2019-09-10T21:29:13.984+0000",
                    "started": "2019-09-10T21:29:13.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310132",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322971802\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +103,88 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n+namespace internal {\n+using ::arrow::internal::void_t;\n+\n+template <typename CType, typename BuilderType, typename Range, typename Enable = void>\n+struct HasAppendMultipleRows : public std::false_type {};\n+\n+template <typename CType, typename BuilderType, typename Range>\n+struct HasAppendMultipleRows<CType, BuilderType, Range,\n+                             void_t<decltype(ConversionTraits<CType>::AppendMultipleRows(\n+                                 std::declval<BuilderType&>(), std::declval<Range>()))>>\n+    : public std::true_type {};\n+\n+template <typename ValueCType>\n+using ElementBuilderType =\n+    typename TypeTraits<typename ConversionTraits<ValueCType>::ArrowType>::BuilderType;\n+\n+template <typename ValueCType, typename BuilderType, typename Range,\n+          typename Enable = void>\n+struct AppendMultipleRowsHelper {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n     ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    for (auto const& value : cell_range) {\n+      ARROW_RETURN_NOT_OK(ConversionTraits<ValueCType>::AppendRow(value_builder, value));\n     }\n     return Status::OK();\n   }\n+};\n+\n+template <typename ValueCType, typename BuilderType, typename Range>\n+struct AppendMultipleRowsHelper<\n+    ValueCType, BuilderType, Range,\n+    typename std::enable_if<HasAppendMultipleRows<\n+        ValueCType, ElementBuilderType<ValueCType>, Range>::value>::type> {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n+    ARROW_RETURN_NOT_OK(builder.Append());\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    return ConversionTraits<ValueCType>::AppendMultipleRows(value_builder, cell_range);\n+  }\n+};\n+}  // namespace internal\n+\n+/// Add multiple rows to a (large) list builder.\n \n Review comment:\n   Will do. I named it to be consistent with AppendRow, as it also appends to child builder in current implementation. How about `AppendMultipleValues`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T21:30:48.193+0000",
                    "updated": "2019-09-10T21:30:48.193+0000",
                    "started": "2019-09-10T21:30:48.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310134",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310148",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322982221\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -50,19 +52,33 @@ using BareTupleElement = typename std::remove_const<typename std::remove_referen\n template <typename T, typename Enable = void>\n struct ConversionTraits {};\n \n-#define ARROW_STL_CONVERSION(c_type, ArrowType_)                                    \\\n-  template <>                                                                       \\\n-  struct ConversionTraits<c_type> : public CTypeTraits<c_type> {                    \\\n-    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,  \\\n-                            c_type cell) {                                          \\\n-      return builder.Append(cell);                                                  \\\n-    }                                                                               \\\n-    static c_type GetEntry(const typename TypeTraits<ArrowType_>::ArrayType& array, \\\n-                           size_t j) {                                              \\\n-      return array.Value(j);                                                        \\\n-    }                                                                               \\\n-    constexpr static bool nullable = false;                                         \\\n-  };\n+#define ARROW_STL_CONVERSION(CType_, ArrowType_)                                         \\\n+  template <>                                                                            \\\n+  struct ConversionTraits<CType_> : public CTypeTraits<CType_> {                         \\\n+    static Status AppendRow(typename TypeTraits<ArrowType_>::BuilderType& builder,       \\\n+                            CType_ cell) {                                               \\\n+      return builder.Append(cell);                                                       \\\n+    }                                                                                    \\\n+    template <typename Range>                                                            \\\n \n Review comment:\n   I think I got what you meant. I will try putting this functionality as a free function.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T22:02:05.080+0000",
                    "updated": "2019-09-10T22:02:05.080+0000",
                    "started": "2019-09-10T22:02:05.079+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310148",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310158",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r322989641\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +103,88 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n+namespace internal {\n+using ::arrow::internal::void_t;\n+\n+template <typename CType, typename BuilderType, typename Range, typename Enable = void>\n+struct HasAppendMultipleRows : public std::false_type {};\n+\n+template <typename CType, typename BuilderType, typename Range>\n+struct HasAppendMultipleRows<CType, BuilderType, Range,\n+                             void_t<decltype(ConversionTraits<CType>::AppendMultipleRows(\n+                                 std::declval<BuilderType&>(), std::declval<Range>()))>>\n+    : public std::true_type {};\n+\n+template <typename ValueCType>\n+using ElementBuilderType =\n+    typename TypeTraits<typename ConversionTraits<ValueCType>::ArrowType>::BuilderType;\n+\n+template <typename ValueCType, typename BuilderType, typename Range,\n+          typename Enable = void>\n+struct AppendMultipleRowsHelper {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n     ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    for (auto const& value : cell_range) {\n+      ARROW_RETURN_NOT_OK(ConversionTraits<ValueCType>::AppendRow(value_builder, value));\n     }\n     return Status::OK();\n   }\n+};\n+\n+template <typename ValueCType, typename BuilderType, typename Range>\n+struct AppendMultipleRowsHelper<\n+    ValueCType, BuilderType, Range,\n+    typename std::enable_if<HasAppendMultipleRows<\n+        ValueCType, ElementBuilderType<ValueCType>, Range>::value>::type> {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n+    ARROW_RETURN_NOT_OK(builder.Append());\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    return ConversionTraits<ValueCType>::AppendMultipleRows(value_builder, cell_range);\n+  }\n+};\n+}  // namespace internal\n+\n+/// Add multiple rows to a (large) list builder.\n \n Review comment:\n   Since this is list specific, maybe AppendListValue?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-10T22:28:23.383+0000",
                    "updated": "2019-09-10T22:28:23.383+0000",
                    "started": "2019-09-10T22:28:23.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310158",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/310825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r323350610\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +103,88 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n+namespace internal {\n+using ::arrow::internal::void_t;\n+\n+template <typename CType, typename BuilderType, typename Range, typename Enable = void>\n+struct HasAppendMultipleRows : public std::false_type {};\n+\n+template <typename CType, typename BuilderType, typename Range>\n+struct HasAppendMultipleRows<CType, BuilderType, Range,\n+                             void_t<decltype(ConversionTraits<CType>::AppendMultipleRows(\n+                                 std::declval<BuilderType&>(), std::declval<Range>()))>>\n+    : public std::true_type {};\n+\n+template <typename ValueCType>\n+using ElementBuilderType =\n+    typename TypeTraits<typename ConversionTraits<ValueCType>::ArrowType>::BuilderType;\n+\n+template <typename ValueCType, typename BuilderType, typename Range,\n+          typename Enable = void>\n+struct AppendMultipleRowsHelper {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n     ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    for (auto const& value : cell_range) {\n+      ARROW_RETURN_NOT_OK(ConversionTraits<ValueCType>::AppendRow(value_builder, value));\n     }\n     return Status::OK();\n   }\n+};\n+\n+template <typename ValueCType, typename BuilderType, typename Range>\n+struct AppendMultipleRowsHelper<\n+    ValueCType, BuilderType, Range,\n+    typename std::enable_if<HasAppendMultipleRows<\n+        ValueCType, ElementBuilderType<ValueCType>, Range>::value>::type> {\n+  static Status impl(BuilderType& builder, Range&& cell_range) {\n+    ARROW_RETURN_NOT_OK(builder.Append());\n+    auto& value_builder =\n+        ::arrow::internal::checked_cast<ElementBuilderType<ValueCType>&>(\n+            *builder.value_builder());\n+    return ConversionTraits<ValueCType>::AppendMultipleRows(value_builder, cell_range);\n+  }\n+};\n+}  // namespace internal\n+\n+/// Add multiple rows to a (large) list builder.\n \n Review comment:\n   Renamed this helper function as `AppendCellRange` and free function provided for specializaton as `AppendListValues`. Does it sound right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-11T16:52:52.884+0000",
                    "updated": "2019-09-11T16:52:52.884+0000",
                    "started": "2019-09-11T16:52:52.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "310825",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/311369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r323436645\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +114,48 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n-    ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n-    }\n-    return Status::OK();\n+/// Append cell range elements as a single value to the list builder.\n+///\n+/// Cell range will be added to child builder using AppendListValues<ValueCType>()\n+/// if provided. AppendListValues<ValueCType>() has a default implementation, but\n+/// it can be specialized by users.\n+template <typename ValueCType, typename ListBuilderType, typename Range>\n+Status AppendCellRange(ListBuilderType& builder, Range&& cell_range) {\n+  constexpr bool is_list_builder = std::is_same<ListBuilderType, ListBuilder>::value;\n+  constexpr bool is_large_list_builder =\n+      std::is_same<ListBuilderType, LargeListBuilder>::value;\n+  static_assert(\n+      is_list_builder || is_large_list_builder,\n+      \"Builder type must be either ListBuilder or LargeListBuilder for appending \"\n+      \"multiple rows.\");\n+\n+  using ChildBuilderType = CBuilderType<ValueCType>;\n+  ARROW_RETURN_NOT_OK(builder.Append());\n+  auto& value_builder =\n+      ::arrow::internal::checked_cast<ChildBuilderType&>(*builder.value_builder());\n+\n+  // XXX: Remove appended value before returning if status isn't OK?\n \n Review comment:\n   I don't think we provide guarantees on builder state after a method has returned an error status. Unless I'm wrong that means recovering from a failed append is not something we provide for so both the parent and child builders should probably be scrapped if status isn't ok, so you don't need to do maintenance on the builders contents here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T12:03:30.758+0000",
                    "updated": "2019-09-12T12:03:30.758+0000",
                    "started": "2019-09-12T12:03:30.757+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311369",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/311420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#discussion_r323436645\n \n \n\n ##########\n File path: cpp/src/arrow/stl.h\n ##########\n @@ -87,33 +114,48 @@ struct ConversionTraits<std::string> : public CTypeTraits<std::string> {\n   constexpr static bool nullable = false;\n };\n \n-template <typename value_c_type>\n-struct ConversionTraits<std::vector<value_c_type>>\n-    : public CTypeTraits<std::vector<value_c_type>> {\n-  static Status AppendRow(ListBuilder& builder, std::vector<value_c_type> cell) {\n-    using ElementBuilderType = typename TypeTraits<\n-        typename ConversionTraits<value_c_type>::ArrowType>::BuilderType;\n-    ARROW_RETURN_NOT_OK(builder.Append());\n-    ElementBuilderType& value_builder =\n-        ::arrow::internal::checked_cast<ElementBuilderType&>(*builder.value_builder());\n-    for (auto const& value : cell) {\n-      ARROW_RETURN_NOT_OK(\n-          ConversionTraits<value_c_type>::AppendRow(value_builder, value));\n-    }\n-    return Status::OK();\n+/// Append cell range elements as a single value to the list builder.\n+///\n+/// Cell range will be added to child builder using AppendListValues<ValueCType>()\n+/// if provided. AppendListValues<ValueCType>() has a default implementation, but\n+/// it can be specialized by users.\n+template <typename ValueCType, typename ListBuilderType, typename Range>\n+Status AppendCellRange(ListBuilderType& builder, Range&& cell_range) {\n+  constexpr bool is_list_builder = std::is_same<ListBuilderType, ListBuilder>::value;\n+  constexpr bool is_large_list_builder =\n+      std::is_same<ListBuilderType, LargeListBuilder>::value;\n+  static_assert(\n+      is_list_builder || is_large_list_builder,\n+      \"Builder type must be either ListBuilder or LargeListBuilder for appending \"\n+      \"multiple rows.\");\n+\n+  using ChildBuilderType = CBuilderType<ValueCType>;\n+  ARROW_RETURN_NOT_OK(builder.Append());\n+  auto& value_builder =\n+      ::arrow::internal::checked_cast<ChildBuilderType&>(*builder.value_builder());\n+\n+  // XXX: Remove appended value before returning if status isn't OK?\n \n Review comment:\n   I don't think we provide guarantees on builder state after a method has returned an error status. Unless I'm wrong that means recovering from a failed append is not something we provide for so both the parent and child builders should probably be scrapped if status isn't ok. Thus: you don't need to do maintenance on the builders' contents here\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T14:04:19.583+0000",
                    "updated": "2019-09-12T14:04:19.583+0000",
                    "started": "2019-09-12T14:04:19.582+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311420",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/311426",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on issue #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#issuecomment-530842917\n \n \n   Travis failures are two timeouts and one instance of https://issues.apache.org/jira/browse/ARROW-6509\r\n   Merging\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T14:07:33.030+0000",
                    "updated": "2019-09-12T14:07:33.030+0000",
                    "started": "2019-09-12T14:07:33.029+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311426",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/311427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T14:09:51.885+0000",
                    "updated": "2019-09-12T14:09:51.885+0000",
                    "started": "2019-09-12T14:09:51.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311427",
                    "issueId": "13253529"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/worklog/311435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ozars commented on issue #5336: ARROW-6375: [C++] Extend ConversionTraits to allow efficiently appending list values in STL API\nURL: https://github.com/apache/arrow/pull/5336#issuecomment-530848682\n \n \n   Thanks @bkietz!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-12T14:21:09.639+0000",
                    "updated": "2019-09-12T14:21:09.639+0000",
                    "started": "2019-09-12T14:21:09.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "311435",
                    "issueId": "13253529"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 7200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@778bcf8e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@73dc5ec7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b9b8fa8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4a20c87a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55016cef[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@9563cdf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@e370492[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@42987e36[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c20149e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@24a86301[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@120de092[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1365552b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 12 14:09:55 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-12T14:09:55.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6375/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-08-28T15:32:38.000+0000",
        "updated": "2019-09-12T14:21:09.000+0000",
        "timeoriginalestimate": null,
        "description": "I was trying to benchmark performances of using array builders vs. STL API for converting some row data to arrow tables. I realized it is\u00a0around 1.5-1.8 times slower to convert {{std::vector}} values with STL API than doing so with builder API. It appears this is primarily due to appending rows via {{...::Append}} method by iterating over {{ConversionTrait<std::vector<...>>::AppendRow}} for each value.\r\n\r\nCalling {{...::AppendValues}} would make it more efficient, however, {{ConversionTraits}} doesn't offer a way for appending more than one cells ({{AppendRow}} takes a builder and a single cell as its parameters).\r\n\r\nWould it be possible to extend conversion traits with an optional method {{AppendRows(Builder, Cell*, size_t),}} which allows template specialization to efficiently append multiple cells at once? In the example above this function would be called with\u00a0{{std::vector::data()}} and\u00a0{{std::vector::size()}} if provided. If such method isn't provided by the specialization, current behavior (i.e. iterating over {{AppendRow}}) can be used as default.\r\n\r\n[This|https://github.com/apache/arrow/blob/e29732be86958e563801c55d3fcd8dc3fe4e9801/cpp/src/arrow/stl.h#L97-L100] is the particular part in code that will be replaced in practice. Instead of directly calling AppendRow in a for loop, a public helper function (e.g. {{stl::AppendRows}}) can be provided, in which it implements above logic.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Extend ConversionTraits to allow efficiently appending list values in STL API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/comment/16917871",
                    "id": "16917871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~ozars] What you're proposing sounds ok on the principle. Would you like to try submitting a PR?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2019-08-28T15:57:17.079+0000",
                    "updated": "2019-08-28T15:57:17.079+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/comment/16917884",
                    "id": "16917884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ozars",
                        "name": "ozars",
                        "key": "ozars",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Omer Ozarslan",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "[~pitrou] Sure, I will. I'm also opening another issue about extending STL API for rowwise conversion in general.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ozars",
                        "name": "ozars",
                        "key": "ozars",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Omer Ozarslan",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-08-28T16:12:52.360+0000",
                    "updated": "2019-08-28T16:12:52.360+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13253529/comment/16928565",
                    "id": "16928565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5336\n[https://github.com/apache/arrow/pull/5336]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-12T14:09:55.752+0000",
                    "updated": "2019-09-12T14:09:55.752+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z064ko:",
        "customfield_12314139": null
    }
}