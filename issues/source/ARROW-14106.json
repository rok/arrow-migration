{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13402995",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995",
    "key": "ARROW-14106",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333556",
                "id": "12333556",
                "name": "C"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
            "name": "zeroshade",
            "key": "zeroshade",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
            },
            "displayName": "Matthew Topol",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14106/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 13,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/654729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade opened a new pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220\n\n\n   CC @pitrou @emkornfield \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T20:09:54.809+0000",
                    "updated": "2021-09-23T20:09:54.809+0000",
                    "started": "2021-09-23T20:09:54.808+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654729",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/654730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#issuecomment-926118576\n\n\n   https://issues.apache.org/jira/browse/ARROW-14106\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-23T20:10:08.724+0000",
                    "updated": "2021-09-23T20:10:08.724+0000",
                    "started": "2021-09-23T20:10:08.724+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654730",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716743132\n\n\n\n##########\nFile path: go/arrow/cdata/cdata_exports.go\n##########\n@@ -0,0 +1,390 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/abi.h\"\n+// #include \"arrow/c/helpers.h\"\n+//\n+// extern void releaseExportedSchema(struct ArrowSchema* schema);\n+// extern void releaseExportedArray(struct ArrowArray* array);\n+//\n+// void goReleaseArray(struct ArrowArray* array) {\n+//\treleaseExportedArray(array);\n+// }\n+// void goReleaseSchema(struct ArrowSchema* schema) {\n+//\t releaseExportedSchema(schema);\n+// }\n+import \"C\"\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/binary\"\n+\t\"fmt\"\n+\t\"reflect\"\n+\t\"strings\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/ipc\"\n+)\n+\n+func encodeCMetadata(keys, values []string) []byte {\n+\tif len(keys) != len(values) {\n+\t\tpanic(\"unequal metadata key/values length\")\n+\t}\n+\tnpairs := len(keys)\n+\n+\tvar b bytes.Buffer\n+\ttotalSize := 4\n+\tfor i := range keys {\n+\t\ttotalSize += 8 + len(keys[i]) + len(values[i])\n+\t}\n+\tb.Grow(totalSize)\n+\n+\tbinary.Write(&b, binary.LittleEndian, int32(npairs))\n\nReview comment:\n       Hmm, this should use native endianness. See examples here:\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/c/bridge_test.cc#L133-L196\n\n##########\nFile path: go/arrow/cdata/exports.go\n##########\n@@ -0,0 +1,104 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+import (\n+\t\"reflect\"\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+)\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/helpers.h\"\n+import \"C\"\n+\n+var (\n+\thandles   = sync.Map{}\n+\thandleIdx uintptr\n+)\n+\n+type dataHandle uintptr\n+\n+func storeData(d *array.Data) dataHandle {\n+\th := atomic.AddUintptr(&handleIdx, 1)\n+\tif h == 0 {\n+\t\tpanic(\"cgo: ran out of space\")\n+\t}\n+\td.Retain()\n+\thandles.Store(h, d)\n+\treturn dataHandle(h)\n+}\n+\n+func (d dataHandle) releaseData() {\n+\tarrd, ok := handles.LoadAndDelete(uintptr(d))\n+\tif !ok {\n+\t\tpanic(\"cgo: invalid datahandle\")\n+\t}\n+\tarrd.(*array.Data).Release()\n+}\n+\n+//export releaseExportedSchema\n+func releaseExportedSchema(schema *CArrowSchema) {\n+\tif C.ArrowSchemaIsReleased(schema) == 1 {\n+\t\treturn\n+\t}\n+\tdefer C.ArrowSchemaMarkReleased(schema)\n+\n+\tC.free(unsafe.Pointer(schema.name))\n+\tC.free(unsafe.Pointer(schema.format))\n+\tC.free(unsafe.Pointer(schema.metadata))\n+\n+\tvar children []*CArrowSchema\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&children))\n+\ts.Data = uintptr(unsafe.Pointer(schema.children))\n+\ts.Len = int(schema.n_children)\n+\ts.Cap = int(schema.n_children)\n+\n+\tfor _, c := range children {\n+\t\tC.ArrowSchemaRelease(c)\n+\t}\n\nReview comment:\n       It seems you should also `C.free(schema.children[0])` and then `C.free(schema.children)`, no?\n\n##########\nFile path: go/arrow/cdata/test/test_export_to_cgo.py\n##########\n@@ -91,5 +93,22 @@ def test_record_batch(self):\n             cgotest.importRecordBatch(self.ptr_schema, self.ptr_array)\n \n \n+class TestGoToPython(BaseTestGoPython):\n+\n+    def test_get_schema(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportSchema(self.ptr_schema)\n+\n+            sc = pa.Schema._import_from_c(self.ptr_schema)\n+            assert sc == self.make_schema()\n+    \n+    def test_get_batch(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportRecordBatch(self.ptr_schema, self.ptr_array)\n+            arrnew = pa.RecordBatch._import_from_c(self.ptr_array, self.ptr_schema)\n+            assert arrnew == self.make_batch()\n+    \n+    \n\nReview comment:\n       I would also suggest to add round-tripping tests (for example Python to Go to Python).\n\n##########\nFile path: go/arrow/cdata/test/test_export_to_cgo.py\n##########\n@@ -91,5 +93,22 @@ def test_record_batch(self):\n             cgotest.importRecordBatch(self.ptr_schema, self.ptr_array)\n \n \n+class TestGoToPython(BaseTestGoPython):\n+\n+    def test_get_schema(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportSchema(self.ptr_schema)\n+\n+            sc = pa.Schema._import_from_c(self.ptr_schema)\n+            assert sc == self.make_schema()\n+    \n+    def test_get_batch(self):\n+        with self.assert_pyarrow_memory_released():\n\nReview comment:\n       Is there also a way to check that all Go memory was released?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T14:35:46.229+0000",
                    "updated": "2021-09-27T14:35:46.229+0000",
                    "started": "2021-09-27T14:35:46.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655530",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716769926\n\n\n\n##########\nFile path: go/arrow/cdata/cdata_exports.go\n##########\n@@ -0,0 +1,390 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/abi.h\"\n+// #include \"arrow/c/helpers.h\"\n+//\n+// extern void releaseExportedSchema(struct ArrowSchema* schema);\n+// extern void releaseExportedArray(struct ArrowArray* array);\n+//\n+// void goReleaseArray(struct ArrowArray* array) {\n+//\treleaseExportedArray(array);\n+// }\n+// void goReleaseSchema(struct ArrowSchema* schema) {\n+//\t releaseExportedSchema(schema);\n+// }\n+import \"C\"\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/binary\"\n+\t\"fmt\"\n+\t\"reflect\"\n+\t\"strings\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/ipc\"\n+)\n+\n+func encodeCMetadata(keys, values []string) []byte {\n+\tif len(keys) != len(values) {\n+\t\tpanic(\"unequal metadata key/values length\")\n+\t}\n+\tnpairs := len(keys)\n+\n+\tvar b bytes.Buffer\n+\ttotalSize := 4\n+\tfor i := range keys {\n+\t\ttotalSize += 8 + len(keys[i]) + len(values[i])\n+\t}\n+\tb.Grow(totalSize)\n+\n+\tbinary.Write(&b, binary.LittleEndian, int32(npairs))\n\nReview comment:\n       That's actually a good point! I'll fix that\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T14:51:36.889+0000",
                    "updated": "2021-09-27T14:51:36.889+0000",
                    "started": "2021-09-27T14:51:36.889+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655539",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716773108\n\n\n\n##########\nFile path: go/arrow/cdata/test/test_export_to_cgo.py\n##########\n@@ -91,5 +93,22 @@ def test_record_batch(self):\n             cgotest.importRecordBatch(self.ptr_schema, self.ptr_array)\n \n \n+class TestGoToPython(BaseTestGoPython):\n+\n+    def test_get_schema(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportSchema(self.ptr_schema)\n+\n+            sc = pa.Schema._import_from_c(self.ptr_schema)\n+            assert sc == self.make_schema()\n+    \n+    def test_get_batch(self):\n+        with self.assert_pyarrow_memory_released():\n\nReview comment:\n       We have an \"allocator\" object in the Go that I could expose a reference to for the tests which would then provide a way to check that the Go memory got freed. I'll see what i can do, but that's a really good point. It also ties into #11206 a bit where I set up a way to directly use and reference the `MemoryPool` in the C++ from Go\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T14:54:53.066+0000",
                    "updated": "2021-09-27T14:54:53.066+0000",
                    "started": "2021-09-27T14:54:53.066+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655541",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716846610\n\n\n\n##########\nFile path: go/arrow/cdata/exports.go\n##########\n@@ -0,0 +1,104 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+import (\n+\t\"reflect\"\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+)\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/helpers.h\"\n+import \"C\"\n+\n+var (\n+\thandles   = sync.Map{}\n+\thandleIdx uintptr\n+)\n+\n+type dataHandle uintptr\n+\n+func storeData(d *array.Data) dataHandle {\n+\th := atomic.AddUintptr(&handleIdx, 1)\n+\tif h == 0 {\n+\t\tpanic(\"cgo: ran out of space\")\n+\t}\n+\td.Retain()\n+\thandles.Store(h, d)\n+\treturn dataHandle(h)\n+}\n+\n+func (d dataHandle) releaseData() {\n+\tarrd, ok := handles.LoadAndDelete(uintptr(d))\n+\tif !ok {\n+\t\tpanic(\"cgo: invalid datahandle\")\n+\t}\n+\tarrd.(*array.Data).Release()\n+}\n+\n+//export releaseExportedSchema\n+func releaseExportedSchema(schema *CArrowSchema) {\n+\tif C.ArrowSchemaIsReleased(schema) == 1 {\n+\t\treturn\n+\t}\n+\tdefer C.ArrowSchemaMarkReleased(schema)\n+\n+\tC.free(unsafe.Pointer(schema.name))\n+\tC.free(unsafe.Pointer(schema.format))\n+\tC.free(unsafe.Pointer(schema.metadata))\n+\n+\tvar children []*CArrowSchema\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&children))\n+\ts.Data = uintptr(unsafe.Pointer(schema.children))\n+\ts.Len = int(schema.n_children)\n+\ts.Cap = int(schema.n_children)\n+\n+\tfor _, c := range children {\n+\t\tC.ArrowSchemaRelease(c)\n+\t}\n\nReview comment:\n       added `C.free` calls for the children properly.\n\n##########\nFile path: go/arrow/cdata/cdata_exports.go\n##########\n@@ -0,0 +1,390 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/abi.h\"\n+// #include \"arrow/c/helpers.h\"\n+//\n+// extern void releaseExportedSchema(struct ArrowSchema* schema);\n+// extern void releaseExportedArray(struct ArrowArray* array);\n+//\n+// void goReleaseArray(struct ArrowArray* array) {\n+//\treleaseExportedArray(array);\n+// }\n+// void goReleaseSchema(struct ArrowSchema* schema) {\n+//\t releaseExportedSchema(schema);\n+// }\n+import \"C\"\n+\n+import (\n+\t\"bytes\"\n+\t\"encoding/binary\"\n+\t\"fmt\"\n+\t\"reflect\"\n+\t\"strings\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow\"\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+\t\"github.com/apache/arrow/go/arrow/ipc\"\n+)\n+\n+func encodeCMetadata(keys, values []string) []byte {\n+\tif len(keys) != len(values) {\n+\t\tpanic(\"unequal metadata key/values length\")\n+\t}\n+\tnpairs := len(keys)\n+\n+\tvar b bytes.Buffer\n+\ttotalSize := 4\n+\tfor i := range keys {\n+\t\ttotalSize += 8 + len(keys[i]) + len(values[i])\n+\t}\n+\tb.Grow(totalSize)\n+\n+\tbinary.Write(&b, binary.LittleEndian, int32(npairs))\n\nReview comment:\n       fixed now\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T16:17:23.207+0000",
                    "updated": "2021-09-27T16:17:23.207+0000",
                    "started": "2021-09-27T16:17:23.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655585",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716847257\n\n\n\n##########\nFile path: go/arrow/cdata/test/test_export_to_cgo.py\n##########\n@@ -91,5 +93,22 @@ def test_record_batch(self):\n             cgotest.importRecordBatch(self.ptr_schema, self.ptr_array)\n \n \n+class TestGoToPython(BaseTestGoPython):\n+\n+    def test_get_schema(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportSchema(self.ptr_schema)\n+\n+            sc = pa.Schema._import_from_c(self.ptr_schema)\n+            assert sc == self.make_schema()\n+    \n+    def test_get_batch(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportRecordBatch(self.ptr_schema, self.ptr_array)\n+            arrnew = pa.RecordBatch._import_from_c(self.ptr_array, self.ptr_schema)\n+            assert arrnew == self.make_batch()\n+    \n+    \n\nReview comment:\n       added round trip tests for schema and record batch that do Python -> Go -> Python and confirm that the resulting schema and record batch are correct\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T16:18:00.888+0000",
                    "updated": "2021-09-27T16:18:00.888+0000",
                    "started": "2021-09-27T16:18:00.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655586",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716848130\n\n\n\n##########\nFile path: go/arrow/cdata/test/test_export_to_cgo.py\n##########\n@@ -91,5 +93,22 @@ def test_record_batch(self):\n             cgotest.importRecordBatch(self.ptr_schema, self.ptr_array)\n \n \n+class TestGoToPython(BaseTestGoPython):\n+\n+    def test_get_schema(self):\n+        with self.assert_pyarrow_memory_released():\n+            cgotest.exportSchema(self.ptr_schema)\n+\n+            sc = pa.Schema._import_from_c(self.ptr_schema)\n+            assert sc == self.make_schema()\n+    \n+    def test_get_batch(self):\n+        with self.assert_pyarrow_memory_released():\n\nReview comment:\n       added a `CurrentAlloc` function to the `CheckedAllocator` and have everything in the test use that in order to expose a function that allows confirming the Go memory has been released.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T16:19:07.321+0000",
                    "updated": "2021-09-27T16:19:07.321+0000",
                    "started": "2021-09-27T16:19:07.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655587",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716851875\n\n\n\n##########\nFile path: go/arrow/cdata/exports.go\n##########\n@@ -0,0 +1,104 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+import (\n+\t\"reflect\"\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+)\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/helpers.h\"\n+import \"C\"\n+\n+var (\n+\thandles   = sync.Map{}\n+\thandleIdx uintptr\n+)\n+\n+type dataHandle uintptr\n+\n+func storeData(d *array.Data) dataHandle {\n+\th := atomic.AddUintptr(&handleIdx, 1)\n+\tif h == 0 {\n+\t\tpanic(\"cgo: ran out of space\")\n+\t}\n+\td.Retain()\n+\thandles.Store(h, d)\n+\treturn dataHandle(h)\n+}\n+\n+func (d dataHandle) releaseData() {\n+\tarrd, ok := handles.LoadAndDelete(uintptr(d))\n+\tif !ok {\n+\t\tpanic(\"cgo: invalid datahandle\")\n+\t}\n+\tarrd.(*array.Data).Release()\n+}\n+\n+//export releaseExportedSchema\n+func releaseExportedSchema(schema *CArrowSchema) {\n+\tif C.ArrowSchemaIsReleased(schema) == 1 {\n+\t\treturn\n+\t}\n+\tdefer C.ArrowSchemaMarkReleased(schema)\n+\n+\tC.free(unsafe.Pointer(schema.name))\n+\tC.free(unsafe.Pointer(schema.format))\n+\tC.free(unsafe.Pointer(schema.metadata))\n+\n+\tvar children []*CArrowSchema\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&children))\n+\ts.Data = uintptr(unsafe.Pointer(schema.children))\n+\ts.Len = int(schema.n_children)\n+\ts.Cap = int(schema.n_children)\n+\n+\tfor _, c := range children {\n+\t\tC.ArrowSchemaRelease(c)\n+\t}\n\nReview comment:\n       Hmm... I'm not sure this is right. You're allocating the children in a single go (`children := allocateArrowSchemaArr(len(exp.children))`). Presumably you should only free `children[0]`, not each child?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T16:23:48.153+0000",
                    "updated": "2021-09-27T16:23:48.153+0000",
                    "started": "2021-09-27T16:23:48.153+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655588",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/655604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on a change in pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#discussion_r716862213\n\n\n\n##########\nFile path: go/arrow/cdata/exports.go\n##########\n@@ -0,0 +1,104 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package cdata\n+\n+import (\n+\t\"reflect\"\n+\t\"sync\"\n+\t\"sync/atomic\"\n+\t\"unsafe\"\n+\n+\t\"github.com/apache/arrow/go/arrow/array\"\n+)\n+\n+// #include <stdlib.h>\n+// #include \"arrow/c/helpers.h\"\n+import \"C\"\n+\n+var (\n+\thandles   = sync.Map{}\n+\thandleIdx uintptr\n+)\n+\n+type dataHandle uintptr\n+\n+func storeData(d *array.Data) dataHandle {\n+\th := atomic.AddUintptr(&handleIdx, 1)\n+\tif h == 0 {\n+\t\tpanic(\"cgo: ran out of space\")\n+\t}\n+\td.Retain()\n+\thandles.Store(h, d)\n+\treturn dataHandle(h)\n+}\n+\n+func (d dataHandle) releaseData() {\n+\tarrd, ok := handles.LoadAndDelete(uintptr(d))\n+\tif !ok {\n+\t\tpanic(\"cgo: invalid datahandle\")\n+\t}\n+\tarrd.(*array.Data).Release()\n+}\n+\n+//export releaseExportedSchema\n+func releaseExportedSchema(schema *CArrowSchema) {\n+\tif C.ArrowSchemaIsReleased(schema) == 1 {\n+\t\treturn\n+\t}\n+\tdefer C.ArrowSchemaMarkReleased(schema)\n+\n+\tC.free(unsafe.Pointer(schema.name))\n+\tC.free(unsafe.Pointer(schema.format))\n+\tC.free(unsafe.Pointer(schema.metadata))\n+\n+\tvar children []*CArrowSchema\n+\ts := (*reflect.SliceHeader)(unsafe.Pointer(&children))\n+\ts.Data = uintptr(unsafe.Pointer(schema.children))\n+\ts.Len = int(schema.n_children)\n+\ts.Cap = int(schema.n_children)\n+\n+\tfor _, c := range children {\n+\t\tC.ArrowSchemaRelease(c)\n+\t}\n\nReview comment:\n       Ah fair point. hmm, i wonder why I don't get any double free issues then? Anyway, fixed now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-27T16:36:34.853+0000",
                    "updated": "2021-09-27T16:36:34.853+0000",
                    "started": "2021-09-27T16:36:34.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "655604",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/658481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#issuecomment-931483593\n\n\n   @pitrou any further comments on this one too?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-30T16:36:07.594+0000",
                    "updated": "2021-09-30T16:36:07.594+0000",
                    "started": "2021-09-30T16:36:07.593+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "658481",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/659603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "zeroshade commented on pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220#issuecomment-933549119\n\n\n   @pitrou Thanks for the review, and I know you're not a Go developer but it seems i haven't been able to get any other Go developers reliably commenting on these and Go isn't particularly difficult to pick up or understand so I'll take it :)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T14:35:50.590+0000",
                    "updated": "2021-10-04T14:35:50.590+0000",
                    "started": "2021-10-04T14:35:50.590+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659603",
                    "issueId": "13402995"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/worklog/659604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "asfgit closed pull request #11220:\nURL: https://github.com/apache/arrow/pull/11220\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-04T14:36:58.402+0000",
                    "updated": "2021-10-04T14:36:58.402+0000",
                    "started": "2021-10-04T14:36:58.401+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "659604",
                    "issueId": "13402995"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@72ea291e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57a3f1cc[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f4d53b4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4728ee00[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e4c3a59[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@23226987[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46974ea4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@46cff098[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49de94ea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7980b207[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59e21fd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3cec5ae6[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Oct 04 14:37:56 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-10-04T14:37:56.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14106/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-23T17:37:38.000+0000",
        "updated": "2021-10-04T14:37:56.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go][C] Implement Exporting the C data interface",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13402995/comment/17423978",
                    "id": "17423978",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11220\n[https://github.com/apache/arrow/pull/11220]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=zeroshade",
                        "name": "zeroshade",
                        "key": "zeroshade",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=zeroshade&avatarId=31230",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=zeroshade&avatarId=31230",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=zeroshade&avatarId=31230",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=zeroshade&avatarId=31230"
                        },
                        "displayName": "Matthew Topol",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-04T14:37:56.147+0000",
                    "updated": "2021-10-04T14:37:56.147+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0v8gw:",
        "customfield_12314139": null
    }
}