{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13319973",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973",
    "key": "ARROW-9594",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
            "name": "amol-",
            "key": "amol-",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
            },
            "displayName": "Alessandro Molina",
            "active": true,
            "timeZone": "Europe/Rome"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
            "name": "chairmank",
            "key": "chairmank",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steve M. Kim",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
            "name": "chairmank",
            "key": "chairmank",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Steve M. Kim",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 25800,
            "total": 25800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 25800,
            "total": 25800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9594/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 43,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- opened a new pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101\n\n\n   https://issues.apache.org/jira/browse/ARROW-9594\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:19:01.805+0000",
                    "updated": "2021-04-19T16:19:01.805+0000",
                    "started": "2021-04-19T16:19:01.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585224",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616000507\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,9 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n+            missings = array[\"indices\"] < 0\n             array = np.take(array['dictionary'], array['indices'])\n+            array[missings] = np.NaN\n\nReview comment:\n       I thought about adding a `if missings.any():` here, but it didn't change performances at all, so not much benefit.\r\n   \r\n   ```\r\n   def withoutcheck():\r\n       arr[mask] = np.NaN\r\n   \r\n   def withcheck():\r\n       if mask.any():\r\n           arr[mask] = np.NaN\r\n   \r\n   >>> timeit.timeit(withoutcheck, number=10000)\r\n   5.555068847000001\r\n   >>> timeit.timeit(withcheck, number=10000)\r\n   5.6257486310000075\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:30:02.688+0000",
                    "updated": "2021-04-19T16:30:02.688+0000",
                    "started": "2021-04-19T16:30:02.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585228",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616002776\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,9 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n+            missings = array[\"indices\"] < 0\n             array = np.take(array['dictionary'], array['indices'])\n+            array[missings] = np.NaN\n\nReview comment:\n       Checking the null count of the original arrow array (`self`) might help?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:33:07.611+0000",
                    "updated": "2021-04-19T16:33:07.611+0000",
                    "started": "2021-04-19T16:33:07.611+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585230",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616005809\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,9 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n+            missings = array[\"indices\"] < 0\n             array = np.take(array['dictionary'], array['indices'])\n+            array[missings] = np.NaN\n\nReview comment:\n       I noticed I also have to check for interaction with zero copy. Given that we are ending up _writing_ to `array[missings]` in the end.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:37:20.694+0000",
                    "updated": "2021-04-19T16:37:20.694+0000",
                    "started": "2021-04-19T16:37:20.693+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585236",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616005809\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,9 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n+            missings = array[\"indices\"] < 0\n             array = np.take(array['dictionary'], array['indices'])\n+            array[missings] = np.NaN\n\nReview comment:\n       I noticed I also have to check for interaction with zero copy. Given that we are ending up _writing_ to `array[missings]` in the end. Nulls should not be around when zero copy is requested, but better to have a test to see that it deals with that well.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T16:38:50.678+0000",
                    "updated": "2021-04-19T16:38:50.678+0000",
                    "started": "2021-04-19T16:38:50.678+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585237",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#issuecomment-822627565\n\n\n   https://issues.apache.org/jira/browse/ARROW-9594\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T17:02:06.585+0000",
                    "updated": "2021-04-19T17:02:06.585+0000",
                    "started": "2021-04-19T17:02:06.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585258",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585800",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616690521\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,9 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n+            missings = array[\"indices\"] < 0\n             array = np.take(array['dictionary'], array['indices'])\n+            array[missings] = np.NaN\n\nReview comment:\n       Added an optimization based on `zero_copy_only` option (as it doesn't allow nulls) and on `self.null_count` as the null_count is cached ( https://github.com/apache/arrow/blob/8e43f23dcc6a9e630516228f110c48b64d13cec6/cpp/src/arrow/array/data.cc#L120-L121 ) thus should frequently not add to the overhead.\r\n   \r\n   Also confirmed that `-1` is used to signal NULL values when converting to `numpy` arrays ( https://github.com/apache/arrow/blob/8e43f23dcc6a9e630516228f110c48b64d13cec6/cpp/src/arrow/python/arrow_to_pandas.cc#L1637 )\r\n   \r\n   A further optimization might have been to have `ConvertArrayToPandas`\u00a0 return the count of null values (as it is invoking `IsValid` on them anyway) but that requires a more widespread change and thus I think should be deferred until proved necessary.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T13:37:26.180+0000",
                    "updated": "2021-04-20T13:37:26.180+0000",
                    "started": "2021-04-20T13:37:26.180+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585800",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585833",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616728155\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       This will not work for all data types, I think (eg a dictionary array with integer dictionary). Also, for strings, we might want to use `None` instead of `np.nan`, since this is what we do in basic conversion as well (eg see `pa.array(['a', None]).to_numpy(zero_copy_only=False)`). \r\n   \r\n   Given those complexities, I am wondering if it might not be easier to *first* convert to a \"dense\" array before doing the arrow->python conversion.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T14:17:42.207+0000",
                    "updated": "2021-04-20T14:17:42.207+0000",
                    "started": "2021-04-20T14:17:42.207+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585833",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616743857\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       Thanks for catching the `np.NaN` with ints, I actually noticed that yesterday but forgot to deal with it when I got back to this ticket.\r\n   \r\n   Regarding the `None` vs `np.NaN`.\r\n   I think there is an inconsistency already, because I copied the behaviour from `to_pandas` and it seems that `to_pandas` already leads to two different results when used on `DictionaryArray`\u00a0 or `Array`:\r\n   \r\n   ```\r\n   >>> pa.array(['a', None]).to_pandas().tolist()\r\n   ['a', None]\r\n   >>> pa.array(['a', None]).to_numpy(zero_copy_only=False).tolist()\r\n   ['a', None]\r\n   ```\r\n   \r\n   VS\r\n   \r\n   ```\r\n   >>> pa.DictionaryArray.from_arrays(pa.array([0, None]), pa.array(['a'])).to_pandas().tolist()\r\n   ```\r\n   \r\n   So it seems that for `DictionaryArray` we already used `NaN`, not `None`, which lead to the reason why I used `NaN`.\r\n   \r\n   Should we uniform the behaviour and switch to `None` for `DictionaryArray.to_pandas` too as we do for `Array.to_pandas`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T14:34:28.862+0000",
                    "updated": "2021-04-20T14:34:28.862+0000",
                    "started": "2021-04-20T14:34:28.862+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585873",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616743857\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       Thanks for catching the `np.NaN` with ints, I actually noticed that yesterday but forgot to deal with it when I got back to this ticket.\r\n   \r\n   Regarding the `None` vs `np.NaN`.\r\n   I think there is an inconsistency already, because I copied the behaviour from `to_pandas` and it seems that `to_pandas` already leads to two different results when used on `DictionaryArray`\u00a0 or `Array`:\r\n   \r\n   ```\r\n   >>> pa.array(['a', None]).to_pandas().tolist()\r\n   ['a', None]\r\n   >>> pa.array(['a', None]).to_numpy(zero_copy_only=False).tolist()\r\n   ['a', None]\r\n   ```\r\n   \r\n   VS\r\n   \r\n   ```\r\n   >>> pa.DictionaryArray.from_arrays(pa.array([0, None]), pa.array(['a'])).to_pandas().tolist()\r\n   ['a', nan]\r\n   ```\r\n   \r\n   So it seems that for `DictionaryArray` we already used `NaN`, not `None`, which lead to the reason why I used `NaN`.\r\n   \r\n   Should we uniform the behaviour and switch to `None` for `DictionaryArray.to_pandas` too as we do for `Array.to_pandas`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T14:34:55.485+0000",
                    "updated": "2021-04-20T14:34:55.485+0000",
                    "started": "2021-04-20T14:34:55.485+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585875",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616751489\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       > So it seems that for `DictionaryArray` we already used `NaN`, not `None`, which lead to the reason why I used `NaN`.\r\n   \r\n   That's actually the result of pandas' conversion of Categorical to a list, so not controlled by pyarrow. \r\n   \r\n   For `DictionaryArray.to_pandas` we return a pandas categorical dtype, which natively supports missing values (using -1 in the codes). So for this part, the `None` vs `NaN` is not relevant (outside of our control)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T14:41:58.697+0000",
                    "updated": "2021-04-20T14:41:58.697+0000",
                    "started": "2021-04-20T14:41:58.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585884",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616774759\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       I think that my question was mostly in terms of consistency.\r\n   \r\n   Given\r\n   ```\r\n   da = pa.DictionaryArray.from_arrays(pa.array([0, None]), pa.array(['a']))\r\n   ```\r\n   \r\n   If \r\n   ```\r\n   da.to_pandas()[1] == NaN\r\n   ```\r\n   \r\n   shouldn't\r\n   ```\r\n   da.to_numpy()[1] == da.to_pandas()[1]\r\n   ```\u00a0\r\n   \r\n   woundn't it be confusing that in one case you get back `NaN` and in the other `None`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:07:03.196+0000",
                    "updated": "2021-04-20T15:07:03.196+0000",
                    "started": "2021-04-20T15:07:03.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585897",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616774759\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       I think that my question was mostly in terms of consistency.\r\n   \r\n   Given\r\n   ```\r\n   da = pa.DictionaryArray.from_arrays(pa.array([0, None]), pa.array(['a']))\r\n   ```\r\n   \r\n   If \r\n   ```\r\n   da.to_pandas()[1] == NaN\r\n   ```\r\n   \r\n   shouldn't\r\n   ```\r\n   da.to_numpy()[1] == da.to_pandas()[1]\r\n   ```\r\n   \r\n   woundn't it be confusing that in one case you get back `NaN` and in the other `None`?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:08:19.595+0000",
                    "updated": "2021-04-20T15:08:19.595+0000",
                    "started": "2021-04-20T15:08:19.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585898",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616786742\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       I understand that it can be confusing, but the fact that `da.to_pandas()[1] == NaN` is the case, is a pandas behaviour / implementation detail (pandas doesn't use either NaN or None under the hood for a Categorical, but returns NaN when accessing the value. And, in a potential next version with pandas using nullable dtypes, this would no longer be true). \r\n   \r\n   I think the relevant cases where we would want consistency is for the different `to_numpy` conversions:\r\n   \r\n   ```\r\n   In [20]: pa.array([\"a\", \"b\", None]).to_numpy(zero_copy_only=False)\r\n   Out[20]: array(['a', 'b', None], dtype=object)\r\n   \r\n   In [21]: pa.array([\"a\", \"b\", None]).dictionary_encode().to_numpy(zero_copy_only=False)\r\n   Out[21]: array(['a', 'b', 'b'], dtype=object)\r\n   ```\r\n   \r\n   where of course right now the last one is buggy (which is what this PR is solving), but so I would expect those two above to return the same in case of `to_numpy()`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:20:00.064+0000",
                    "updated": "2021-04-20T15:20:00.064+0000",
                    "started": "2021-04-20T15:20:00.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585906",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/585913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r616795078\n\n\n\n##########\nFile path: python/pyarrow/array.pxi\n##########\n@@ -1170,7 +1170,13 @@ cdef class Array(_PandasConvertible):\n         array = PyObject_to_object(out)\n \n         if isinstance(array, dict):\n-            array = np.take(array['dictionary'], array['indices'])\n+            if zero_copy_only or not self.null_count:\n+                # zero_copy doesn't allow for nulls to be in the array\n+                array = np.take(array['dictionary'], array['indices'])\n+            else:\n+                missings = array[\"indices\"] < 0\n+                array = np.take(array['dictionary'], array['indices'])\n+                array[missings] = np.NaN\n\nReview comment:\n       Ok, just wanted to make sure we didn't introduced inconsistencies in the APIs by chance.\r\n   \r\n   I'll go in the direction of having the `to_numpy()` return the same values it would return with a normal `Array` and I'll check what's the impact of converting the `DictionaryArray`\u00a0 to a plain `Array` before doing the conversion when there are nulls.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T15:29:04.121+0000",
                    "updated": "2021-04-20T15:29:04.121+0000",
                    "started": "2021-04-20T15:29:04.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585913",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/587197",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r618353079\n\n\n\n##########\nFile path: cpp/src/arrow/python/arrow_to_pandas.cc\n##########\n@@ -2229,6 +2229,11 @@ Status ConvertChunkedArrayToPandas(const PandasOptions& options,\n         checked_cast<const DictionaryType&>(*arr->type()).value_type();\n     RETURN_NOT_OK(DecodeDictionaries(options.pool, dense_type, &arr));\n     DCHECK_NE(arr->type()->id(), Type::DICTIONARY);\n+\n+    // The original Python DictionaryArray won't own the memory anymore\n+    // as we actually built a new array when we decoded the DictionaryArray\n+    // thus let the final resulting numpy array own the memory through a Capsule\n+    py_ref = nullptr;\n\nReview comment:\n       @pitrou would you be able to confirm that this is the right fix?\r\n   \r\n   You can see the problem it deals with by checking out this branch, commenting out that line and running the `test_dictionary_to_numpy` test. You will see that in such case we produce corrupted data as the subsequent `MakeNumPyView` used the original `DictionaryArray` as the \"base\" of the new `numpy` array and the newly built `Array` resulting by dictionary decoding (who really owns the memory for the numpy array) probably goes away immediately at the end of this method. With this change instead a capsule is made and the returned numpy array becomes the owner of that capsule.\r\n   \r\n   Does that sound like the right solution?\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-22T12:26:27.470+0000",
                    "updated": "2021-04-22T12:26:27.470+0000",
                    "started": "2021-04-22T12:26:27.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587197",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/587198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r618353079\n\n\n\n##########\nFile path: cpp/src/arrow/python/arrow_to_pandas.cc\n##########\n@@ -2229,6 +2229,11 @@ Status ConvertChunkedArrayToPandas(const PandasOptions& options,\n         checked_cast<const DictionaryType&>(*arr->type()).value_type();\n     RETURN_NOT_OK(DecodeDictionaries(options.pool, dense_type, &arr));\n     DCHECK_NE(arr->type()->id(), Type::DICTIONARY);\n+\n+    // The original Python DictionaryArray won't own the memory anymore\n+    // as we actually built a new array when we decoded the DictionaryArray\n+    // thus let the final resulting numpy array own the memory through a Capsule\n+    py_ref = nullptr;\n\nReview comment:\n       @pitrou would you be able to confirm that this is the right fix?\r\n   \r\n   You can see the problem it deals with by checking out this branch, commenting out that line and running the `test_dictionary_to_numpy` test. \r\n   \r\n   You will see that in such case we produce corrupted data as the subsequent `MakeNumPyView` used the original `DictionaryArray` as the \"base\" of the new `numpy` array and the newly built `Array` resulting by dictionary decoding (who really owns the memory for the numpy array) probably goes away immediately at the end of this method. With this change instead a capsule is made and the returned numpy array becomes the owner of that capsule.\r\n   \r\n   Does that sound like the right solution?\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-22T12:26:43.055+0000",
                    "updated": "2021-04-22T12:26:43.055+0000",
                    "started": "2021-04-22T12:26:43.054+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587198",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/587199",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r618353079\n\n\n\n##########\nFile path: cpp/src/arrow/python/arrow_to_pandas.cc\n##########\n@@ -2229,6 +2229,11 @@ Status ConvertChunkedArrayToPandas(const PandasOptions& options,\n         checked_cast<const DictionaryType&>(*arr->type()).value_type();\n     RETURN_NOT_OK(DecodeDictionaries(options.pool, dense_type, &arr));\n     DCHECK_NE(arr->type()->id(), Type::DICTIONARY);\n+\n+    // The original Python DictionaryArray won't own the memory anymore\n+    // as we actually built a new array when we decoded the DictionaryArray\n+    // thus let the final resulting numpy array own the memory through a Capsule\n+    py_ref = nullptr;\n\nReview comment:\n       @pitrou would you be able to confirm that this is the right fix?\r\n   \r\n   You can see the problem it deals with by checking out this branch, commenting out that line and running the `test_dictionary_to_numpy` test. \r\n   \r\n   You will see that in such case we produce corrupted data as the subsequent `MakeNumPyView` used the original `DictionaryArray` as the \"base\" of the new `numpy` array. While the newly built `Array`, resulting by dictionary decoding (who really owns the memory for the numpy array), probably goes away immediately at the end of this method. With this change instead a capsule is made and the returned numpy array becomes the owner of that capsule.\r\n   \r\n   Does that sound like the right solution?\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-22T12:27:22.191+0000",
                    "updated": "2021-04-22T12:27:22.191+0000",
                    "started": "2021-04-22T12:27:22.191+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587199",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/587216",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r618363682\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -688,6 +688,69 @@ def test_dictionary_from_numpy():\n             assert d2[i].as_py() == dictionary[indices[i]]\n \n \n+def test_dictionary_to_numpy():\n+    expected = pa.array(\n+        [\"foo\", \"bar\", None, \"foo\"]\n+    ).to_numpy(zero_copy_only=False)\n+    a = pa.DictionaryArray.from_arrays(\n+        pa.array([0, 1, None, 0]),\n+        pa.array(['foo', 'bar'])\n+    )\n+    assert (a.to_numpy(zero_copy_only=False) == expected).all()\n\nReview comment:\n       I am not sure if we are very consistent about it, but we also use `np.testing.assert_array_equal` for asserting numpy arrays\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -688,6 +688,69 @@ def test_dictionary_from_numpy():\n             assert d2[i].as_py() == dictionary[indices[i]]\n \n \n+def test_dictionary_to_numpy():\n+    expected = pa.array(\n+        [\"foo\", \"bar\", None, \"foo\"]\n+    ).to_numpy(zero_copy_only=False)\n+    a = pa.DictionaryArray.from_arrays(\n+        pa.array([0, 1, None, 0]),\n+        pa.array(['foo', 'bar'])\n+    )\n+    assert (a.to_numpy(zero_copy_only=False) == expected).all()\n+\n+    with pytest.raises(pa.ArrowInvalid):\n+        # to_numpy takes for granted that when zero_copy_only=True\n+        # there will be no nulls.\n+        # If that changes, nulls handling will have to be updated in to_numpy\n+        #\u00a0as we won't be able to rely anymore on decoding the DictionaryArray\n+        # to handle nulls.\n\nReview comment:\n       I don't fully understand this comment about nulls. For this specific case isn't it just testing that conversion to numpy can never be done zero-copy for dictionary (nulls or no nulls) and is thus raising an error? (this already worked correctly on master as well)\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -688,6 +688,69 @@ def test_dictionary_from_numpy():\n             assert d2[i].as_py() == dictionary[indices[i]]\n \n \n+def test_dictionary_to_numpy():\n+    expected = pa.array(\n+        [\"foo\", \"bar\", None, \"foo\"]\n+    ).to_numpy(zero_copy_only=False)\n+    a = pa.DictionaryArray.from_arrays(\n+        pa.array([0, 1, None, 0]),\n+        pa.array(['foo', 'bar'])\n+    )\n+    assert (a.to_numpy(zero_copy_only=False) == expected).all()\n+\n+    with pytest.raises(pa.ArrowInvalid):\n+        # to_numpy takes for granted that when zero_copy_only=True\n+        # there will be no nulls.\n+        # If that changes, nulls handling will have to be updated in to_numpy\n+        #\u00a0as we won't be able to rely anymore on decoding the DictionaryArray\n+        # to handle nulls.\n+        a.to_numpy(zero_copy_only=True)\n+\n+    anonulls = pa.DictionaryArray.from_arrays(\n+        pa.array([0, 1, 1, 0]),\n+        pa.array(['foo', 'bar'])\n+    )\n+    expected = pa.array(\n+        [\"foo\", \"bar\", \"bar\", \"foo\"]\n+    ).to_numpy(zero_copy_only=False)\n\nReview comment:\n       ```suggestion\r\n       expected = np.array([\"foo\", \"bar\", \"bar\", \"foo\"], dtype=object)\r\n   ```\r\n   \r\n   I think we can just define the expected here? (it's also a bit simpler in code)\r\n   \r\n   (and the same for the others)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-22T12:48:56.715+0000",
                    "updated": "2021-04-22T12:48:56.715+0000",
                    "started": "2021-04-22T12:48:56.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587216",
                    "issueId": "13319973"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/worklog/587223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "amol- commented on a change in pull request #10101:\nURL: https://github.com/apache/arrow/pull/10101#discussion_r618376431\n\n\n\n##########\nFile path: python/pyarrow/tests/test_array.py\n##########\n@@ -688,6 +688,69 @@ def test_dictionary_from_numpy():\n             assert d2[i].as_py() == dictionary[indices[i]]\n \n \n+def test_dictionary_to_numpy():\n+    expected = pa.array(\n+        [\"foo\", \"bar\", None, \"foo\"]\n+    ).to_numpy(zero_copy_only=False)\n+    a = pa.DictionaryArray.from_arrays(\n+        pa.array([0, 1, None, 0]),\n+        pa.array(['foo', 'bar'])\n+    )\n+    assert (a.to_numpy(zero_copy_only=False) == expected).all()\n\nReview comment:\n       I don't have a strong opinion about it, if you want me to change those to `assert_array_equal`\u00a0I'll gladly do. I'm just used to go for `assert` when using `pytest` but in the end `np.testing` provides a good instrumentation too.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-22T12:58:15.034+0000",
                    "updated": "2021-04-22T12:58:15.034+0000",
                    "started": "2021-04-22T12:58:15.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "587223",
                    "issueId": "13319973"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 25800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4563c293[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ca4c072[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5db5649[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5f26b1d0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@36ce2553[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@53dec6c4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ce8bbe8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@66aa2394[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@218966af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4c46cbc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4dbab037[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7abb9c97[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 25800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Apr 28 09:05:48 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-28T09:05:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9594/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-07-29T13:14:54.000+0000",
        "updated": "2021-04-28T09:05:53.000+0000",
        "timeoriginalestimate": null,
        "description": "Example\r\n{code:java}\r\n>>> a = pa.DictionaryArray.from_arrays(pa.array([0, 1, None, 0], type=pa.int32()), pa.array(['foo', 'bar']))\r\n>>> a\r\n<pyarrow.lib.DictionaryArray object at 0x7f12fc94ccf0>-- dictionary:\r\n  [\r\n    \"foo\",\r\n    \"bar\"\r\n  ]\r\n-- indices:\r\n  [\r\n    0,\r\n    1,\r\n    null,\r\n    0\r\n  ]\r\n>>> a.to_pandas()  # this works\r\n0    foo\r\n1    bar\r\n2    NaN\r\n3    foo\r\ndtype: category\r\nCategories (2, object): [foo, bar]\r\n>>> a.to_numpy(zero_copy_only=False)  # this is broken\r\narray(['foo', 'bar', 'bar', 'foo'], dtype=object)\r\n\r\n{code}\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 25800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] DictionaryArray.to_numpy does not correctly convert null indexes to null values",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/comment/17261743",
                    "id": "17261743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "i checked and confirmed that this is broken in pyarrow 2.0.0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=chairmank",
                        "name": "chairmank",
                        "key": "chairmank",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Steve M. Kim",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-01-09T03:31:54.793+0000",
                    "updated": "2021-01-09T03:31:54.793+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/comment/17322089",
                    "id": "17322089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "[~chairmank] sorry for the very slow reply, but thanks a lot for the report. I can confirm it still happens on master as well. Tagging with 5.0.0 so we get reminded to look into it for the next release.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-04-15T11:03:07.965+0000",
                    "updated": "2021-04-15T11:03:07.965+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/comment/17325111",
                    "id": "17325111",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "body": "The issue seems to be caused by {{ConvertArrayToPandas}} returning {{-1}} for missing entries. \r\nWhen we map the values to the indices using {{np.take}} the result is that those negative indices wrap around and end up picking the last value\r\n\r\n{code:python}\r\n>>> d = np.array(['foo', 'bar'])\r\n>>> i = np.array([ 0,  1, -1,  0])\r\n>>> np.take(d, i)\r\narray(['foo', 'bar', 'bar', 'foo'], dtype='<U3')\r\n{code}\r\n\r\nWhen converting to pandas this doesn't happen because {{pandas.Categorical}} already does return {{NaN}}\u00a0 for indices that point to a non existing value ( https://pandas.pydata.org/docs/reference/api/pandas.Categorical.html#pandas-categorical )\r\n\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=amol-",
                        "name": "amol-",
                        "key": "amol-",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=amol-&avatarId=46461",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=amol-&avatarId=46461",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=amol-&avatarId=46461",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=amol-&avatarId=46461"
                        },
                        "displayName": "Alessandro Molina",
                        "active": true,
                        "timeZone": "Europe/Rome"
                    },
                    "created": "2021-04-19T15:10:36.463+0000",
                    "updated": "2021-04-19T15:11:18.874+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/comment/17325114",
                    "id": "17325114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "So for pandas that's indeed correct, because {{pd.Categorical}} storage model is to use -1 to represent missing values in the integer codes (since pandas uses numpy integer array to store the indices/codes of the categorical, and numpy doesn't support missing values in integer arrays). ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-04-19T15:17:20.416+0000",
                    "updated": "2021-04-19T15:17:20.416+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13319973/comment/17334596",
                    "id": "17334596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10101\n[https://github.com/apache/arrow/pull/10101]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-04-28T09:05:48.207+0000",
                    "updated": "2021-04-28T09:05:48.207+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z0hb0o:",
        "customfield_12314139": null
    }
}