{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13471233",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233",
    "key": "ARROW-17052",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "good-first-issue",
            "good-second-issue",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=quanghgx",
            "name": "quanghgx",
            "key": "quanghgx",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=quanghgx&avatarId=51692",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=quanghgx&avatarId=51692",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=quanghgx&avatarId=51692",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=quanghgx&avatarId=51692"
            },
            "displayName": "Quang Hoang",
            "active": true,
            "timeZone": "Asia/Ho_Chi_Minh"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17052/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/804217",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1229501371\n\n   https://issues.apache.org/jira/browse/ARROW-17052\n\n\n",
                    "created": "2022-08-28T16:29:50.805+0000",
                    "updated": "2022-08-28T16:29:50.805+0000",
                    "started": "2022-08-28T16:29:50.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804217",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/804218",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1229501377\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-08-28T16:29:52.250+0000",
                    "updated": "2022-08-28T16:29:52.250+0000",
                    "started": "2022-08-28T16:29:52.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "804218",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/805873",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r961990778\n\n\n##########\ncpp/src/arrow/flight/flight_internals_test.cc:\n##########\n@@ -83,6 +83,13 @@ TEST(FlightTypes, LocationUnknownScheme) {\n }\n \n TEST(FlightTypes, RoundTripTypes) {\n+  Action action{\"action1\", Buffer::FromString(\"action1-content\")};\n+  ASSERT_OK_AND_ASSIGN(std::string action_serialized, action.SerializeToString());\n+  ASSERT_OK_AND_ASSIGN(Action action_deserialized,\n+                       Action::Deserialize(action_serialized));\n+  ASSERT_EQ(action.type, action_deserialized.type);\n+  ASSERT_TRUE(action.body->Equals(*action_deserialized.body));\n+\n\nReview Comment:\n   The tests should be expanded to cover each of the new types (though I see this is a draft)\n\n\n\n##########\ncpp/src/arrow/flight/types.cc:\n##########\n@@ -162,6 +162,33 @@ Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n   return GetSchema(dictionary_memo).Value(out);\n }\n \n+arrow::Result<std::string> SchemaResult::SerializeToString() const {\n+  pb::SchemaResult pb_schema_result;\n+  RETURN_NOT_OK(internal::ToProto(*this, &pb_schema_result));\n+\n+  std::string out;\n+  if (!pb_schema_result.SerializeToString(&out)) {\n+    return Status::IOError(\"Serialized schema-result exceeded 2 GiB limit\");\n\nReview Comment:\n   nit \r\n   ```suggestion\r\n       return Status::IOError(\"Serialized SchemaResult exceeded 2 GiB limit\");\r\n   ```\r\n   \r\n   & ditto below\n\n\n\n##########\ncpp/src/arrow/flight/types.cc:\n##########\n@@ -370,10 +397,141 @@ bool FlightEndpoint::Equals(const FlightEndpoint& other) const {\n   return ticket == other.ticket && locations == other.locations;\n }\n \n+arrow::Result<std::string> FlightEndpoint::SerializeToString() const {\n+  pb::FlightEndpoint pb_flight_endpoint;\n+  RETURN_NOT_OK(internal::ToProto(*this, &pb_flight_endpoint));\n\nReview Comment:\n   This doesn't build either (the function is defined, but isn't declared in the header)\n\n\n\n##########\ncpp/src/arrow/flight/types.cc:\n##########\n@@ -162,6 +162,33 @@ Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n   return GetSchema(dictionary_memo).Value(out);\n }\n \n+arrow::Result<std::string> SchemaResult::SerializeToString() const {\n+  pb::SchemaResult pb_schema_result;\n+  RETURN_NOT_OK(internal::ToProto(*this, &pb_schema_result));\n+\n+  std::string out;\n+  if (!pb_schema_result.SerializeToString(&out)) {\n+    return Status::IOError(\"Serialized schema-result exceeded 2 GiB limit\");\n+  }\n+  return out;\n+}\n+\n+arrow::Result<SchemaResult> SchemaResult::Deserialize(\n+    arrow::util::string_view serialized) {\n+  pb::SchemaResult pb_schema_result;\n+  if (serialized.size() > static_cast<size_t>(std::numeric_limits<int>::max())) {\n+    return Status::Invalid(\"Serialized SchemaResult size should not exceed 2 GiB\");\n+  }\n+  google::protobuf::io::ArrayInputStream input(serialized.data(),\n+                                               static_cast<int>(serialized.size()));\n+  if (!pb_schema_result.ParseFromZeroCopyStream(&input)) {\n+    return Status::Invalid(\"Not a valid schema-result\");\n+  }\n+  SchemaResult out;\n+  RETURN_NOT_OK(internal::FromProto(pb_schema_result, &out));\n\nReview Comment:\n   This doesn't actually build\r\n   \r\n   ```\r\n    /arrow/cpp/src/arrow/flight/types.cc:188:59: error: no matching function for call to 'FromProto(arrow::flight::protocol::SchemaResult&, arrow::flight::SchemaResult*)'\r\n     188 |   RETURN_NOT_OK(internal::FromProto(pb_schema_result, &out));\r\n         |\r\n   ...\r\n   // This is the correct overload\r\n   /arrow/cpp/src/arrow/flight/serialization_internal.h:59:8: note: candidate: 'arrow::Status arrow::flight::internal::FromProto(const arrow::flight::protocol::SchemaResult&, std::string*)'\r\n      59 | Status FromProto(const pb::SchemaResult& pb_result, std::string* result);\r\n         |        ^~~~~~~~~\r\n   ```\n\n\n\n",
                    "created": "2022-09-02T20:40:29.013+0000",
                    "updated": "2022-09-02T20:40:29.013+0000",
                    "started": "2022-09-02T20:40:29.013+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805873",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/805938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r962142251\n\n\n##########\ncpp/src/arrow/flight/types.cc:\n##########\n@@ -162,6 +162,33 @@ Status SchemaResult::GetSchema(ipc::DictionaryMemo* dictionary_memo,\n   return GetSchema(dictionary_memo).Value(out);\n }\n \n+arrow::Result<std::string> SchemaResult::SerializeToString() const {\n+  pb::SchemaResult pb_schema_result;\n+  RETURN_NOT_OK(internal::ToProto(*this, &pb_schema_result));\n+\n+  std::string out;\n+  if (!pb_schema_result.SerializeToString(&out)) {\n+    return Status::IOError(\"Serialized schema-result exceeded 2 GiB limit\");\n+  }\n+  return out;\n+}\n+\n+arrow::Result<SchemaResult> SchemaResult::Deserialize(\n+    arrow::util::string_view serialized) {\n+  pb::SchemaResult pb_schema_result;\n+  if (serialized.size() > static_cast<size_t>(std::numeric_limits<int>::max())) {\n+    return Status::Invalid(\"Serialized SchemaResult size should not exceed 2 GiB\");\n+  }\n+  google::protobuf::io::ArrayInputStream input(serialized.data(),\n+                                               static_cast<int>(serialized.size()));\n+  if (!pb_schema_result.ParseFromZeroCopyStream(&input)) {\n+    return Status::Invalid(\"Not a valid schema-result\");\n+  }\n+  SchemaResult out;\n+  RETURN_NOT_OK(internal::FromProto(pb_schema_result, &out));\n\nReview Comment:\n   thanks. I've just fixed this issue.\n\n\n\n",
                    "created": "2022-09-03T11:33:24.156+0000",
                    "updated": "2022-09-03T11:33:24.156+0000",
                    "started": "2022-09-03T11:33:24.155+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805938",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/805939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r962142372\n\n\n##########\ncpp/src/arrow/flight/types.cc:\n##########\n@@ -370,10 +397,141 @@ bool FlightEndpoint::Equals(const FlightEndpoint& other) const {\n   return ticket == other.ticket && locations == other.locations;\n }\n \n+arrow::Result<std::string> FlightEndpoint::SerializeToString() const {\n+  pb::FlightEndpoint pb_flight_endpoint;\n+  RETURN_NOT_OK(internal::ToProto(*this, &pb_flight_endpoint));\n\nReview Comment:\n   add the needed header in serialization_internal.h\n\n\n\n",
                    "created": "2022-09-03T11:34:14.279+0000",
                    "updated": "2022-09-03T11:34:14.279+0000",
                    "started": "2022-09-03T11:34:14.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805939",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806408",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r963789473\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -289,6 +289,33 @@ cdef class Action(_Weakrefable):\n                 type(action)))\n         return (<Action> action).action\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.action.SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Action action = Action.__new__(Action)\n+        action.action = GetResultValue(\n+            CAction.Deserialize(tobytes(serialized)))\n+        return action\n+\n+    def __eq__(self, Action other):\n+        # TODO (qhoang): question for myself, do we need to push this down\n\nReview Comment:\n   Yes, just inherit from `util::EqualityComparable` on the C++ side and implement `Equals` - then you can just declare an `operator==` in Cython to use instead of doing this\r\n   \r\n   Or I guess you can do something like this: https://github.com/apache/arrow/blob/a5ecb0ff0774805b0f912e231eaedf42e7194c36/cpp/src/arrow/flight/types.h#L143-L150\r\n   \r\n   Then just add the declaration in Cython (ActionType is actually missing its declaration): https://github.com/apache/arrow/blob/a5ecb0ff0774805b0f912e231eaedf42e7194c36/python/pyarrow/includes/libarrow_flight.pxd#L58\n\n\n\n##########\ncpp/src/arrow/flight/flight_internals_test.cc:\n##########\n@@ -83,6 +83,44 @@ TEST(FlightTypes, LocationUnknownScheme) {\n }\n \n TEST(FlightTypes, RoundTripTypes) {\n+  ActionType action_type{\"action-type1\", \"action-type1-description\"};\n+  ASSERT_OK_AND_ASSIGN(std::string action_type_serialized,\n+                       action_type.SerializeToString());\n+  ASSERT_OK_AND_ASSIGN(ActionType action_type_deserialized,\n+                       ActionType::Deserialize(action_type_serialized));\n+  ASSERT_TRUE(action_type.Equals(action_type_deserialized));\n+\n+  Criteria criteria{\"criteria1\"};\n+  ASSERT_OK_AND_ASSIGN(std::string criteria_serialized, criteria.SerializeToString());\n+  ASSERT_OK_AND_ASSIGN(Criteria criteria_deserialized,\n+                       Criteria::Deserialize(criteria_serialized));\n+  ASSERT_EQ(criteria.expression, criteria_deserialized.expression);\n+\n+  Action action{\"action1\", Buffer::FromString(\"action1-content\")};\n+  ASSERT_OK_AND_ASSIGN(std::string action_serialized, action.SerializeToString());\n+  ASSERT_OK_AND_ASSIGN(Action action_deserialized,\n+                       Action::Deserialize(action_serialized));\n+  ASSERT_EQ(action.type, action_deserialized.type);\n+  ASSERT_TRUE((action.body == action_deserialized.body) ||\n+              (action.body != nullptr && action_deserialized.body != nullptr &&\n+               action.body->Equals(*action_deserialized.body)));\n+\n+  Result result{Buffer::FromString(\"result1-content\")};\n+  ASSERT_OK_AND_ASSIGN(std::string result_serialized, result.SerializeToString());\n+  ASSERT_OK_AND_ASSIGN(Result result_deserialized,\n+                       Result::Deserialize(result_serialized));\n+  ASSERT_TRUE((result.body == result_deserialized.body) ||\n\nReview Comment:\n   Hmm, why does this assertion have to be so complicated? \n\n\n\n",
                    "created": "2022-09-06T14:36:49.692+0000",
                    "updated": "2022-09-06T14:36:49.692+0000",
                    "started": "2022-09-06T14:36:49.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806408",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806568",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r964318174\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -289,6 +289,33 @@ cdef class Action(_Weakrefable):\n                 type(action)))\n         return (<Action> action).action\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.action.SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Action action = Action.__new__(Action)\n+        action.action = GetResultValue(\n+            CAction.Deserialize(tobytes(serialized)))\n+        return action\n+\n+    def __eq__(self, Action other):\n+        # TODO (qhoang): question for myself, do we need to push this down\n\nReview Comment:\n   Thank you so much, @lidavidm \r\n   * Added Equals and operator== to C++ side.\r\n   \r\n   Need your help on 3 queries:\r\n   1. For ActionType, currently, it is defined as a named-tuple, should we change it to be backed by CActionType? https://github.com/apache/arrow/blob/master/python/pyarrow/_flight.pyx#L293\r\n   2. Same with Criteria, it is not defined in _flight.pyx yet, should I add it in this MR as well?\r\n   3. And the last one, mostly for your hint: \r\n   ```python\r\n   # This one works\r\n       result = flight.Result(b\"result1\")\r\n       result2 = flight.Result.deserialize(result.serialize())\r\n       assert result.body == result2.body\r\n   \r\n   # But it does not for this one:\r\n       assert result == result2\r\n   \r\n   # Result::__eq__ is already defined in _flight.pyx. (I am getting myself familiar with unique_ptr in Cython)\r\n   ```\r\n   Appreciate your help. I have been learning a lot in last week.\n\n\n\n",
                    "created": "2022-09-07T02:13:27.702+0000",
                    "updated": "2022-09-07T02:13:27.702+0000",
                    "started": "2022-09-07T02:13:27.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806568",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r964318174\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -289,6 +289,33 @@ cdef class Action(_Weakrefable):\n                 type(action)))\n         return (<Action> action).action\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.action.SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Action action = Action.__new__(Action)\n+        action.action = GetResultValue(\n+            CAction.Deserialize(tobytes(serialized)))\n+        return action\n+\n+    def __eq__(self, Action other):\n+        # TODO (qhoang): question for myself, do we need to push this down\n\nReview Comment:\n   Thank you so much, @lidavidm \r\n   * Added Equals and operator== to C++ side.\r\n   \r\n   Need your help on 3 queries:\r\n   1. For ActionType, currently, it is defined as a named-tuple, should we change it to be backed by CActionType? https://github.com/apache/arrow/blob/master/python/pyarrow/_flight.pyx#L293\r\n   2. Same with Criteria, it is not defined in _flight.pyx yet, should I add it in this MR as well?\r\n   3. And the last one, mostly for your advice, David: \r\n   ```python\r\n   # This one works\r\n       result = flight.Result(b\"result1\")\r\n       result2 = flight.Result.deserialize(result.serialize())\r\n       assert result.body == result2.body\r\n   \r\n   # But it does not for this one:\r\n       assert result == result2\r\n   \r\n   # Result::__eq__ is already defined in _flight.pyx. (I am getting myself familiar with unique_ptr in Cython)\r\n   ```\r\n   Appreciate your help. I have been learning a lot in last week.\n\n\n\n",
                    "created": "2022-09-07T12:15:56.649+0000",
                    "updated": "2022-09-07T12:15:56.649+0000",
                    "started": "2022-09-07T12:15:56.649+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806687",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1239315203\n\n   I am checking the issue reported by Travis CI on [03e204c](https://github.com/apache/arrow/pull/13986/commits/03e204c731186e133b41fdbfdfa896da5404a819)\n\n\n",
                    "created": "2022-09-07T12:19:02.608+0000",
                    "updated": "2022-09-07T12:19:02.608+0000",
                    "started": "2022-09-07T12:19:02.608+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806688",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806805",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1239824225\n\n   Those jobs tend tend to be flaky, if there's not a test failure, it's usually fine\n\n\n",
                    "created": "2022-09-07T20:12:18.089+0000",
                    "updated": "2022-09-07T20:12:18.089+0000",
                    "started": "2022-09-07T20:12:18.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806805",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r965232014\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -289,6 +289,33 @@ cdef class Action(_Weakrefable):\n                 type(action)))\n         return (<Action> action).action\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.action.SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Action action = Action.__new__(Action)\n+        action.action = GetResultValue(\n+            CAction.Deserialize(tobytes(serialized)))\n+        return action\n+\n+    def __eq__(self, Action other):\n+        # TODO (qhoang): question for myself, do we need to push this down\n\nReview Comment:\n   1. Don't think so\r\n   2. If it's not in Python then don't add it\r\n   3. What exactly does not work, how does it fail, what have you tried? It seems the definition of Result is slightly off, it should dereference these before comparison, because right now it's comparing the pointers not the values: https://github.com/apache/arrow/blob/03e204c731186e133b41fdbfdfa896da5404a819/python/pyarrow/_flight.pyx#L377-L378\r\n   \n\n\n\n",
                    "created": "2022-09-07T20:14:46.952+0000",
                    "updated": "2022-09-07T20:14:46.952+0000",
                    "started": "2022-09-07T20:14:46.952+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806807",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/806808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r965234157\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -360,13 +410,16 @@ cdef class BasicAuth(_Weakrefable):\n     @staticmethod\n     def deserialize(serialized):\n         auth = BasicAuth()\n-        check_flight_status(\n-            CBasicAuth.Deserialize(serialized).Value(auth.basic_auth.get()))\n+        auth.basic_auth.reset(new CBasicAuth(GetResultValue(\n+            CBasicAuth.Deserialize(tobytes(serialized)))))\n         return auth\n \n     def serialize(self):\n         return GetResultValue(self.basic_auth.get().SerializeToString())\n \n+    def __eq__(self, BasicAuth other):\n+        return self.basic_auth.get() == other.basic_auth.get()\n\nReview Comment:\n   Same issue here I think\n\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -327,6 +352,31 @@ cdef class Result(_Weakrefable):\n         \"\"\"Get the Buffer containing the result.\"\"\"\n         return pyarrow_wrap_buffer(self.result.get().body)\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.result.get().SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Result result = Result.__new__(Result)\n+        result.result.reset(new CFlightResult(GetResultValue(\n+            CFlightResult.Deserialize(tobytes(serialized)))))\n+        return result\n+\n+    def __eq__(self, Result other):\n+        return self.result.get() == other.result.get()\n\nReview Comment:\n   I think this needs to have `dereference` because right now it's probably comparing the pointers\n\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -721,6 +796,28 @@ cdef class SchemaResult(_Weakrefable):\n         check_flight_status(self.result.get().GetSchema(&dummy_memo).Value(&schema))\n         return pyarrow_wrap_schema(schema)\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.result.get().SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        # cdef SchemaResult result = SchemaResult.__new__(SchemaResult)\n+        # result.result.reset(new CSchemaResult(GetResultValue(\n+        #     CSchemaResult.Deserialize(tobytes(serialized)))))\n+        # return result\n\nReview Comment:\n   Commented code?\n\n\n\n",
                    "created": "2022-09-07T20:19:27.450+0000",
                    "updated": "2022-09-07T20:19:27.450+0000",
                    "started": "2022-09-07T20:19:27.449+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "806808",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r967671730\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -721,6 +796,28 @@ cdef class SchemaResult(_Weakrefable):\n         check_flight_status(self.result.get().GetSchema(&dummy_memo).Value(&schema))\n         return pyarrow_wrap_schema(schema)\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.result.get().SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        # cdef SchemaResult result = SchemaResult.__new__(SchemaResult)\n+        # result.result.reset(new CSchemaResult(GetResultValue(\n+        #     CSchemaResult.Deserialize(tobytes(serialized)))))\n+        # return result\n\nReview Comment:\n   Fixed, add default constructor for SchemaResult on C++\n\n\n\n",
                    "created": "2022-09-10T16:01:32.300+0000",
                    "updated": "2022-09-10T16:01:32.300+0000",
                    "started": "2022-09-10T16:01:32.300+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807668",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807669",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r967671737\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -360,13 +410,16 @@ cdef class BasicAuth(_Weakrefable):\n     @staticmethod\n     def deserialize(serialized):\n         auth = BasicAuth()\n-        check_flight_status(\n-            CBasicAuth.Deserialize(serialized).Value(auth.basic_auth.get()))\n+        auth.basic_auth.reset(new CBasicAuth(GetResultValue(\n+            CBasicAuth.Deserialize(tobytes(serialized)))))\n         return auth\n \n     def serialize(self):\n         return GetResultValue(self.basic_auth.get().SerializeToString())\n \n+    def __eq__(self, BasicAuth other):\n+        return self.basic_auth.get() == other.basic_auth.get()\n\nReview Comment:\n   Fixed, thanks David\n\n\n\n",
                    "created": "2022-09-10T16:01:47.284+0000",
                    "updated": "2022-09-10T16:01:47.284+0000",
                    "started": "2022-09-10T16:01:47.283+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807669",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807670",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r967672187\n\n\n##########\npython/pyarrow/_flight.pyx:\n##########\n@@ -289,6 +289,33 @@ cdef class Action(_Weakrefable):\n                 type(action)))\n         return (<Action> action).action\n \n+    def serialize(self):\n+        \"\"\"Get the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        return GetResultValue(self.action.SerializeToString())\n+\n+    @classmethod\n+    def deserialize(cls, serialized):\n+        \"\"\"Parse the wire-format representation of this type.\n+\n+        Useful when interoperating with non-Flight systems (e.g. REST\n+        services) that may want to return Flight types.\n+\n+        \"\"\"\n+        cdef Action action = Action.__new__(Action)\n+        action.action = GetResultValue(\n+            CAction.Deserialize(tobytes(serialized)))\n+        return action\n+\n+    def __eq__(self, Action other):\n+        # TODO (qhoang): question for myself, do we need to push this down\n\nReview Comment:\n   Thank you so much, going to add notes for (1. and 2.) in the MR description.\r\n   \r\n   That's exactly the key point. I was confused by unique_ptr syntax in Cython. Frankly, I had to go over a couple of Cython-101 documents specifically for this issue.\r\n   \r\n   Thanks once again David.\n\n\n\n",
                    "created": "2022-09-10T16:05:32.638+0000",
                    "updated": "2022-09-10T16:05:32.638+0000",
                    "started": "2022-09-10T16:05:32.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807670",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1242878764\n\n   Hi @lidavidm, this MR is ready. Please help with another review when you have time.\r\n   The Travis CI failure (about bloom_filter) seems not related to this MR.\r\n   Thank you so much David.\n\n\n",
                    "created": "2022-09-11T03:43:44.300+0000",
                    "updated": "2022-09-11T03:43:44.300+0000",
                    "started": "2022-09-11T03:43:44.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807713",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r968503739\n\n\n##########\npython/pyarrow/tests/test_flight.py:\n##########\n@@ -1589,6 +1602,10 @@ def test_roundtrip_types():\n     assert info.total_records == info2.total_records\n     assert info.endpoints == info2.endpoints\n \n+    endpoint = flight.FlightEndpoint(\n+        ticket, ['grpc://test', flight.Location.for_grpc_tcp('localhost', 5005)])\n\nReview Comment:\n   The linter shows this line is too long: https://github.com/apache/arrow/runs/8306752201?check_suite_focus=true#step:5:974\n\n\n\n",
                    "created": "2022-09-12T14:38:14.038+0000",
                    "updated": "2022-09-12T14:38:14.038+0000",
                    "started": "2022-09-12T14:38:14.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807935",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/807963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "quanghgx commented on code in PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#discussion_r968577264\n\n\n##########\npython/pyarrow/tests/test_flight.py:\n##########\n@@ -1589,6 +1602,10 @@ def test_roundtrip_types():\n     assert info.total_records == info2.total_records\n     assert info.endpoints == info2.endpoints\n \n+    endpoint = flight.FlightEndpoint(\n+        ticket, ['grpc://test', flight.Location.for_grpc_tcp('localhost', 5005)])\n\nReview Comment:\n   yep, did saw this before, my bad. \r\n   should have checked with archery after rebase.\n\n\n\n",
                    "created": "2022-09-12T15:42:02.841+0000",
                    "updated": "2022-09-12T15:42:02.841+0000",
                    "started": "2022-09-12T15:42:02.841+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "807963",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/809067",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on PR #13986:\nURL: https://github.com/apache/arrow/pull/13986#issuecomment-1248012383\n\n   CI failures are unrelated. Thanks!\n\n\n",
                    "created": "2022-09-15T12:06:14.572+0000",
                    "updated": "2022-09-15T12:06:14.572+0000",
                    "started": "2022-09-15T12:06:14.572+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809067",
                    "issueId": "13471233"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/worklog/809069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm merged PR #13986:\nURL: https://github.com/apache/arrow/pull/13986\n\n\n",
                    "created": "2022-09-15T12:06:56.176+0000",
                    "updated": "2022-09-15T12:06:56.176+0000",
                    "started": "2022-09-15T12:06:56.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "809069",
                    "issueId": "13471233"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@41416e10[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2e15cabd[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40ab21a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@44ac004[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5582e83d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@10978603[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@41dc6c69[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1344ceb6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@51c51fe3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d4e3c46[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f53b8a2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6ad7fc80[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 15 12:06:59 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-09-15T12:06:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17052/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-07-12T14:33:43.000+0000",
        "updated": "2022-09-15T22:03:51.000+0000",
        "timeoriginalestimate": null,
        "description": "Structures like Action don't expose these methods even though ones like FlightInfo do.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Python][FlightRPC] Ensure ::Serialize and ::Deserialize are consistently implemented",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/comment/17596894",
                    "id": "17596894",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=quanghgx",
                        "name": "quanghgx",
                        "key": "quanghgx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=quanghgx&avatarId=51692",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=quanghgx&avatarId=51692",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=quanghgx&avatarId=51692",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=quanghgx&avatarId=51692"
                        },
                        "displayName": "Quang Hoang",
                        "active": true,
                        "timeZone": "Asia/Ho_Chi_Minh"
                    },
                    "body": "Hi [~lidavidm]\u00a0\r\n\r\nI have a couple of queries that need your help.\r\n\r\n1. Please help me on the list of structures that need to expose serialize/deserialize methods? From scanning of cpp/arrow/flight/types.h and Flight.proto, I got:\u00a0\r\n\r\nTodo list:\r\n # Action \u00a0(done, [as the first step|https://github.com/apache/arrow/pull/13986])\u00a0\r\n # ActionType\r\n # Criteria\r\n # Result\r\n # FlightEndpoint\r\n # FlightPayload \u00a0(corresponds to FlightData)\r\n\r\nAlready have serialize/deserialize\r\n{noformat}\r\nBasicAuth\r\nFlightDescriptor\r\nTicket\r\nFlightInfo{noformat}\r\nNo need to add?\r\n{noformat}\r\nEmpty\r\nPutResult\r\nLocation \u00a0 \u00a0 \u00a0 (has Parse and a number of methods like ForGrpcTcp) \r\nSchemaResult \u00a0 (has GetSchema and serialized_schema){noformat}\r\n2. And parts, like language bindings or existing use cases, for example, that are related to this change? I checked arrow-flight.*-test, however, I worry if I am missing something.\r\n\r\nSincerely,",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=quanghgx",
                        "name": "quanghgx",
                        "key": "quanghgx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=quanghgx&avatarId=51692",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=quanghgx&avatarId=51692",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=quanghgx&avatarId=51692",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=quanghgx&avatarId=51692"
                        },
                        "displayName": "Quang Hoang",
                        "active": true,
                        "timeZone": "Asia/Ho_Chi_Minh"
                    },
                    "created": "2022-08-28T17:26:05.455+0000",
                    "updated": "2022-08-28T17:26:05.455+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/comment/17597175",
                    "id": "17597175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks for grabbing this!\r\n\r\nEmpty, Location, and FlightPayload do not need this (FlightPayload is basically internal)\r\n\r\nI think SchemaResult should still have it (the format is slightly different between serialized_schema and what SerializeToString would return, since there's the Protobuf metadata). The same goes for PutResult.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-08-29T12:18:56.516+0000",
                    "updated": "2022-08-29T12:18:56.516+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/comment/17599909",
                    "id": "17599909",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=quanghgx",
                        "name": "quanghgx",
                        "key": "quanghgx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=quanghgx&avatarId=51692",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=quanghgx&avatarId=51692",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=quanghgx&avatarId=51692",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=quanghgx&avatarId=51692"
                        },
                        "displayName": "Quang Hoang",
                        "active": true,
                        "timeZone": "Asia/Ho_Chi_Minh"
                    },
                    "body": "Thank you David. Final list:\r\n{code:java}\r\nAction\r\nActionType\r\nCriteria\r\nFlightEndpoint\r\nPutResult *\r\nResult\r\nSchemaResult {code}\r\nOne more query, for PutResult, is it FlightClient::DoPutResult in arrow/flight/client.h?\r\n\r\nSincerely,",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=quanghgx",
                        "name": "quanghgx",
                        "key": "quanghgx",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=quanghgx&avatarId=51692",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=quanghgx&avatarId=51692",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=quanghgx&avatarId=51692",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=quanghgx&avatarId=51692"
                        },
                        "displayName": "Quang Hoang",
                        "active": true,
                        "timeZone": "Asia/Ho_Chi_Minh"
                    },
                    "created": "2022-09-03T11:43:52.946+0000",
                    "updated": "2022-09-03T11:43:52.946+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/comment/17600793",
                    "id": "17600793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I guess PutResult is never exposed directly so don't worry about it then",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-09-06T14:23:34.613+0000",
                    "updated": "2022-09-06T14:23:34.613+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13471233/comment/17605296",
                    "id": "17605296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 13986\n[https://github.com/apache/arrow/pull/13986]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-09-15T12:06:59.961+0000",
                    "updated": "2022-09-15T12:06:59.961+0000"
                }
            ],
            "maxResults": 5,
            "total": 5,
            "startAt": 0
        },
        "customfield_12311820": "0|z16sxk:",
        "customfield_12314139": null
    }
}