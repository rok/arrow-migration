{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13247057",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057",
    "key": "ARROW-6035",
    "fields": {
        "parent": {
            "id": "13243176",
            "key": "ARROW-5845",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13243176",
            "fields": {
                "summary": "[Java] Implement converter between Arrow record batches and Avro records",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/4",
                    "description": "This issue was once resolved, but the resolution was deemed incorrect. From here issues are either marked assigned or resolved.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/reopened.png",
                    "name": "Reopened",
                    "id": "4",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16800,
            "total": 16800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6035/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/282631",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943\n \n \n   Related to [ARROW-6035](https://issues.apache.org/jira/browse/ARROW-6035).\r\n   \r\n   A  specific Avro unions type(has two types and one is null type) could convert to a nullable ArrowVector.\r\n   For instance, [\"null\", \"string\"] could represented by a VarcharVector which could has null value.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-25T12:46:12.462+0000",
                    "updated": "2019-07-25T12:46:12.462+0000",
                    "started": "2019-07-25T12:46:12.461+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282631",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/282776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#issuecomment-515131045\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=h1) Report\n   > Merging [#4943](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/bc837e64f5a2b6bf3d9cebe69c491600f645a8c8?src=pr&el=desc) will **increase** coverage by `2.17%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4943/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4943      +/-   ##\n   ==========================================\n   + Coverage   87.48%   89.65%   +2.17%     \n   ==========================================\n     Files         994      660     -334     \n     Lines      140683    97102   -43581     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       123074    87061   -36013     \n   + Misses      17247    10041    -7206     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.53% <0%> (-1.78%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked-builder.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWQtYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `91.92% <0%> (-0.47%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | ... and [329 more](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=footer). Last update [bc837e6...ffaa138](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-25T17:15:12.604+0000",
                    "updated": "2019-07-25T17:15:12.604+0000",
                    "started": "2019-07-25T17:15:12.604+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "282776",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/283150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r307603175\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -75,29 +76,61 @@\n    *   <li>BYTES --> ArrowType.Binary</li>\n    * </ul>\n    */\n-  private static ArrowType getArrowType(Type type) {\n+  private static Field getArrowField(Schema schema, String name, boolean nullable) {\n \n-    Preconditions.checkNotNull(type, \"Avro type object can't be null\");\n+    Preconditions.checkNotNull(schema, \"Avro schema object can't be null\");\n+\n+    Type type = schema.getType();\n+    ArrowType arrowType;\n \n     switch (type) {\n+      case UNION:\n+        return getUnionField(schema, name);\n       case STRING:\n-        return new ArrowType.Utf8();\n+        arrowType = new ArrowType.Utf8();\n+        break;\n       case INT:\n-        return new ArrowType.Int(32, /*signed=*/true);\n+        arrowType = new ArrowType.Int(32, /*signed=*/true);\n+        break;\n       case BOOLEAN:\n-        return new ArrowType.Bool();\n+        arrowType = new ArrowType.Bool();\n+        break;\n       case LONG:\n-        return new ArrowType.Int(64, /*signed=*/true);\n+        arrowType = new ArrowType.Int(64, /*signed=*/true);\n+        break;\n       case FLOAT:\n-        return new ArrowType.FloatingPoint(SINGLE);\n+        arrowType =  new ArrowType.FloatingPoint(SINGLE);\n+        break;\n       case DOUBLE:\n-        return new ArrowType.FloatingPoint(DOUBLE);\n+        arrowType = new ArrowType.FloatingPoint(DOUBLE);\n+        break;\n       case BYTES:\n-        return new ArrowType.Binary();\n+        arrowType = new ArrowType.Binary();\n+        break;\n       default:\n         // no-op, shouldn't get here\n         throw new RuntimeException(\"Can't convert avro type %s to arrow type.\" + type.getName());\n     }\n+\n+    final FieldType fieldType =  new FieldType(/*nullable=*/nullable, arrowType, /*dictionary=*/null,\n+        /*metadata=*/getMetaData(schema));\n+    return new Field(name, fieldType, null);\n+  }\n+\n+  private static Field getUnionField(Schema schema, String name) {\n+    int size = schema.getTypes().size();\n+    long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n+    // if has two field and one is null type, convert to nullable primitive type\n+    if (size == 2 && nullCount == 1) {\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      String nullIndex = schema.getTypes().indexOf(subSchema) == 0 ? \"1\" : \"0\";\n+      subSchema.addProp(NULL_INDEX, nullIndex);\n+      Preconditions.checkNotNull(subSchema);\n+      return getArrowField(subSchema, name,true);\n+    } else {\n+      //TODO convert avro unions type to arrow UnionVector\n \n Review comment:\n   throw a NotSupportedException instead.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T06:25:37.969+0000",
                    "updated": "2019-07-26T06:25:37.969+0000",
                    "started": "2019-07-26T06:25:37.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283150",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/283152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r307603664\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -75,29 +76,61 @@\n    *   <li>BYTES --> ArrowType.Binary</li>\n    * </ul>\n    */\n-  private static ArrowType getArrowType(Type type) {\n+  private static Field getArrowField(Schema schema, String name, boolean nullable) {\n \n-    Preconditions.checkNotNull(type, \"Avro type object can't be null\");\n+    Preconditions.checkNotNull(schema, \"Avro schema object can't be null\");\n+\n+    Type type = schema.getType();\n+    ArrowType arrowType;\n \n     switch (type) {\n+      case UNION:\n+        return getUnionField(schema, name);\n       case STRING:\n-        return new ArrowType.Utf8();\n+        arrowType = new ArrowType.Utf8();\n+        break;\n       case INT:\n-        return new ArrowType.Int(32, /*signed=*/true);\n+        arrowType = new ArrowType.Int(32, /*signed=*/true);\n+        break;\n       case BOOLEAN:\n-        return new ArrowType.Bool();\n+        arrowType = new ArrowType.Bool();\n+        break;\n       case LONG:\n-        return new ArrowType.Int(64, /*signed=*/true);\n+        arrowType = new ArrowType.Int(64, /*signed=*/true);\n+        break;\n       case FLOAT:\n-        return new ArrowType.FloatingPoint(SINGLE);\n+        arrowType =  new ArrowType.FloatingPoint(SINGLE);\n+        break;\n       case DOUBLE:\n-        return new ArrowType.FloatingPoint(DOUBLE);\n+        arrowType = new ArrowType.FloatingPoint(DOUBLE);\n+        break;\n       case BYTES:\n-        return new ArrowType.Binary();\n+        arrowType = new ArrowType.Binary();\n+        break;\n       default:\n         // no-op, shouldn't get here\n         throw new RuntimeException(\"Can't convert avro type %s to arrow type.\" + type.getName());\n     }\n+\n+    final FieldType fieldType =  new FieldType(/*nullable=*/nullable, arrowType, /*dictionary=*/null,\n+        /*metadata=*/getMetaData(schema));\n+    return new Field(name, fieldType, null);\n+  }\n+\n+  private static Field getUnionField(Schema schema, String name) {\n+    int size = schema.getTypes().size();\n+    long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n+    // if has two field and one is null type, convert to nullable primitive type\n+    if (size == 2 && nullCount == 1) {\n \n Review comment:\n   can types repeat in Avro?  Should this be size == nullCount + 1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T06:27:52.205+0000",
                    "updated": "2019-07-26T06:27:52.205+0000",
                    "started": "2019-07-26T06:27:52.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283152",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/283153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r307604970\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroIntConsumer.java\n ##########\n @@ -21,24 +21,37 @@\n \n import org.apache.arrow.vector.IntVector;\n import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n-import org.apache.arrow.vector.complex.writer.IntWriter;\n import org.apache.avro.io.Decoder;\n \n /**\n  * Consumer which consume int type values from avro decoder.\n  * Write the data to {@link IntVector}.\n  */\n-public class AvroIntConsumer implements Consumer {\n+public class AvroIntConsumer extends Consumer {\n \n-  private final IntWriter writer;\n+  private final IntWriterImpl writer;\n \n+  /**\n+   * Instantiate a AvroIntConsumer.\n+   */\n   public AvroIntConsumer(IntVector vector) {\n     this.writer = new IntWriterImpl(vector);\n+    this.nullable = vector.getField().isNullable();\n+    if (nullable) {\n+      getNullFieldIndex(vector.getField());\n+    }\n   }\n \n   @Override\n   public void consume(Decoder decoder) throws IOException {\n-    writer.writeInt(decoder.readInt());\n+    if (!nullable) {\n \n Review comment:\n   did you consider using decomposition?  Something like:\r\n   ```\r\n   class NullableTypeConsumer {\r\n      Consumer delegate;\r\n      int nullIndex = 0;\r\n      @Override \r\n      public void consume(Decoder decoder) {\r\n          if (nullIndex != decoder.readInt()) {\r\n              delegate.consume(decoder);\r\n          } else {\r\n             writer.setPosition(writer.getPosition() + 1)\r\n          }\r\n         \r\n      }\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T06:34:12.758+0000",
                    "updated": "2019-07-26T06:34:12.758+0000",
                    "started": "2019-07-26T06:34:12.758+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283153",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/283154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r307605010\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroIntConsumer.java\n ##########\n @@ -21,24 +21,37 @@\n \n import org.apache.arrow.vector.IntVector;\n import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n-import org.apache.arrow.vector.complex.writer.IntWriter;\n import org.apache.avro.io.Decoder;\n \n /**\n  * Consumer which consume int type values from avro decoder.\n  * Write the data to {@link IntVector}.\n  */\n-public class AvroIntConsumer implements Consumer {\n+public class AvroIntConsumer extends Consumer {\n \n-  private final IntWriter writer;\n+  private final IntWriterImpl writer;\n \n Review comment:\n   why this change?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-26T06:34:26.347+0000",
                    "updated": "2019-07-26T06:34:26.347+0000",
                    "started": "2019-07-26T06:34:26.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "283154",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308132218\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -75,29 +76,61 @@\n    *   <li>BYTES --> ArrowType.Binary</li>\n    * </ul>\n    */\n-  private static ArrowType getArrowType(Type type) {\n+  private static Field getArrowField(Schema schema, String name, boolean nullable) {\n \n-    Preconditions.checkNotNull(type, \"Avro type object can't be null\");\n+    Preconditions.checkNotNull(schema, \"Avro schema object can't be null\");\n+\n+    Type type = schema.getType();\n+    ArrowType arrowType;\n \n     switch (type) {\n+      case UNION:\n+        return getUnionField(schema, name);\n       case STRING:\n-        return new ArrowType.Utf8();\n+        arrowType = new ArrowType.Utf8();\n+        break;\n       case INT:\n-        return new ArrowType.Int(32, /*signed=*/true);\n+        arrowType = new ArrowType.Int(32, /*signed=*/true);\n+        break;\n       case BOOLEAN:\n-        return new ArrowType.Bool();\n+        arrowType = new ArrowType.Bool();\n+        break;\n       case LONG:\n-        return new ArrowType.Int(64, /*signed=*/true);\n+        arrowType = new ArrowType.Int(64, /*signed=*/true);\n+        break;\n       case FLOAT:\n-        return new ArrowType.FloatingPoint(SINGLE);\n+        arrowType =  new ArrowType.FloatingPoint(SINGLE);\n+        break;\n       case DOUBLE:\n-        return new ArrowType.FloatingPoint(DOUBLE);\n+        arrowType = new ArrowType.FloatingPoint(DOUBLE);\n+        break;\n       case BYTES:\n-        return new ArrowType.Binary();\n+        arrowType = new ArrowType.Binary();\n+        break;\n       default:\n         // no-op, shouldn't get here\n         throw new RuntimeException(\"Can't convert avro type %s to arrow type.\" + type.getName());\n     }\n+\n+    final FieldType fieldType =  new FieldType(/*nullable=*/nullable, arrowType, /*dictionary=*/null,\n+        /*metadata=*/getMetaData(schema));\n+    return new Field(name, fieldType, null);\n+  }\n+\n+  private static Field getUnionField(Schema schema, String name) {\n+    int size = schema.getTypes().size();\n+    long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n+    // if has two field and one is null type, convert to nullable primitive type\n+    if (size == 2 && nullCount == 1) {\n+      Schema subSchema = schema.getTypes().stream().filter(s -> s.getType() != Type.NULL).findFirst().get();\n+      String nullIndex = schema.getTypes().indexOf(subSchema) == 0 ? \"1\" : \"0\";\n+      subSchema.addProp(NULL_INDEX, nullIndex);\n+      Preconditions.checkNotNull(subSchema);\n+      return getArrowField(subSchema, name,true);\n+    } else {\n+      //TODO convert avro unions type to arrow UnionVector\n \n Review comment:\n   Fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:22:21.294+0000",
                    "updated": "2019-07-29T09:22:21.294+0000",
                    "started": "2019-07-29T09:22:21.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284124",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308132946\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -75,29 +76,61 @@\n    *   <li>BYTES --> ArrowType.Binary</li>\n    * </ul>\n    */\n-  private static ArrowType getArrowType(Type type) {\n+  private static Field getArrowField(Schema schema, String name, boolean nullable) {\n \n-    Preconditions.checkNotNull(type, \"Avro type object can't be null\");\n+    Preconditions.checkNotNull(schema, \"Avro schema object can't be null\");\n+\n+    Type type = schema.getType();\n+    ArrowType arrowType;\n \n     switch (type) {\n+      case UNION:\n+        return getUnionField(schema, name);\n       case STRING:\n-        return new ArrowType.Utf8();\n+        arrowType = new ArrowType.Utf8();\n+        break;\n       case INT:\n-        return new ArrowType.Int(32, /*signed=*/true);\n+        arrowType = new ArrowType.Int(32, /*signed=*/true);\n+        break;\n       case BOOLEAN:\n-        return new ArrowType.Bool();\n+        arrowType = new ArrowType.Bool();\n+        break;\n       case LONG:\n-        return new ArrowType.Int(64, /*signed=*/true);\n+        arrowType = new ArrowType.Int(64, /*signed=*/true);\n+        break;\n       case FLOAT:\n-        return new ArrowType.FloatingPoint(SINGLE);\n+        arrowType =  new ArrowType.FloatingPoint(SINGLE);\n+        break;\n       case DOUBLE:\n-        return new ArrowType.FloatingPoint(DOUBLE);\n+        arrowType = new ArrowType.FloatingPoint(DOUBLE);\n+        break;\n       case BYTES:\n-        return new ArrowType.Binary();\n+        arrowType = new ArrowType.Binary();\n+        break;\n       default:\n         // no-op, shouldn't get here\n         throw new RuntimeException(\"Can't convert avro type %s to arrow type.\" + type.getName());\n     }\n+\n+    final FieldType fieldType =  new FieldType(/*nullable=*/nullable, arrowType, /*dictionary=*/null,\n+        /*metadata=*/getMetaData(schema));\n+    return new Field(name, fieldType, null);\n+  }\n+\n+  private static Field getUnionField(Schema schema, String name) {\n+    int size = schema.getTypes().size();\n+    long nullCount = schema.getTypes().stream().filter(s -> s.getType() == Type.NULL).count();\n+    // if has two field and one is null type, convert to nullable primitive type\n+    if (size == 2 && nullCount == 1) {\n \n Review comment:\n   Repeated types are not allowed. Right, size == nullCount + 1 could check nullable and size == 2 could check nullable primitive type, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:24:05.696+0000",
                    "updated": "2019-07-29T09:24:05.696+0000",
                    "started": "2019-07-29T09:24:05.695+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284126",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284128",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308134038\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroIntConsumer.java\n ##########\n @@ -21,24 +21,37 @@\n \n import org.apache.arrow.vector.IntVector;\n import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n-import org.apache.arrow.vector.complex.writer.IntWriter;\n import org.apache.avro.io.Decoder;\n \n /**\n  * Consumer which consume int type values from avro decoder.\n  * Write the data to {@link IntVector}.\n  */\n-public class AvroIntConsumer implements Consumer {\n+public class AvroIntConsumer extends Consumer {\n \n-  private final IntWriter writer;\n+  private final IntWriterImpl writer;\n \n+  /**\n+   * Instantiate a AvroIntConsumer.\n+   */\n   public AvroIntConsumer(IntVector vector) {\n     this.writer = new IntWriterImpl(vector);\n+    this.nullable = vector.getField().isNullable();\n+    if (nullable) {\n+      getNullFieldIndex(vector.getField());\n+    }\n   }\n \n   @Override\n   public void consume(Decoder decoder) throws IOException {\n-    writer.writeInt(decoder.readInt());\n+    if (!nullable) {\n \n Review comment:\n   Good suggestion, this will be really helpful in Union complex types. \ud83d\udc4d \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:26:32.197+0000",
                    "updated": "2019-07-29T09:26:32.197+0000",
                    "started": "2019-07-29T09:26:32.197+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284128",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284129",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308134038\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroIntConsumer.java\n ##########\n @@ -21,24 +21,37 @@\n \n import org.apache.arrow.vector.IntVector;\n import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n-import org.apache.arrow.vector.complex.writer.IntWriter;\n import org.apache.avro.io.Decoder;\n \n /**\n  * Consumer which consume int type values from avro decoder.\n  * Write the data to {@link IntVector}.\n  */\n-public class AvroIntConsumer implements Consumer {\n+public class AvroIntConsumer extends Consumer {\n \n-  private final IntWriter writer;\n+  private final IntWriterImpl writer;\n \n+  /**\n+   * Instantiate a AvroIntConsumer.\n+   */\n   public AvroIntConsumer(IntVector vector) {\n     this.writer = new IntWriterImpl(vector);\n+    this.nullable = vector.getField().isNullable();\n+    if (nullable) {\n+      getNullFieldIndex(vector.getField());\n+    }\n   }\n \n   @Override\n   public void consume(Decoder decoder) throws IOException {\n-    writer.writeInt(decoder.readInt());\n+    if (!nullable) {\n \n Review comment:\n   Good suggestion, this will also be helpful in Union complex types. \ud83d\udc4d \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:27:11.620+0000",
                    "updated": "2019-07-29T09:27:11.620+0000",
                    "started": "2019-07-29T09:27:11.620+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284129",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308136116\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/AvroIntConsumer.java\n ##########\n @@ -21,24 +21,37 @@\n \n import org.apache.arrow.vector.IntVector;\n import org.apache.arrow.vector.complex.impl.IntWriterImpl;\n-import org.apache.arrow.vector.complex.writer.IntWriter;\n import org.apache.avro.io.Decoder;\n \n /**\n  * Consumer which consume int type values from avro decoder.\n  * Write the data to {@link IntVector}.\n  */\n-public class AvroIntConsumer implements Consumer {\n+public class AvroIntConsumer extends Consumer {\n \n-  private final IntWriter writer;\n+  private final IntWriterImpl writer;\n \n Review comment:\n   Not meant to do this, reverted, thanks for reminder.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:31:29.170+0000",
                    "updated": "2019-07-29T09:31:29.170+0000",
                    "started": "2019-07-29T09:31:29.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284132",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#issuecomment-515131045\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=h1) Report\n   > Merging [#4943](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/bc837e64f5a2b6bf3d9cebe69c491600f645a8c8?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4943/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4943      +/-   ##\n   ==========================================\n   + Coverage   87.48%   89.64%   +2.16%     \n   ==========================================\n     Files         994      664     -330     \n     Lines      140683    97936   -42747     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       123074    87795   -35279     \n   + Misses      17247    10141    -7106     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `81.25% <0%> (-10.06%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `93.18% <0%> (-6.82%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `89.24% <0%> (-3.16%)` | :arrow_down: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `93.54% <0%> (-2.06%)` | :arrow_down: |\n   | [cpp/src/arrow/util/rle-encoding-test.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3JsZS1lbmNvZGluZy10ZXN0LmNj) | `96.97% <0%> (-1.16%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `99.09% <0%> (-0.91%)` | :arrow_down: |\n   | [cpp/src/parquet/encoding.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2VuY29kaW5nLmg=) | `97.82% <0%> (-0.64%)` | :arrow_down: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `96.5% <0%> (-0.61%)` | :arrow_down: |\n   | ... and [379 more](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=footer). Last update [bc837e6...42979b7](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T09:49:55.190+0000",
                    "updated": "2019-07-29T09:49:55.190+0000",
                    "started": "2019-07-29T09:49:55.189+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284143",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284165",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#issuecomment-515131045\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=h1) Report\n   > Merging [#4943](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/bc837e64f5a2b6bf3d9cebe69c491600f645a8c8?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4943/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4943      +/-   ##\n   ==========================================\n   + Coverage   87.48%   89.64%   +2.16%     \n   ==========================================\n     Files         994      664     -330     \n     Lines      140683    97936   -42747     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       123074    87797   -35277     \n   + Misses      17247    10139    -7108     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `81.25% <0%> (-10.06%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `93.18% <0%> (-6.82%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `89.24% <0%> (-3.16%)` | :arrow_down: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `93.54% <0%> (-2.06%)` | :arrow_down: |\n   | [cpp/src/arrow/util/rle-encoding-test.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3JsZS1lbmNvZGluZy10ZXN0LmNj) | `96.97% <0%> (-1.16%)` | :arrow_down: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `99.09% <0%> (-0.91%)` | :arrow_down: |\n   | [cpp/src/parquet/encoding.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2VuY29kaW5nLmg=) | `97.82% <0%> (-0.64%)` | :arrow_down: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `96.5% <0%> (-0.61%)` | :arrow_down: |\n   | [cpp/src/parquet/column\\_reader.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl9yZWFkZXIuY2M=) | `88.93% <0%> (-0.55%)` | :arrow_down: |\n   | ... and [378 more](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=footer). Last update [bc837e6...42979b7](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-29T10:53:24.214+0000",
                    "updated": "2019-07-29T10:53:24.214+0000",
                    "started": "2019-07-29T10:53:24.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284165",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#issuecomment-515131045\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=h1) Report\n   > Merging [#4943](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/bc837e64f5a2b6bf3d9cebe69c491600f645a8c8?src=pr&el=desc) will **increase** coverage by `2.16%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4943/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4943      +/-   ##\n   ==========================================\n   + Coverage   87.48%   89.64%   +2.16%     \n   ==========================================\n     Files         994      664     -330     \n     Lines      140683    98021   -42662     \n     Branches     1418        0    -1418     \n   ==========================================\n   - Hits       123074    87872   -35202     \n   + Misses      17247    10149    -7098     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/flight/internal.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvaW50ZXJuYWwuY2M=) | `81.25% <0%> (-10.06%)` | :arrow_down: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `93.18% <0%> (-6.82%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/types.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdHlwZXMuY2M=) | `89.24% <0%> (-3.16%)` | :arrow_down: |\n   | [python/pyarrow/\\_plasma.pyx](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX3BsYXNtYS5weXg=) | `89.28% <0%> (-2.82%)` | :arrow_down: |\n   | [cpp/src/arrow/status.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zdGF0dXMuaA==) | `93.54% <0%> (-2.06%)` | :arrow_down: |\n   | [cpp/src/arrow/util/rle-encoding-test.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3JsZS1lbmNvZGluZy10ZXN0LmNj) | `96.97% <0%> (-1.16%)` | :arrow_down: |\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [cpp/src/plasma/test/client\\_tests.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvdGVzdC9jbGllbnRfdGVzdHMuY2M=) | `99.09% <0%> (-0.91%)` | :arrow_down: |\n   | [cpp/src/parquet/encoding.h](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2VuY29kaW5nLmg=) | `97.82% <0%> (-0.64%)` | :arrow_down: |\n   | [cpp/src/plasma/client.cc](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvY2xpZW50LmNj) | `96.5% <0%> (-0.61%)` | :arrow_down: |\n   | ... and [384 more](https://codecov.io/gh/apache/arrow/pull/4943/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=footer). Last update [bc837e6...0e7adda](https://codecov.io/gh/apache/arrow/pull/4943?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T03:31:44.378+0000",
                    "updated": "2019-07-30T03:31:44.378+0000",
                    "started": "2019-07-30T03:31:44.377+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284667",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/284740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#issuecomment-516293288\n \n \n   Sorry, will take a look tomorrow at the updates.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T07:06:10.220+0000",
                    "updated": "2019-07-30T07:06:10.220+0000",
                    "started": "2019-07-30T07:06:10.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "284740",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/285288",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308960629\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/Consumer.java\n ##########\n @@ -22,9 +22,11 @@\n import org.apache.avro.io.Decoder;\n \n /**\n- * An abstraction that is used to consume values from avro decoder.\n+ * Interface that is used to consume values from avro decoder.\n  */\n public interface Consumer {\n \n   void consume(Decoder decoder) throws IOException;\n+\n+  void movePosition();\n \n Review comment:\n   Maybe something more literal like \"addNull\" this makes it clear what is being done.  \r\n   \r\n   In either case please add documents for the intentended contract of each method.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T21:54:51.666+0000",
                    "updated": "2019-07-30T21:54:51.666+0000",
                    "started": "2019-07-30T21:54:51.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285288",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/285289",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308904351\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/AvroToArrowUtils.java\n ##########\n @@ -75,29 +78,70 @@\n    *   <li>BYTES --> ArrowType.Binary</li>\n    * </ul>\n    */\n-  private static ArrowType getArrowType(Type type) {\n+  private static Field getArrowField(Schema schema, String name, boolean nullable) {\n \n-    Preconditions.checkNotNull(type, \"Avro type object can't be null\");\n+    Preconditions.checkNotNull(schema, \"Avro schema object can't be null\");\n+\n+    Type type = schema.getType();\n+    ArrowType arrowType;\n \n     switch (type) {\n+      case UNION:\n+        return getUnionField(schema, name);\n       case STRING:\n-        return new ArrowType.Utf8();\n+        arrowType = new ArrowType.Utf8();\n+        break;\n       case INT:\n-        return new ArrowType.Int(32, /*signed=*/true);\n+        arrowType = new ArrowType.Int(32, /*signed=*/true);\n+        break;\n       case BOOLEAN:\n-        return new ArrowType.Bool();\n+        arrowType = new ArrowType.Bool();\n+        break;\n       case LONG:\n-        return new ArrowType.Int(64, /*signed=*/true);\n+        arrowType = new ArrowType.Int(64, /*signed=*/true);\n+        break;\n       case FLOAT:\n-        return new ArrowType.FloatingPoint(SINGLE);\n+        arrowType =  new ArrowType.FloatingPoint(SINGLE);\n+        break;\n       case DOUBLE:\n-        return new ArrowType.FloatingPoint(DOUBLE);\n+        arrowType = new ArrowType.FloatingPoint(DOUBLE);\n+        break;\n       case BYTES:\n-        return new ArrowType.Binary();\n+        arrowType = new ArrowType.Binary();\n+        break;\n       default:\n         // no-op, shouldn't get here\n         throw new RuntimeException(\"Can't convert avro type %s to arrow type.\" + type.getName());\n     }\n+\n+    final FieldType fieldType =  new FieldType(/*nullable=*/nullable, arrowType, /*dictionary=*/null,\n \n Review comment:\n   ```suggestion\r\n       final FieldType fieldType =  new FieldType(nullable, arrowType, /*dictionary=*/null,\r\n   ```\r\n   The comments are mostly useful only when the argument semantics can't be inferred from the variable name (e.g. passing in null or constants).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T21:54:51.766+0000",
                    "updated": "2019-07-30T21:54:51.766+0000",
                    "started": "2019-07-30T21:54:51.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285289",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/285290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r308960169\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/NullablePrimitiveTypeConsumer.java\n ##########\n @@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer holds a primitive consumer, could consume nullable values from avro decoder.\n+ * Write data via writer of delegate consumer.\n+ */\n+public class NullablePrimitiveTypeConsumer implements Consumer {\n \n Review comment:\n   Would this not work for complex types?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-30T21:54:51.801+0000",
                    "updated": "2019-07-30T21:54:51.801+0000",
                    "started": "2019-07-30T21:54:51.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285290",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/285451",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r309016017\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/NullablePrimitiveTypeConsumer.java\n ##########\n @@ -0,0 +1,56 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.consumers;\n+\n+import java.io.IOException;\n+\n+import org.apache.avro.io.Decoder;\n+\n+/**\n+ * Consumer holds a primitive consumer, could consume nullable values from avro decoder.\n+ * Write data via writer of delegate consumer.\n+ */\n+public class NullablePrimitiveTypeConsumer implements Consumer {\n \n Review comment:\n   I think it won't work for complex types, for unions type like [\"string\", \"int\", \"null\"] I think should add a consumer which holds something like Map<index, delegate>.\r\n   This PR only aims for nullable primitive type represented by union type.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T02:23:10.746+0000",
                    "updated": "2019-07-31T02:23:10.746+0000",
                    "started": "2019-07-31T02:23:10.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285451",
                    "issueId": "13247057"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/worklog/285452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #4943: ARROW-6035: [Java] Avro adapter support convert nullable value\nURL: https://github.com/apache/arrow/pull/4943#discussion_r309016058\n \n \n\n ##########\n File path: java/adapter/avro/src/main/java/org/apache/arrow/consumers/Consumer.java\n ##########\n @@ -22,9 +22,11 @@\n import org.apache.avro.io.Decoder;\n \n /**\n- * An abstraction that is used to consume values from avro decoder.\n+ * Interface that is used to consume values from avro decoder.\n  */\n public interface Consumer {\n \n   void consume(Decoder decoder) throws IOException;\n+\n+  void movePosition();\n \n Review comment:\n   Sure, fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-31T02:23:28.955+0000",
                    "updated": "2019-07-31T02:23:28.955+0000",
                    "started": "2019-07-31T02:23:28.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "285452",
                    "issueId": "13247057"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 16800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@18b90f33[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7217b75f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69304cba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@26d2a38c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58f7c308[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@618fd570[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a310067[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@394c0c6e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fc577cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@407e1d11[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42ce1f41[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1b38540a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 01 03:29:04 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-01T03:29:04.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6035/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-07-25T12:31:14.000+0000",
        "updated": "2019-08-01T03:29:52.000+0000",
        "timeoriginalestimate": null,
        "description": "A\u00a0 specific Avro unions type(has two types and one is null type)\u00a0could convert to a nullable ArrowVector.\r\n\r\nFor instance, [\"null\", \"string\"] could represented by a VarcharVector which could has null value.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Avro adapter support convert nullable value",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13247057/comment/16897727",
                    "id": "16897727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4943\n[https://github.com/apache/arrow/pull/4943]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-08-01T03:29:04.122+0000",
                    "updated": "2019-08-01T03:29:04.122+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z050so:",
        "customfield_12314139": null
    }
}