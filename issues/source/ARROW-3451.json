{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13189896",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896",
    "key": "ARROW-3451",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pearu",
            "name": "pearu",
            "key": "pearu",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pearu&avatarId=35984",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pearu&avatarId=35984",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pearu&avatarId=35984",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pearu&avatarId=35984"
            },
            "displayName": "Pearu Peterson",
            "active": true,
            "timeZone": "Europe/Tallinn"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 76800,
            "total": 76800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 76800,
            "total": 76800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3451/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 123,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/152647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pearu opened a new pull request #2732: ARROW-3451 [WIP] [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732\n \n \n   This PR implements the following features:\r\n   1. `pyarrow.cuda.Context.handle` property returns `CUcontext` value\r\n   2. `pyarrow.cuda.Context.from_numba` method to create `Context` that shares numba context handler\r\n   3. `pyarrow.cuda.Context.to_numba` method to create a numba context instance that shares `Context` handler\r\n   4. `pyarrow.cuda.CudaBuffer.to_numba` method to create a numba `MemoryPointer` instance so that `CudaBuffer` memory is used within the arguments to numba jitted functions.\r\n   5. `CudaDeviceManager::CreateSharedContext` used in 2. Resolves ARROW-1423.\r\n   \r\n   TODO:\r\n   6. Wrap numba allocated memory with CudaBuffer. For that, implement staticmethod `pyarrow.cuda.Context.foreign_buffer(address, size)`. Will resolve ARROW-3451 .\r\n    \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T12:08:54.180+0000",
                    "updated": "2018-10-09T12:08:54.180+0000",
                    "started": "2018-10-09T12:08:54.179+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152647",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/152683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2732: ARROW-3451 [WIP] [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-428212456\n \n \n   I'm going to have to squash this branch to clean things up. Please avoid using `git merge` -- we do all of our branch and patch maintenance using rebase and linear commit history\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-09T14:23:58.332+0000",
                    "updated": "2018-10-09T14:23:58.332+0000",
                    "started": "2018-10-09T14:23:58.332+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "152683",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2732: ARROW-3451 [WIP] [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-428544852\n \n \n   Sorry, I had force-pushed your branch. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T12:00:45.952+0000",
                    "updated": "2018-10-10T12:00:45.952+0000",
                    "started": "2018-10-10T12:00:45.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153117",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pearu commented on issue #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-428546947\n \n \n   @wesm , please review.\r\n   \r\n   My git skills are not advanced, so, excuse my clumsiness with creating PRs :)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T12:08:17.488+0000",
                    "updated": "2018-10-10T12:08:17.488+0000",
                    "started": "2018-10-10T12:08:17.487+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153120",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pearu",
                        "name": "pearu",
                        "key": "pearu",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pearu&avatarId=35984",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pearu&avatarId=35984",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pearu&avatarId=35984",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pearu&avatarId=35984"
                        },
                        "displayName": "Pearu Peterson",
                        "active": true,
                        "timeZone": "Europe/Tallinn"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pearu",
                        "name": "pearu",
                        "key": "pearu",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pearu&avatarId=35984",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pearu&avatarId=35984",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pearu&avatarId=35984",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pearu&avatarId=35984"
                        },
                        "displayName": "Pearu Peterson",
                        "active": true,
                        "timeZone": "Europe/Tallinn"
                    },
                    "comment": "",
                    "created": "2018-10-10T12:13:31.567+0000",
                    "updated": "2018-10-10T12:13:31.567+0000",
                    "started": "2018-10-10T12:12:00.000+0000",
                    "timeSpent": "2h",
                    "timeSpentSeconds": 7200,
                    "id": "153121",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-428673044\n \n \n   @pearu thanks -- I'm quite backlogged this week since at a conference but I will endeavor to review in the next 48h. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-10T18:06:33.885+0000",
                    "updated": "2018-10-10T18:06:33.885+0000",
                    "started": "2018-10-10T18:06:33.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153229",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224507523\n \n \n\n ##########\n File path: python/pyarrow/_cuda.pyx\n ##########\n @@ -43,9 +45,57 @@ cdef class Context:\n             self.context.reset()\n             raise ValueError('device_number argument must be '\n                              'non-negative less than %s' % (n))\n-        check_status(manager.GetContext(device_number, &self.context))\n+        if handle == 0:\n+            check_status(manager.GetContext(device_number, &self.context))\n+        else:\n+            check_status(manager.CreateSharedContext(device_number,\n+                                                     <void*>handle,\n+                                                     &self.context))\n         self.device_number = device_number\n \n+    @staticmethod\n+    def from_numba(context=None):\n+        \"\"\"Create Context instance from a numba CUDA context.\n+\n+        Parameters\n+        ----------\n+        context : {numba.cuda.cudadrv.driver.Context, None}\n+          Specify numba CUDA context instance. When None, use the\n+          current numba context.\n+\n+        Returns\n+        -------\n+        shared_context : pyarrow.cuda.Context\n+          Context instance.\n+        \"\"\"\n+        if context is None:\n+            import numba.cuda\n+            context = numba.cuda.cudadrv.devices.get_context()\n+        return Context(device_number=context.device.id,\n+                       handle=context.handle.value)\n+\n+    def to_numba(self):\n+        \"\"\"Convert Context to numba CUDA context.\n+\n+        Returns\n+        -------\n+        context : numba.cuda.cudadrv.driver.Context\n+          Numba CUDA context instance.\n+        \"\"\"\n+        import ctypes\n+        import numba.cuda\n+        device = numba.cuda.gpus[self.device_number]\n+        handle = ctypes.c_void_p(self.handle)\n+        context = numba.cuda.cudadrv.driver.Context(device, handle)\n+\n+        class DummyPendingDeallocs(object):\n+            # Context is management by pyarrow\n \n Review comment:\n   s/management/managed/ ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.033+0000",
                    "updated": "2018-10-11T16:20:47.033+0000",
                    "started": "2018-10-11T16:20:47.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153552",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224507781\n \n \n\n ##########\n File path: python/pyarrow/_cuda.pyx\n ##########\n @@ -86,6 +142,34 @@ cdef class Context:\n         check_status(self.context.get().Allocate(nbytes, &cudabuf))\n         return pyarrow_wrap_cudabuffer(cudabuf)\n \n+    def foreign_buffer(self, address, size):\n+        \"\"\"Create device buffer from device address and size as a view.\n+\n+        The caller is responsible for allocating and freeing the\n+        memory as well as ensureing that the memory belongs to the\n+        CUDA context that this Context instance holds.\n+\n+        Parameters\n+        ----------\n+        address : intptr_t\n \n Review comment:\n   \"int\" rather than \"intptr_t\", which isn't a Python type.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.155+0000",
                    "updated": "2018-10-11T16:20:47.155+0000",
                    "started": "2018-10-11T16:20:47.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153553",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224509714\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,124 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+\n+def make_random_buffer(size, target='host', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size)\n+        arr = np.frombuffer(buf, dtype=np.uint8)\n+        arr[:] = np.random.randint(low=0, high=255, size=size, dtype=np.uint8)\n+        return arr, buf\n+    elif target == 'device':\n+        arr, buf = make_random_buffer(size, target='host')\n+        dbuf = ctx.new_buffer(size)\n+        dbuf.copy_from_host(buf, position=0, nbytes=size)\n+        return arr, dbuf\n+    raise ValueError('invalid target value')\n+\n+\n+def test_numba_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    # Create context instances\n+    ctx = cuda.Context()\n+    nb_ctx = ctx.to_numba()\n+    assert ctx.handle == nb_ctx.handle.value\n+    assert ctx.handle == nb_cuda.cudadrv.driver.driver.get_context().value\n+\n+    # Dummy data\n+    size = 10\n+    arr, buf = make_random_buffer(size, target='host')\n \n Review comment:\n   `arr` and `buf` are seemingly never used here (except shape, strides and dtype).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.196+0000",
                    "updated": "2018-10-11T16:20:47.196+0000",
                    "started": "2018-10-11T16:20:47.195+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153554",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153555",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224510037\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,124 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+\n+def make_random_buffer(size, target='host', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size)\n+        arr = np.frombuffer(buf, dtype=np.uint8)\n \n Review comment:\n   It would be more interesting to test with a non-unit dtype (anything larger than uint8).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.234+0000",
                    "updated": "2018-10-11T16:20:47.234+0000",
                    "started": "2018-10-11T16:20:47.233+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153555",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153556",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224511179\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,124 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+\n+def make_random_buffer(size, target='host', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size)\n+        arr = np.frombuffer(buf, dtype=np.uint8)\n+        arr[:] = np.random.randint(low=0, high=255, size=size, dtype=np.uint8)\n+        return arr, buf\n+    elif target == 'device':\n+        arr, buf = make_random_buffer(size, target='host')\n+        dbuf = ctx.new_buffer(size)\n+        dbuf.copy_from_host(buf, position=0, nbytes=size)\n+        return arr, dbuf\n+    raise ValueError('invalid target value')\n+\n+\n+def test_numba_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    # Create context instances\n+    ctx = cuda.Context()\n+    nb_ctx = ctx.to_numba()\n+    assert ctx.handle == nb_ctx.handle.value\n+    assert ctx.handle == nb_cuda.cudadrv.driver.driver.get_context().value\n+\n+    # Dummy data\n+    size = 10\n+    arr, buf = make_random_buffer(size, target='host')\n+\n+    # Allocate memory using numba context\n+    # Warning: this will not be reflected in pyarrow context manager\n+    # (e.g bytes_allocated does not change)\n+    mem = nb_ctx.memalloc(size)\n+    darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+    darr[:5] = 99\n+    darr[5:] = 88\n+    np.testing.assert_equal(darr.copy_to_host()[:5], 99)\n+    np.testing.assert_equal(darr.copy_to_host()[5:], 88)\n+\n+    # wrap numba allocated memory with CudaBuffer\n+    cbuf = cuda.CudaBuffer.from_numba(mem)\n+    arr2 = np.frombuffer(cbuf.copy_to_host(), dtype=arr.dtype)\n+    np.testing.assert_equal(arr2, darr.copy_to_host())\n+\n+\n+def test_pyarrow_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    ctx = cuda.Context()\n+\n+    size = 10\n+    arr, cbuf = make_random_buffer(size, target='device', ctx=ctx)\n+\n+    # wrap CudaBuffer with numba device array\n+    mem = cbuf.to_numba()\n+    darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+    np.testing.assert_equal(darr.copy_to_host(), arr)\n+\n+\n+def test_numba_context():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    size = 10\n+    with nb_cuda.gpus[0]:\n+        # context is managed by numba\n+        nb_ctx = nb_cuda.cudadrv.devices.get_context()\n \n Review comment:\n   Same comment as above about getting a Numba Cuda context.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.299+0000",
                    "updated": "2018-10-11T16:20:47.299+0000",
                    "started": "2018-10-11T16:20:47.298+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153556",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224511507\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,124 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+\n+def make_random_buffer(size, target='host', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size)\n+        arr = np.frombuffer(buf, dtype=np.uint8)\n+        arr[:] = np.random.randint(low=0, high=255, size=size, dtype=np.uint8)\n+        return arr, buf\n+    elif target == 'device':\n+        arr, buf = make_random_buffer(size, target='host')\n+        dbuf = ctx.new_buffer(size)\n+        dbuf.copy_from_host(buf, position=0, nbytes=size)\n+        return arr, dbuf\n+    raise ValueError('invalid target value')\n+\n+\n+def test_numba_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    # Create context instances\n+    ctx = cuda.Context()\n+    nb_ctx = ctx.to_numba()\n+    assert ctx.handle == nb_ctx.handle.value\n+    assert ctx.handle == nb_cuda.cudadrv.driver.driver.get_context().value\n+\n+    # Dummy data\n+    size = 10\n+    arr, buf = make_random_buffer(size, target='host')\n+\n+    # Allocate memory using numba context\n+    # Warning: this will not be reflected in pyarrow context manager\n+    # (e.g bytes_allocated does not change)\n+    mem = nb_ctx.memalloc(size)\n+    darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+    darr[:5] = 99\n+    darr[5:] = 88\n+    np.testing.assert_equal(darr.copy_to_host()[:5], 99)\n+    np.testing.assert_equal(darr.copy_to_host()[5:], 88)\n+\n+    # wrap numba allocated memory with CudaBuffer\n+    cbuf = cuda.CudaBuffer.from_numba(mem)\n+    arr2 = np.frombuffer(cbuf.copy_to_host(), dtype=arr.dtype)\n+    np.testing.assert_equal(arr2, darr.copy_to_host())\n+\n+\n+def test_pyarrow_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    ctx = cuda.Context()\n+\n+    size = 10\n+    arr, cbuf = make_random_buffer(size, target='device', ctx=ctx)\n+\n+    # wrap CudaBuffer with numba device array\n+    mem = cbuf.to_numba()\n+    darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+    np.testing.assert_equal(darr.copy_to_host(), arr)\n+\n+\n+def test_numba_context():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    size = 10\n+    with nb_cuda.gpus[0]:\n+        # context is managed by numba\n+        nb_ctx = nb_cuda.cudadrv.devices.get_context()\n+        ctx = cuda.Context.from_numba(nb_ctx)\n+        arr, cbuf = make_random_buffer(size, target='device', ctx=ctx)\n+        assert cbuf.context.handle == nb_ctx.handle.value\n+        mem = cbuf.to_numba()\n+        darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+        np.testing.assert_equal(darr.copy_to_host(), arr)\n+        darr[0] = 99\n+        arr2 = np.frombuffer(cbuf.copy_to_host(), dtype=np.uint8)\n \n Review comment:\n   `dtype=arr.dtype`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.322+0000",
                    "updated": "2018-10-11T16:20:47.322+0000",
                    "started": "2018-10-11T16:20:47.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153558",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224510808\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,124 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+\n+def make_random_buffer(size, target='host', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size)\n+        arr = np.frombuffer(buf, dtype=np.uint8)\n+        arr[:] = np.random.randint(low=0, high=255, size=size, dtype=np.uint8)\n+        return arr, buf\n+    elif target == 'device':\n+        arr, buf = make_random_buffer(size, target='host')\n+        dbuf = ctx.new_buffer(size)\n+        dbuf.copy_from_host(buf, position=0, nbytes=size)\n+        return arr, dbuf\n+    raise ValueError('invalid target value')\n+\n+\n+def test_numba_memalloc():\n+    from numba.cuda.cudadrv.devicearray import DeviceNDArray\n+\n+    # Create context instances\n+    ctx = cuda.Context()\n+    nb_ctx = ctx.to_numba()\n+    assert ctx.handle == nb_ctx.handle.value\n+    assert ctx.handle == nb_cuda.cudadrv.driver.driver.get_context().value\n \n Review comment:\n   I'm not sure what this means. Is this the default Numba Cuda context? Perhaps there is a better API to get it, such as https://numba.pydata.org/numba-doc/dev/cuda-reference/host.html#numba.cuda.current_context\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.370+0000",
                    "updated": "2018-10-11T16:20:47.370+0000",
                    "started": "2018-10-11T16:20:47.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153559",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153560",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224512795\n \n \n\n ##########\n File path: python/pyarrow/_cuda.pyx\n ##########\n @@ -43,9 +45,57 @@ cdef class Context:\n             self.context.reset()\n             raise ValueError('device_number argument must be '\n                              'non-negative less than %s' % (n))\n-        check_status(manager.GetContext(device_number, &self.context))\n+        if handle == 0:\n+            check_status(manager.GetContext(device_number, &self.context))\n+        else:\n+            check_status(manager.CreateSharedContext(device_number,\n+                                                     <void*>handle,\n+                                                     &self.context))\n         self.device_number = device_number\n \n+    @staticmethod\n+    def from_numba(context=None):\n+        \"\"\"Create Context instance from a numba CUDA context.\n+\n+        Parameters\n+        ----------\n+        context : {numba.cuda.cudadrv.driver.Context, None}\n+          Specify numba CUDA context instance. When None, use the\n+          current numba context.\n+\n+        Returns\n+        -------\n+        shared_context : pyarrow.cuda.Context\n+          Context instance.\n+        \"\"\"\n+        if context is None:\n+            import numba.cuda\n+            context = numba.cuda.cudadrv.devices.get_context()\n \n Review comment:\n   Can [numba.cuda.current_context](https://numba.pydata.org/numba-doc/dev/cuda-reference/host.html#numba.cuda.current_context) be used instead?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.383+0000",
                    "updated": "2018-10-11T16:20:47.383+0000",
                    "started": "2018-10-11T16:20:47.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153560",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/153561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r224512430\n \n \n\n ##########\n File path: python/pyarrow/_cuda.pyx\n ##########\n @@ -26,15 +26,17 @@ cdef class Context:\n     \"\"\" CUDA driver context.\n     \"\"\"\n \n-    def __cinit__(self, int device_number=0):\n+    def __cinit__(self, int device_number=0, uintptr_t handle=0):\n         \"\"\"Construct the shared CUDA driver context for a particular device.\n \n         Parameters\n         ----------\n         device_number : int\n           Specify the gpu device for which the CUDA driver context is\n           requested.\n-\n+        handle : void_p\n \n Review comment:\n   \"int\", not \"void_p\" which is not a Python type.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-11T16:20:47.393+0000",
                    "updated": "2018-10-11T16:20:47.393+0000",
                    "started": "2018-10-11T16:20:47.393+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "153561",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/154162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pearu commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r225002050\n \n \n\n ##########\n File path: python/pyarrow/_cuda.pyx\n ##########\n @@ -43,9 +45,57 @@ cdef class Context:\n             self.context.reset()\n             raise ValueError('device_number argument must be '\n                              'non-negative less than %s' % (n))\n-        check_status(manager.GetContext(device_number, &self.context))\n+        if handle == 0:\n+            check_status(manager.GetContext(device_number, &self.context))\n+        else:\n+            check_status(manager.CreateSharedContext(device_number,\n+                                                     <void*>handle,\n+                                                     &self.context))\n         self.device_number = device_number\n \n+    @staticmethod\n+    def from_numba(context=None):\n+        \"\"\"Create Context instance from a numba CUDA context.\n+\n+        Parameters\n+        ----------\n+        context : {numba.cuda.cudadrv.driver.Context, None}\n+          Specify numba CUDA context instance. When None, use the\n+          current numba context.\n+\n+        Returns\n+        -------\n+        shared_context : pyarrow.cuda.Context\n+          Context instance.\n+        \"\"\"\n+        if context is None:\n+            import numba.cuda\n+            context = numba.cuda.cudadrv.devices.get_context()\n \n Review comment:\n   Yes. Fixed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-14T17:50:20.881+0000",
                    "updated": "2018-10-14T17:50:20.881+0000",
                    "started": "2018-10-14T17:50:20.881+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154162",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/154166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pearu commented on issue #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-429648250\n \n \n   @wesm @pitrou , please review.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-14T18:07:01.611+0000",
                    "updated": "2018-10-14T18:07:01.611+0000",
                    "started": "2018-10-14T18:07:01.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154166",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/154168",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#issuecomment-429651259\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=h1) Report\n   > Merging [#2732](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/f4f62699e5d5b821e83dc2f902d486cf5c2b2755?src=pr&el=desc) will **increase** coverage by `0.9%`.\n   > The diff coverage is `6.84%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2732/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master    #2732     +/-   ##\n   =========================================\n   + Coverage   87.57%   88.48%   +0.9%     \n   =========================================\n     Files         402      343     -59     \n     Lines       61454    57765   -3689     \n   =========================================\n   - Hits        53821    51115   -2706     \n   + Misses       7561     6650    -911     \n   + Partials       72        0     -72\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [python/pyarrow/tests/test\\_cuda.py](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jdWRhLnB5) | `1.55% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_cuda\\_numba\\_interop.py](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9jdWRhX251bWJhX2ludGVyb3AucHk=) | `6.84% <6.84%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_io.py](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9pby5weQ==) | `99.15% <0%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/parquet/schema-test.cc](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L3NjaGVtYS10ZXN0LmNj) | `99.48% <0%> (-0.01%)` | :arrow_down: |\n   | [python/pyarrow/\\_\\_init\\_\\_.py](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX19pbml0X18ucHk=) | `69.23% <0%> (\u00f8)` | :arrow_up: |\n   | [python/pyarrow/tests/test\\_misc.py](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9taXNjLnB5) | `85.71% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/column\\_writer-test.cc](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2NvbHVtbl93cml0ZXItdGVzdC5jYw==) | `99.52% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/parquet/statistics-test.cc](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L3N0YXRpc3RpY3MtdGVzdC5jYw==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/pretty\\_print.h](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9wcmV0dHlfcHJpbnQuaA==) | `100% <0%> (\u00f8)` | :arrow_up: |\n   | [rust/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree#diff-cnVzdC9zcmMvcmVjb3JkX2JhdGNoLnJz) | | |\n   | ... and [67 more](https://codecov.io/gh/apache/arrow/pull/2732/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=footer). Last update [f4f6269...740e474](https://codecov.io/gh/apache/arrow/pull/2732?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-14T18:44:22.849+0000",
                    "updated": "2018-10-14T18:44:22.849+0000",
                    "started": "2018-10-14T18:44:22.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154168",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/154271",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r225144787\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,140 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+dtypes = ['uint8', 'int16', 'float32']\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+from numba.cuda.cudadrv.devicearray import DeviceNDArray  # noqa: E402\n+\n+\n+ctx = None\n+nb_ctx = None\n+\n+\n+def setup_module(module):\n+    # It turns out that for numba-pyarrow.cuda interop one should\n+    # create CUDA context using numba context manager.\n+\n+    if 0:\n+        # At some point tests will fail\n+        module.ctx = cuda.Context()\n+        module.nb_ctx = ctx.to_numba()\n+    else:\n+        # This seems to work always:\n+        module.nb_ctx = nb_cuda.current_context()\n+        module.ctx = cuda.Context.from_numba(nb_ctx)\n+\n+\n+def teardown_module(module):\n+    del module.ctx\n+    del module.nb_ctx\n+\n+\n+def test_context():\n+    assert ctx.handle == nb_ctx.handle.value\n+\n+\n+def make_random_buffer(size, target='host', dtype='uint8', ctx=None):\n+    \"\"\"Return a host or device buffer with random data.\n+    \"\"\"\n+    dtype = np.dtype(dtype)\n+    if target == 'host':\n+        assert size >= 0\n+        buf = pa.allocate_buffer(size*dtype.itemsize)\n+        arr = np.frombuffer(buf, dtype=dtype)\n+        arr[:] = np.random.randint(low=0, high=255, size=size*dtype.itemsize,\n+                                   dtype=np.uint8).view(dtype=dtype)\n+        return arr, buf\n+    elif target == 'device':\n+        arr, buf = make_random_buffer(size, target='host', dtype=dtype)\n+        dbuf = ctx.new_buffer(size * dtype.itemsize)\n+        dbuf.copy_from_host(buf, position=0, nbytes=buf.size)\n+        return arr, dbuf\n+    raise ValueError('invalid target value')\n+\n+\n+@pytest.mark.parametrize(\"dtype\", dtypes, ids=dtypes)\n+def test_numba_memalloc(dtype):\n+    dtype = np.dtype(dtype)\n+    # Allocate memory using numba context\n+    # Warning: this will not be reflected in pyarrow context manager\n+    # (e.g bytes_allocated does not change)\n+    size = 10\n+    mem = nb_ctx.memalloc(size * dtype.itemsize)\n+    darr = DeviceNDArray((size,), (dtype.itemsize,), dtype, gpu_data=mem)\n+    darr[:5] = 99\n+    darr[5:] = 88\n+    np.testing.assert_equal(darr.copy_to_host()[:5], 99)\n+    np.testing.assert_equal(darr.copy_to_host()[5:], 88)\n+\n+    # wrap numba allocated memory with CudaBuffer\n+    cbuf = cuda.CudaBuffer.from_numba(mem)\n+    arr2 = np.frombuffer(cbuf.copy_to_host(), dtype=dtype)\n+    np.testing.assert_equal(arr2, darr.copy_to_host())\n+\n+\n+@pytest.mark.parametrize(\"dtype\", dtypes, ids=dtypes)\n+def test_pyarrow_memalloc(dtype):\n+    size = 10\n+    arr, cbuf = make_random_buffer(size, target='device', dtype=dtype, ctx=ctx)\n+\n+    # wrap CudaBuffer with numba device array\n+    mem = cbuf.to_numba()\n+    darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+    np.testing.assert_equal(darr.copy_to_host(), arr)\n+\n+\n+@pytest.mark.parametrize(\"dtype\", dtypes, ids=dtypes)\n+def test_numba_context(dtype):\n+    size = 10\n+    with nb_cuda.gpus[0]:\n+        arr, cbuf = make_random_buffer(size, target='device',\n+                                       dtype=dtype, ctx=ctx)\n+        assert cbuf.context.handle == nb_ctx.handle.value\n+        mem = cbuf.to_numba()\n+        darr = DeviceNDArray(arr.shape, arr.strides, arr.dtype, gpu_data=mem)\n+        np.testing.assert_equal(darr.copy_to_host(), arr)\n+        darr[0] = 99\n+        arr2 = np.frombuffer(cbuf.copy_to_host(), dtype=dtype)\n+        assert arr2[0] == 99\n+\n+\n+@nb_cuda.jit\n \n Review comment:\n   I would put the `jit()` call inside the test function rather than at module top-level.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-15T12:25:27.517+0000",
                    "updated": "2018-10-15T12:25:27.517+0000",
                    "started": "2018-10-15T12:25:27.517+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154271",
                    "issueId": "13189896"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/worklog/154272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #2732: ARROW-3451 [C++/Python] pyarrow and numba CUDA interop\nURL: https://github.com/apache/arrow/pull/2732#discussion_r225143589\n \n \n\n ##########\n File path: python/pyarrow/tests/test_cuda_numba_interop.py\n ##########\n @@ -0,0 +1,140 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+import pytest\n+import pyarrow as pa\n+import numpy as np\n+\n+dtypes = ['uint8', 'int16', 'float32']\n+cuda = pytest.importorskip(\"pyarrow.cuda\")\n+nb_cuda = pytest.importorskip(\"numba.cuda\")\n+\n+from numba.cuda.cudadrv.devicearray import DeviceNDArray  # noqa: E402\n+\n+\n+ctx = None\n+nb_ctx = None\n+\n+\n+def setup_module(module):\n+    # It turns out that for numba-pyarrow.cuda interop one should\n+    # create CUDA context using numba context manager.\n+\n+    if 0:\n+        # At some point tests will fail\n \n Review comment:\n   Does this mean the interoperability doesn't really work in this direction? What is the issue exactly?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-10-15T12:25:27.521+0000",
                    "updated": "2018-10-15T12:25:27.521+0000",
                    "started": "2018-10-15T12:25:27.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "154272",
                    "issueId": "13189896"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 76800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@75e801b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@aa7eb04[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64ee0366[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@51a43b34[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@84c87ea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7be84d1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@135f5273[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@63d2a6b7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f4d0ef0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7ca68bc4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@150392e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@631279e0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 76800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Oct 24 11:00:45 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-10-24T11:00:45.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3451/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-10-06T14:45:56.000+0000",
        "updated": "2018-10-24T11:00:56.000+0000",
        "timeoriginalestimate": null,
        "description": "Requires ARROW-1423 and probably some other glue to bridge the library internals",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "21h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 76800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Allocate CUDA memory from a CUcontext created by numba.cuda",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13189896/comment/16662114",
                    "id": "16662114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 2732\n[https://github.com/apache/arrow/pull/2732]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2018-10-24T11:00:45.343+0000",
                    "updated": "2018-10-24T11:00:45.343+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3ywtb:",
        "customfield_12314139": null
    }
}