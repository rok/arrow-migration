{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13125304",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13125304",
    "key": "ARROW-1929",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1929/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6484aece[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5313feaa[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@494ca80d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@566e920[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3299dd4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@778a4fa6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5baa8d9a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@69374026[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26bfa7e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@36d3be7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ca4b04d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5fc1e78f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 05 19:20:55 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-05T19:20:53.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1929/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-12-15T18:53:58.000+0000",
        "updated": "2018-03-05T19:20:55.000+0000",
        "timeoriginalestimate": null,
        "description": "see https://github.com/apache/parquet-cpp/pull/426 and comments within",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Move various Arrow testing utility code from Parquet to Arrow codebase",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13125304/comment/16385382",
                    "id": "16385382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1697: ARROW-1929: [C++] Copy over testing utility code from PARQUET-1092\nURL: https://github.com/apache/arrow/pull/1697\n \n \n   This code was introduced in parquet-cpp in https://github.com/apache/parquet-cpp/pull/426\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:57:11.443+0000",
                    "updated": "2018-03-04T20:57:11.443+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13125304/comment/16386586",
                    "id": "16386586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1697: ARROW-1929: [C++] Copy over testing utility code from PARQUET-1092\nURL: https://github.com/apache/arrow/pull/1697#issuecomment-370532118\n \n \n   Merging, the Travis CI failure appears transient: https://travis-ci.org/apache/arrow/jobs/349366666#L5479\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:20:31.510+0000",
                    "updated": "2018-03-05T19:20:31.510+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13125304/comment/16386587",
                    "id": "16386587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1697\n[https://github.com/apache/arrow/pull/1697]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-05T19:20:53.151+0000",
                    "updated": "2018-03-05T19:20:53.151+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13125304/comment/16386588",
                    "id": "16386588",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1697: ARROW-1929: [C++] Copy over testing utility code from PARQUET-1092\nURL: https://github.com/apache/arrow/pull/1697\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array-test.cc b/cpp/src/arrow/array-test.cc\nindex c3ac08286..bda1946c6 100644\n--- a/cpp/src/arrow/array-test.cc\n+++ b/cpp/src/arrow/array-test.cc\n@@ -2480,19 +2480,19 @@ TEST_F(TestListArray, TestFromArrays) {\n \n   ListArray expected1(list_type, length, offsets1->data()->buffers[1], values,\n                       offsets1->data()->buffers[0], 0);\n-  AssertArraysEqual(expected1, *list1);\n+  test::AssertArraysEqual(expected1, *list1);\n \n   // Use null bitmap from offsets3, but clean offsets from non-null version\n   ListArray expected3(list_type, length, offsets1->data()->buffers[1], values,\n                       offsets3->data()->buffers[0], 1);\n-  AssertArraysEqual(expected3, *list3);\n+  test::AssertArraysEqual(expected3, *list3);\n \n   // Check that the last offset bit is zero\n   ASSERT_TRUE(BitUtil::BitNotSet(list3->null_bitmap()->data(), length + 1));\n \n   ListArray expected4(list_type, length, offsets2->data()->buffers[1], values,\n                       offsets4->data()->buffers[0], 1);\n-  AssertArraysEqual(expected4, *list4);\n+  test::AssertArraysEqual(expected4, *list4);\n \n   // Test failure modes\n \ndiff --git a/cpp/src/arrow/table-test.cc b/cpp/src/arrow/table-test.cc\nindex af7441682..24c8d5e15 100644\n--- a/cpp/src/arrow/table-test.cc\n+++ b/cpp/src/arrow/table-test.cc\n@@ -116,11 +116,11 @@ TEST_F(TestChunkedArray, SliceEquals) {\n \n   std::shared_ptr<ChunkedArray> slice = one_->Slice(125, 50);\n   ASSERT_EQ(slice->length(), 50);\n-  ASSERT_TRUE(slice->Equals(one_->Slice(125, 50)));\n+  test::AssertChunkedEqual(*one_->Slice(125, 50), *slice);\n \n   std::shared_ptr<ChunkedArray> slice2 = one_->Slice(75)->Slice(25)->Slice(25, 50);\n   ASSERT_EQ(slice2->length(), 50);\n-  ASSERT_TRUE(slice2->Equals(slice));\n+  test::AssertChunkedEqual(*slice, *slice2);\n }\n \n class TestColumn : public TestChunkedArray {\n@@ -390,7 +390,7 @@ TEST_F(TestTable, ConcatenateTables) {\n \n   ASSERT_OK(ConcatenateTables({t1, t2}, &result));\n   ASSERT_OK(Table::FromRecordBatches({batch1, batch2}, &expected));\n-  ASSERT_TRUE(result->Equals(*expected));\n+  test::AssertTablesEqual(*expected, *result);\n \n   // Error states\n   std::vector<std::shared_ptr<Table>> empty_tables;\ndiff --git a/cpp/src/arrow/test-util.h b/cpp/src/arrow/test-util.h\nindex 1a3480848..ab68fd442 100644\n--- a/cpp/src/arrow/test-util.h\n+++ b/cpp/src/arrow/test-util.h\n@@ -35,6 +35,7 @@\n #include \"arrow/memory_pool.h\"\n #include \"arrow/pretty_print.h\"\n #include \"arrow/status.h\"\n+#include \"arrow/table.h\"\n #include \"arrow/type.h\"\n #include \"arrow/type_traits.h\"\n #include \"arrow/util/bit-util.h\"\n@@ -77,6 +78,18 @@ namespace arrow {\n \n using ArrayVector = std::vector<std::shared_ptr<Array>>;\n \n+#define ASSERT_ARRAYS_EQUAL(LEFT, RIGHT)                                               \\\n+  do {                                                                                 \\\n+    if (!(LEFT).Equals((RIGHT))) {                                                     \\\n+      std::stringstream pp_result;                                                     \\\n+      std::stringstream pp_expected;                                                   \\\n+                                                                                       \\\n+      EXPECT_OK(PrettyPrint(RIGHT, 0, &pp_result));                                    \\\n+      EXPECT_OK(PrettyPrint(LEFT, 0, &pp_expected));                                   \\\n+      FAIL() << \"Got: \\n\" << pp_result.str() << \"\\nExpected: \\n\" << pp_expected.str(); \\\n+    }                                                                                  \\\n+  } while (false)\n+\n namespace test {\n \n template <typename T, typename U>\n@@ -288,6 +301,62 @@ Status MakeRandomBytePoolBuffer(int64_t length, MemoryPool* pool,\n   return Status::OK();\n }\n \n+void AssertArraysEqual(const Array& expected, const Array& actual) {\n+  ASSERT_ARRAYS_EQUAL(expected, actual);\n+}\n+\n+void AssertChunkedEqual(const ChunkedArray& expected, const ChunkedArray& actual) {\n+  ASSERT_EQ(expected.num_chunks(), actual.num_chunks()) << \"# chunks unequal\";\n+  if (!actual.Equals(expected)) {\n+    std::stringstream pp_result;\n+    std::stringstream pp_expected;\n+\n+    for (int i = 0; i < actual.num_chunks(); ++i) {\n+      auto c1 = actual.chunk(i);\n+      auto c2 = expected.chunk(i);\n+      if (!c1->Equals(*c2)) {\n+        EXPECT_OK(::arrow::PrettyPrint(*c1, 0, &pp_result));\n+        EXPECT_OK(::arrow::PrettyPrint(*c2, 0, &pp_expected));\n+        FAIL() << \"Chunk \" << i << \" Got: \" << pp_result.str()\n+               << \"\\nExpected: \" << pp_expected.str();\n+      }\n+    }\n+  }\n+}\n+\n+void PrintColumn(const Column& col, std::stringstream* ss) {\n+  const ChunkedArray& carr = *col.data();\n+  for (int i = 0; i < carr.num_chunks(); ++i) {\n+    auto c1 = carr.chunk(i);\n+    *ss << \"Chunk \" << i << std::endl;\n+    EXPECT_OK(::arrow::PrettyPrint(*c1, 0, ss));\n+    *ss << std::endl;\n+  }\n+}\n+\n+void AssertTablesEqual(const Table& expected, const Table& actual,\n+                       bool same_chunk_layout = true) {\n+  ASSERT_EQ(expected.num_columns(), actual.num_columns());\n+\n+  if (same_chunk_layout) {\n+    for (int i = 0; i < actual.num_columns(); ++i) {\n+      AssertChunkedEqual(*expected.column(i)->data(), *actual.column(i)->data());\n+    }\n+  } else {\n+    std::stringstream ss;\n+    if (!actual.Equals(expected)) {\n+      for (int i = 0; i < expected.num_columns(); ++i) {\n+        ss << \"Actual column \" << i << std::endl;\n+        PrintColumn(*actual.column(i), &ss);\n+\n+        ss << \"Expected column \" << i << std::endl;\n+        PrintColumn(*expected.column(i), &ss);\n+      }\n+      FAIL() << ss.str();\n+    }\n+  }\n+}\n+\n }  // namespace test\n \n template <typename TYPE, typename C_TYPE>\n@@ -352,26 +421,10 @@ Status MakeArray(const std::vector<uint8_t>& valid_bytes, const std::vector<T>&\n   return builder->Finish(out);\n }\n \n-#define ASSERT_ARRAYS_EQUAL(LEFT, RIGHT)                                               \\\n-  do {                                                                                 \\\n-    if (!(LEFT).Equals((RIGHT))) {                                                     \\\n-      std::stringstream pp_result;                                                     \\\n-      std::stringstream pp_expected;                                                   \\\n-                                                                                       \\\n-      EXPECT_OK(PrettyPrint(RIGHT, 0, &pp_result));                                    \\\n-      EXPECT_OK(PrettyPrint(LEFT, 0, &pp_expected));                                   \\\n-      FAIL() << \"Got: \\n\" << pp_result.str() << \"\\nExpected: \\n\" << pp_expected.str(); \\\n-    }                                                                                  \\\n-  } while (false)\n-\n #define DECL_T() typedef typename TestFixture::T T;\n \n #define DECL_TYPE() typedef typename TestFixture::Type Type;\n \n-void AssertArraysEqual(const Array& expected, const Array& actual) {\n-  ASSERT_ARRAYS_EQUAL(expected, actual);\n-}\n-\n #define ASSERT_BATCHES_EQUAL(LEFT, RIGHT)    \\\n   do {                                       \\\n     if (!(LEFT).ApproxEquals(RIGHT)) {       \\\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:20:55.374+0000",
                    "updated": "2018-03-05T19:20:55.374+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3nyqf:",
        "customfield_12314139": null
    }
}