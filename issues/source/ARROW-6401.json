{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13254036",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036",
    "key": "ARROW-6401",
    "fields": {
        "parent": {
            "id": "13084069",
            "key": "ARROW-1175",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13084069",
            "fields": {
                "summary": "[Java] Implement/test dictionary-encoded subfields",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=tianchen92",
            "name": "tianchen92",
            "key": "tianchen92",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tianchen92&avatarId=40800",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tianchen92&avatarId=40800",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tianchen92&avatarId=40800",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tianchen92&avatarId=40800"
            },
            "displayName": "Ji Liu",
            "active": true,
            "timeZone": "Asia/Gaza"
        },
        "aggregateprogress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13200,
            "total": 13200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6401/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243\n \n \n   Related to [ARROW-6401](https://issues.apache.org/jira/browse/ARROW-6401).\r\n   Implement dictionary-encoded subfields for Struct type.\r\n   Each child vector will have a dictionary, the dictionary vector is struct type and holds all dictionaries.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:08:22.730+0000",
                    "updated": "2019-08-31T03:08:22.730+0000",
                    "started": "2019-08-31T03:08:22.729+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304714",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319709824\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    NonNullableStructVector cloned = (NonNullableStructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, null);\n \n Review comment:\n   comment on this parameter.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:31:33.598+0000",
                    "updated": "2019-08-31T03:31:33.598+0000",
                    "started": "2019-08-31T03:31:33.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304719",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319709824\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    NonNullableStructVector cloned = (NonNullableStructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, null);\n \n Review comment:\n   provide a lable for \"null\"\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:33:45.541+0000",
                    "updated": "2019-08-31T03:33:45.541+0000",
                    "started": "2019-08-31T03:33:45.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304720",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304721",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319709936\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n \n Review comment:\n   I think we should limit this to StructVector for now.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:38:00.385+0000",
                    "updated": "2019-08-31T03:38:00.385+0000",
                    "started": "2019-08-31T03:38:00.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304721",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319710048\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n \n Review comment:\n   Does it mean NonNullableStructVector should not call cloneVector? Is there any special reason?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:44:50.482+0000",
                    "updated": "2019-08-31T03:44:50.482+0000",
                    "started": "2019-08-31T03:44:50.482+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304723",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319710072\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n \n Review comment:\n   I don't think this is how dictionaries should be expected to be passed in.  For a given  StructVector each of its vectors might be dictionary encodable or not dictionary encodable.  You propably want to pass in a DictionaryProvider instead and the encode interface should take a mapping from column to dictionary to do the encoding properly.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:52:44.184+0000",
                    "updated": "2019-08-31T03:52:44.184+0000",
                    "started": "2019-08-31T03:52:44.183+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304730",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319709941\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    NonNullableStructVector cloned = (NonNullableStructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, null);\n+\n+    if (vector instanceof StructVector) {\n \n Review comment:\n   I thinkew createNewSingleVector will always return StructVector?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:52:44.186+0000",
                    "updated": "2019-08-31T03:52:44.186+0000",
                    "started": "2019-08-31T03:52:44.186+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304731",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304733",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r319710229\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,142 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.complex.NonNullableStructVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link org.apache.arrow.vector.complex.NonNullableStructVector}.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final List<DictionaryHashTable> hashTables;\n+  private final Dictionary dictionary;\n+  private final BufferAllocator allocator;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(Dictionary dictionary, BufferAllocator allocator) {\n+    this.dictionary = dictionary;\n+    this.allocator = allocator;\n+    NonNullableStructVector dictVector = (NonNullableStructVector) dictionary.getVector();\n+    hashTables = new ArrayList<>();\n+    for (int i = 0; i < dictVector.getChildFieldNames().size(); i++) {\n+      hashTables.add(new DictionaryHashTable(getChildVector(dictVector, i)));\n+    }\n+  }\n+\n+  private FieldVector getChildVector(NonNullableStructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private NonNullableStructVector cloneVector(NonNullableStructVector vector) {\n \n Review comment:\n   This is just my opinion, but I think we should only be dealing with FieldVectors in general.  Special casing to handle non-field vectors doesn't seem right to me.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T03:54:21.885+0000",
                    "updated": "2019-08-31T03:54:21.885+0000",
                    "started": "2019-08-31T03:54:21.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304733",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304785",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#issuecomment-526802782\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=h1) Report\n   > Merging [#5243](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/157b179812adb8f29e5966682ff1937f85ce192a?src=pr&el=desc) will **increase** coverage by `2.02%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5243/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5243      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.67%   +2.02%     \n   ==========================================\n     Files        1033      693     -340     \n     Lines      148463   104104   -44359     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       130118    93351   -36767     \n   + Misses      17983    10753    -7230     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWRfYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uX2J1aWxkZXIuY2M=) | `95.54% <0%> (-1.49%)` | :arrow_down: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `68.04% <0%> (-0.61%)` | :arrow_down: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `94.02% <0%> (-0.6%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/server.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmNj) | `88.28% <0%> (-0.43%)` | :arrow_down: |\n   | [python/pyarrow/\\_flight.pyx](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvX2ZsaWdodC5weXg=) | `53.42% <0%> (-0.37%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/test\\_util.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdGVzdF91dGlsLmNj) | `87.79% <0%> (-0.01%)` | :arrow_down: |\n   | [cpp/src/arrow/python/flight.h](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0Lmg=) | `77.77% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `92.52% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [353 more](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=footer). Last update [157b179...421f2dd](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-31T05:50:28.406+0000",
                    "updated": "2019-08-31T05:50:28.406+0000",
                    "started": "2019-08-31T05:50:28.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304785",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304936",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#issuecomment-526882279\n \n \n   @emkornfield Thanks Micah, the suggestion that child vector could be either encodable or not is reasonable, I didn't thought that way before. I updated this PR.\r\n   And you are right, it's time to consider the relationships between several encoders as well as implement union sub encoding I think.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-01T03:18:02.167+0000",
                    "updated": "2019-09-01T03:18:02.167+0000",
                    "started": "2019-09-01T03:18:02.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304936",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/304939",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#issuecomment-526802782\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=h1) Report\n   > Merging [#5243](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/157b179812adb8f29e5966682ff1937f85ce192a?src=pr&el=desc) will **increase** coverage by `2.03%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5243/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5243      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.67%   +2.03%     \n   ==========================================\n     Files        1033      693     -340     \n     Lines      148463   104137   -44326     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       130118    93387   -36731     \n   + Misses      17983    10750    -7233     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWRfYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [cpp/src/arrow/csv/column\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9jc3YvY29sdW1uX2J1aWxkZXIuY2M=) | `95.54% <0%> (-1.49%)` | :arrow_down: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `68.04% <0%> (-0.61%)` | :arrow_down: |\n   | [cpp/src/arrow/type.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmNj) | `94.02% <0%> (-0.6%)` | :arrow_down: |\n   | [cpp/src/parquet/encoding.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2VuY29kaW5nLmNj) | `92.37% <0%> (-0.5%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/server.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvc2VydmVyLmNj) | `88.28% <0%> (-0.43%)` | :arrow_down: |\n   | [cpp/src/arrow/flight/test\\_util.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9mbGlnaHQvdGVzdF91dGlsLmNj) | `87.74% <0%> (-0.06%)` | :arrow_down: |\n   | [cpp/src/arrow/python/flight.h](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZmxpZ2h0Lmg=) | `77.77% <0%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/arrow/type.h](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90eXBlLmg=) | `92.52% <0%> (\u00f8)` | :arrow_up: |\n   | ... and [358 more](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=footer). Last update [157b179...e8e8266](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-01T04:25:36.134+0000",
                    "updated": "2019-09-01T04:25:36.134+0000",
                    "started": "2019-09-01T04:25:36.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "304939",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/307667",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321604922\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n \n Review comment:\n   please add javadoc for columnToDictionary.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-06T07:19:54.539+0000",
                    "updated": "2019-09-06T07:19:54.539+0000",
                    "started": "2019-09-06T07:19:54.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "307667",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/307668",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321605319\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n+    final int valueCount = vector.getValueCount();\n+    final int childCount = vector.getChildrenFromFields().size();\n+\n+    List<Field> childrenFields = new ArrayList<>();\n+\n+    // initialize child fields.\n+    for (int i = 0; i < childCount; i++) {\n+      FieldVector childVector = getChildVector(vector, i);\n+      Long dictionaryId = columnToDictionaryId.get(i);\n+      // A null dictionaryId indicates the child vector shouldn't be encoded.\n+      if (dictionaryId == null) {\n+        childrenFields.add(childVector.getField());\n+      } else {\n+        Dictionary dictionary = provider.lookup(dictionaryId);\n+        Preconditions.checkNotNull(dictionary, \"Dictionary not found with id:\" + dictionaryId);\n+        FieldType indexFieldType = new FieldType(childVector.getField().isNullable(),\n+            dictionary.getEncoding().getIndexType(), dictionary.getEncoding());\n+        childrenFields.add(new Field(childVector.getField().getName(), indexFieldType, /*children=*/null));\n+      }\n+    }\n+\n+    // clone list vector and initialize data vector\n+    StructVector encoded = cloneVector(vector);\n \n Review comment:\n   not for this PR, but it would be nice if we could consolidate child field subencoding in one place by generically manipulating ComplexVectors.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-06T07:21:19.559+0000",
                    "updated": "2019-09-06T07:21:19.559+0000",
                    "started": "2019-09-06T07:21:19.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "307668",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/307690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321620451\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n+    final int valueCount = vector.getValueCount();\n+    final int childCount = vector.getChildrenFromFields().size();\n+\n+    List<Field> childrenFields = new ArrayList<>();\n+\n+    // initialize child fields.\n+    for (int i = 0; i < childCount; i++) {\n+      FieldVector childVector = getChildVector(vector, i);\n+      Long dictionaryId = columnToDictionaryId.get(i);\n+      // A null dictionaryId indicates the child vector shouldn't be encoded.\n+      if (dictionaryId == null) {\n+        childrenFields.add(childVector.getField());\n+      } else {\n+        Dictionary dictionary = provider.lookup(dictionaryId);\n+        Preconditions.checkNotNull(dictionary, \"Dictionary not found with id:\" + dictionaryId);\n+        FieldType indexFieldType = new FieldType(childVector.getField().isNullable(),\n+            dictionary.getEncoding().getIndexType(), dictionary.getEncoding());\n+        childrenFields.add(new Field(childVector.getField().getName(), indexFieldType, /*children=*/null));\n+      }\n+    }\n+\n+    // clone list vector and initialize data vector\n+    StructVector encoded = cloneVector(vector);\n \n Review comment:\n   Sure, I'll add it to my TODO list.\r\n   Could you give more description how to do this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-06T08:05:21.407+0000",
                    "updated": "2019-09-06T08:05:21.407+0000",
                    "started": "2019-09-06T08:05:21.407+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "307690",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/307691",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321621093\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n \n Review comment:\n   fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-06T08:07:09.926+0000",
                    "updated": "2019-09-06T08:07:09.926+0000",
                    "started": "2019-09-06T08:07:09.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "307691",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/308234",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T00:17:40.630+0000",
                    "updated": "2019-09-07T00:17:40.630+0000",
                    "started": "2019-09-07T00:17:40.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308234",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/308235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243\n \n \n   Related to [ARROW-6401](https://issues.apache.org/jira/browse/ARROW-6401).\r\n   Implement dictionary-encoded subfields for Struct type.\r\n   Each child vector will have a dictionary, the dictionary vector is struct type and holds all dictionaries.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T00:17:42.433+0000",
                    "updated": "2019-09-07T00:17:42.433+0000",
                    "started": "2019-09-07T00:17:42.433+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308235",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/308276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321953086\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n+    final int valueCount = vector.getValueCount();\n+    final int childCount = vector.getChildrenFromFields().size();\n+\n+    List<Field> childrenFields = new ArrayList<>();\n+\n+    // initialize child fields.\n+    for (int i = 0; i < childCount; i++) {\n+      FieldVector childVector = getChildVector(vector, i);\n+      Long dictionaryId = columnToDictionaryId.get(i);\n+      // A null dictionaryId indicates the child vector shouldn't be encoded.\n+      if (dictionaryId == null) {\n+        childrenFields.add(childVector.getField());\n+      } else {\n+        Dictionary dictionary = provider.lookup(dictionaryId);\n+        Preconditions.checkNotNull(dictionary, \"Dictionary not found with id:\" + dictionaryId);\n+        FieldType indexFieldType = new FieldType(childVector.getField().isNullable(),\n+            dictionary.getEncoding().getIndexType(), dictionary.getEncoding());\n+        childrenFields.add(new Field(childVector.getField().getName(), indexFieldType, /*children=*/null));\n+      }\n+    }\n+\n+    // clone list vector and initialize data vector\n+    StructVector encoded = cloneVector(vector);\n \n Review comment:\n   I would need to think about it a little bit and review the APIs, probably it could be done by using the APIs on the fieldvector to get children vector but there might be some functionality missing.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T03:16:45.521+0000",
                    "updated": "2019-09-07T03:16:45.521+0000",
                    "started": "2019-09-07T03:16:45.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308276",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/308277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on pull request #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#discussion_r321953222\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/dictionary/StructSubfieldEncoder.java\n ##########\n @@ -0,0 +1,184 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector.dictionary;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.apache.arrow.memory.BufferAllocator;\n+import org.apache.arrow.util.Preconditions;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.complex.StructVector;\n+import org.apache.arrow.vector.ipc.message.ArrowFieldNode;\n+import org.apache.arrow.vector.types.pojo.DictionaryEncoding;\n+import org.apache.arrow.vector.types.pojo.Field;\n+import org.apache.arrow.vector.types.pojo.FieldType;\n+import org.apache.arrow.vector.util.TransferPair;\n+\n+/**\n+ * Sub fields encoder/decoder for Dictionary encoded {@link StructVector}.\n+ * Notes that child vectors within struct vector can either be dictionary encodeable or not.\n+ */\n+public class StructSubfieldEncoder {\n+\n+  private final BufferAllocator allocator;\n+\n+  private final DictionaryProvider.MapDictionaryProvider provider;\n+  private final Map<Long, DictionaryHashTable> dictionaryIdToHashTable;\n+\n+  /**\n+   * Construct an instance.\n+   */\n+  public StructSubfieldEncoder(\n+      BufferAllocator allocator,\n+      DictionaryProvider.MapDictionaryProvider provider) {\n+\n+    this.allocator = allocator;\n+    this.provider = provider;\n+\n+    this.dictionaryIdToHashTable = new HashMap<>();\n+\n+    provider.getDictionaryIds().forEach(id ->\n+        dictionaryIdToHashTable.put(id, new DictionaryHashTable(provider.lookup(id).getVector())));\n+  }\n+\n+  private FieldVector getChildVector(StructVector vector, int index) {\n+    return vector.getChildrenFromFields().get(index);\n+  }\n+\n+  private StructVector cloneVector(StructVector vector) {\n+\n+    final FieldType fieldType = vector.getField().getFieldType();\n+    StructVector cloned = (StructVector) fieldType.createNewSingleVector(\n+        vector.getField().getName(), allocator, /*schemaCallback=*/null);\n+\n+    final ArrowFieldNode fieldNode = new ArrowFieldNode(vector.getValueCount(), vector.getNullCount());\n+    cloned.loadFieldBuffers(fieldNode, vector.getFieldBuffers());\n+\n+    return cloned;\n+  }\n+\n+  /**\n+   * Dictionary encodes subfields for complex vector with a provided dictionary.\n+   * The dictionary must contain all values in the sub fields vector.\n+   * @param vector vector to encode\n+   * @return dictionary encoded vector\n+   */\n+  public StructVector encode(StructVector vector, Map<Integer, Long> columnToDictionaryId) {\n+    final int valueCount = vector.getValueCount();\n+    final int childCount = vector.getChildrenFromFields().size();\n+\n+    List<Field> childrenFields = new ArrayList<>();\n+\n+    // initialize child fields.\n+    for (int i = 0; i < childCount; i++) {\n+      FieldVector childVector = getChildVector(vector, i);\n+      Long dictionaryId = columnToDictionaryId.get(i);\n+      // A null dictionaryId indicates the child vector shouldn't be encoded.\n+      if (dictionaryId == null) {\n+        childrenFields.add(childVector.getField());\n+      } else {\n+        Dictionary dictionary = provider.lookup(dictionaryId);\n+        Preconditions.checkNotNull(dictionary, \"Dictionary not found with id:\" + dictionaryId);\n+        FieldType indexFieldType = new FieldType(childVector.getField().isNullable(),\n+            dictionary.getEncoding().getIndexType(), dictionary.getEncoding());\n+        childrenFields.add(new Field(childVector.getField().getName(), indexFieldType, /*children=*/null));\n+      }\n+    }\n+\n+    // clone list vector and initialize data vector\n+    StructVector encoded = cloneVector(vector);\n \n Review comment:\n   Ok, if you have any updates, could just open a JIRA and assign it to me.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T03:21:11.872+0000",
                    "updated": "2019-09-07T03:21:11.872+0000",
                    "started": "2019-09-07T03:21:11.871+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308277",
                    "issueId": "13254036"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/worklog/308312",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5243: ARROW-6401: [Java] Implement dictionary-encoded subfields for Struct type\nURL: https://github.com/apache/arrow/pull/5243#issuecomment-526802782\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=h1) Report\n   > Merging [#5243](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/157b179812adb8f29e5966682ff1937f85ce192a?src=pr&el=desc) will **increase** coverage by `2.12%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5243/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5243      +/-   ##\n   ==========================================\n   + Coverage   87.64%   89.76%   +2.12%     \n   ==========================================\n     Files        1033      697     -336     \n     Lines      148463   105752   -42711     \n     Branches     1437        0    -1437     \n   ==========================================\n   - Hits       130118    94928   -35190     \n   + Misses      17983    10824    -7159     \n   + Partials      362        0     -362\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/dataset/scanner.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9kYXRhc2V0L3NjYW5uZXIuY2M=) | `73.52% <0%> (-26.48%)` | :arrow_down: |\n   | [cpp/src/gandiva/decimal\\_scalar.h](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9nYW5kaXZhL2RlY2ltYWxfc2NhbGFyLmg=) | `80% <0%> (-20%)` | :arrow_down: |\n   | [cpp/src/arrow/python/extension\\_type.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vZXh0ZW5zaW9uX3R5cGUuY2M=) | `72.82% <0%> (-3.85%)` | :arrow_down: |\n   | [cpp/src/arrow/testing/util.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy90ZXN0aW5nL3V0aWwuY2M=) | `92.3% <0%> (-3.2%)` | :arrow_down: |\n   | [cpp/src/arrow/filesystem/s3fs.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9maWxlc3lzdGVtL3MzZnMuY2M=) | `89.39% <0%> (-1.91%)` | :arrow_down: |\n   | [cpp/src/arrow/json/converter.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NvbnZlcnRlci5jYw==) | `90.05% <0%> (-1.76%)` | :arrow_down: |\n   | [cpp/src/arrow/json/chunked\\_builder.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9qc29uL2NodW5rZWRfYnVpbGRlci5jYw==) | `79.91% <0%> (-1.68%)` | :arrow_down: |\n   | [python/pyarrow/types.pxi](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdHlwZXMucHhp) | `67.42% <0%> (-1.23%)` | :arrow_down: |\n   | [cpp/src/parquet/encoding.cc](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wYXJxdWV0L2VuY29kaW5nLmNj) | `91.69% <0%> (-1.17%)` | :arrow_down: |\n   | [python/pyarrow/table.pxi](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGFibGUucHhp) | `86.71% <0%> (-0.74%)` | :arrow_down: |\n   | ... and [421 more](https://codecov.io/gh/apache/arrow/pull/5243/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=footer). Last update [157b179...5a24ae7](https://codecov.io/gh/apache/arrow/pull/5243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-07T07:33:27.719+0000",
                    "updated": "2019-09-07T07:33:27.719+0000",
                    "started": "2019-09-07T07:33:27.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "308312",
                    "issueId": "13254036"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 13200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@bc0e88b[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e001903[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fa6010b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@120c1fd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15c7c9ea[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@27b11a12[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5860e9b6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5f48e46e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@746bfef4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5ba50be1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4d7747a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ca48b1a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Sep 17 05:17:07 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-17T05:17:07.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6401/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-31T03:00:51.000+0000",
        "updated": "2019-09-17T05:17:07.000+0000",
        "timeoriginalestimate": null,
        "description": "Implement dictionary-encoded subfields for Struct type.\r\n\r\nEach child vector will have a dictionary, the dictionary vector is struct type and holds all dictionaries.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Implement dictionary-encoded subfields for Struct type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13254036/comment/16931103",
                    "id": "16931103",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5243\n[https://github.com/apache/arrow/pull/5243]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-09-17T05:17:07.199+0000",
                    "updated": "2019-09-17T05:17:07.199+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z067p4:",
        "customfield_12314139": null
    }
}