{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13142106",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106",
    "key": "ARROW-2245",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2245/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@29cb1fdd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53f1002e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3467d8f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6fcc5e20[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55a5929b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@8c84a21[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@262b382[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@f52c0b0[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@761aaa8b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3c496f2b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b203583[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@326e3717[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Mar 04 19:45:48 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-04T19:45:48.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2245/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-03-02T14:00:51.000+0000",
        "updated": "2018-03-04T19:45:48.000+0000",
        "timeoriginalestimate": null,
        "description": "Although we are not in a theoretical way the authoritative source of parquet-cpp with the pyarrow manylinux1 wheel, in practical way we actually are this and statically linking parquet-cpp can introduce some problems that dynamically linking it does not (e.g. duplicate unloading of the library if you include it in a Python wheel and in the process that creates the Python interpreter).\u00a0",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Revert static linkage of parquet-cpp in manylinux1 wheel",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16383702",
                    "id": "16383702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Switching the linkage back to dynamic makes the import of {{pyarrow.parquet}} segfault:\r\n{code:java}\r\n#0 0x00007f4906e32928 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::basic_string<char, std::char_traits<char>,\r\nstd::allocator<char> > const&) () from /usr/lib64/libstdc++.so.6\r\n(gdb) bt\r\n#0 0x00007f4906e32928 in std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::basic_string<char, std::char_traits<char>,\r\nstd::allocator<char> > const&) () from /usr/lib64/libstdc++.so.6\r\n#1 0x00007f49074555bc in boost::re_detail_106501::cpp_regex_traits_char_layer<char>::init() () from /arrow/python/pyarrow/libparquet.so.1\r\n#2 0x00007f4907446ed3 in boost::object_cache<boost::re_detail_106501::cpp_regex_traits_base<char>, boost::re_detail_106501::cpp_regex_traits_implementation<c\r\nhar> >::do_get(boost::re_detail_106501::cpp_regex_traits_base<char> const&, unsigned long) () from /arrow/python/pyarrow/libparquet.so.1\r\n#3 0x00007f4907453663 in boost::basic_regex<char, boost::regex_traits<char, boost::cpp_regex_traits<char> > >::do_assign(char const*, char const*, unsigned i\r\nnt) () from /arrow/python/pyarrow/libparquet.so.1\r\n#4 0x00007f49073e8e5d in parquet::ApplicationVersion::ApplicationVersion(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) ()\r\nfrom /arrow/python/pyarrow/libparquet.so.1\r\n#5 0x00007f490735fa00 in _GLOBAL__sub_I_metadata.cc () from /arrow/python/pyarrow/libparquet.so.1\r\n#6 0x00007f490ff7d4f3 in call_init () from /lib64/ld-linux-x86-64.so.2\r\n#7 0x00007f490ff7d5b5 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2\r\n#8 0x00007f490ff81054 in dl_open_worker () from /lib64/ld-linux-x86-64.so.2\r\n#9 0x00007f490ff7d136 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\r\n#10 0x00007f490ff808bc in _dl_open () from /lib64/ld-linux-x86-64.so.2\r\n#11 0x00007f490fb50f9a in dlopen_doit () from /lib64/libdl.so.2\r\n#12 0x00007f490ff7d136 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2\r\n#13 0x00007f490fb5150d in _dlerror_run () from /lib64/libdl.so.2\r\n#14 0x00007f490fb50f11 in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2\r\n#15 0x00000000004faf6c in _PyImport_GetDynLoadFunc ()\r\n#16 0x00000000004d4b7e in _PyImport_LoadDynamicModule ()\r\n#17 0x00000000004d2227 in ?? ()\r\n#18 0x00000000004d332e in PyImport_ImportModuleLevel ()\r\n#19 0x00000000004af4db in ?? ()\r\n#20 0x0000000000422f8a in PyObject_Call ()\r\n#21 0x00000000004b547b in PyEval_EvalFrameEx ()\r\n#22 0x00000000004ba978 in PyEval_EvalCodeEx ()\r\n#23 0x00000000004baaa2 in PyEval_EvalCode ()\r\n#24 0x00000000004d1048 in PyImport_ExecCodeModuleEx ()\r\n#25 0x00000000004d1396 in ?? (){code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-03-02T15:39:26.453+0000",
                    "updated": "2018-03-02T15:39:26.453+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16383705",
                    "id": "16383705",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "I'm wondering a bit why this is an issue in the {{manylinux1}} setting but not in the conda packages.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-03-02T15:40:50.862+0000",
                    "updated": "2018-03-02T15:40:50.862+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16384149",
                    "id": "16384149",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "It looks like this is the same underlying issue as ARROW-2247. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-02T21:04:51.090+0000",
                    "updated": "2018-03-02T21:04:51.090+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16384152",
                    "id": "16384152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Might sound crazy but we might want to bundle Boost shared library dependencies in the wheels to avoid the static linking issues",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-02T21:07:27.989+0000",
                    "updated": "2018-03-02T21:07:27.989+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16384184",
                    "id": "16384184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Already working on that, including the namespacing of boost inside the wheel so that it doesn't collide with other Boost installations ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-03-02T21:32:58.002+0000",
                    "updated": "2018-03-02T21:32:58.002+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16385170",
                    "id": "16385170",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy opened a new pull request #1692: ARROW-2245: ARROW-2246: [Python] Revert static linkage of parquet-cpp in manylinux1 wheel\nURL: https://github.com/apache/arrow/pull/1692\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T14:50:39.751+0000",
                    "updated": "2018-03-04T14:50:39.751+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16385315",
                    "id": "16385315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1692: ARROW-2245: ARROW-2246: [Python] Revert static linkage of parquet-cpp in manylinux1 wheel\nURL: https://github.com/apache/arrow/pull/1692\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/cmake_modules/ThirdpartyToolchain.cmake b/cpp/cmake_modules/ThirdpartyToolchain.cmake\nindex 4103af41b..c330e2ae3 100644\n--- a/cpp/cmake_modules/ThirdpartyToolchain.cmake\n+++ b/cpp/cmake_modules/ThirdpartyToolchain.cmake\n@@ -501,10 +501,11 @@ if (ARROW_JEMALLOC)\n   set(JEMALLOC_SHARED_LIB \"${JEMALLOC_PREFIX}/lib/libjemalloc${CMAKE_SHARED_LIBRARY_SUFFIX}\")\n   set(JEMALLOC_STATIC_LIB \"${JEMALLOC_PREFIX}/lib/libjemalloc_pic${CMAKE_STATIC_LIBRARY_SUFFIX}\")\n   set(JEMALLOC_VENDORED 1)\n+  # We need to disable TLS or otherwise C++ exceptions won't work anymore.\n   ExternalProject_Add(jemalloc_ep\n     URL ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/jemalloc/${JEMALLOC_VERSION}.tar.gz\n     PATCH_COMMAND touch doc/jemalloc.3 doc/jemalloc.html\n-    CONFIGURE_COMMAND ./autogen.sh \"--prefix=${JEMALLOC_PREFIX}\" \"--with-jemalloc-prefix=je_arrow_\" \"--with-private-namespace=je_arrow_private_\"\n+    CONFIGURE_COMMAND ./autogen.sh \"--prefix=${JEMALLOC_PREFIX}\" \"--with-jemalloc-prefix=je_arrow_\" \"--with-private-namespace=je_arrow_private_\" \"--disable-tls\"\n     ${EP_LOG_OPTIONS}\n     BUILD_IN_SOURCE 1\n     BUILD_COMMAND ${MAKE}\ndiff --git a/cpp/src/plasma/CMakeLists.txt b/cpp/src/plasma/CMakeLists.txt\nindex 3448d009c..bc00f9806 100644\n--- a/cpp/src/plasma/CMakeLists.txt\n+++ b/cpp/src/plasma/CMakeLists.txt\n@@ -124,6 +124,16 @@ endif()\n add_executable(plasma_store store.cc)\n target_link_libraries(plasma_store plasma_static ${PLASMA_LINK_LIBS})\n \n+if (ARROW_RPATH_ORIGIN)\n+  if (APPLE)\n+    set(_lib_install_rpath \"@loader_path\")\n+  else()\n+    set(_lib_install_rpath \"\\$ORIGIN\")\n+  endif()\n+  set_target_properties(plasma_store PROPERTIES\n+      INSTALL_RPATH ${_lib_install_rpath})\n+endif()\n+\n # Headers: top level\n install(FILES\n   common.h\ndiff --git a/python/CMakeLists.txt b/python/CMakeLists.txt\nindex e9de08ba1..72294d494 100644\n--- a/python/CMakeLists.txt\n+++ b/python/CMakeLists.txt\n@@ -66,7 +66,7 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n     ON)\n   option(PYARROW_BOOST_USE_SHARED\n     \"Rely on boost shared libraries on linking static parquet\"\n-    OFF)\n+    ON)\n   option(PYARROW_BUILD_PLASMA\n     \"Build the PyArrow Plasma integration\"\n     OFF)\n@@ -235,6 +235,24 @@ function(bundle_arrow_implib library_path)\n       COPYONLY)\n endfunction(bundle_arrow_implib)\n \n+function(bundle_boost_lib library_path)\n+  get_filename_component(LIBRARY_NAME ${${library_path}} NAME)\n+  get_filename_component(LIBRARY_NAME_WE ${${library_path}} NAME_WE)\n+  configure_file(${${library_path}}\n+      ${BUILD_OUTPUT_ROOT_DIRECTORY}/${LIBRARY_NAME}\n+      COPYONLY)\n+  set(Boost_SO_VERSION \"${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}\")\n+  if (APPLE)\n+    configure_file(${${library_path}}\n+        ${BUILD_OUTPUT_ROOT_DIRECTORY}/${LIBRARY_NAME_WE}.${Boost_SO_VERSION}${CMAKE_SHARED_LIBRARY_SUFFIX}\n+        COPYONLY)\n+  else()\n+    configure_file(${${library_path}}\n+        ${BUILD_OUTPUT_ROOT_DIRECTORY}/${LIBRARY_NAME_WE}${CMAKE_SHARED_LIBRARY_SUFFIX}.${Boost_SO_VERSION}\n+        COPYONLY)\n+  endif()\n+endfunction()\n+\n # Always bundle includes\n file(COPY ${ARROW_INCLUDE_DIR}/arrow DESTINATION ${BUILD_OUTPUT_ROOT_DIRECTORY}/include)\n \n@@ -247,6 +265,15 @@ if (PYARROW_BUNDLE_ARROW_CPP)\n     ABI_VERSION ${ARROW_ABI_VERSION}\n     SO_VERSION ${ARROW_SO_VERSION})\n \n+  # boost\n+  if (PYARROW_BOOST_USE_SHARED)\n+    set(Boost_USE_STATIC_LIBS OFF)\n+    find_package(Boost COMPONENTS system filesystem regex REQUIRED)\n+    bundle_boost_lib(Boost_REGEX_LIBRARY)\n+    bundle_boost_lib(Boost_FILESYSTEM_LIBRARY)\n+    bundle_boost_lib(Boost_SYSTEM_LIBRARY)\n+  endif()\n+\n   if (MSVC)\n     bundle_arrow_implib(ARROW_SHARED_IMP_LIB)\n     bundle_arrow_implib(ARROW_PYTHON_SHARED_IMP_LIB)\ndiff --git a/python/manylinux1/Dockerfile-x86_64 b/python/manylinux1/Dockerfile-x86_64\nindex 62a089329..d48bd0d2c 100644\n--- a/python/manylinux1/Dockerfile-x86_64\n+++ b/python/manylinux1/Dockerfile-x86_64\n@@ -14,13 +14,13 @@\n # KIND, either express or implied.  See the License for the\n # specific language governing permissions and limitations\n # under the License.\n-FROM quay.io/xhochy/arrow_manylinux1_x86_64_base:ARROW-2212\n+FROM quay.io/xhochy/arrow_manylinux1_x86_64_base:ARROW-2245\n \n ADD arrow /arrow\n WORKDIR /arrow/cpp\n RUN mkdir build-plain\n WORKDIR /arrow/cpp/build-plain\n-RUN cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=ON -DARROW_BOOST_USE_SHARED=OFF -DARROW_JEMALLOC=ON -DARROW_RPATH_ORIGIN=ON -DARROW_JEMALLOC_USE_SHARED=OFF ..\n+RUN cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=ON -DARROW_BOOST_USE_SHARED=ON -DARROW_JEMALLOC=ON -DARROW_RPATH_ORIGIN=ON -DARROW_JEMALLOC_USE_SHARED=OFF -DBoost_NAMESPACE=arrow_boost -DBOOST_ROOT=/arrow_boost_dist ..\n RUN ninja install\n \n ADD scripts/check_arrow_visibility.sh /\n@@ -29,5 +29,5 @@ RUN /check_arrow_visibility.sh\n WORKDIR /\n RUN git clone https://github.com/apache/parquet-cpp.git\n WORKDIR /parquet-cpp\n-RUN ARROW_HOME=/arrow-dist cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DPARQUET_BUILD_TESTS=OFF -DPARQUET_BUILD_SHARED=OFF -DPARQUET_BUILD_STATIC=ON -DPARQUET_BOOST_USE_SHARED=OFF -GNinja .\n+RUN ARROW_HOME=/arrow-dist cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DPARQUET_BUILD_TESTS=OFF -DPARQUET_BUILD_SHARED=ON -DPARQUET_BUILD_STATIC=OFF -DPARQUET_BOOST_USE_SHARED=ON -DBoost_NAMESPACE=arrow_boost -DBOOST_ROOT=/arrow_boost_dist -GNinja .\n RUN ninja install\ndiff --git a/python/manylinux1/build_arrow.sh b/python/manylinux1/build_arrow.sh\nindex 5fd27c8d0..f83c75972 100755\n--- a/python/manylinux1/build_arrow.sh\n+++ b/python/manylinux1/build_arrow.sh\n@@ -38,11 +38,10 @@ cd /arrow/python\n # PyArrow build configuration\n export PYARROW_BUILD_TYPE='release'\n export PYARROW_WITH_PARQUET=1\n-export PYARROW_WITH_STATIC_PARQUET=1\n export PYARROW_WITH_PLASMA=1\n export PYARROW_BUNDLE_ARROW_CPP=1\n export PKG_CONFIG_PATH=/arrow-dist/lib64/pkgconfig\n-export PYARROW_CMAKE_OPTIONS='-DTHRIFT_HOME=/usr'\n+export PYARROW_CMAKE_OPTIONS='-DTHRIFT_HOME=/usr -DBoost_NAMESPACE=arrow_boost -DBOOST_ROOT=/arrow_boost_dist'\n # Ensure the target directory exists\n mkdir -p /io/dist\n \n@@ -60,14 +59,14 @@ for PYTHON_TUPLE in ${PYTHON_VERSIONS}; do\n     ARROW_BUILD_DIR=/arrow/cpp/build-PY${PYTHON}-${U_WIDTH}\n     mkdir -p \"${ARROW_BUILD_DIR}\"\n     pushd \"${ARROW_BUILD_DIR}\"\n-    PATH=\"${CPYTHON_PATH}/bin:$PATH\" cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=ON -DARROW_BOOST_USE_SHARED=OFF -DARROW_JEMALLOC=off -DARROW_RPATH_ORIGIN=ON -DARROW_JEMALLOC_USE_SHARED=OFF -DARROW_PYTHON=ON -DPythonInterp_FIND_VERSION=${PYTHON} -DARROW_PLASMA=ON -DARROW_ORC=ON ..\n-    make -j5 install\n+    PATH=\"${CPYTHON_PATH}/bin:$PATH\" cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DARROW_BUILD_TESTS=OFF -DARROW_BUILD_SHARED=ON -DARROW_BOOST_USE_SHARED=ON -DARROW_JEMALLOC=ON -DARROW_RPATH_ORIGIN=ON -DARROW_PYTHON=ON -DPythonInterp_FIND_VERSION=${PYTHON} -DARROW_PLASMA=ON -DARROW_ORC=ON -DBoost_NAMESPACE=arrow_boost -DBOOST_ROOT=/arrow_boost_dist -GNinja ..\n+    ninja install\n     popd\n \n     # Clear output directory\n     rm -rf dist/\n     echo \"=== (${PYTHON}) Building wheel ===\"\n-    PATH=\"$PATH:${CPYTHON_PATH}/bin\" $PYTHON_INTERPRETER setup.py build_ext --inplace --with-parquet --with-static-parquet --bundle-arrow-cpp\n+    PATH=\"$PATH:${CPYTHON_PATH}/bin\" $PYTHON_INTERPRETER setup.py build_ext --inplace --with-parquet --bundle-arrow-cpp\n     PATH=\"$PATH:${CPYTHON_PATH}/bin\" $PYTHON_INTERPRETER setup.py bdist_wheel\n \n     echo \"=== (${PYTHON}) Test the existence of optional modules ===\"\n@@ -83,7 +82,7 @@ for PYTHON_TUPLE in ${PYTHON_VERSIONS}; do\n     source /venv-test-${PYTHON}-${U_WIDTH}/bin/activate\n     pip install repaired_wheels/*.whl\n \n-    py.test -v -r sxX --durations=15 --parquet /venv-test-${PYTHON}-${U_WIDTH}/lib/*/site-packages/pyarrow\n+    py.test -v -r sxX --durations=15 --parquet ${VIRTUAL_ENV}/lib/*/site-packages/pyarrow\n     deactivate\n \n     mv repaired_wheels/*.whl /io/dist\ndiff --git a/python/manylinux1/scripts/build_boost.sh b/python/manylinux1/scripts/build_boost.sh\nindex 1a6ffd7eb..47d826251 100755\n--- a/python/manylinux1/scripts/build_boost.sh\n+++ b/python/manylinux1/scripts/build_boost.sh\n@@ -21,18 +21,22 @@ BOOST_VERSION_UNDERSCORE=${BOOST_VERSION//\\./_}\n \n wget --no-check-certificate https://dl.bintray.com/boostorg/release/${BOOST_VERSION}/source/boost_${BOOST_VERSION_UNDERSCORE}.tar.gz -O /boost_${BOOST_VERSION_UNDERSCORE}.tar.gz\n tar xf boost_${BOOST_VERSION_UNDERSCORE}.tar.gz\n+mkdir /arrow_boost\n pushd /boost_${BOOST_VERSION_UNDERSCORE}\n ./bootstrap.sh\n-./bjam cxxflags=-fPIC cflags=-fPIC variant=release link=static --prefix=/usr --with-filesystem --with-date_time --with-system --with-regex install\n+./b2 tools/bcp\n+./dist/bin/bcp --namespace=arrow_boost --namespace-alias filesystem date_time system regex build algorithm locale format /arrow_boost\n popd\n-rm -rf boost_${BOOST_VERSION_UNDERSCORE}.tar.gz boost_${BOOST_VERSION_UNDERSCORE}\n+\n+pushd /arrow_boost\n+ls -l\n+./bootstrap.sh\n+./bjam cxxflags='-std=c++11 -fPIC' cflags=-fPIC linkflags=\"-std=c++11\" variant=release link=shared --prefix=/arrow_boost_dist --with-filesystem --with-date_time --with-system --with-regex install\n+popd\n+rm -rf boost_${BOOST_VERSION_UNDERSCORE}.tar.gz boost_${BOOST_VERSION_UNDERSCORE} arrow_boost\n # Boost always install header-only parts but they also take up quite some space.\n # We don't need them in array, so don't persist them in the docker layer.\n-# phoenix 18.1 MiB\n-rm -r /usr/include/boost/phoenix\n # fusion 16.7 MiB\n-rm -r /usr/include/boost/fusion\n+rm -r /arrow_boost_dist/include/boost/fusion\n # spirit 8.2 MiB\n-rm -r /usr/include/boost/spirit\n-# geometry 6.0 MiB\n-rm -r /usr/include/boost/geometry\n+rm -r /arrow_boost_dist/include/boost/spirit\ndiff --git a/python/manylinux1/scripts/build_thrift.sh b/python/manylinux1/scripts/build_thrift.sh\nindex aaec4ad6b..451025c66 100755\n--- a/python/manylinux1/scripts/build_thrift.sh\n+++ b/python/manylinux1/scripts/build_thrift.sh\n@@ -34,9 +34,11 @@ cmake -DCMAKE_BUILD_TYPE=release \\\n     \"-DWITH_JAVA=OFF\" \\\n     \"-DWITH_PYTHON=OFF\" \\\n     \"-DWITH_CPP=ON\" \\\n-    \"-DWITH_STATIC_LIB=ON\" ..\n-make -j5\n-make install\n+    \"-DWITH_STATIC_LIB=ON\" \\\n+    -DBoost_NAMESPACE=arrow_boost \\\n+    -DBOOST_ROOT=/arrow_boost_dist \\\n+    -GNinja ..\n+ninja install\n popd\n popd\n rm -rf thrift-${THRIFT_VERSION}.tar.gz thrift-${THRIFT_VERSION}\ndiff --git a/python/setup.py b/python/setup.py\nindex 2a6326489..34d2d9079 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -120,7 +120,7 @@ def initialize_options(self):\n         self.with_static_parquet = strtobool(\n             os.environ.get('PYARROW_WITH_STATIC_PARQUET', '0'))\n         self.with_static_boost = strtobool(\n-            os.environ.get('PYARROW_WITH_STATIC_BOOST', '1'))\n+            os.environ.get('PYARROW_WITH_STATIC_BOOST', '0'))\n         self.with_plasma = strtobool(\n             os.environ.get('PYARROW_WITH_PLASMA', '0'))\n         self.with_orc = strtobool(\n@@ -255,6 +255,10 @@ def _run_cmake(self):\n                     move_shared_libs(build_prefix, build_lib, \"plasma\")\n                 if self.with_parquet and not self.with_static_parquet:\n                     move_shared_libs(build_prefix, build_lib, \"parquet\")\n+                if not self.with_static_boost:\n+                    move_shared_libs(build_prefix, build_lib, \"arrow_boost_filesystem\")\n+                    move_shared_libs(build_prefix, build_lib, \"arrow_boost_system\")\n+                    move_shared_libs(build_prefix, build_lib, \"arrow_boost_regex\")\n \n             print('Bundling includes: ' + pjoin(build_prefix, 'include'))\n             if os.path.exists(pjoin(build_lib, 'pyarrow', 'include')):\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T19:40:23.303+0000",
                    "updated": "2018-03-04T19:40:23.303+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13142106/comment/16385319",
                    "id": "16385319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1692\n[https://github.com/apache/arrow/pull/1692]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-04T19:45:48.201+0000",
                    "updated": "2018-03-04T19:45:48.201+0000"
                }
            ],
            "maxResults": 8,
            "total": 8,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qspb:",
        "customfield_12314139": null
    }
}