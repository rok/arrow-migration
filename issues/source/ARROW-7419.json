{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13275140",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140",
    "key": "ARROW-7419",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
            "name": "mrkn",
            "key": "mrkn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Kenta Murata",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7419/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 22,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/396489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521\n \n \n   This is to solve [ARROW-7419](https://issues.apache.org/jira/browse/ARROW-7419).\r\n   Adding python interface for SparseCSCMatrix.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-02T23:47:33.310+0000",
                    "updated": "2020-03-02T23:47:33.310+0000",
                    "started": "2020-03-02T23:47:33.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "396489",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/396490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#issuecomment-593682222\n \n \n   I will look into drying this a bit as it currently just doubles boilerplate.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-02T23:48:28.062+0000",
                    "updated": "2020-03-02T23:48:28.062+0000",
                    "started": "2020-03-02T23:48:28.061+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "396490",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/396501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#issuecomment-593692959\n \n \n   https://issues.apache.org/jira/browse/ARROW-7419\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-03T00:04:42.735+0000",
                    "updated": "2020-03-03T00:04:42.735+0000",
                    "started": "2020-03-03T00:04:42.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "396501",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#issuecomment-596424229\n \n \n   This is ready for review.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T09:36:40.597+0000",
                    "updated": "2020-03-09T09:36:40.597+0000",
                    "started": "2020-03-09T09:36:40.597+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400038",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389662863\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.cc\n ##########\n @@ -412,6 +438,35 @@ Status NdarraysToSparseCSRMatrix(MemoryPool* pool, PyObject* data_ao, PyObject*\n   return Status::OK();\n }\n \n+Status NdarraysToSparseCSCMatrix(MemoryPool* pool, PyObject* data_ao, PyObject* indptr_ao,\n \n Review comment:\n   Basically this is the same as `NdarraysToSparseCSRMatrix`, but creating a `SparseCSCIndex` rather than a `SparseCSRIndex`? Perhaps make a common templatized helper?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:36.626+0000",
                    "updated": "2020-03-09T13:35:36.626+0000",
                    "started": "2020-03-09T13:35:36.626+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400104",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400105",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389666594\n \n \n\n ##########\n File path: python/pyarrow/tensor.pxi\n ##########\n @@ -520,3 +520,184 @@ shape: {0.shape}\"\"\".format(self)\n     @property\n     def non_zero_length(self):\n         return self.stp.non_zero_length()\n+\n+cdef class SparseCSCMatrix:\n+    \"\"\"\n+    A sparse CSC tensor.\n \n Review comment:\n   \"matrix\" or \"tensor\"?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:36.743+0000",
                    "updated": "2020-03-09T13:35:36.743+0000",
                    "started": "2020-03-09T13:35:36.743+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400105",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389663978\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.h\n ##########\n @@ -65,10 +65,18 @@ ARROW_PYTHON_EXPORT Status\n SparseCOOTensorToNdarray(const std::shared_ptr<SparseCOOTensor>& sparse_tensor,\n                          PyObject* base, PyObject** out_data, PyObject** out_coords);\n \n+Status SparseCSXMatrixToNdarray(const std::shared_ptr<SparseTensor>& sparse_tensor,\n \n Review comment:\n   Is it useful to expose this?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:36.765+0000",
                    "updated": "2020-03-09T13:35:36.765+0000",
                    "started": "2020-03-09T13:35:36.765+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400106",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400107",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389669904\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n+\n+    data_result, indptr_result, indices_result = result.to_numpy()\n+    assert np.array_equal(data_result[:, 0], data)\n \n Review comment:\n   Why is `data_result[:, 0]` necessary?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:36.885+0000",
                    "updated": "2020-03-09T13:35:36.885+0000",
                    "started": "2020-03-09T13:35:36.885+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400107",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400108",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389670389\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n \n Review comment:\n   Don't you check the result type?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:36.888+0000",
                    "updated": "2020-03-09T13:35:36.888+0000",
                    "started": "2020-03-09T13:35:36.888+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400108",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400109",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389668309\n \n \n\n ##########\n File path: python/pyarrow/tensor.pxi\n ##########\n @@ -520,3 +520,184 @@ shape: {0.shape}\"\"\".format(self)\n     @property\n     def non_zero_length(self):\n         return self.stp.non_zero_length()\n+\n+cdef class SparseCSCMatrix:\n+    \"\"\"\n+    A sparse CSC tensor.\n+    \"\"\"\n+\n+    def __init__(self):\n+        raise TypeError(\"Do not call SparseCSCMatrix's constructor directly, \"\n+                        \"use one of the `pyarrow.SparseCSCMatrix.from_*` \"\n+                        \"functions instead.\")\n+\n+    cdef void init(self, const shared_ptr[CSparseCSCMatrix]& sp_sparse_tensor):\n+        self.sp_sparse_tensor = sp_sparse_tensor\n+        self.stp = sp_sparse_tensor.get()\n+        self.type = pyarrow_wrap_data_type(self.stp.type())\n+\n+    def __repr__(self):\n+        return \"\"\"<pyarrow.SparseCSCMatrix>\n+type: {0.type}\n+shape: {0.shape}\"\"\".format(self)\n+\n+    @classmethod\n+    def from_dense_numpy(cls, obj, dim_names=None):\n+        \"\"\"\n+        Convert numpy.ndarray to arrow::SparseCSCMatrix\n+        \"\"\"\n+        return cls.from_tensor(Tensor.from_numpy(obj, dim_names=dim_names))\n+\n+    @staticmethod\n+    def from_numpy(data, indptr, indices, shape, dim_names=None):\n+        \"\"\"\n+        Create arrow::SparseCSCMatrix from numpy.ndarrays\n+        \"\"\"\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef vector[int64_t] c_shape\n+        cdef vector[c_string] c_dim_names\n+\n+        for x in shape:\n+            c_shape.push_back(x)\n+        if dim_names is not None:\n+            for x in dim_names:\n+                c_dim_names.push_back(tobytes(x))\n+\n+        # Enforce precondition for SparseCSCMatrix indices\n+        indptr = np.require(indptr, dtype='i8')\n+        indices = np.require(indices, dtype='i8')\n+        if indptr.ndim != 1:\n+            raise ValueError(\"Expected 1-dimensional array for \"\n+                             \"SparseCSCMatrix indptr\")\n+        if indices.ndim != 1:\n+            raise ValueError(\"Expected 1-dimensional array for \"\n+                             \"SparseCSCMatrix indices\")\n+\n+        check_status(NdarraysToSparseCSCMatrix(c_default_memory_pool(),\n+                                               data, indptr, indices, c_shape,\n+                                               c_dim_names, &csparse_tensor))\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    @staticmethod\n+    def from_scipy(obj, dim_names=None):\n+        \"\"\"\n+        Convert scipy.sparse.csc_matrix to arrow::SparseCSCMatrix\n+        \"\"\"\n+        import scipy.sparse\n+        if not isinstance(obj, scipy.sparse.csc_matrix):\n+            raise TypeError(\n+                \"Expected scipy.sparse.csc_matrix, got {}\".format(type(obj)))\n+\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef vector[int64_t] c_shape\n+        cdef vector[c_string] c_dim_names\n+\n+        for x in obj.shape:\n+            c_shape.push_back(x)\n+        if dim_names is not None:\n+            for x in dim_names:\n+                c_dim_names.push_back(tobytes(x))\n+\n+        # Enforce precondition for CSparseCSCMatrix indices\n+        indptr = np.require(obj.indptr, dtype='i8')\n+        indices = np.require(obj.indices, dtype='i8')\n+\n+        check_status(NdarraysToSparseCSCMatrix(c_default_memory_pool(),\n+                     obj.data, indptr, indices, c_shape,\n+                     c_dim_names, &csparse_tensor))\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    @staticmethod\n+    def from_tensor(obj):\n+        \"\"\"\n+        Convert arrow::Tensor to arrow::SparseCSCMatrix\n+        \"\"\"\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef shared_ptr[CTensor] ctensor = pyarrow_unwrap_tensor(obj)\n+\n+        with nogil:\n+            check_status(TensorToSparseCSCMatrix(ctensor, &csparse_tensor))\n+\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    def to_numpy(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to numpy.ndarrays with zero copy\n+        \"\"\"\n+        cdef PyObject* out_data\n+        cdef PyObject* out_indptr\n+        cdef PyObject* out_indices\n+\n+        check_status(SparseCSCMatrixToNdarray(self.sp_sparse_tensor, self,\n+                                              &out_data, &out_indptr,\n+                                              &out_indices))\n+        return (PyObject_to_object(out_data), PyObject_to_object(out_indptr),\n+                PyObject_to_object(out_indices))\n+\n+    def to_scipy(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to scipy.sparse.csc_matrix\n+        \"\"\"\n+        from scipy.sparse import csc_matrix\n+        cdef PyObject* out_data\n+        cdef PyObject* out_indptr\n+        cdef PyObject* out_indices\n+\n+        check_status(SparseCSCMatrixToNdarray(self.sp_sparse_tensor, self,\n+                     &out_data, &out_indptr, &out_indices))\n+\n+        data = PyObject_to_object(out_data)\n+        indptr = PyObject_to_object(out_indptr)\n+        indices = PyObject_to_object(out_indices)\n+        result = csc_matrix((data[:, 0], indices, indptr), shape=self.shape)\n+        return result\n+\n+    def to_tensor(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to arrow::Tensor\n+        \"\"\"\n+\n+        cdef shared_ptr[CTensor] ctensor\n+        check_status(self.stp.ToTensor(&ctensor))\n \n Review comment:\n   Shouldn't you release the GIL here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T13:35:37.037+0000",
                    "updated": "2020-03-09T13:35:37.037+0000",
                    "started": "2020-03-09T13:35:37.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400109",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400139",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389740275\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.h\n ##########\n @@ -65,10 +65,18 @@ ARROW_PYTHON_EXPORT Status\n SparseCOOTensorToNdarray(const std::shared_ptr<SparseCOOTensor>& sparse_tensor,\n                          PyObject* base, PyObject** out_data, PyObject** out_coords);\n \n+Status SparseCSXMatrixToNdarray(const std::shared_ptr<SparseTensor>& sparse_tensor,\n \n Review comment:\n   I'm not sure we currently need it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:50:42.047+0000",
                    "updated": "2020-03-09T14:50:42.047+0000",
                    "started": "2020-03-09T14:50:42.046+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400139",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389740385\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.cc\n ##########\n @@ -412,6 +438,35 @@ Status NdarraysToSparseCSRMatrix(MemoryPool* pool, PyObject* data_ao, PyObject*\n   return Status::OK();\n }\n \n+Status NdarraysToSparseCSCMatrix(MemoryPool* pool, PyObject* data_ao, PyObject* indptr_ao,\n \n Review comment:\n   Done. Please check.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:50:51.075+0000",
                    "updated": "2020-03-09T14:50:51.075+0000",
                    "started": "2020-03-09T14:50:51.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400140",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389740507\n \n \n\n ##########\n File path: python/pyarrow/tensor.pxi\n ##########\n @@ -520,3 +520,184 @@ shape: {0.shape}\"\"\".format(self)\n     @property\n     def non_zero_length(self):\n         return self.stp.non_zero_length()\n+\n+cdef class SparseCSCMatrix:\n+    \"\"\"\n+    A sparse CSC tensor.\n \n Review comment:\n   Matrix indeed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:51:00.890+0000",
                    "updated": "2020-03-09T14:51:00.890+0000",
                    "started": "2020-03-09T14:51:00.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400141",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400142",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389740707\n \n \n\n ##########\n File path: python/pyarrow/tensor.pxi\n ##########\n @@ -520,3 +520,184 @@ shape: {0.shape}\"\"\".format(self)\n     @property\n     def non_zero_length(self):\n         return self.stp.non_zero_length()\n+\n+cdef class SparseCSCMatrix:\n+    \"\"\"\n+    A sparse CSC tensor.\n+    \"\"\"\n+\n+    def __init__(self):\n+        raise TypeError(\"Do not call SparseCSCMatrix's constructor directly, \"\n+                        \"use one of the `pyarrow.SparseCSCMatrix.from_*` \"\n+                        \"functions instead.\")\n+\n+    cdef void init(self, const shared_ptr[CSparseCSCMatrix]& sp_sparse_tensor):\n+        self.sp_sparse_tensor = sp_sparse_tensor\n+        self.stp = sp_sparse_tensor.get()\n+        self.type = pyarrow_wrap_data_type(self.stp.type())\n+\n+    def __repr__(self):\n+        return \"\"\"<pyarrow.SparseCSCMatrix>\n+type: {0.type}\n+shape: {0.shape}\"\"\".format(self)\n+\n+    @classmethod\n+    def from_dense_numpy(cls, obj, dim_names=None):\n+        \"\"\"\n+        Convert numpy.ndarray to arrow::SparseCSCMatrix\n+        \"\"\"\n+        return cls.from_tensor(Tensor.from_numpy(obj, dim_names=dim_names))\n+\n+    @staticmethod\n+    def from_numpy(data, indptr, indices, shape, dim_names=None):\n+        \"\"\"\n+        Create arrow::SparseCSCMatrix from numpy.ndarrays\n+        \"\"\"\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef vector[int64_t] c_shape\n+        cdef vector[c_string] c_dim_names\n+\n+        for x in shape:\n+            c_shape.push_back(x)\n+        if dim_names is not None:\n+            for x in dim_names:\n+                c_dim_names.push_back(tobytes(x))\n+\n+        # Enforce precondition for SparseCSCMatrix indices\n+        indptr = np.require(indptr, dtype='i8')\n+        indices = np.require(indices, dtype='i8')\n+        if indptr.ndim != 1:\n+            raise ValueError(\"Expected 1-dimensional array for \"\n+                             \"SparseCSCMatrix indptr\")\n+        if indices.ndim != 1:\n+            raise ValueError(\"Expected 1-dimensional array for \"\n+                             \"SparseCSCMatrix indices\")\n+\n+        check_status(NdarraysToSparseCSCMatrix(c_default_memory_pool(),\n+                                               data, indptr, indices, c_shape,\n+                                               c_dim_names, &csparse_tensor))\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    @staticmethod\n+    def from_scipy(obj, dim_names=None):\n+        \"\"\"\n+        Convert scipy.sparse.csc_matrix to arrow::SparseCSCMatrix\n+        \"\"\"\n+        import scipy.sparse\n+        if not isinstance(obj, scipy.sparse.csc_matrix):\n+            raise TypeError(\n+                \"Expected scipy.sparse.csc_matrix, got {}\".format(type(obj)))\n+\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef vector[int64_t] c_shape\n+        cdef vector[c_string] c_dim_names\n+\n+        for x in obj.shape:\n+            c_shape.push_back(x)\n+        if dim_names is not None:\n+            for x in dim_names:\n+                c_dim_names.push_back(tobytes(x))\n+\n+        # Enforce precondition for CSparseCSCMatrix indices\n+        indptr = np.require(obj.indptr, dtype='i8')\n+        indices = np.require(obj.indices, dtype='i8')\n+\n+        check_status(NdarraysToSparseCSCMatrix(c_default_memory_pool(),\n+                     obj.data, indptr, indices, c_shape,\n+                     c_dim_names, &csparse_tensor))\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    @staticmethod\n+    def from_tensor(obj):\n+        \"\"\"\n+        Convert arrow::Tensor to arrow::SparseCSCMatrix\n+        \"\"\"\n+        cdef shared_ptr[CSparseCSCMatrix] csparse_tensor\n+        cdef shared_ptr[CTensor] ctensor = pyarrow_unwrap_tensor(obj)\n+\n+        with nogil:\n+            check_status(TensorToSparseCSCMatrix(ctensor, &csparse_tensor))\n+\n+        return pyarrow_wrap_sparse_csc_matrix(csparse_tensor)\n+\n+    def to_numpy(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to numpy.ndarrays with zero copy\n+        \"\"\"\n+        cdef PyObject* out_data\n+        cdef PyObject* out_indptr\n+        cdef PyObject* out_indices\n+\n+        check_status(SparseCSCMatrixToNdarray(self.sp_sparse_tensor, self,\n+                                              &out_data, &out_indptr,\n+                                              &out_indices))\n+        return (PyObject_to_object(out_data), PyObject_to_object(out_indptr),\n+                PyObject_to_object(out_indices))\n+\n+    def to_scipy(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to scipy.sparse.csc_matrix\n+        \"\"\"\n+        from scipy.sparse import csc_matrix\n+        cdef PyObject* out_data\n+        cdef PyObject* out_indptr\n+        cdef PyObject* out_indices\n+\n+        check_status(SparseCSCMatrixToNdarray(self.sp_sparse_tensor, self,\n+                     &out_data, &out_indptr, &out_indices))\n+\n+        data = PyObject_to_object(out_data)\n+        indptr = PyObject_to_object(out_indptr)\n+        indices = PyObject_to_object(out_indices)\n+        result = csc_matrix((data[:, 0], indices, indptr), shape=self.shape)\n+        return result\n+\n+    def to_tensor(self):\n+        \"\"\"\n+        Convert arrow::SparseCSCMatrix to arrow::Tensor\n+        \"\"\"\n+\n+        cdef shared_ptr[CTensor] ctensor\n+        check_status(self.stp.ToTensor(&ctensor))\n \n Review comment:\n   Done. Please check.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:51:17.413+0000",
                    "updated": "2020-03-09T14:51:17.413+0000",
                    "started": "2020-03-09T14:51:17.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400142",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400143",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389740848\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n+\n+    data_result, indptr_result, indices_result = result.to_numpy()\n+    assert np.array_equal(data_result[:, 0], data)\n \n Review comment:\n   Fixed.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:51:30.287+0000",
                    "updated": "2020-03-09T14:51:30.287+0000",
                    "started": "2020-03-09T14:51:30.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400143",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389741002\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n \n Review comment:\n   Added.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T14:51:42.581+0000",
                    "updated": "2020-03-09T14:51:42.581+0000",
                    "started": "2020-03-09T14:51:42.581+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400144",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389768926\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.cc\n ##########\n @@ -404,14 +431,39 @@ Status NdarraysToSparseCSRMatrix(MemoryPool* pool, PyObject* data_ao, PyObject*\n   ARROW_CHECK_EQ(indptr->type_id(), Type::INT64);   // Should be ensured by caller\n   ARROW_CHECK_EQ(indices->type_id(), Type::INT64);  // Should be ensured by caller\n \n-  auto sparse_index = std::make_shared<SparseCSRIndex>(\n+  auto sparse_index = std::make_shared<IndexType>(\n       std::static_pointer_cast<NumericTensor<Int64Type>>(indptr),\n       std::static_pointer_cast<NumericTensor<Int64Type>>(indices));\n-  *out = std::make_shared<SparseTensorImpl<SparseCSRIndex>>(sparse_index, type_data, data,\n-                                                            shape, dim_names);\n+  *out = std::make_shared<SparseTensorImpl<IndexType>>(sparse_index, type_data, data,\n+                                                       shape, dim_names);\n   return Status::OK();\n }\n \n+template Status NdarraysToSparseCSXMatrix<SparseCSCIndex>(\n+    MemoryPool* pool, PyObject* data_ao, PyObject* indptr_ao, PyObject* indices_ao,\n+    const std::vector<int64_t>& shape, const std::vector<std::string>& dim_names,\n+    std::shared_ptr<SparseCSCMatrix>* out);\n+template Status NdarraysToSparseCSXMatrix<SparseCSRIndex>(\n \n Review comment:\n   Hmm... I don't think you need to instantiate those explicitly? They're automatically instantiated when compiling the `NdarraysToSparseCSRMatrix` and `NdarraysToSparseCSCMatrix` functions below.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T15:33:47.229+0000",
                    "updated": "2020-03-09T15:33:47.229+0000",
                    "started": "2020-03-09T15:33:47.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400183",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389770319\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n \n Review comment:\n   Thanks. I also meant the type in the Python sense, e.g. `assert isinstance(pa.SparseCSCMatrix, result)`.\r\n   (who knows, perhaps there's a bug and you're getting back a CSR matrix)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T15:33:47.250+0000",
                    "updated": "2020-03-09T15:33:47.250+0000",
                    "started": "2020-03-09T15:33:47.250+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400184",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400192",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389778070\n \n \n\n ##########\n File path: cpp/src/arrow/python/numpy_convert.cc\n ##########\n @@ -404,14 +431,39 @@ Status NdarraysToSparseCSRMatrix(MemoryPool* pool, PyObject* data_ao, PyObject*\n   ARROW_CHECK_EQ(indptr->type_id(), Type::INT64);   // Should be ensured by caller\n   ARROW_CHECK_EQ(indices->type_id(), Type::INT64);  // Should be ensured by caller\n \n-  auto sparse_index = std::make_shared<SparseCSRIndex>(\n+  auto sparse_index = std::make_shared<IndexType>(\n       std::static_pointer_cast<NumericTensor<Int64Type>>(indptr),\n       std::static_pointer_cast<NumericTensor<Int64Type>>(indices));\n-  *out = std::make_shared<SparseTensorImpl<SparseCSRIndex>>(sparse_index, type_data, data,\n-                                                            shape, dim_names);\n+  *out = std::make_shared<SparseTensorImpl<IndexType>>(sparse_index, type_data, data,\n+                                                       shape, dim_names);\n   return Status::OK();\n }\n \n+template Status NdarraysToSparseCSXMatrix<SparseCSCIndex>(\n+    MemoryPool* pool, PyObject* data_ao, PyObject* indptr_ao, PyObject* indices_ao,\n+    const std::vector<int64_t>& shape, const std::vector<std::string>& dim_names,\n+    std::shared_ptr<SparseCSCMatrix>* out);\n+template Status NdarraysToSparseCSXMatrix<SparseCSRIndex>(\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T15:44:51.636+0000",
                    "updated": "2020-03-09T15:44:51.636+0000",
                    "started": "2020-03-09T15:44:51.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400192",
                    "issueId": "13275140"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/worklog/400198",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #6521: ARROW-7419: [Python] Support SparseCSCMatrix\nURL: https://github.com/apache/arrow/pull/6521#discussion_r389785530\n \n \n\n ##########\n File path: python/pyarrow/tests/test_serialization.py\n ##########\n @@ -662,6 +666,62 @@ def test_scipy_sparse_csr_matrix_serialization():\n     assert np.array_equal(sparse_array.toarray(), result.toarray())\n \n \n+@pytest.mark.parametrize('tensor_type', tensor_types)\n+@pytest.mark.parametrize('index_type', index_types)\n+def test_sparse_csc_matrix_serialization(index_type, tensor_type):\n+    tensor_dtype = np.dtype(tensor_type)\n+    index_dtype = np.dtype(index_type)\n+    data = np.array([8, 2, 5, 3, 4, 6]).astype(tensor_dtype)\n+    indptr = np.array([0, 2, 3, 4, 6]).astype(index_dtype)\n+    indices = np.array([0, 2, 5, 0, 4, 5]).astype(index_dtype)\n+    shape = (6, 4)\n+    dim_names = ('x', 'y')\n+\n+    sparse_tensor = pa.SparseCSCMatrix.from_numpy(data, indptr, indices,\n+                                                  shape, dim_names)\n+\n+    context = pa.default_serialization_context()\n+    serialized = pa.serialize(sparse_tensor, context=context).to_buffer()\n+    result = pa.deserialize(serialized)\n \n Review comment:\n   Added.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-09T15:55:54.919+0000",
                    "updated": "2020-03-09T15:55:54.919+0000",
                    "started": "2020-03-09T15:55:54.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "400198",
                    "issueId": "13275140"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6bee6e95[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53176b94[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78a93f69[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@100aa023[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25568b97[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1e3fda85[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2fdcec5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6a925a3c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b096eca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1b8268dc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53f4c9fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2b4f3a04[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Mar 12 15:02:18 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-03-12T15:02:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-7419/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-12-18T02:28:16.000+0000",
        "updated": "2020-03-12T15:02:18.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Support SparseCSCMatrix",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13275140/comment/17057996",
                    "id": "17057996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 6521\n[https://github.com/apache/arrow/pull/6521]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-03-12T15:02:18.547+0000",
                    "updated": "2020-03-12T15:02:18.547+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z09s6g:",
        "customfield_12314139": null
    }
}