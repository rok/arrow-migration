{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13389670",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389670",
    "key": "ARROW-13341",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13341/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389670/worklog/622619",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz opened a new pull request #10720:\nURL: https://github.com/apache/arrow/pull/10720\n\n\n   Multiple threads starting DoConsume would already have incremented `num_received_`, so if one were delayed another might erroneously begin to merge/finalize (leaving invalidated states)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-14T17:27:27.078+0000",
                    "updated": "2021-07-14T17:27:27.078+0000",
                    "started": "2021-07-14T17:27:27.078+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622619",
                    "issueId": "13389670"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389670/worklog/622620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10720:\nURL: https://github.com/apache/arrow/pull/10720#issuecomment-880075978\n\n\n   https://issues.apache.org/jira/browse/ARROW-13341\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-14T17:27:50.701+0000",
                    "updated": "2021-07-14T17:27:50.701+0000",
                    "started": "2021-07-14T17:27:50.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622620",
                    "issueId": "13389670"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389670/worklog/622655",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #10720:\nURL: https://github.com/apache/arrow/pull/10720\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-14T19:04:29.819+0000",
                    "updated": "2021-07-14T19:04:29.819+0000",
                    "started": "2021-07-14T19:04:29.819+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "622655",
                    "issueId": "13389670"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@78207629[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@777ed88[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70f5279c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@48568fa7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@601e6107[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@17b96435[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e296899[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@32fefd4c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@217ba44d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d3ff49b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78572605[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3d06b0de[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jul 14 19:04:21 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-14T19:04:21.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13341/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-07-14T16:40:09.000+0000",
        "updated": "2021-07-14T19:04:30.000+0000",
        "timeoriginalestimate": null,
        "description": "https://github.com/apache/arrow/pull/10608/checks?check_run_id=3068468137\r\nOn \"AMD64 MacOS 10.15 C++\"\r\n\r\nLooks like a state wasn't initialized somehow?\r\n\r\n{noformat}\r\n[ RUN      ] ExecPlanExecution.SourceScalarAggSink\r\nFound core dump, printing backtrace:\r\n(lldb) target create --core \"core.arrow-compute-pl.19192\"\r\nCore file '/Users/runner/work/arrow/arrow/build/cpp/build/test-work/arrow-compute-plan-test/core.arrow-compute-pl.19192' (x86_64) was loaded.(lldb) thread backtrace all -e true\r\nerror: exec_plan.cc.o 0x0004f7d7: DW_TAG_inheritance failed to resolve the base class at 0x0004f8fb from enclosing type 0x0004f7ce. \r\nPlease file a bug and attach the file at the start of this error message\r\n* thread #1, stop reason = signal SIGSTOP\r\n  * frame #0: 0x000000010776df15 libarrow.500.0.0.dylib`std::__1::unique_ptr<arrow::compute::KernelState, std::__1::default_delete<arrow::compute::KernelState> >::get(this=0x0000000000000000) const at memory:2596:19\r\n    frame #1: 0x000000010779c268 libarrow.500.0.0.dylib`arrow::compute::ScalarAggregateNode::DoConsume(this=0x00007f8f514731c0, batch=0x00007ffeef01ea38, thread_index=0) at exec_plan.cc:665:51\r\n    frame #2: 0x000000010779aae8 libarrow.500.0.0.dylib`arrow::compute::ScalarAggregateNode::InputReceived(this=0x00007f8f514731c0, input=0x00007f8f51470880, seq=1, batch=ExecBatch @ 0x00007ffeef01ea38) at exec_plan.cc:683:17\r\n    frame #3: 0x000000010777e65e libarrow.500.0.0.dylib`arrow::compute::SourceNode::StartProducing(this=0x00007f8f51473c78, batch=0x00007f8f514739c8)::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&)::operator()(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&) const at exec_plan.cc:287:38\r\n    frame #4: 0x000000010777e383 libarrow.500.0.0.dylib`std::__1::enable_if<((!(std::is_void<nonstd::optional_lite::optional<int> >::value)) && (!(is_future<nonstd::optional_lite::optional<int> >::value))) && ((!(arrow::Future<nonstd::optional_lite::optional<int> >::is_empty)) || (std::is_same<nonstd::optional_lite::optional<int>, arrow::Status>::value)), void>::type arrow::detail::ContinueFuture::operator(this=0x00007ffeef01ec28, next=Future<nonstd::optional_lite::optional<int> > @ 0x00007ffeef01eb68, f=0x00007f8f51473c78, a=0x00007f8f514739c8)<arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&, nonstd::optional_lite::optional<int>, arrow::Future<nonstd::optional_lite::optional<int> > >(arrow::Future<nonstd::optional_lite::optional<int> >, arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&)&&, nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&) const at future.h:138:23\r\n    frame #5: 0x000000010777e199 libarrow.500.0.0.dylib`void arrow::detail::ContinueFuture::IgnoringArgsIf<arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::Future<nonstd::optional_lite::optional<int> >, nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&>(this=0x00007ffeef01ec28, (null)=std::__1::false_type @ 0x00007ffeef01eb98, next=0x00007f8f51473c98, f=0x00007f8f51473c78, a=0x00007f8f514739c8)::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&)&&, nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&) const at future.h:181:5\r\n    frame #6: 0x000000010777e016 libarrow.500.0.0.dylib`arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51473c78, result=0x00007f8f514739c0)::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)>::operator()(arrow::Result<nonstd::optional_lite::optional<arrow::compute::ExecBatch> > const&) && at future.h:589:25\r\n    frame #7: 0x000000010777df62 libarrow.500.0.0.dylib`arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::WrapResultyOnComplete::Callback<arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51473c78, impl=0x00007f8f51474040)::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)> >::operator()(arrow::FutureImpl const&) && at future.h:486:9\r\n    frame #8: 0x000000010777decb libarrow.500.0.0.dylib`arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::WrapResultyOnComplete::Callback<arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51473c70, a=0x00007f8f51474040)::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)> > >::invoke(arrow::FutureImpl const&) at functional.h:152:42\r\n    frame #9: 0x0000000107433d55 libarrow.500.0.0.dylib`arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator(this=0x00007ffeef01ee30, a=0x00007f8f51474040)(arrow::FutureImpl const&) && at functional.h:140:17\r\n    frame #10: 0x0000000107433729 libarrow.500.0.0.dylib`arrow::ConcreteFutureImpl::RunOrScheduleCallback(this=0x00007f8f51474040, callback_record=0x00007ffeef01ee30, in_add_callback=true) at future.cc:295:7\r\n    frame #11: 0x000000010742de87 libarrow.500.0.0.dylib`arrow::ConcreteFutureImpl::AddCallback(this=0x00007f8f51474040, callback=arrow::FutureImpl::Callback @ 0x00007ffeef01eec0, opts=(should_schedule = Never, executor = 0x0000000000000000))>, arrow::CallbackOptions) at future.cc:248:7\r\n    frame #12: 0x000000010742dd9c libarrow.500.0.0.dylib`arrow::FutureImpl::AddCallback(this=0x00007f8f51474040, callback=arrow::FutureImpl::Callback @ 0x00007ffeef01ef60, opts=(should_schedule = Never, executor = 0x0000000000000000))>, arrow::CallbackOptions) at future.cc:383:28\r\n    frame #13: 0x000000010777da47 libarrow.500.0.0.dylib`void arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::AddCallback<arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing(this=0x00007ffeef01f0c8, on_complete=ThenOnComplete<(lambda at /Users/runner/work/arrow/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:279:23), (lambda at /Users/runner/work/arrow/arrow/cpp/src/arrow/compute/exec/exec_plan.cc:290:23)> @ 0x00007ffeef01efd8, opts=(should_schedule = Never, executor = 0x0000000000000000))::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)>, arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::WrapResultyOnComplete::Callback<arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)> > >(arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)>, arrow::CallbackOptions) const at future.h:537:12\r\n    frame #14: 0x000000010777d033 libarrow.500.0.0.dylib`arrow::Future<nonstd::optional_lite::optional<int> > arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::Then<arrow::compute::SourceNode::StartProducing(this=0x00007ffeef01f0c8, on_success=(anonymous class) @ 0x00007ffeef01f028, on_failure=(anonymous class) @ 0x00007ffeef01f018, options=(should_schedule = Never, executor = 0x0000000000000000))::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&), arrow::Future<nonstd::optional_lite::optional<arrow::compute::ExecBatch> >::ThenOnComplete<arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&)>, arrow::Future<nonstd::optional_lite::optional<int> > >(arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(nonstd::optional_lite::optional<arrow::compute::ExecBatch> const&), arrow::compute::SourceNode::StartProducing()::'lambda'()::operator()() const::'lambda'(arrow::Status const&), arrow::CallbackOptions) const at future.h:651:5\r\n    frame #15: 0x000000010777cb90 libarrow.500.0.0.dylib`arrow::compute::SourceNode::StartProducing(this=0x00007f8f51472558)::'lambda'()::operator()() const at exec_plan.cc:278:39\r\n    frame #16: 0x00000001077800c6 libarrow.500.0.0.dylib`arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51472558, maybe_control=0x00007f8f5141d520)::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'())::Callback::operator()(arrow::Result<nonstd::optional_lite::optional<int> > const&) && at future.h:900:26\r\n    frame #17: 0x0000000107780072 libarrow.500.0.0.dylib`arrow::Future<nonstd::optional_lite::optional<int> >::WrapResultyOnComplete::Callback<arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51472558, impl=0x00007f8f51473a10)::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'())::Callback>::operator()(arrow::FutureImpl const&) && at future.h:486:9\r\n    frame #18: 0x000000010777ffdb libarrow.500.0.0.dylib`arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::FnImpl<arrow::Future<nonstd::optional_lite::optional<int> >::WrapResultyOnComplete::Callback<arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing(this=0x00007f8f51472550, a=0x00007f8f51473a10)::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'())::Callback> >::invoke(arrow::FutureImpl const&) at functional.h:152:42\r\n    frame #19: 0x0000000107433d55 libarrow.500.0.0.dylib`arrow::internal::FnOnce<void (arrow::FutureImpl const&)>::operator(this=0x00007ffeef01f3c0, a=0x00007f8f51473a10)(arrow::FutureImpl const&) && at functional.h:140:17\r\n    frame #20: 0x0000000107433729 libarrow.500.0.0.dylib`arrow::ConcreteFutureImpl::RunOrScheduleCallback(this=0x00007f8f51473a10, callback_record=0x00007ffeef01f3c0, in_add_callback=true) at future.cc:295:7\r\n    frame #21: 0x000000010742de87 libarrow.500.0.0.dylib`arrow::ConcreteFutureImpl::AddCallback(this=0x00007f8f51473a10, callback=arrow::FutureImpl::Callback @ 0x00007ffeef01f450, opts=(should_schedule = Never, executor = 0x0000000000000000))>, arrow::CallbackOptions) at future.cc:248:7\r\n    frame #22: 0x000000010742dd9c libarrow.500.0.0.dylib`arrow::FutureImpl::AddCallback(this=0x00007f8f51473a10, callback=arrow::FutureImpl::Callback @ 0x00007ffeef01f4f0, opts=(should_schedule = Never, executor = 0x0000000000000000))>, arrow::CallbackOptions) at future.cc:383:28\r\n    frame #23: 0x000000010777cc87 libarrow.500.0.0.dylib`void arrow::Future<nonstd::optional_lite::optional<int> >::AddCallback<arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing(this=0x00007ffeef01f5a0, on_complete=Callback @ 0x00007ffeef01f560, opts=(should_schedule = Never, executor = 0x0000000000000000))::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'())::Callback, arrow::Future<nonstd::optional_lite::optional<int> >::WrapResultyOnComplete::Callback<arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing()::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'())::Callback> >(arrow::compute::SourceNode::StartProducing()::'lambda'(), arrow::CallbackOptions) const at future.h:537:12\r\n    frame #24: 0x000000010777c79a libarrow.500.0.0.dylib`arrow::Future<int> arrow::Loop<arrow::compute::SourceNode::StartProducing(iterate=(anonymous class) @ 0x00007ffeef01f5d0)::'lambda'(), nonstd::optional_lite::optional<int>, int>(arrow::compute::SourceNode::StartProducing()::'lambda'()) at future.h:928:15\r\n    frame #25: 0x000000010777c182 libarrow.500.0.0.dylib`arrow::compute::SourceNode::StartProducing(this=0x00007f8f51470880) at exec_plan.cc:270:17\r\n    frame #26: 0x0000000107769ab1 libarrow.500.0.0.dylib`arrow::compute::(anonymous namespace)::ExecPlanImpl::StartProducing(this=0x00007f8f51417b50) at exec_plan.cc:96:18\r\n    frame #27: 0x0000000107769926 libarrow.500.0.0.dylib`arrow::compute::ExecPlan::StartProducing(this=0x00007f8f51417b50) at exec_plan.cc:198:61\r\n    frame #28: 0x0000000100bf1caa arrow-compute-plan-test`arrow::compute::(anonymous namespace)::StartAndCollect(plan=0x00007f8f51417b50, gen=arrow::AsyncGenerator<util::optional<ExecBatch> > @ 0x00007ffeef01ff00)>) at plan_test.cc:241:3\r\n    frame #29: 0x0000000100bfaa66 arrow-compute-plan-test`arrow::compute::ExecPlanExecution_SourceScalarAggSink_Test::TestBody(this=0x00007f8f5141cf00) at plan_test.cc:442:3\r\n    frame #30: 0x0000000101bd1e44 libgtestd.dylib`void testing::internal::HandleSehExceptionsInMethodIfSupported<testing::Test, void>(object=0x00007f8f5141cf00, method=21 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"the test body\")(), char const*) at gtest.cc:2433:10\r\n    frame #31: 0x0000000101b9ae2b libgtestd.dylib`void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(object=0x00007f8f5141cf00, method=21 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00, location=\"the test body\")(), char const*) at gtest.cc:2469:14\r\n    frame #32: 0x0000000101b9ad63 libgtestd.dylib`testing::Test::Run(this=0x00007f8f5141cf00) at gtest.cc:2508:5\r\n    frame #33: 0x0000000101b9bf67 libgtestd.dylib`testing::TestInfo::Run(this=0x00007f8f514179f0) at gtest.cc:2684:11\r\n    frame #34: 0x0000000101b9ce4c libgtestd.dylib`testing::TestSuite::Run(this=0x00007f8f51417110) at gtest.cc:2816:28\r\n    frame #35: 0x0000000101ba96ed libgtestd.dylib`testing::internal::UnitTestImpl::RunAllTests(this=0x00007f8f514163c0) at gtest.cc:5338:44\r\n    frame #36: 0x0000000101bd7504 libgtestd.dylib`bool testing::internal::HandleSehExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x00007f8f514163c0, method=f0 92 ba 01 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2433:10\r\n    frame #37: 0x0000000101ba908b libgtestd.dylib`bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(object=0x00007f8f514163c0, method=f0 92 ba 01 01 00 00 00 00 00 00 00 00 00 00 00, location=\"auxiliary test code (environments or event listeners)\")(), char const*) at gtest.cc:2469:14\r\n    frame #38: 0x0000000101ba8f5d libgtestd.dylib`testing::UnitTest::Run(this=0x0000000101bf0360) at gtest.cc:4925:10\r\n    frame #39: 0x0000000101b7eed1 libgtest_maind.dylib`RUN_ALL_TESTS() at gtest.h:2473:46\r\n    frame #40: 0x0000000101b7eeb0 libgtest_maind.dylib`main(argc=1, argv=0x00007ffeef0205f8) at gtest_main.cc:45:10\r\n    frame #41: 0x00007fff6b0d9cc9 libdyld.dylib`start + 1\r\n    frame #42: 0x00007fff6b0d9cc9 libdyld.dylib`start + 1\r\n  thread #2, stop reason = signal SIGSTOP\r\n    frame #0: 0x00007fff6b21d882 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff6b2e2425 libsystem_pthread.dylib`_pthread_cond_wait + 698\r\n    frame #2: 0x00007fff683b4592 libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x00000001074a46f2 libarrow.500.0.0.dylib`arrow::internal::WorkerLoop(state=std::__1::shared_ptr<arrow::internal::ThreadPool::State>::element_type @ 0x00007f8f51470d38 strong=5 weak=1, it=std::__1::list<std::__1::thread, std::__1::allocator<std::__1::thread> >::iterator @ 0x000070000d16feb8) at thread_pool.cc:192:16\r\n    frame #4: 0x00000001074a41ff libarrow.500.0.0.dylib`arrow::internal::ThreadPool::LaunchWorkersUnlocked(this=0x00007f8f51472418)::$_2::operator()() const at thread_pool.cc:336:7\r\n    frame #5: 0x00000001074a414d libarrow.500.0.0.dylib`decltype(__f=0x00007f8f51472418)::$_2>(fp)()) std::__1::__invoke<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2>(arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2&&) at type_traits:3545:1\r\n    frame #6: 0x00000001074a40b5 libarrow.500.0.0.dylib`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2>(__t=size=2, (null)=__tuple_indices<> @ 0x000070000d16ff58)::$_2>&, std::__1::__tuple_indices<>) at thread:273:5\r\n    frame #7: 0x00000001074a3806 libarrow.500.0.0.dylib`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2> >(__vp=0x00007f8f51472410) at thread:284:5\r\n    frame #8: 0x00007fff6b2e2109 libsystem_pthread.dylib`_pthread_start + 148\r\n    frame #9: 0x00007fff6b2ddb8b libsystem_pthread.dylib`thread_start + 15\r\n  thread #3, stop reason = signal SIGSTOP\r\n    frame #0: 0x00007fff6b21d882 libsystem_kernel.dylib`__psynch_cvwait + 10\r\n    frame #1: 0x00007fff6b2e2425 libsystem_pthread.dylib`_pthread_cond_wait + 698\r\n    frame #2: 0x00007fff683b4592 libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 18\r\n    frame #3: 0x00000001074a46f2 libarrow.500.0.0.dylib`arrow::internal::WorkerLoop(state=std::__1::shared_ptr<arrow::internal::ThreadPool::State>::element_type @ 0x00007f8f51470d38 strong=5 weak=1, it=std::__1::list<std::__1::thread, std::__1::allocator<std::__1::thread> >::iterator @ 0x000070000d1f2eb8) at thread_pool.cc:192:16\r\n    frame #4: 0x00000001074a41ff libarrow.500.0.0.dylib`arrow::internal::ThreadPool::LaunchWorkersUnlocked(this=0x00007f8f51604328)::$_2::operator()() const at thread_pool.cc:336:7\r\n    frame #5: 0x00000001074a414d libarrow.500.0.0.dylib`decltype(__f=0x00007f8f51604328)::$_2>(fp)()) std::__1::__invoke<arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2>(arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2&&) at type_traits:3545:1\r\n    frame #6: 0x00000001074a40b5 libarrow.500.0.0.dylib`void std::__1::__thread_execute<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2>(__t=size=2, (null)=__tuple_indices<> @ 0x000070000d1f2f58)::$_2>&, std::__1::__tuple_indices<>) at thread:273:5\r\n    frame #7: 0x00000001074a3806 libarrow.500.0.0.dylib`void* std::__1::__thread_proxy<std::__1::tuple<std::__1::unique_ptr<std::__1::__thread_struct, std::__1::default_delete<std::__1::__thread_struct> >, arrow::internal::ThreadPool::LaunchWorkersUnlocked(int)::$_2> >(__vp=0x00007f8f51604320) at thread:284:5\r\n    frame #8: 0x00007fff6b2e2109 libsystem_pthread.dylib`_pthread_start + 148\r\n    frame #9: 0x00007fff6b2ddb8b libsystem_pthread.dylib`thread_start + 15\r\n~/work/arrow/arrow/build/cpp/src/arrow/compute/exec {noformat}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Segfault in arrow-compute-plan-test ExecPlanExecution.SourceScalarAggSink",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13389670/comment/17380810",
                    "id": "17380810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10720\n[https://github.com/apache/arrow/pull/10720]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-07-14T19:04:21.635+0000",
                    "updated": "2021-07-14T19:04:21.635+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0sy9k:",
        "customfield_12314139": null
    }
}