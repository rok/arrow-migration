{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13376524",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524",
    "key": "ARROW-12644",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "datasets",
            "delta",
            "parquet",
            "pull-request-available",
            "spark"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12615068",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12615068",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13354482",
                    "key": "ARROW-11378",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13354482",
                    "fields": {
                        "summary": "[C++][Dataset] Writing partitions with timestamp type give mis-formatted (integers) directory names",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
                            "id": "1",
                            "description": "A problem which impairs or prevents the functions of the product.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
                            "name": "Bug",
                            "subtask": false,
                            "avatarId": 21133
                        }
                    }
                }
            },
            {
                "id": "12622166",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12622166",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13398450",
                    "key": "ARROW-13813",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398450",
                    "fields": {
                        "summary": "[C++][Dataset] Support URL encoding of partition field values for the file path",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12626713",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12626713",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13412270",
                    "key": "ARROW-14737",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13412270",
                    "fields": {
                        "summary": "[C++][Dataset] Support URI-decoding partition keys",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=peebor%40gmail.com",
            "name": "peebor@gmail.com",
            "key": "peebor@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Bormans",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=peebor%40gmail.com",
            "name": "peebor@gmail.com",
            "key": "peebor@gmail.com",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Bormans",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12644/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/593293",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264\n\n\n   Now by default, directory/hive partitioning will URL-decode potential partition values before trying to parse them, since systems like Spark apparently may URL-encode the values in some cases. Note for Hive partitioning, this applies only to the value, not to the key itself. This behavior can be toggled.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-07T13:26:31.529+0000",
                    "updated": "2021-05-07T13:26:31.529+0000",
                    "started": "2021-05-07T13:26:31.529+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593293",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/593295",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#issuecomment-834386322\n\n\n   https://issues.apache.org/jira/browse/ARROW-12644\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-07T13:26:58.683+0000",
                    "updated": "2021-05-07T13:26:58.683+0000",
                    "started": "2021-05-07T13:26:58.683+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593295",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/593367",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#issuecomment-834531281\n\n\n   Ah, and so it turns out there is indeed a very good reason to url-escape names even on local file systems: Windows doesn't like characters like `:`. Fun! These test cases need reworking, then\u2026\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-07T15:32:08.231+0000",
                    "updated": "2021-05-07T15:32:08.231+0000",
                    "started": "2021-05-07T15:32:08.231+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "593367",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/604660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#discussion_r643360494\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -174,9 +192,9 @@ class ARROW_DS_EXPORT DirectoryPartitioning : public KeyValuePartitioning {\n  public:\n   /// If a field in schema is of dictionary type, the corresponding element of\n   /// dictionaries must be contain the dictionary of values for that field.\n-  explicit DirectoryPartitioning(std::shared_ptr<Schema> schema,\n-                                 ArrayVector dictionaries = {})\n-      : KeyValuePartitioning(std::move(schema), std::move(dictionaries)) {}\n+  explicit DirectoryPartitioning(\n+      std::shared_ptr<Schema> schema, ArrayVector dictionaries = {},\n+      KeyValuePartitioningOptions options = KeyValuePartitioningOptions());\n\nReview comment:\n       Just FYI, I think `KeyValuePartitioningOptions options = {}` can be used as a shorter spelling.\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -259,15 +274,29 @@ Result<std::string> KeyValuePartitioning::Format(const compute::Expression& expr\n   return FormatValues(values);\n }\n \n-std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n+DirectoryPartitioning::DirectoryPartitioning(std::shared_ptr<Schema> schema,\n+                                             ArrayVector dictionaries,\n+                                             KeyValuePartitioningOptions options)\n+    : KeyValuePartitioning(std::move(schema), std::move(dictionaries), options) {\n+  if (options.url_decode_segments) {\n+    util::InitializeUTF8();\n+  }\n+}\n+\n+Result<std::vector<KeyValuePartitioning::Key>> DirectoryPartitioning::ParseKeys(\n     const std::string& path) const {\n   std::vector<Key> keys;\n \n   int i = 0;\n   for (auto&& segment : fs::internal::SplitAbstractPath(path)) {\n     if (i >= schema_->num_fields()) break;\n \n-    keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n+    if (options_.url_decode_segments) {\n+      ARROW_ASSIGN_OR_RAISE(auto decoded, SafeUriUnescape(segment));\n+      keys.push_back({schema_->field(i++)->name(), std::move(decoded)});\n+    } else {\n+      keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n\nReview comment:\n       I'm curious: is there any reason we don't utf8-validate here?\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -481,28 +533,39 @@ std::shared_ptr<PartitioningFactory> DirectoryPartitioning::MakeFactory(\n       new DirectoryPartitioningFactory(std::move(field_names), options));\n }\n \n-util::optional<KeyValuePartitioning::Key> HivePartitioning::ParseKey(\n-    const std::string& segment, const std::string& null_fallback) {\n+Result<util::optional<KeyValuePartitioning::Key>> HivePartitioning::ParseKey(\n+    const std::string& segment, const HivePartitioningOptions& options) {\n   auto name_end = string_view(segment).find_first_of('=');\n   // Not round-trippable\n   if (name_end == string_view::npos) {\n     return util::nullopt;\n   }\n \n   auto name = segment.substr(0, name_end);\n-  auto value = segment.substr(name_end + 1);\n-  if (value == null_fallback) {\n-    return Key{name, util::nullopt};\n+  std::string value;\n+  if (options.url_decode_segments) {\n+    // Static method, so we have no better place for it\n+    util::InitializeUTF8();\n+    auto raw_value =\n+        util::string_view(segment.data() + name_end + 1, segment.size() - name_end - 1);\n\nReview comment:\n       Is there a reason you don't use the same spelling as below, i.e. `segment.substr(name_end + 1)`?\n\n##########\nFile path: python/pyarrow/_dataset.pyx\n##########\n@@ -1947,13 +1949,17 @@ cdef class DirectoryPartitioning(Partitioning):\n     cdef:\n         CDirectoryPartitioning* directory_partitioning\n \n-    def __init__(self, Schema schema not None, dictionaries=None):\n+    def __init__(self, Schema schema not None, dictionaries=None,\n+                 bint url_decode_segments=True):\n\nReview comment:\n       Since this is a boolean option, I'd rather make it keyword-only, i.e. `def __init__(..., *, bint url_decode_segments=True)`.\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -89,8 +89,15 @@ class ARROW_DS_EXPORT Partitioning {\n   std::shared_ptr<Schema> schema_;\n };\n \n+/// \\brief Options for key-value based partitioning (hive/directory).\n+struct ARROW_DS_EXPORT KeyValuePartitioningOptions {\n+  /// After splitting a path into components, URL-decode the path components\n+  /// before parsing.\n+  bool url_decode_segments = true;\n\nReview comment:\n       I'm afraid at some point, we'll have to deal with other encodings (e.g. hex, or some system-specific oddity). Perhaps make this an enum instead, so that it's open-ended?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T17:56:23.287+0000",
                    "updated": "2021-06-01T17:56:23.287+0000",
                    "started": "2021-06-01T17:56:23.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604660",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/604722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#discussion_r643379606\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -259,15 +274,29 @@ Result<std::string> KeyValuePartitioning::Format(const compute::Expression& expr\n   return FormatValues(values);\n }\n \n-std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n+DirectoryPartitioning::DirectoryPartitioning(std::shared_ptr<Schema> schema,\n+                                             ArrayVector dictionaries,\n+                                             KeyValuePartitioningOptions options)\n+    : KeyValuePartitioning(std::move(schema), std::move(dictionaries), options) {\n+  if (options.url_decode_segments) {\n+    util::InitializeUTF8();\n+  }\n+}\n+\n+Result<std::vector<KeyValuePartitioning::Key>> DirectoryPartitioning::ParseKeys(\n     const std::string& path) const {\n   std::vector<Key> keys;\n \n   int i = 0;\n   for (auto&& segment : fs::internal::SplitAbstractPath(path)) {\n     if (i >= schema_->num_fields()) break;\n \n-    keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n+    if (options_.url_decode_segments) {\n+      ARROW_ASSIGN_OR_RAISE(auto decoded, SafeUriUnescape(segment));\n+      keys.push_back({schema_->field(i++)->name(), std::move(decoded)});\n+    } else {\n+      keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n\nReview comment:\n       Just because we didn't before, but perhaps we should. \n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -481,28 +533,39 @@ std::shared_ptr<PartitioningFactory> DirectoryPartitioning::MakeFactory(\n       new DirectoryPartitioningFactory(std::move(field_names), options));\n }\n \n-util::optional<KeyValuePartitioning::Key> HivePartitioning::ParseKey(\n-    const std::string& segment, const std::string& null_fallback) {\n+Result<util::optional<KeyValuePartitioning::Key>> HivePartitioning::ParseKey(\n+    const std::string& segment, const HivePartitioningOptions& options) {\n   auto name_end = string_view(segment).find_first_of('=');\n   // Not round-trippable\n   if (name_end == string_view::npos) {\n     return util::nullopt;\n   }\n \n   auto name = segment.substr(0, name_end);\n-  auto value = segment.substr(name_end + 1);\n-  if (value == null_fallback) {\n-    return Key{name, util::nullopt};\n+  std::string value;\n+  if (options.url_decode_segments) {\n+    // Static method, so we have no better place for it\n+    util::InitializeUTF8();\n+    auto raw_value =\n+        util::string_view(segment.data() + name_end + 1, segment.size() - name_end - 1);\n\nReview comment:\n       Just to avoid a copy, but this can be done as `string_view(segment).substr(...)` instead.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-01T19:29:33.708+0000",
                    "updated": "2021-06-01T19:29:33.708+0000",
                    "started": "2021-06-01T19:29:33.708+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "604722",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/605185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#discussion_r643964961\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -259,15 +274,29 @@ Result<std::string> KeyValuePartitioning::Format(const compute::Expression& expr\n   return FormatValues(values);\n }\n \n-std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n+DirectoryPartitioning::DirectoryPartitioning(std::shared_ptr<Schema> schema,\n+                                             ArrayVector dictionaries,\n+                                             KeyValuePartitioningOptions options)\n+    : KeyValuePartitioning(std::move(schema), std::move(dictionaries), options) {\n+  if (options.url_decode_segments) {\n+    util::InitializeUTF8();\n+  }\n+}\n+\n+Result<std::vector<KeyValuePartitioning::Key>> DirectoryPartitioning::ParseKeys(\n     const std::string& path) const {\n   std::vector<Key> keys;\n \n   int i = 0;\n   for (auto&& segment : fs::internal::SplitAbstractPath(path)) {\n     if (i >= schema_->num_fields()) break;\n \n-    keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n+    if (options_.url_decode_segments) {\n+      ARROW_ASSIGN_OR_RAISE(auto decoded, SafeUriUnescape(segment));\n+      keys.push_back({schema_->field(i++)->name(), std::move(decoded)});\n+    } else {\n+      keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n\nReview comment:\n       It would seem more consistent. I don't see any reason to make a difference between the two cases.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T13:31:46.682+0000",
                    "updated": "2021-06-02T13:31:46.682+0000",
                    "started": "2021-06-02T13:31:46.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605185",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/605188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#discussion_r643964961\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.cc\n##########\n@@ -259,15 +274,29 @@ Result<std::string> KeyValuePartitioning::Format(const compute::Expression& expr\n   return FormatValues(values);\n }\n \n-std::vector<KeyValuePartitioning::Key> DirectoryPartitioning::ParseKeys(\n+DirectoryPartitioning::DirectoryPartitioning(std::shared_ptr<Schema> schema,\n+                                             ArrayVector dictionaries,\n+                                             KeyValuePartitioningOptions options)\n+    : KeyValuePartitioning(std::move(schema), std::move(dictionaries), options) {\n+  if (options.url_decode_segments) {\n+    util::InitializeUTF8();\n+  }\n+}\n+\n+Result<std::vector<KeyValuePartitioning::Key>> DirectoryPartitioning::ParseKeys(\n     const std::string& path) const {\n   std::vector<Key> keys;\n \n   int i = 0;\n   for (auto&& segment : fs::internal::SplitAbstractPath(path)) {\n     if (i >= schema_->num_fields()) break;\n \n-    keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n+    if (options_.url_decode_segments) {\n+      ARROW_ASSIGN_OR_RAISE(auto decoded, SafeUriUnescape(segment));\n+      keys.push_back({schema_->field(i++)->name(), std::move(decoded)});\n+    } else {\n+      keys.push_back({schema_->field(i++)->name(), std::move(segment)});\n\nReview comment:\n       It would seem more consistent. I don't see any reason to make a difference between the two cases.\r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T13:36:02.704+0000",
                    "updated": "2021-06-02T13:36:02.704+0000",
                    "started": "2021-06-02T13:36:02.703+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605188",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/605190",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#discussion_r643966738\n\n\n\n##########\nFile path: cpp/src/arrow/dataset/partition.h\n##########\n@@ -89,8 +90,26 @@ class ARROW_DS_EXPORT Partitioning {\n   std::shared_ptr<Schema> schema_;\n };\n \n+/// \\brief The encoding of partition segments.\n+enum class SegmentEncoding : int8_t {\n+  /// No encoding.\n+  None = 0,\n+  /// Segment values are URL-encoded.\n+  Url = 1,\n\nReview comment:\n       Nit, but we use `Uri` in most of the code base (including `uri.h` :-)).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T13:36:47.857+0000",
                    "updated": "2021-06-02T13:36:47.857+0000",
                    "started": "2021-06-02T13:36:47.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605190",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/605237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#issuecomment-853074495\n\n\n   I added UTF-8 validation and renamed URL to URI.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T14:26:32.090+0000",
                    "updated": "2021-06-02T14:26:32.090+0000",
                    "started": "2021-06-02T14:26:32.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605237",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/605264",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264#issuecomment-853118245\n\n\n   It seems there are CI failures on Windows.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-02T15:20:14.329+0000",
                    "updated": "2021-06-02T15:20:14.329+0000",
                    "started": "2021-06-02T15:20:14.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "605264",
                    "issueId": "13376524"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/worklog/607972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou closed pull request #10264:\nURL: https://github.com/apache/arrow/pull/10264\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-06-07T16:24:58.224+0000",
                    "updated": "2021-06-07T16:24:58.224+0000",
                    "started": "2021-06-07T16:24:58.224+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "607972",
                    "issueId": "13376524"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@312a0592[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c3bfd94[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@586d8049[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5b39018d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@b39938a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6279c76e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56227ca0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@45043a80[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2664469[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2e08b1fc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b0a0fe1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@f3ef83a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jun 07 16:24:50 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-06-07T16:24:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12644/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-05-04T09:31:50.000+0000",
        "updated": "2021-11-17T12:59:55.000+0000",
        "timeoriginalestimate": null,
        "description": "I'm using Spark (3.1.1) to write a dataframe to a partitioned parquet dataset (using delta.io) which is partitioned by a timestamp field.\r\n\r\nThe relevant Spark code:\r\n{code:java}\r\n// code placeholder\r\n(\r\n  df.withColumn(\r\n                \"Date\",\r\n                sf.date_trunc(\r\n                    \"DAY\",\r\n                    sf.from_unixtime(\r\n                        (sf.col(\"MyEpochField\")),\r\n                    ),\r\n                ),\r\n            )\r\n    .write.format(\"delta\")\r\n    .mode(\"append\")\r\n    .partitionBy(\"Date\")\r\n    .save(\"...\")\r\n\r\n{code}\r\nThis gives a structure like following:\r\n{code:java}\r\n// code placeholder\r\n/tip\r\n/tip/Date=2021-05-04 00%3A00%3A00\r\n/tip/Date=2021-05-04 00%3A00%3A00/Time=2021-05-04 07%3A27%3A00\r\n/tip/Date=2021-05-04 00%3A00%3A00/Time=2021-05-04 07%3A27%3A00/part-00000-8846eb80-a369-43f6-a715-fec9cf1adf95.c000.snappy.parquet\r\n\r\n{code}\r\nNotice the : character is (url?) encoded because of fs protocol violation.\r\n\r\nWhen i try to open this dataset using delta-rs ([https://github.com/delta-io/delta-rs)]\u00a0which uses Arrow below the hood, then an error is raised trying to parse the Date (folder) value.\r\n{code:java}\r\n// code placeholder\r\npyarrow.lib.ArrowInvalid: error parsing '2021-05-03 00%3A00%3A00' as scalar of type timestamp[ns]\r\n{code}\r\nIt seems this error is raised in\u00a0ScalarParseImpl =>\u00a0ParseValue =>\u00a0StringConverter<TimestampType>::Convert =>\u00a0ParseTimestampISO8601\r\n\r\nThe mentioned parse method does support for format:\r\n{code:java}\r\n// code placeholder\r\nstatic inline bool ParseTimestampISO8601(const char* s, size_t length,\r\n                                         TimeUnit::type unit,\r\n                                         TimestampType::c_type* out) {\r\n  using seconds_type = std::chrono::duration<TimestampType::c_type>;  // We allow the following formats for all units:\r\n  // - \"YYYY-MM-DD\"\r\n  // - \"YYYY-MM-DD[ T]hhZ?\"\r\n  // - \"YYYY-MM-DD[ T]hh:mmZ?\"\r\n  // - \"YYYY-MM-DD[ T]hh:mm:ssZ?\"\r\n<...>{code}\r\nBut may not support (url?) decoding the value upfront?\r\n\r\nQuestions we have:\r\n * Should Arrow support timestamp fields when used as partitioned field?\r\n * Where to decode?\r\n\r\n\u00a0\r\n\r\nSome more information from the writing side.\r\n\r\nThe writing is initiated using\u00a0FileFormatWriter.write that eventually uses a\u00a0DynamicPartitionDataWriter (passing in the partitionColumns through the job description).\r\n\r\nHere the actual \"value\" is rendered and concatennated.\r\n{code:java}\r\n// code placeholder\r\n  /** Expression that given partition columns builds a path string like: col1=val/col2=val/... */\r\n  private lazy val partitionPathExpression: Expression = Concat(\r\n    description.partitionColumns.zipWithIndex.flatMap { case (c, i) =>\r\n      val partitionName = ScalaUDF(\r\n        ExternalCatalogUtils.getPartitionPathString _,\r\n        StringType,\r\n        Seq(Literal(c.name), Cast(c, StringType, Option(description.timeZoneId))))\r\n      if (i == 0) Seq(partitionName) else Seq(Literal(Path.SEPARATOR), partitionName)\r\n    })\r\n\r\n{code}\r\nWhere the encoding is done in:\r\n\r\n[https://github.com/apache/spark/blob/v3.0.0/sql/catalyst/src/main/scala/org/apache/spark/sql/catalyst/catalog/ExternalCatalogUtils.scala#L66]\r\n\r\nIf i understand correct, then Arrow should provide the equivalent of\u00a0unescapePathName for fields used as partitioned columns.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Support reading date/time-partitioned datasets accounting for URL encoding (Spark)",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17338980",
                    "id": "17338980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, it looks like we may need/want to URL-decode paths at some point, though we need to figure out how to handle that. (For instance: presumably it usually doesn't make sense to URL-decode local file system paths, but it looks like Spark may URL-encode paths so we need some way to enable that optionally?)\r\n\r\nThis also looks somewhat related to ARROW-11378, in that partitioning by a timestamp is rather unusual (the cardinality would normally be too high to make for a worthwhile partition, no?).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-04T13:14:09.204+0000",
                    "updated": "2021-05-04T13:14:09.204+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17339072",
                    "id": "17339072",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=peebor%40gmail.com",
                        "name": "peebor@gmail.com",
                        "key": "peebor@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Bormans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~lidavidm]\u00a0It looks a bit wierd at first sight maybe but the benifit of doing it like this is:\r\n * In Spark it's a (string-typed) timestamp field, thus allowing >= / <= operators for running a query, without any risk of misinterpreting date/time as a string.\r\n * Secondly this example is a truncated timestamp value, so with\u00a0\r\nsf.date_trunc(\"DAY\",\r\nyou do see hours/minutes, etc... but it's all trunc'ed values.\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=peebor%40gmail.com",
                        "name": "peebor@gmail.com",
                        "key": "peebor@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Paul Bormans",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-05-04T15:14:27.165+0000",
                    "updated": "2021-05-04T15:14:27.165+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17339152",
                    "id": "17339152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I'll add that we do also have a date32 data type (32 bit days since the epoch) which might be more intuitive for truncating to the day and will certainly be more compact.\r\n\r\nThat being said, even if we decide (ala ARROW-11378) to be strict on what formats we allow for output-partitioning, we could probably be considerably more lenient on what we allow Arrow to read in.\r\n\r\nDigging around a bit in Jira it appears that Spark is using java.sql.Timestamp to write out timestamps which states \"Formats a timestamp in JDBC timestamp escape format\" which at least explains why it is in this format.\r\n\r\nSeems like there are potentially 3 issues:\r\n * Should Arrow allow timestamps to be used as partition when writing datasets and, if so, what format (ARROW-11378)\r\n * Add the ability for Arrow to url decode filenames (this issue?)\r\n * Arrow should be able to infer columns written using JDBC escape format (may not be an issue after this issues is resolved but, if it is, it is probably a new issue)\r\n\r\n\u00a0\r\n\r\n> presumably it usually doesn't make sense to URL-decode local file system paths, but it looks like Spark may URL-encode paths so we need some way to enable that optionally?\r\n\r\nI don't think it's too unusual and I think URL decoding has a pretty low false positive rate (i.e. it's not likely to decode something that wasn't meant to be decoded since it's syntax is so obtuse).\u00a0 I'd probably vote towards making it configurable but the default.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-05-04T17:14:02.649+0000",
                    "updated": "2021-05-04T17:14:02.649+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17339166",
                    "id": "17339166",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sounds reasonable to me, thanks for digging up the format & chiming in. Let's use this issue for URL-decoding paths in datasets (and even if we don't infer the type here, it should at least be readable by setting the partition schema). And I don't know if we've 'officially' said this, but presumably we want to maintain some level of Spark compatibility.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-05-04T17:21:13.380+0000",
                    "updated": "2021-05-04T17:22:07.755+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17339675",
                    "id": "17339675",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "body": "Agreed that we should try to be able to read what Spark produces, and that URL-decoding the paths in datasets before parsing the values with a typed converted sounds as a good default. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorisvandenbossche",
                        "name": "jorisvandenbossche",
                        "key": "jorisvandenbossche",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Joris Van den Bossche",
                        "active": true,
                        "timeZone": "Europe/Brussels"
                    },
                    "created": "2021-05-05T13:57:10.148+0000",
                    "updated": "2021-05-05T13:57:10.148+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376524/comment/17358709",
                    "id": "17358709",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 10264\n[https://github.com/apache/arrow/pull/10264]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-06-07T16:24:50.744+0000",
                    "updated": "2021-06-07T16:24:50.744+0000"
                }
            ],
            "maxResults": 6,
            "total": 6,
            "startAt": 0
        },
        "customfield_12311820": "0|z0qpbs:",
        "customfield_12314139": null
    }
}