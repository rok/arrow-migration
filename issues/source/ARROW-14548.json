{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13409594",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594",
    "key": "ARROW-14548",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niyue",
            "name": "niyue",
            "key": "niyue",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=niyue&avatarId=48220",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=niyue&avatarId=48220",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=niyue&avatarId=48220",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=niyue&avatarId=48220"
            },
            "displayName": "Yue Ni",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=niyue",
            "name": "niyue",
            "key": "niyue",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=niyue&avatarId=48220",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=niyue&avatarId=48220",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=niyue&avatarId=48220",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=niyue&avatarId=48220"
            },
            "displayName": "Yue Ni",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 45600,
            "total": 45600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14548/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 76,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/672994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue opened a new pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588\n\n\n   Add advise random memory API for MemoryMappedFile so that client can advise OS about its memory usage if it uses random access\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T07:11:04.219+0000",
                    "updated": "2021-11-02T07:11:04.219+0000",
                    "started": "2021-11-02T07:11:04.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672994",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/672995",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-957154902\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T07:11:37.932+0000",
                    "updated": "2021-11-02T07:11:37.932+0000",
                    "started": "2021-11-02T07:11:37.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672995",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/672996",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on a change in pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#discussion_r740770892\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -719,27 +719,38 @@ Future<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAsync(const IOContext&,\n   return Future<std::shared_ptr<Buffer>>::MakeFinished(ReadAt(position, nbytes));\n }\n \n-Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n-  using ::arrow::internal::MemoryRegion;\n-\n-  RETURN_NOT_OK(memory_map_->CheckClosed());\n-  auto guard_resize = memory_map_->writable()\n-                          ? std::unique_lock<std::mutex>(memory_map_->resize_lock())\n+Status MemoryMappedFile::ReadRangesToMemoryRegions(\n+    const std::vector<ReadRange>& ranges,\n+    std::shared_ptr<MemoryMappedFile::MemoryMap>& memory_map,\n+    std::vector<MemoryRegion>& regions) {\n+  RETURN_NOT_OK(memory_map->CheckClosed());\n+  auto guard_resize = memory_map->writable()\n+                          ? std::unique_lock<std::mutex>(memory_map->resize_lock())\n                           : std::unique_lock<std::mutex>();\n \n-  std::vector<MemoryRegion> regions(ranges.size());\n   for (size_t i = 0; i < ranges.size(); ++i) {\n     const auto& range = ranges[i];\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto size,\n-        internal::ValidateReadRange(range.offset, range.length, memory_map_->size()));\n-    DCHECK_NE(memory_map_->data(), nullptr);\n-    regions[i] = {const_cast<uint8_t*>(memory_map_->data() + range.offset),\n+    ARROW_ASSIGN_OR_RAISE(auto size, internal::ValidateReadRange(\n+                                         range.offset, range.length, memory_map->size()));\n+    DCHECK_NE(memory_map->data(), nullptr);\n+    regions[i] = {const_cast<uint8_t*>(memory_map->data() + range.offset),\n                   static_cast<size_t>(size)};\n   }\n+  return Status::OK();\n+}\n+\n+Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n+  std::vector<MemoryRegion> regions(ranges.size());\n+  RETURN_NOT_OK(ReadRangesToMemoryRegions(ranges, memory_map_, regions));\n   return ::arrow::internal::MemoryAdviseWillNeed(regions);\n\nReview comment:\n       Previously we already have `WillNeed` API in `MemoryMappedFile` to advise OS about the needed ranges, I add an `AdviseRandom` API similarly to indicate the random access pattern. Initially, I would like to make this API consistent with `WillNeed` and simply call it `Random` but I think this may be slightly confusing as well, so I name it `AdviseRandom` currently. Let me know if you have other naming suggestion for this API.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T07:16:13.777+0000",
                    "updated": "2021-11-02T07:16:13.777+0000",
                    "started": "2021-11-02T07:16:13.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672996",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/672997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on a change in pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#discussion_r740771778\n\n\n\n##########\nFile path: cpp/src/arrow/util/io_util.cc\n##########\n@@ -1090,19 +1106,15 @@ Status MemoryAdviseWillNeed(const std::vector<MemoryRegion>& regions) {\n   }\n   return Status::OK();\n #elif defined(POSIX_MADV_WILLNEED)\n-  for (const auto& region : regions) {\n-    if (region.size != 0) {\n-      const auto aligned = align_region(region);\n-      int err = posix_madvise(aligned.addr, aligned.size, POSIX_MADV_WILLNEED);\n-      // EBADF can be returned on Linux in the following cases:\n-      // - the kernel version is older than 3.9\n-      // - the kernel was compiled with CONFIG_SWAP disabled (ARROW-9577)\n-      if (err != 0 && err != EBADF) {\n-        return IOErrorFromErrno(err, \"posix_madvise failed\");\n-      }\n-    }\n-  }\n\nReview comment:\n       I extract this piece of code from `MemoryAdviseWillNeed` API so that it can be used to provide other advices to OS.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T07:18:07.412+0000",
                    "updated": "2021-11-02T07:18:07.412+0000",
                    "started": "2021-11-02T07:18:07.411+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672997",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/673541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-957154902\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:08:26.953+0000",
                    "updated": "2021-11-02T18:08:26.953+0000",
                    "started": "2021-11-02T18:08:26.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673541",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/673550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue opened a new pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588\n\n\n   Add advise random memory API for MemoryMappedFile so that client can advise OS about its memory usage if it uses random access\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:09:36.428+0000",
                    "updated": "2021-11-02T18:09:36.428+0000",
                    "started": "2021-11-02T18:09:36.428+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673550",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/673602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on a change in pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#discussion_r740770892\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -719,27 +719,38 @@ Future<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAsync(const IOContext&,\n   return Future<std::shared_ptr<Buffer>>::MakeFinished(ReadAt(position, nbytes));\n }\n \n-Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n-  using ::arrow::internal::MemoryRegion;\n-\n-  RETURN_NOT_OK(memory_map_->CheckClosed());\n-  auto guard_resize = memory_map_->writable()\n-                          ? std::unique_lock<std::mutex>(memory_map_->resize_lock())\n+Status MemoryMappedFile::ReadRangesToMemoryRegions(\n+    const std::vector<ReadRange>& ranges,\n+    std::shared_ptr<MemoryMappedFile::MemoryMap>& memory_map,\n+    std::vector<MemoryRegion>& regions) {\n+  RETURN_NOT_OK(memory_map->CheckClosed());\n+  auto guard_resize = memory_map->writable()\n+                          ? std::unique_lock<std::mutex>(memory_map->resize_lock())\n                           : std::unique_lock<std::mutex>();\n \n-  std::vector<MemoryRegion> regions(ranges.size());\n   for (size_t i = 0; i < ranges.size(); ++i) {\n     const auto& range = ranges[i];\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto size,\n-        internal::ValidateReadRange(range.offset, range.length, memory_map_->size()));\n-    DCHECK_NE(memory_map_->data(), nullptr);\n-    regions[i] = {const_cast<uint8_t*>(memory_map_->data() + range.offset),\n+    ARROW_ASSIGN_OR_RAISE(auto size, internal::ValidateReadRange(\n+                                         range.offset, range.length, memory_map->size()));\n+    DCHECK_NE(memory_map->data(), nullptr);\n+    regions[i] = {const_cast<uint8_t*>(memory_map->data() + range.offset),\n                   static_cast<size_t>(size)};\n   }\n+  return Status::OK();\n+}\n+\n+Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n+  std::vector<MemoryRegion> regions(ranges.size());\n+  RETURN_NOT_OK(ReadRangesToMemoryRegions(ranges, memory_map_, regions));\n   return ::arrow::internal::MemoryAdviseWillNeed(regions);\n\nReview comment:\n       Previously we already have `WillNeed` API in `MemoryMappedFile` to advise OS about the needed ranges, I add an `AdviseRandom` API similarly to indicate the random access pattern. Initially, I would like to make this API consistent with `WillNeed` and simply call it `Random` but I think this may be slightly confusing as well, so I name it `AdviseRandom` currently. Let me know if you have other naming suggestion for this API.\n\n##########\nFile path: cpp/src/arrow/util/io_util.cc\n##########\n@@ -1090,19 +1106,15 @@ Status MemoryAdviseWillNeed(const std::vector<MemoryRegion>& regions) {\n   }\n   return Status::OK();\n #elif defined(POSIX_MADV_WILLNEED)\n-  for (const auto& region : regions) {\n-    if (region.size != 0) {\n-      const auto aligned = align_region(region);\n-      int err = posix_madvise(aligned.addr, aligned.size, POSIX_MADV_WILLNEED);\n-      // EBADF can be returned on Linux in the following cases:\n-      // - the kernel version is older than 3.9\n-      // - the kernel was compiled with CONFIG_SWAP disabled (ARROW-9577)\n-      if (err != 0 && err != EBADF) {\n-        return IOErrorFromErrno(err, \"posix_madvise failed\");\n-      }\n-    }\n-  }\n\nReview comment:\n       I extract this piece of code from `MemoryAdviseWillNeed` API so that it can be used to provide other advices to OS.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:16:25.805+0000",
                    "updated": "2021-11-02T18:16:25.805+0000",
                    "started": "2021-11-02T18:16:25.805+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673602",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674075",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-957154902\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:37:36.542+0000",
                    "updated": "2021-11-02T21:37:36.542+0000",
                    "started": "2021-11-02T21:37:36.542+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674075",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue opened a new pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588\n\n\n   Add advise random memory API for MemoryMappedFile so that client can advise OS about its memory usage if it uses random access\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:38:34.954+0000",
                    "updated": "2021-11-02T21:38:34.954+0000",
                    "started": "2021-11-02T21:38:34.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674083",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674132",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on a change in pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#discussion_r740770892\n\n\n\n##########\nFile path: cpp/src/arrow/io/file.cc\n##########\n@@ -719,27 +719,38 @@ Future<std::shared_ptr<Buffer>> MemoryMappedFile::ReadAsync(const IOContext&,\n   return Future<std::shared_ptr<Buffer>>::MakeFinished(ReadAt(position, nbytes));\n }\n \n-Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n-  using ::arrow::internal::MemoryRegion;\n-\n-  RETURN_NOT_OK(memory_map_->CheckClosed());\n-  auto guard_resize = memory_map_->writable()\n-                          ? std::unique_lock<std::mutex>(memory_map_->resize_lock())\n+Status MemoryMappedFile::ReadRangesToMemoryRegions(\n+    const std::vector<ReadRange>& ranges,\n+    std::shared_ptr<MemoryMappedFile::MemoryMap>& memory_map,\n+    std::vector<MemoryRegion>& regions) {\n+  RETURN_NOT_OK(memory_map->CheckClosed());\n+  auto guard_resize = memory_map->writable()\n+                          ? std::unique_lock<std::mutex>(memory_map->resize_lock())\n                           : std::unique_lock<std::mutex>();\n \n-  std::vector<MemoryRegion> regions(ranges.size());\n   for (size_t i = 0; i < ranges.size(); ++i) {\n     const auto& range = ranges[i];\n-    ARROW_ASSIGN_OR_RAISE(\n-        auto size,\n-        internal::ValidateReadRange(range.offset, range.length, memory_map_->size()));\n-    DCHECK_NE(memory_map_->data(), nullptr);\n-    regions[i] = {const_cast<uint8_t*>(memory_map_->data() + range.offset),\n+    ARROW_ASSIGN_OR_RAISE(auto size, internal::ValidateReadRange(\n+                                         range.offset, range.length, memory_map->size()));\n+    DCHECK_NE(memory_map->data(), nullptr);\n+    regions[i] = {const_cast<uint8_t*>(memory_map->data() + range.offset),\n                   static_cast<size_t>(size)};\n   }\n+  return Status::OK();\n+}\n+\n+Status MemoryMappedFile::WillNeed(const std::vector<ReadRange>& ranges) {\n+  std::vector<MemoryRegion> regions(ranges.size());\n+  RETURN_NOT_OK(ReadRangesToMemoryRegions(ranges, memory_map_, regions));\n   return ::arrow::internal::MemoryAdviseWillNeed(regions);\n\nReview comment:\n       Previously we already have `WillNeed` API in `MemoryMappedFile` to advise OS about the needed ranges, I add an `AdviseRandom` API similarly to indicate the random access pattern. Initially, I would like to make this API consistent with `WillNeed` and simply call it `Random` but I think this may be slightly confusing as well, so I name it `AdviseRandom` currently. Let me know if you have other naming suggestion for this API.\n\n##########\nFile path: cpp/src/arrow/util/io_util.cc\n##########\n@@ -1090,19 +1106,15 @@ Status MemoryAdviseWillNeed(const std::vector<MemoryRegion>& regions) {\n   }\n   return Status::OK();\n #elif defined(POSIX_MADV_WILLNEED)\n-  for (const auto& region : regions) {\n-    if (region.size != 0) {\n-      const auto aligned = align_region(region);\n-      int err = posix_madvise(aligned.addr, aligned.size, POSIX_MADV_WILLNEED);\n-      // EBADF can be returned on Linux in the following cases:\n-      // - the kernel version is older than 3.9\n-      // - the kernel was compiled with CONFIG_SWAP disabled (ARROW-9577)\n-      if (err != 0 && err != EBADF) {\n-        return IOErrorFromErrno(err, \"posix_madvise failed\");\n-      }\n-    }\n-  }\n\nReview comment:\n       I extract this piece of code from `MemoryAdviseWillNeed` API so that it can be used to provide other advices to OS.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T21:44:22.665+0000",
                    "updated": "2021-11-02T21:44:22.665+0000",
                    "started": "2021-11-02T21:44:22.664+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674132",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958605062\n\n\n   Thanks for the PR.\r\n   I'm not sure if exposing madvise options is beneficial. If we expose `RANDOM`, then why not `SEQUENTIAL`?\r\n   I prefer don't expose these access pattern related options, just let OS do the job.\r\n   `WILLNEED` is a useful option IMO, I suppose OS won't invent a reading without hints.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T02:27:15.357+0000",
                    "updated": "2021-11-03T02:27:15.357+0000",
                    "started": "2021-11-03T02:27:15.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674318",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 edited a comment on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958605062\n\n\n   Thanks for the PR.\r\n   I'm not sure if exposing madvise options is beneficial. If we expose `RANDOM`, then why not `SEQUENTIAL`?\r\n   I prefer don't expose these access pattern related options, just let OS do the job.\r\n   `WILLNEED` is a useful option IMO, I suppose OS won't invent a reading without hints.\r\n   @pitrou \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T02:27:59.798+0000",
                    "updated": "2021-11-03T02:27:59.798+0000",
                    "started": "2021-11-03T02:27:59.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674319",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958612133\n\n\n   > Thanks for the PR.\r\n   > I'm not sure if exposing madvise options is beneficial. If we expose `RANDOM`, then why not `SEQUENTIAL`?\r\n   > I prefer don't expose these access pattern related options, just let OS do the job.\r\n   > `WILLNEED` is a useful option IMO, I suppose OS won't invent a reading without hints.\r\n   \r\n   I think probably someone else may need `SEQUENTIAL` as well. In my test, if the access pattern is random access (binary searching an array in a memory mapped arrow IPC file in my case), I find OS (Linux) will do read ahead, and lots of IO are wasted (90% in my test), page cache is full of never used data as well. \r\n   \r\n   I wrote a program to access an array in a mmap record batch with binary exponential indexes (`arr[1], arr[2], arr[4], arr[8], ...`)\r\n   to visualize what I found, before applying the random advice, the page cache for this file looks like this:\r\n   ![image](https://user-images.githubusercontent.com/27754/140003696-8a544000-162f-4e94-9fd9-00e1115c672d.png)\r\n   \r\n   After applying the random advice, the page cache for this file looks like this:\r\n   ![image](https://user-images.githubusercontent.com/27754/140003550-64c57ea8-fea0-47b0-bb74-56b7967ee3fe.png)\r\n   \r\n   This probably not a problem for a fast storage (SSD), but the IO will become bottleneck if the storage bandwidth is limited.\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T02:50:38.266+0000",
                    "updated": "2021-11-03T02:50:38.266+0000",
                    "started": "2021-11-03T02:50:38.265+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674346",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674348",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "niyue edited a comment on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958612133\n\n\n   > Thanks for the PR.\r\n   > I'm not sure if exposing madvise options is beneficial. If we expose `RANDOM`, then why not `SEQUENTIAL`?\r\n   > I prefer don't expose these access pattern related options, just let OS do the job.\r\n   > `WILLNEED` is a useful option IMO, I suppose OS won't invent a reading without hints.\r\n   \r\n   I think probably someone else may need `SEQUENTIAL` as well. In my test, if the access pattern is random access (binary searching an array in a memory mapped arrow IPC file in my case), I find OS (Linux) will prefetch data, and lots of IO are wasted (90% in my test), page cache is full of never used data as well. \r\n   \r\n   I wrote a program to access an array in a mmap record batch with binary exponential indexes (`arr[1], arr[2], arr[4], arr[8], ...`)\r\n   to visualize what I found, before applying the random advice, the page cache for this file looks like this:\r\n   ![image](https://user-images.githubusercontent.com/27754/140003696-8a544000-162f-4e94-9fd9-00e1115c672d.png)\r\n   \r\n   After applying the random advice, the page cache for this file looks like this:\r\n   ![image](https://user-images.githubusercontent.com/27754/140003550-64c57ea8-fea0-47b0-bb74-56b7967ee3fe.png)\r\n   \r\n   This probably not a problem for a fast storage (SSD), but the IO will become bottleneck if the storage bandwidth is limited.\r\n   \r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T02:54:05.773+0000",
                    "updated": "2021-11-03T02:54:05.773+0000",
                    "started": "2021-11-03T02:54:05.773+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674348",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958669125\n\n\n   Thanks @niyue !\r\n   I did a similar test to read randomly at most 1/4 pages of a memory mapped file with 1G size. Without `madvise`, almost all 1G data is in the page cache after program finishes.\r\n   With `madvise(random)`, only 22% is in the page cache, as expected.\r\n   Though I'm still not sure of the usefulness of tuning this option manually. In practice, I think it's pretty hard to get it right.\r\n   \r\n   **Test code:**\r\n   ```c\r\n   // test.c\r\n   \r\n   #include <stdio.h>\r\n   #include <stdlib.h>\r\n   #include <sys/stat.h>\r\n   #include <sys/mman.h>\r\n   #include <fcntl.h>\r\n   \r\n   const unsigned seed = 42;\r\n   const int N = 4;\r\n   \r\n   // random read at most 1/N pages\r\n   int test_random_read(const char *p, size_t sz)\r\n   {\r\n       srand(seed);\r\n   \r\n       int sum = 0;\r\n       for (size_t i = 0; i < sz/4096/N; ++i) {\r\n           double r = (double)rand() / RAND_MAX;\r\n           r *= (sz - 2);\r\n           sum += p[(size_t)r];\r\n       }\r\n       return sum;\r\n   }\r\n   \r\n   int main(int argc, char *argv[])\r\n   {\r\n       // test.bin is filled with 1G ramdon data\r\n       int fd = open(\"./test.bin\", O_RDONLY);\r\n       if (fd < 0) abort();\r\n   \r\n       struct stat statbuf;\r\n       if (fstat(fd, &statbuf) < 0) abort();\r\n       const size_t sz = statbuf.st_size;\r\n   \r\n       char *p = mmap(NULL, sz, PROT_READ, MAP_SHARED, fd, 0);\r\n       if (p == MAP_FAILED) abort();\r\n       printf(\"%d pages mapped\\n\", (int)(sz/4096));\r\n   \r\n       // in my test box (ubuntu20.04, linux 5.8, 16G ram, x86_64)\r\n       // - with madvise, 22% (1/N) file is in page cache when program finishes\r\n       // - without madvise, 98% file is in page cache\r\n       if (argc == 1) {\r\n           printf(\"with madvise(random)\\n\");\r\n           if (posix_madvise(p, sz, POSIX_MADV_RANDOM) != 0) abort();\r\n       } else {\r\n           printf(\"without madvise\\n\");\r\n       }\r\n   \r\n       int sum = test_random_read(p, sz);\r\n   \r\n       munmap(p, sz);\r\n       return sum;\r\n   }\r\n   ```\r\n   \r\n   **Test steps:**\r\n   \r\n   - Build `pcstat` binary from https://github.com/tobert/pcstat, master branch.\r\n   - Steps:\r\n   ```bash\r\n   # create 1G test file\r\n   $ dd if=/dev/urandom of=test.bin bs=1M count=1K\r\n   1024+0 records in\r\n   1024+0 records out\r\n   1073741824 bytes (1.1 GB, 1.0 GiB) copied, 15.5135 s, 69.2 MB/s\r\n   $ sudo sync\r\n   \r\n   # make sure test.bin is not in page cache\r\n   $ sudo sh -c 'echo 1 > /proc/sys/vm/drop_caches'\r\n   $ pcstat test.bin\r\n   +----------+----------------+------------+-----------+---------+\r\n   | Name     | Size (bytes)   | Pages      | Cached    | Percent |\r\n   |----------+----------------+------------+-----------+---------|\r\n   | test.bin | 1073741824     | 262144     | 0         |   0.000 |\r\n   +----------+----------------+------------+-----------+---------+\r\n   \r\n   # evaluate test program with madvise(random)\r\n   $ gcc -O3 test.c && ./a.out\r\n   262144 pages mapped\r\n   with madvise(random)\r\n   $ pcstat test.bin\r\n   +----------+----------------+------------+-----------+---------+\r\n   | Name     | Size (bytes)   | Pages      | Cached    | Percent |\r\n   |----------+----------------+------------+-----------+---------|\r\n   | test.bin | 1073741824     | 262144     | 57943     |  22.104 |\r\n   +----------+----------------+------------+-----------+---------+\r\n   \r\n   # make sure test.bin is not in page cache\r\n   $ sudo sh -c 'echo 1 > /proc/sys/vm/drop_caches'\r\n   $ pcstat test.bin\r\n   +----------+----------------+------------+-----------+---------+\r\n   | Name     | Size (bytes)   | Pages      | Cached    | Percent |\r\n   |----------+----------------+------------+-----------+---------|\r\n   | test.bin | 1073741824     | 262144     | 0         |   0.000 |\r\n   +----------+----------------+------------+-----------+---------+\r\n   \r\n   # evaluate test program without madvise\r\n   $ gcc -O3 test.c && ./a.out nomadvise\r\n   262144 pages mapped\r\n   without madvise\r\n   $ pcstat test.bin\r\n   +----------+----------------+------------+-----------+---------+\r\n   | Name     | Size (bytes)   | Pages      | Cached    | Percent |\r\n   |----------+----------------+------------+-----------+---------|\r\n   | test.bin | 1073741824     | 262144     | 258625    |  98.658 |\r\n   +----------+----------------+------------+-----------+---------+\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T05:42:56.594+0000",
                    "updated": "2021-11-03T05:42:56.594+0000",
                    "started": "2021-11-03T05:42:56.594+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674392",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958815106\n\n\n   What if we simply always pass `POSIX_MADV_RANDOM`? `MemoryAdviseWillNeed` is used in situations where the access pattern is not sequential.\r\n   \r\n   (the OS should do fine on its own for sequential access patterns, AFAIK)\r\n   \r\n   cc @lidavidm \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T10:12:46.310+0000",
                    "updated": "2021-11-03T10:12:46.310+0000",
                    "started": "2021-11-03T10:12:46.309+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674495",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou edited a comment on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958815106\n\n\n   What if we simply always pass `POSIX_MADV_RANDOM`? `MemoryAdviseWillNeed` is used in situations where the access pattern is not sequential.\r\n   \r\n   (the OS should do fine on its own for sequential access patterns, AFAIK)\r\n   \r\n   cc @lidavidm @westonpace \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T10:12:49.459+0000",
                    "updated": "2021-11-03T10:12:49.459+0000",
                    "started": "2021-11-03T10:12:49.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674496",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674498",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958820921\n\n\n   Note however that the entire point of `MemoryAdviseWillNeed` is to induce prefetching _before_ actually reading it (to hide read latencies). If the OS doesn't actually prefetch anything, then the call is useless. It's not obvious how `POSIX_MADV_RANDOM` is used by the Linux kernel here.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T10:15:34.718+0000",
                    "updated": "2021-11-03T10:15:34.718+0000",
                    "started": "2021-11-03T10:15:34.718+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674498",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958826552\n\n\n   Instead we may add an option to the IPC reader to disable advisory hints, for use cases like this one (binary search in a large memory-mapped IPC file).\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T10:18:10.969+0000",
                    "updated": "2021-11-03T10:18:10.969+0000",
                    "started": "2021-11-03T10:18:10.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674501",
                    "issueId": "13409594"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409594/worklog/674535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on pull request #11588:\nURL: https://github.com/apache/arrow/pull/11588#issuecomment-958928624\n\n\n   Does WILLNEED play nicely with RANDOM?  It seems like we would always want to specify both for IPC.  I haven't done much testing of this myself.  Typically when I work with IPC data it is in-memory already.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T11:08:35.393+0000",
                    "updated": "2021-11-03T11:08:35.393+0000",
                    "started": "2021-11-03T11:08:35.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674535",
                    "issueId": "13409594"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 45600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ca7f40a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2c791c71[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7644d600[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@12bad62d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3b3432f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@258dca44[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7529fc23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@31e65715[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@28d5c03d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@63c1e089[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59b3c036[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5aee7aea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 45600,
        "customfield_12312520": null,
        "customfield_12312521": "2021-11-02 06:58:26.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14548/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-11-02T06:58:26.000+0000",
        "updated": "2022-05-07T01:50:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, the `MemoryMappedFile` API allows users to specify a list of read ranges to advise operating system to prefetch `WillNeed` data for better IO performance, and sometimes, the application's read pattern is random access, and `POSIX_MADV_RANDOM` advice should be given to operating system to indicate this so that application with random access capability can perform better by leveraging this API.\r\n\r\nhttps://man7.org/linux/man-pages/man2/madvise.2.html",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 45600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add madvise random support for memory mapped file",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0wd5k:",
        "customfield_12314139": null
    }
}