{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13263834",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834",
    "key": "ARROW-6964",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "dataset",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12572782",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12572782",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13264619",
                    "key": "ARROW-7001",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13264619",
                    "fields": {
                        "summary": "[C++] Develop threading APIs to accommodate nested parallelism ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
            "name": "fsaintjacques",
            "key": "fsaintjacques",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
            },
            "displayName": "Francois Saint-Jacques",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6964/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 20,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/332756",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721\n \n \n   The caller may request a parallel construction of the table. Scanner was refactor to own the ScanOptions and ScanContext members.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T18:16:49.347+0000",
                    "updated": "2019-10-23T18:16:49.347+0000",
                    "started": "2019-10-23T18:16:49.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332756",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/332758",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338204420\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n \n Review comment:\n   I prefer the explicit loop than nested Visitor.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T18:17:19.318+0000",
                    "updated": "2019-10-23T18:17:19.318+0000",
                    "started": "2019-10-23T18:17:19.317+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332758",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/332760",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338204749\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -37,6 +38,7 @@ namespace dataset {\n /// \\brief Shared state for a Scan operation\n struct ARROW_DS_EXPORT ScanContext {\n   MemoryPool* pool = arrow::default_memory_pool();\n+  internal::ThreadPool* thread_pool = arrow::internal::GetCpuThreadPool();\n \n Review comment:\n   Maybe it's time to expose a common `ResourceContext` class that has a MemoryPool and a ThreadPool?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T18:18:03.255+0000",
                    "updated": "2019-10-23T18:18:03.255+0000",
                    "started": "2019-10-23T18:18:03.254+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332760",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/332770",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#issuecomment-545577394\n \n \n   https://issues.apache.org/jira/browse/ARROW-6964\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-23T18:31:06.012+0000",
                    "updated": "2019-10-23T18:31:06.012+0000",
                    "started": "2019-10-23T18:31:06.012+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "332770",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338567445\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n \n Review comment:\n   I don't think it's useful to make this `inline`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:57.798+0000",
                    "updated": "2019-10-24T13:29:57.798+0000",
                    "started": "2019-10-24T13:29:57.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333401",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338572993\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n+    tasks.emplace_back(std::move(scan_task.ValueOrDie()));\n+  }\n+\n+  // The thread pool is given via ScanContext's ThreadPool.\n+  auto task_group = arrow::internal::TaskGroup::MakeThreaded(context.thread_pool);\n \n Review comment:\n   There's also `TaskGroup::MakeSerial` if you don't want to repeat yourself in `SerialToTable`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:58.063+0000",
                    "updated": "2019-10-24T13:29:58.063+0000",
                    "started": "2019-10-24T13:29:58.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333402",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338568765\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n+    tasks.emplace_back(std::move(scan_task.ValueOrDie()));\n+  }\n+\n+  // The thread pool is given via ScanContext's ThreadPool.\n+  auto task_group = arrow::internal::TaskGroup::MakeThreaded(context.thread_pool);\n+\n+  // Wrap every ScanTask in a promise that append produced RecordBatches\n+  // into an aggregate vector.\n+  for (size_t i = 0; i < tasks.size(); i++) {\n+    auto consume_task = [&tasks, &agg, i]() -> arrow::Status {\n+      for (auto batch : tasks[i]->Scan()) {\n+        if (!batch.ok()) {\n \n Review comment:\n   `RETURN_NOT_OK` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:58.067+0000",
                    "updated": "2019-10-24T13:29:58.067+0000",
                    "started": "2019-10-24T13:29:58.067+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333403",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338572419\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -109,18 +111,34 @@ Status ScanTaskIteratorFromRecordBatch(std::vector<std::shared_ptr<RecordBatch>>\n ///          yield scan_task\n class ARROW_DS_EXPORT Scanner {\n  public:\n+  Scanner(DataSourceVector sources, std::shared_ptr<ScanOptions> options,\n+          std::shared_ptr<ScanContext> context)\n+      : sources_(std::move(sources)),\n+        options_(std::move(options)),\n+        context_(std::move(context)) {}\n+\n+  virtual ~Scanner() = default;\n+\n   /// \\brief The Scan operator returns a stream of ScanTask. The caller is\n   /// responsible to dispatch/schedule said tasks. Tasks should be safe to run\n   /// in a concurrent fashion and outlive the iterator.\n   virtual ScanTaskIterator Scan() = 0;\n \n-  virtual ~Scanner() = default;\n-\n   /// \\brief Convert a Scanner into a Table.\n   ///\n+  /// \\param[in] use_threads guide if the operation will be parallelized\n+  ///            with the ThreadPool found in ScanContext.\n+  /// \\param[out] out output parameter\n+  ///\n   /// Use this convenience utility with care. This will serially materialize the\n   /// Scan result in memory before creating the Table.\n-  Status ToTable(std::shared_ptr<Table>* out);\n+  Status ToTable(bool use_threads, std::shared_ptr<Table>* out);\n \n Review comment:\n   Shouldn't `use_threads` be part of the ScanOptions?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:29:58.086+0000",
                    "updated": "2019-10-24T13:29:58.086+0000",
                    "started": "2019-10-24T13:29:58.086+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333404",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333422",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338589476\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n+    tasks.emplace_back(std::move(scan_task.ValueOrDie()));\n+  }\n+\n+  // The thread pool is given via ScanContext's ThreadPool.\n+  auto task_group = arrow::internal::TaskGroup::MakeThreaded(context.thread_pool);\n \n Review comment:\n   Oh cool, it does what I want (avoid threads and make the caller do the work).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T13:59:21.991+0000",
                    "updated": "2019-10-24T13:59:21.991+0000",
                    "started": "2019-10-24T13:59:21.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333422",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338612878\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner_test.cc\n ##########\n @@ -125,8 +125,13 @@ TEST_F(TestSimpleScanner, ToTable) {\n \n   auto scanner = std::make_shared<SimpleScanner>(sources, options_, ctx_);\n   std::shared_ptr<Table> actual;\n+\n   ASSERT_OK(scanner->ToTable(&actual));\n+  AssertTablesEqual(*expected, *actual);\n \n+  // There is no guarantee on the ordering when using multiple threads, but\n+  // since the RecordBatch is always the same it will pass.\n \n Review comment:\n   Maybe at some point we need AssertBatchSetsEqual or so\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:41.852+0000",
                    "updated": "2019-10-24T14:52:41.852+0000",
                    "started": "2019-10-24T14:52:41.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333484",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338617176\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n \n Review comment:\n   nit: declare this above the loop where it's used\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:41.855+0000",
                    "updated": "2019-10-24T14:52:41.855+0000",
                    "started": "2019-10-24T14:52:41.855+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333485",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338617496\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n+    tasks.emplace_back(std::move(scan_task.ValueOrDie()));\n+  }\n+\n+  // The thread pool is given via ScanContext's ThreadPool.\n+  auto task_group = arrow::internal::TaskGroup::MakeThreaded(context.thread_pool);\n+\n+  // Wrap every ScanTask in a promise that append produced RecordBatches\n+  // into an aggregate vector.\n+  for (size_t i = 0; i < tasks.size(); i++) {\n+    auto consume_task = [&tasks, &agg, i]() -> arrow::Status {\n+      for (auto batch : tasks[i]->Scan()) {\n+        if (!batch.ok()) {\n \n Review comment:\n   please use `ARROW_ASSIGN_OR_RAISE` here for consistency\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:41.944+0000",
                    "updated": "2019-10-24T14:52:41.944+0000",
                    "started": "2019-10-24T14:52:41.944+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333486",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338618347\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n \n Review comment:\n   please use `ARROW_ASSIGN_OR_RAISE` here for consistency\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:41.950+0000",
                    "updated": "2019-10-24T14:52:41.950+0000",
                    "started": "2019-10-24T14:52:41.950+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333487",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338612872\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner_test.cc\n ##########\n @@ -125,8 +125,13 @@ TEST_F(TestSimpleScanner, ToTable) {\n \n   auto scanner = std::make_shared<SimpleScanner>(sources, options_, ctx_);\n   std::shared_ptr<Table> actual;\n+\n   ASSERT_OK(scanner->ToTable(&actual));\n+  AssertTablesEqual(*expected, *actual);\n \n+  // There is no guarantee on the ordering when using multiple threads, but\n+  // since the RecordBatch is always the same it will pass.\n \n Review comment:\n   Maybe at some point we need AssertBatchSetsEqual or so\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:42.008+0000",
                    "updated": "2019-10-24T14:52:42.008+0000",
                    "started": "2019-10-24T14:52:42.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333488",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338615793\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n \n Review comment:\n   ```suggestion\r\n         batches.emplace_back(std::move(batch));\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:42.039+0000",
                    "updated": "2019-10-24T14:52:42.039+0000",
                    "started": "2019-10-24T14:52:42.039+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333489",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338620686\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.cc\n ##########\n @@ -151,20 +154,79 @@ Status ScannerBuilder::Finish(std::unique_ptr<Scanner>* out) const {\n   return Status::OK();\n }\n \n-Status Scanner::ToTable(std::shared_ptr<Table>* out) {\n+static inline Status SerialToTable(ScanTaskIterator scan_tasks,\n+                                   std::shared_ptr<Table>* out) {\n   std::vector<std::shared_ptr<RecordBatch>> batches;\n \n-  auto it_scantasks = Scan();\n-  RETURN_NOT_OK(it_scantasks.Visit([&batches](std::unique_ptr<ScanTask> task) -> Status {\n-    auto it = task->Scan();\n-    return it.Visit([&batches](std::shared_ptr<RecordBatch> batch) {\n-      batches.push_back(batch);\n-      return Status::OK();\n-    });\n-  }));\n+  for (auto maybe_scan_task : scan_tasks) {\n+    ARROW_ASSIGN_OR_RAISE(auto scan_task, std::move(maybe_scan_task));\n+    for (auto maybe_batch : scan_task->Scan()) {\n+      ARROW_ASSIGN_OR_RAISE(auto batch, std::move(maybe_batch));\n+      batches.emplace_back(batch);\n+    }\n+  }\n \n   return Table::FromRecordBatches(batches, out);\n }\n \n+struct TableAggregator {\n+  void Append(std::shared_ptr<RecordBatch> batch) {\n+    std::lock_guard<std::mutex> lock(m);\n+    batches.emplace_back(std::move(batch));\n+  }\n+\n+  Status Finish(std::shared_ptr<Table>* out) {\n+    return Table::FromRecordBatches(batches, out);\n+  }\n+\n+  std::mutex m;\n+  std::vector<std::shared_ptr<RecordBatch>> batches;\n+};\n+\n+static inline Status ParallelToTable(ScanTaskIterator scan_tasks,\n+                                     const ScanContext& context,\n+                                     std::shared_ptr<Table>* out) {\n+  TableAggregator agg;\n+\n+  // List ScanTasks without consuming them.\n+  std::vector<std::unique_ptr<ScanTask>> tasks;\n+  for (auto scan_task : scan_tasks) {\n+    RETURN_NOT_OK(scan_task.status());\n+    tasks.emplace_back(std::move(scan_task.ValueOrDie()));\n \n Review comment:\n   ```suggestion\r\n       tasks.emplace_back(std::move(scan_task).ValueOrDie());\r\n   ```\r\n   In this case (since scan_task immediately goes out of scope) the suggestion doesn't correct anything, but it's worth noting that in general `Result` is aware of when it has been moved from (and calling ValueOrDie on a Result which has not been moved will not register that).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:42.056+0000",
                    "updated": "2019-10-24T14:52:42.056+0000",
                    "started": "2019-10-24T14:52:42.055+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333490",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338615304\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -37,6 +38,7 @@ namespace dataset {\n /// \\brief Shared state for a Scan operation\n struct ARROW_DS_EXPORT ScanContext {\n   MemoryPool* pool = arrow::default_memory_pool();\n+  internal::ThreadPool* thread_pool = arrow::internal::GetCpuThreadPool();\n \n Review comment:\n   Maybe this should be a task group instead of a thread pool. Then users can pass a serial task group to signal single threaded operation\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T14:52:42.105+0000",
                    "updated": "2019-10-24T14:52:42.105+0000",
                    "started": "2019-10-24T14:52:42.105+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333491",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338659696\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner.h\n ##########\n @@ -109,18 +111,34 @@ Status ScanTaskIteratorFromRecordBatch(std::vector<std::shared_ptr<RecordBatch>>\n ///          yield scan_task\n class ARROW_DS_EXPORT Scanner {\n  public:\n+  Scanner(DataSourceVector sources, std::shared_ptr<ScanOptions> options,\n+          std::shared_ptr<ScanContext> context)\n+      : sources_(std::move(sources)),\n+        options_(std::move(options)),\n+        context_(std::move(context)) {}\n+\n+  virtual ~Scanner() = default;\n+\n   /// \\brief The Scan operator returns a stream of ScanTask. The caller is\n   /// responsible to dispatch/schedule said tasks. Tasks should be safe to run\n   /// in a concurrent fashion and outlive the iterator.\n   virtual ScanTaskIterator Scan() = 0;\n \n-  virtual ~Scanner() = default;\n-\n   /// \\brief Convert a Scanner into a Table.\n   ///\n+  /// \\param[in] use_threads guide if the operation will be parallelized\n+  ///            with the ThreadPool found in ScanContext.\n+  /// \\param[out] out output parameter\n+  ///\n   /// Use this convenience utility with care. This will serially materialize the\n   /// Scan result in memory before creating the Table.\n-  Status ToTable(std::shared_ptr<Table>* out);\n+  Status ToTable(bool use_threads, std::shared_ptr<Table>* out);\n \n Review comment:\n   I'm not sure if Scanner should have internal nested parallelism, but I'll move it there.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T16:00:28.556+0000",
                    "updated": "2019-10-24T16:00:28.556+0000",
                    "started": "2019-10-24T16:00:28.556+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333537",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333538",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721#discussion_r338659959\n \n \n\n ##########\n File path: cpp/src/arrow/dataset/scanner_test.cc\n ##########\n @@ -125,8 +125,13 @@ TEST_F(TestSimpleScanner, ToTable) {\n \n   auto scanner = std::make_shared<SimpleScanner>(sources, options_, ctx_);\n   std::shared_ptr<Table> actual;\n+\n   ASSERT_OK(scanner->ToTable(&actual));\n+  AssertTablesEqual(*expected, *actual);\n \n+  // There is no guarantee on the ordering when using multiple threads, but\n+  // since the RecordBatch is always the same it will pass.\n \n Review comment:\n   gmock matchers provide a version I think, but I didn't want to refactor everything.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-24T16:01:00.194+0000",
                    "updated": "2019-10-24T16:01:00.194+0000",
                    "started": "2019-10-24T16:01:00.193+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333538",
                    "issueId": "13263834"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/worklog/333814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "fsaintjacques commented on pull request #5721: ARROW-6964: [C++][Dataset] Add multithread support to Scanner::ToTable\nURL: https://github.com/apache/arrow/pull/5721\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-25T01:22:10.277+0000",
                    "updated": "2019-10-25T01:22:10.277+0000",
                    "started": "2019-10-25T01:22:10.277+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "333814",
                    "issueId": "13263834"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5d84486d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d5fe297[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f2a5525[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5d23470d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@273e871[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@77e7f72b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3a29078f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7d7534e8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60586b57[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@284e96d8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a29f921[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@e2f54f8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Oct 25 01:22:11 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-25T01:22:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6964/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-10-22T16:40:53.000+0000",
        "updated": "2020-04-10T15:32:40.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Dataset] Expose a nested parallel option for Scanner::ToTable",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13263834/comment/16959343",
                    "id": "16959343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 5721\n[https://github.com/apache/arrow/pull/5721]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=fsaintjacques",
                        "name": "fsaintjacques",
                        "key": "fsaintjacques",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=fsaintjacques&avatarId=37276",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=fsaintjacques&avatarId=37276",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=fsaintjacques&avatarId=37276",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=fsaintjacques&avatarId=37276"
                        },
                        "displayName": "Francois Saint-Jacques",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-25T01:22:11.357+0000",
                    "updated": "2019-10-25T01:22:11.357+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z07ueo:",
        "customfield_12314139": null
    }
}