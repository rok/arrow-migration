{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13293884",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884",
    "key": "ARROW-8216",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12584125",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12584125",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "inwardIssue": {
                    "id": "13294280",
                    "key": "ARROW-8235",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13294280",
                    "fields": {
                        "summary": "[C++][Compute] Filter out nulls by default",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
            "name": "bkietz",
            "key": "bkietz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
            },
            "displayName": "Ben Kietzman",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=boshek",
            "name": "boshek",
            "key": "boshek",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sam Albers",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=boshek",
            "name": "boshek",
            "key": "boshek",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sam Albers",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8216/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/410525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T19:10:12.221+0000",
                    "updated": "2020-03-26T19:10:12.221+0000",
                    "started": "2020-03-26T19:10:12.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410525",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/410526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-604631392\n \n \n   https://issues.apache.org/jira/browse/ARROW-8216\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-26T19:16:30.217+0000",
                    "updated": "2020-03-26T19:16:30.217+0000",
                    "started": "2020-03-26T19:16:30.216+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "410526",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-605368319\n \n \n   @bkietz I'll add a commit for tweaking GLib things.  Thanks for mentioning.\r\n   \r\n   @kou I guess we can add `GArrowFilterOptions` and functions which have one argument of `GArrowFilterOptions`, such as `garrow_array_filter_options`.  Alternatively, we can add one argument of `GArrowFilterOptions` to functions like `garrow_array_filter`.  What do you think about how to support `FilterOptions`?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-28T00:37:01.113+0000",
                    "updated": "2020-03-28T00:37:01.113+0000",
                    "started": "2020-03-28T00:37:01.112+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411566",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-605372992\n \n \n   I want to add `GArrowFilterOptions` and add `GArrowFilterOptions *options` to `garrow_*_filter()` functions!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-28T01:11:19.637+0000",
                    "updated": "2020-03-28T01:11:19.637+0000",
                    "started": "2020-03-28T01:11:19.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411579",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-605373140\n \n \n   We can also change the default behavior to `DROP` from `EMIT_NULL`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-28T01:12:38.596+0000",
                    "updated": "2020-03-28T01:12:38.596+0000",
                    "started": "2020-03-28T01:12:38.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411580",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-605373311\n \n \n   @kou I got it.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-28T01:14:05.849+0000",
                    "updated": "2020-03-28T01:14:05.849+0000",
                    "started": "2020-03-28T01:14:05.848+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411581",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r399711371\n \n \n\n ##########\n File path: c_glib/arrow-glib/compute.cpp\n ##########\n @@ -360,6 +360,108 @@ garrow_count_options_new(void)\n }\n \n \n+typedef struct GArrowFilterOptionsPrivate_ {\n+  arrow::compute::FilterOptions options;\n+} GArrowFilterOptionsPrivate;\n+\n+enum {\n+  PROP_NULL_SELECTION_BEHAVIOR = 1,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowFilterOptions,\n+                           garrow_filter_options,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_FILTER_OPTIONS_GET_PRIVATE(object)        \\\n+  static_cast<GArrowFilterOptionsPrivate *>(             \\\n+    garrow_filter_options_get_instance_private(          \\\n+      GARROW_FILTER_OPTIONS(object)))\n+\n+static void\n+garrow_filter_options_set_property(GObject *object,\n+                                   guint prop_id,\n+                                   const GValue *value,\n+                                   GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    priv->options.null_selection_behavior =\n+      static_cast<arrow::compute::FilterOptions::NullSelectionBehavior>(g_value_get_enum(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_get_property(GObject *object,\n+                                  guint prop_id,\n+                                  GValue *value,\n+                                  GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    g_value_set_enum(value, priv->options.null_selection_behavior);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_init(GArrowFilterOptions *object)\n+{\n+}\n \n Review comment:\n   Could you initialize `priv->options` explicitly like https://github.com/apache/arrow/pull/6694/files#diff-8c5b1fb4f5cd383aa0cc821cfbf30e23R715-R716 and destruct `priv-options` explicitly in `_finalize()` like https://github.com/apache/arrow/pull/6694/files#diff-8c5b1fb4f5cd383aa0cc821cfbf30e23R664-R672 ?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-28T21:29:46.641+0000",
                    "updated": "2020-03-28T21:29:46.641+0000",
                    "started": "2020-03-28T21:29:46.641+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411803",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/411839",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r399732881\n \n \n\n ##########\n File path: c_glib/arrow-glib/compute.cpp\n ##########\n @@ -360,6 +360,108 @@ garrow_count_options_new(void)\n }\n \n \n+typedef struct GArrowFilterOptionsPrivate_ {\n+  arrow::compute::FilterOptions options;\n+} GArrowFilterOptionsPrivate;\n+\n+enum {\n+  PROP_NULL_SELECTION_BEHAVIOR = 1,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowFilterOptions,\n+                           garrow_filter_options,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_FILTER_OPTIONS_GET_PRIVATE(object)        \\\n+  static_cast<GArrowFilterOptionsPrivate *>(             \\\n+    garrow_filter_options_get_instance_private(          \\\n+      GARROW_FILTER_OPTIONS(object)))\n+\n+static void\n+garrow_filter_options_set_property(GObject *object,\n+                                   guint prop_id,\n+                                   const GValue *value,\n+                                   GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    priv->options.null_selection_behavior =\n+      static_cast<arrow::compute::FilterOptions::NullSelectionBehavior>(g_value_get_enum(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_get_property(GObject *object,\n+                                  guint prop_id,\n+                                  GValue *value,\n+                                  GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    g_value_set_enum(value, priv->options.null_selection_behavior);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_init(GArrowFilterOptions *object)\n+{\n+}\n \n Review comment:\n   I've added explicit calls of constructors and destructors not only for `FilterOptions`, but also `CastOptions`, `CountOptions`, `CompareOptions`, and `TakeOptions`.\r\n   \r\n   Could you check again?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-29T01:57:15.264+0000",
                    "updated": "2020-03-29T01:57:15.264+0000",
                    "started": "2020-03-29T01:57:15.263+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "411839",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/412011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r399850540\n \n \n\n ##########\n File path: c_glib/arrow-glib/compute.cpp\n ##########\n @@ -360,6 +360,108 @@ garrow_count_options_new(void)\n }\n \n \n+typedef struct GArrowFilterOptionsPrivate_ {\n+  arrow::compute::FilterOptions options;\n+} GArrowFilterOptionsPrivate;\n+\n+enum {\n+  PROP_NULL_SELECTION_BEHAVIOR = 1,\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowFilterOptions,\n+                           garrow_filter_options,\n+                           G_TYPE_OBJECT)\n+\n+#define GARROW_FILTER_OPTIONS_GET_PRIVATE(object)        \\\n+  static_cast<GArrowFilterOptionsPrivate *>(             \\\n+    garrow_filter_options_get_instance_private(          \\\n+      GARROW_FILTER_OPTIONS(object)))\n+\n+static void\n+garrow_filter_options_set_property(GObject *object,\n+                                   guint prop_id,\n+                                   const GValue *value,\n+                                   GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    priv->options.null_selection_behavior =\n+      static_cast<arrow::compute::FilterOptions::NullSelectionBehavior>(g_value_get_enum(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_get_property(GObject *object,\n+                                  guint prop_id,\n+                                  GValue *value,\n+                                  GParamSpec *pspec)\n+{\n+  auto priv = GARROW_FILTER_OPTIONS_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_NULL_SELECTION_BEHAVIOR:\n+    g_value_set_enum(value, priv->options.null_selection_behavior);\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_filter_options_init(GArrowFilterOptions *object)\n+{\n+}\n \n Review comment:\n   +1\r\n   Thanks!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-29T20:38:18.419+0000",
                    "updated": "2020-03-29T20:38:18.419+0000",
                    "started": "2020-03-29T20:38:18.419+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412011",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/412012",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-605698333\n \n \n   I'll pick up the R side tomorrow.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-29T20:43:12.888+0000",
                    "updated": "2020-03-29T20:43:12.888+0000",
                    "started": "2020-03-29T20:43:12.887+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412012",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/412457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-606139572\n \n \n   Pushed an R fix. `[` method should always EMIT_NULL. If you want to add a boolean arg to the `$Filter()` methods and pass that down, that's cool, probably nice to have but not urgent.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-30T17:36:47.185+0000",
                    "updated": "2020-03-30T17:36:47.185+0000",
                    "started": "2020-03-30T17:36:47.185+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "412457",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/413024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r400798304\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -38,6 +38,7 @@ using internal::checked_pointer_cast;\n \n // IndexSequence which yields the indices of positions in a BooleanArray\n // which are either null or true\n+template <FilterOptions::NullSelectionBehavior NullSelectionBehavior>\n \n Review comment:\n   I suppose `filter.cc` will get twice longer to compile...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T10:29:05.632+0000",
                    "updated": "2020-03-31T10:29:05.632+0000",
                    "started": "2020-03-31T10:29:05.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413024",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/413025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r400798378\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.cc\n ##########\n @@ -50,6 +51,14 @@ class FilterIndexSequence {\n       : filter_(&filter), out_length_(out_length) {}\n \n   std::pair<int64_t, bool> Next() {\n+    if (NullSelectionBehavior == FilterOptions::DROP) {\n \n Review comment:\n   What, no template hackery? :-)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T10:29:05.733+0000",
                    "updated": "2020-03-31T10:29:05.733+0000",
                    "started": "2020-03-31T10:29:05.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413025",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/413026",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r400801036\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -32,120 +33,45 @@ namespace compute {\n \n class FunctionContext;\n \n-/// \\brief Filter an array with a boolean selection filter\n-///\n-/// The output array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n-///\n-/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n-/// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting array\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Array& values, const Array& filter,\n-              std::shared_ptr<Array>* out);\n+struct FilterOptions {\n+  /// Configure the action taken when a slot of the selection mask is null\n+  enum NullSelectionBehavior {\n+    /// the corresponding filtered value will be removed in the output\n+    DROP,\n+    /// the corresponding filtered value will be null in the output\n+    EMIT_NULL,\n+  };\n \n-/// \\brief Filter a chunked array with a boolean selection filter\n-///\n-/// The output chunked array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n-///\n-/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n-/// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values chunked array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting chunked array\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n-              std::shared_ptr<ChunkedArray>* out);\n+  NullSelectionBehavior null_selection_behavior = DROP;\n+};\n \n-/// \\brief Filter a chunked array with a boolean selection filter\n+/// \\brief Filter with a boolean selection filter\n ///\n-/// The output chunked array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n+/// The output will be populated with values from the input at positions\n+/// where the selection filter is not 0. Nulls in the filter will be handled\n+/// based on options.null_selection_behavior.\n ///\n /// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n /// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n+/// (null_selection_behavior == DROP)      = [\"b\", \"c\", \"f\"]\n+/// (null_selection_behavior == EMIT_NULL) = [\"b\", \"c\", null, \"f\"]\n ///\n /// \\param[in] ctx the FunctionContext\n-/// \\param[in] values chunked array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting chunked array\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const ChunkedArray& values,\n-              const ChunkedArray& filter, std::shared_ptr<ChunkedArray>* out);\n-\n-/// \\brief Filter a record batch with a boolean selection filter\n-///\n-/// The output record batch's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] batch record batch to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting record batch\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n-              std::shared_ptr<RecordBatch>* out);\n-\n-/// \\brief Filter a table with a boolean selection filter\n-///\n-/// The output table's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in each column of the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] table table to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting table\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Table& table, const Array& filter,\n-              std::shared_ptr<Table>* out);\n-\n-/// \\brief Filter a table with a boolean selection filter\n-///\n-/// The output record batch's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] table record batch to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting record batch\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Table& table, const ChunkedArray& filter,\n-              std::shared_ptr<Table>* out);\n-\n-/// \\brief Filter an array with a boolean selection filter\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values datum to filter\n+/// \\param[in] values array to filter\n /// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting datum\n+/// \\param[in] options configures null_selection_behavior\n+/// \\param[out] out resulting array\n ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Datum& values, const Datum& filter, Datum* out);\n+Status Filter(FunctionContext* ctx, const Datum& values, const Datum& filter,\n+              FilterOptions options, Datum* out);\n \n /// \\brief BinaryKernel implementing Filter operation\n class ARROW_EXPORT FilterKernel : public BinaryKernel {\n  public:\n-  explicit FilterKernel(const std::shared_ptr<DataType>& type) : type_(type) {}\n+  explicit FilterKernel(std::shared_ptr<DataType> type, FilterOptions options)\n \n Review comment:\n   Should the constructor be public if the user is supposed to instantiate a subclass using the factory function?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T10:29:05.858+0000",
                    "updated": "2020-03-31T10:29:05.858+0000",
                    "started": "2020-03-31T10:29:05.857+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413026",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/413154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r400906744\n \n \n\n ##########\n File path: cpp/src/arrow/compute/kernels/filter.h\n ##########\n @@ -32,120 +33,45 @@ namespace compute {\n \n class FunctionContext;\n \n-/// \\brief Filter an array with a boolean selection filter\n-///\n-/// The output array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n-///\n-/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n-/// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting array\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Array& values, const Array& filter,\n-              std::shared_ptr<Array>* out);\n+struct FilterOptions {\n+  /// Configure the action taken when a slot of the selection mask is null\n+  enum NullSelectionBehavior {\n+    /// the corresponding filtered value will be removed in the output\n+    DROP,\n+    /// the corresponding filtered value will be null in the output\n+    EMIT_NULL,\n+  };\n \n-/// \\brief Filter a chunked array with a boolean selection filter\n-///\n-/// The output chunked array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n-///\n-/// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n-/// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values chunked array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting chunked array\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const ChunkedArray& values, const Array& filter,\n-              std::shared_ptr<ChunkedArray>* out);\n+  NullSelectionBehavior null_selection_behavior = DROP;\n+};\n \n-/// \\brief Filter a chunked array with a boolean selection filter\n+/// \\brief Filter with a boolean selection filter\n ///\n-/// The output chunked array will be populated with values from the input at positions\n-/// where the selection filter is not 0. Nulls in the filter will result in nulls\n-/// in the output.\n+/// The output will be populated with values from the input at positions\n+/// where the selection filter is not 0. Nulls in the filter will be handled\n+/// based on options.null_selection_behavior.\n ///\n /// For example given values = [\"a\", \"b\", \"c\", null, \"e\", \"f\"] and\n /// filter = [0, 1, 1, 0, null, 1], the output will be\n-/// = [\"b\", \"c\", null, \"f\"]\n+/// (null_selection_behavior == DROP)      = [\"b\", \"c\", \"f\"]\n+/// (null_selection_behavior == EMIT_NULL) = [\"b\", \"c\", null, \"f\"]\n ///\n /// \\param[in] ctx the FunctionContext\n-/// \\param[in] values chunked array to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting chunked array\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const ChunkedArray& values,\n-              const ChunkedArray& filter, std::shared_ptr<ChunkedArray>* out);\n-\n-/// \\brief Filter a record batch with a boolean selection filter\n-///\n-/// The output record batch's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] batch record batch to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting record batch\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const RecordBatch& batch, const Array& filter,\n-              std::shared_ptr<RecordBatch>* out);\n-\n-/// \\brief Filter a table with a boolean selection filter\n-///\n-/// The output table's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in each column of the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] table table to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting table\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Table& table, const Array& filter,\n-              std::shared_ptr<Table>* out);\n-\n-/// \\brief Filter a table with a boolean selection filter\n-///\n-/// The output record batch's columns will be populated with values from corresponding\n-/// columns of the input at positions where the selection filter is not 0. Nulls in the\n-/// filter will result in nulls in the output.\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] table record batch to filter\n-/// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting record batch\n-/// NOTE: Experimental API\n-ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Table& table, const ChunkedArray& filter,\n-              std::shared_ptr<Table>* out);\n-\n-/// \\brief Filter an array with a boolean selection filter\n-///\n-/// \\param[in] ctx the FunctionContext\n-/// \\param[in] values datum to filter\n+/// \\param[in] values array to filter\n /// \\param[in] filter indicates which values should be filtered out\n-/// \\param[out] out resulting datum\n+/// \\param[in] options configures null_selection_behavior\n+/// \\param[out] out resulting array\n ARROW_EXPORT\n-Status Filter(FunctionContext* ctx, const Datum& values, const Datum& filter, Datum* out);\n+Status Filter(FunctionContext* ctx, const Datum& values, const Datum& filter,\n+              FilterOptions options, Datum* out);\n \n /// \\brief BinaryKernel implementing Filter operation\n class ARROW_EXPORT FilterKernel : public BinaryKernel {\n  public:\n-  explicit FilterKernel(const std::shared_ptr<DataType>& type) : type_(type) {}\n+  explicit FilterKernel(std::shared_ptr<DataType> type, FilterOptions options)\n \n Review comment:\n   That's a good point. I'll move it into `protected:`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-03-31T13:19:51.520+0000",
                    "updated": "2020-03-31T13:19:51.520+0000",
                    "started": "2020-03-31T13:19:51.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413154",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/413763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-607018024\n \n \n   CC @brills  in case this impacts you as a consumer.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T04:06:35.076+0000",
                    "updated": "2020-04-01T04:06:35.076+0000",
                    "started": "2020-04-01T04:06:35.075+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "413763",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/414114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r401734101\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -997,14 +997,17 @@ cdef class Array(_PandasConvertible):\n \n         return wrap_datum(out)\n \n-    def filter(self, Array mask):\n+    def filter(self, Array mask, drop_nulls=True):\n         \"\"\"\n         Filter the array with a boolean mask.\n \n         Parameters\n         ----------\n         mask : Array\n             The boolean mask indicating which values to extract.\n+        drop_nulls : bool, default True\n \n Review comment:\n   If we might want to add other options in the future (there were some others raised in the issue I think?), a boolean might not be the best value. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T16:10:37.133+0000",
                    "updated": "2020-04-01T16:10:37.133+0000",
                    "started": "2020-04-01T16:10:37.133+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "414114",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/414120",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r401736779\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -997,14 +997,17 @@ cdef class Array(_PandasConvertible):\n \n         return wrap_datum(out)\n \n-    def filter(self, Array mask):\n+    def filter(self, Array mask, drop_nulls=True):\n         \"\"\"\n         Filter the array with a boolean mask.\n \n         Parameters\n         ----------\n         mask : Array\n             The boolean mask indicating which values to extract.\n+        drop_nulls : bool, default True\n \n Review comment:\n   Looking back at ARROW-8235, the other one mentioned was \"KEEP\". I don't know if we have plans to add that in the future? Maybe not in the short term? \r\n   (and another one could be \"ERROR\")\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T16:12:36.629+0000",
                    "updated": "2020-04-01T16:12:36.629+0000",
                    "started": "2020-04-01T16:12:36.628+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "414120",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/414214",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#discussion_r401829457\n \n \n\n ##########\n File path: python/pyarrow/array.pxi\n ##########\n @@ -997,14 +997,17 @@ cdef class Array(_PandasConvertible):\n \n         return wrap_datum(out)\n \n-    def filter(self, Array mask):\n+    def filter(self, Array mask, drop_nulls=True):\n         \"\"\"\n         Filter the array with a boolean mask.\n \n         Parameters\n         ----------\n         mask : Array\n             The boolean mask indicating which values to extract.\n+        drop_nulls : bool, default True\n \n Review comment:\n   I'll change this to a string parameter to ease addition of other options in a follow up.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-01T18:40:43.074+0000",
                    "updated": "2020-04-01T18:40:43.074+0000",
                    "started": "2020-04-01T18:40:43.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "414214",
                    "issueId": "13293884"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/worklog/415098",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6732: ARROW-8216: [C++][Compute] Filter out nulls by default\nURL: https://github.com/apache/arrow/pull/6732#issuecomment-608128669\n \n \n   Merging. Appveyor failure is gtest known issue.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-04-02T22:40:35.791+0000",
                    "updated": "2020-04-02T22:40:35.791+0000",
                    "started": "2020-04-02T22:40:35.791+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "415098",
                    "issueId": "13293884"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@cda5d8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ec6ed00[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6f175481[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@36e01a8e[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@534b613a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1f0d5b16[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a6bb72a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7c69f083[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74231c85[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1833cfc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16c61901[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@25981eb2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 02 22:41:29 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-04-02T22:41:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-8216/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2020-03-25T17:26:15.000+0000",
        "updated": "2020-04-02T22:41:29.000+0000",
        "timeoriginalestimate": null,
        "description": "\u00a0\r\n\r\nI have just noticed some slightly odd behaviour with the filter method for Dataset.\u00a0\r\n\r\n\u00a0\r\n{code:java}\r\nlibrary(arrow)\r\nlibrary(dplyr)\r\npackageVersion(\"arrow\")\r\n#> [1] '0.16.0.20200323'\r\n## Make sample parquet\r\nstarwars$hair_color[starwars$hair_color == \"brown\"] <- \"\"\r\ndir <- tempdir()\r\nfpath <- file.path(dir, \"data.parquet\")\r\nwrite_parquet(starwars, fpath)\r\n## df in memory\r\ndf_mem <- starwars %>%\r\n filter(hair_color == \"\")\r\n## reading from the parquet\r\ndf_parquet <- read_parquet(fpath) %>%\r\n filter(hair_color == \"\")\r\n## using open_dataset\r\ndf_dataset <- open_dataset(dir) %>%\r\n filter(hair_color == \"\") %>%\r\n collect()\r\nidentical(df_mem, df_parquet)\r\n#> [1] TRUE\r\nidentical(df_mem, df_dataset)\r\n#> [1] FALSE\r\n{code}\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nI'm pretty sure all these should return the same data.frame. Am I missing something?\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R][C++][Dataset] Filtering returns all-missing rows where the filtering column is missing",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": "R 3.6.3, Windows 10",
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/comment/17067902",
                    "id": "17067902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Thanks for the report. I did some exploration on this.\r\n\r\n1. The resulting data.frames are different because the one from the dataset scan is including rows of all NA for the rows where {{hair_color}} is missing. \r\n\r\n{code}\r\n> identical(df_dataset[!is.na(df_dataset$hair_color),], df_mem)\r\n[1] TRUE\r\n{code}\r\n\r\n2. The fact that {{hair_color}} has empty strings is irrelevant, as is the fact that it is a string column. Here's a simpler example:\r\n\r\n{code}\r\n> library(arrow)\r\n> library(dplyr)\r\n> dir <- tempdir()\r\n> fpath <- file.path(dir, \"data.parquet\")\r\n> \r\n> df <- data.frame(a=1:3, int=c(NA, 4L, 5L), dbl=c(5.0, NA, 6), str=c(\"a\", \"b\", NA), stringsAsFactors=FALSE)\r\n> df\r\n  a int dbl  str\r\n1 1  NA   5    a\r\n2 2   4  NA    b\r\n3 3   5   6 <NA>\r\n> write_parquet(df, fpath)\r\n> ds <- open_dataset(dir)\r\n> ds %>% filter(int > 4) %>% collect()\r\n# A tibble: 2 x 4\r\n      a   int   dbl str  \r\n  <int> <int> <dbl> <chr>\r\n1    NA    NA    NA NA   \r\n2     3     5     6 NA   \r\n> ds %>% filter(dbl == 5) %>% collect()\r\n# A tibble: 2 x 4\r\n      a   int   dbl str  \r\n  <int> <int> <dbl> <chr>\r\n1     1    NA     5 a    \r\n2    NA    NA    NA NA   \r\n> ds %>% filter(str == \"a\") %>% collect()\r\n# A tibble: 2 x 4\r\n      a   int   dbl str  \r\n  <int> <int> <dbl> <chr>\r\n1     1    NA     5 a    \r\n2    NA    NA    NA NA   \r\n> ds %>% filter(str == \"d\") %>% collect()\r\n# A tibble: 1 x 4\r\n      a   int   dbl str  \r\n  <int> <int> <dbl> <chr>\r\n1    NA    NA    NA NA   \r\n{code}\r\n\r\n3. In terms of what _should_ happen, on the one hand, matching what {{dplyr}} does is good; on the other, one could conceptually argue that if I filter where {{int > 4}}, I should keep the rows where int is NA because we don't know whether or not they are > 4. (But that's not what this is doing here: it's filling everything in the rows with NA.) So maybe this should be some option?\r\n\r\n4. Interestingly, this behavior _is_ consistent with how base R handles extracting rows with NA in the selection vector:\r\n\r\n{code}\r\n> df[df$int > 4,]\r\n    a int dbl  str\r\nNA NA  NA  NA <NA>\r\n3   3   5   6 <NA>\r\n# Because:\r\n> df$int > 4\r\n[1]    NA FALSE  TRUE\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-03-26T17:52:55.029+0000",
                    "updated": "2020-03-26T17:52:55.029+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/comment/17067961",
                    "id": "17067961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "https://issues.apache.org/jira/browse/ARROW-8235",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2020-03-26T19:06:21.016+0000",
                    "updated": "2020-03-26T19:06:21.016+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13293884/comment/17074131",
                    "id": "17074131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6732\n[https://github.com/apache/arrow/pull/6732]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-04-02T22:41:29.515+0000",
                    "updated": "2020-04-02T22:41:29.515+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0cwi0:",
        "customfield_12314139": null
    }
}