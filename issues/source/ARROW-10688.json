{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13342008",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008",
    "key": "ARROW-10688",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
            "name": "andygrove",
            "key": "andygrove",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
            },
            "displayName": "Andy Grove",
            "active": true,
            "timeZone": "America/Denver"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10688/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove opened a new pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746\n\n\n   This PR builds on https://github.com/apache/arrow/pull/8740 and introduces functions and builders for creating CASE WHEN statements as part of the logical plan via the DataFrame API.\r\n   \r\n   Here is an example from TPC-H query 12:\r\n   \r\n   ```rust\r\n   sum(case_when()\r\n       .when(or(\r\n           col(\"o_orderpriority\").eq(lit(\"1-URGENT\")),\r\n           col(\"o_orderpriority\").eq(lit(\"2-HIGH\")),\r\n       ))\r\n       .then(lit(1))\r\n       .or_else(lit(0)))\r\n   .alias(\"high_line_count\"),\r\n   sum(case_when()\r\n       .when(and(\r\n           col(\"o_orderpriority\").not_eq(lit(\"1-URGENT\")),\r\n           col(\"o_orderpriority\").not_eq(lit(\"2-HIGH\")),\r\n       ))\r\n       .then(lit(1))\r\n       .or_else(lit(0)))\r\n   .alias(\"high_line_count\"),\r\n   \r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T15:45:02.360+0000",
                    "updated": "2020-11-23T15:45:02.360+0000",
                    "started": "2020-11-23T15:45:02.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515623",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#issuecomment-732243918\n\n\n   https://issues.apache.org/jira/browse/ARROW-10688\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T15:47:09.520+0000",
                    "updated": "2020-11-23T15:47:09.520+0000",
                    "started": "2020-11-23T15:47:09.520+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515625",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#issuecomment-732320989\n\n\n   @jorgecarleitao @alamb Please take a look when you can. This PR includes a bug fix in projection push-down as well, where columns where being thrown away due to re-creating the HashSet in some operators.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T17:48:11.241+0000",
                    "updated": "2020-11-23T17:48:11.241+0000",
                    "started": "2020-11-23T17:48:11.241+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515687",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515693",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r528896150\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/filter_push_down.rs\n##########\n@@ -93,7 +93,9 @@ fn issue_filters(\n     let predicate = predicates\n         .iter()\n         .skip(1)\n-        .fold(predicates[0].clone(), |acc, predicate| and(&acc, predicate));\n+        .fold(predicates[0].clone(), |acc, predicate| {\n+            and(acc, (*predicate).clone())\n\nReview comment:\n       do you think it is worth adding a test to this? Looks non-trivial :/\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T18:01:19.781+0000",
                    "updated": "2020-11-23T18:01:19.781+0000",
                    "started": "2020-11-23T18:01:19.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515693",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515707",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r528909049\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -216,26 +238,51 @@ pub fn from_plan(\n \n /// Returns all direct children `Expression`s of `expr`.\n /// E.g. if the expression is \"(a + 1) + 1\", it returns [\"a + 1\", \"1\"] (as Expr objects)\n-pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<&Expr>> {\n+pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<Expr>> {\n     match expr {\n-        Expr::BinaryExpr { left, right, .. } => Ok(vec![left, right]),\n-        Expr::IsNull(e) => Ok(vec![e]),\n-        Expr::IsNotNull(e) => Ok(vec![e]),\n-        Expr::ScalarFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::ScalarUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::Cast { expr, .. } => Ok(vec![expr]),\n+        Expr::BinaryExpr { left, right, .. } => {\n+            Ok(vec![left.as_ref().to_owned(), right.as_ref().to_owned()])\n+        }\n+        Expr::IsNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::IsNotNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::ScalarFunction { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::ScalarUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::AggregateFunction { args, .. } => {\n+            Ok(args.iter().map(|e| e.clone()).collect())\n+        }\n+        Expr::AggregateUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::Case {\n+            expr,\n+            when_then_expr,\n+            else_expr,\n+            ..\n+        } => {\n+            let mut expr_list: Vec<Expr> = vec![];\n\nReview comment:\n       This felt a bit hacky but our expression rewrite mechanism doesn't really work well for this operator which has multiple types of expressions. We probably need to come up with something better long term.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T18:24:24.204+0000",
                    "updated": "2020-11-23T18:24:24.204+0000",
                    "started": "2020-11-23T18:24:24.204+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515707",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r528910229\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/filter_push_down.rs\n##########\n@@ -93,7 +93,9 @@ fn issue_filters(\n     let predicate = predicates\n         .iter()\n         .skip(1)\n-        .fold(predicates[0].clone(), |acc, predicate| and(&acc, predicate));\n+        .fold(predicates[0].clone(), |acc, predicate| {\n+            and(acc, (*predicate).clone())\n\nReview comment:\n       This is just cloning rather than using a reference when creating the `and` expression. `predicate` is `&&Expr` so I dereference with `*` to get `&Expr` and then clone (perhaps could be `to_owned` instead).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T18:26:19.239+0000",
                    "updated": "2020-11-23T18:26:19.239+0000",
                    "started": "2020-11-23T18:26:19.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515708",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515734",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r528945232\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -216,26 +238,51 @@ pub fn from_plan(\n \n /// Returns all direct children `Expression`s of `expr`.\n /// E.g. if the expression is \"(a + 1) + 1\", it returns [\"a + 1\", \"1\"] (as Expr objects)\n-pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<&Expr>> {\n+pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<Expr>> {\n     match expr {\n-        Expr::BinaryExpr { left, right, .. } => Ok(vec![left, right]),\n-        Expr::IsNull(e) => Ok(vec![e]),\n-        Expr::IsNotNull(e) => Ok(vec![e]),\n-        Expr::ScalarFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::ScalarUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::Cast { expr, .. } => Ok(vec![expr]),\n+        Expr::BinaryExpr { left, right, .. } => {\n+            Ok(vec![left.as_ref().to_owned(), right.as_ref().to_owned()])\n+        }\n+        Expr::IsNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::IsNotNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::ScalarFunction { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::ScalarUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::AggregateFunction { args, .. } => {\n+            Ok(args.iter().map(|e| e.clone()).collect())\n+        }\n+        Expr::AggregateUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::Case {\n+            expr,\n+            when_then_expr,\n+            else_expr,\n+            ..\n+        } => {\n+            let mut expr_list: Vec<Expr> = vec![];\n\nReview comment:\n       FYI, I started/designed for the Polars library something a bit inspired by the Spark catalyst optimizer ( http://people.csail.mit.edu/matei/papers/2015/sigmod_spark_sql.pdf ), but a bit evolved in some ways to be useful in Rust. Specifically, it uses an arena to mutate the tree efficiently / without cloning.\r\n   \r\n   Code lives here currently: https://github.com/ritchie46/polars/blob/master/polars/src/lazy/logical_plan/optimizer/simplify_expr.rs#L777\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T19:29:17.638+0000",
                    "updated": "2020-11-23T19:29:17.638+0000",
                    "started": "2020-11-23T19:29:17.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515734",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529051136\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -216,26 +238,51 @@ pub fn from_plan(\n \n /// Returns all direct children `Expression`s of `expr`.\n /// E.g. if the expression is \"(a + 1) + 1\", it returns [\"a + 1\", \"1\"] (as Expr objects)\n-pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<&Expr>> {\n+pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<Expr>> {\n     match expr {\n-        Expr::BinaryExpr { left, right, .. } => Ok(vec![left, right]),\n-        Expr::IsNull(e) => Ok(vec![e]),\n-        Expr::IsNotNull(e) => Ok(vec![e]),\n-        Expr::ScalarFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::ScalarUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::Cast { expr, .. } => Ok(vec![expr]),\n+        Expr::BinaryExpr { left, right, .. } => {\n+            Ok(vec![left.as_ref().to_owned(), right.as_ref().to_owned()])\n+        }\n+        Expr::IsNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::IsNotNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::ScalarFunction { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::ScalarUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::AggregateFunction { args, .. } => {\n+            Ok(args.iter().map(|e| e.clone()).collect())\n+        }\n+        Expr::AggregateUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::Case {\n+            expr,\n+            when_then_expr,\n+            else_expr,\n+            ..\n+        } => {\n+            let mut expr_list: Vec<Expr> = vec![];\n\nReview comment:\n       The pattern I have seen elsewhere (aka that Postgres has) is two types of expression visitor -- one that just visits each node in an expression tree, and one that walks over the tree and returns a (potentially) rewritten node\r\n   \r\n   I have an expr visitor here in IOx: https://github.com/influxdata/influxdb_iox/blob/659da9264ab39e9d0b2ea3a15c082f8c25fe0a68/storage/src/util.rs#L8\r\n   \r\n   If you think it is a useful thing @andygrove -- I can take a shot at porting to Arrow\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T23:00:17.397+0000",
                    "updated": "2020-11-23T23:00:17.397+0000",
                    "started": "2020-11-23T23:00:17.397+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515810",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515814",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529052558\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -24,7 +24,11 @@ use arrow::datatypes::{Schema, SchemaRef};\n use super::optimizer::OptimizerRule;\n use crate::error::{DataFusionError, Result};\n use crate::logical_plan::{Expr, LogicalPlan, PlanType, StringifiedPlan};\n-use crate::prelude::col;\n+use crate::prelude::{col, lit};\n+use crate::scalar::ScalarValue;\n+\n+const CASE_EXPR_MARKER: &str = \"__DATAFUSION_CASE_EXPR__\";\n\nReview comment:\n       \ud83e\udd14 \n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -141,6 +166,7 @@ impl Expr {\n             Expr::Column(name) => Ok(schema.field_with_name(name)?.data_type().clone()),\n             Expr::ScalarVariable(_) => Ok(DataType::Utf8),\n             Expr::Literal(l) => Ok(l.get_datatype()),\n+            Expr::Case { when_then_expr, .. } => when_then_expr[0].1.get_type(schema),\n\nReview comment:\n       I feel like there should be a check somewhere that all the `then` and `else` clauses result in the same type -- however, I suppose we would just get an arrow error at runtime, which while not ideal, could easily be fixed subsequently. \n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -342,6 +386,82 @@ impl Expr {\n     }\n }\n \n+pub struct CaseWhenBuilder {\n+    expr: Option<Box<Expr>>,\n+    when_expr: Vec<Expr>,\n+    then_expr: Vec<Expr>,\n+}\n+\n+pub struct CaseThenBuilder {\n+    expr: Option<Box<Expr>>,\n+    when_expr: Vec<Expr>,\n+    then_expr: Vec<Expr>,\n+}\n+\n+impl CaseWhenBuilder {\n+    pub fn when(&mut self, expr: Expr) -> CaseThenBuilder {\n+        self.when_expr.push(expr);\n+        CaseThenBuilder {\n+            expr: self.expr.clone(),\n+            when_expr: self.when_expr.clone(),\n+            then_expr: self.then_expr.clone(),\n+        }\n+    }\n+    pub fn or_else(&mut self, else_expr: Expr) -> Expr {\n+        Expr::Case {\n+            expr: self.expr.clone(),\n+            when_then_expr: self\n+                .when_expr\n+                .iter()\n+                .zip(self.then_expr.iter())\n+                .map(|(w, t)| (Box::new(w.clone()), Box::new(t.clone())))\n+                .collect(),\n+            else_expr: Some(Box::new(else_expr)),\n+        }\n+    }\n+    pub fn end(&mut self) -> Expr {\n+        Expr::Case {\n+            expr: self.expr.clone(),\n+            when_then_expr: self\n+                .when_expr\n+                .iter()\n+                .zip(self.then_expr.iter())\n+                .map(|(w, t)| (Box::new(w.clone()), Box::new(t.clone())))\n+                .collect(),\n+            else_expr: None,\n+        }\n+    }\n+}\n\nReview comment:\n       is there a reason for a second `impl` for `CaseThenBuilder`? \r\n   \r\n   Also given that `when / then` always need to come in pairs, maybe \r\n   \r\n   ```\r\n       pub fn when(&mut self, expr: Expr) -> CaseThenBuilder {\r\n   ```\r\n   Could be translated into \r\n   \r\n   ```\r\n       pub fn when_then(&mut self, when_expr: Expr, then_expr) -> CaseThenBuilder {\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-23T23:10:37.130+0000",
                    "updated": "2020-11-23T23:10:37.130+0000",
                    "started": "2020-11-23T23:10:37.130+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515814",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529223287\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -24,7 +24,11 @@ use arrow::datatypes::{Schema, SchemaRef};\n use super::optimizer::OptimizerRule;\n use crate::error::{DataFusionError, Result};\n use crate::logical_plan::{Expr, LogicalPlan, PlanType, StringifiedPlan};\n-use crate::prelude::col;\n+use crate::prelude::{col, lit};\n+use crate::scalar::ScalarValue;\n+\n+const CASE_EXPR_MARKER: &str = \"__DATAFUSION_CASE_EXPR__\";\n\nReview comment:\n       I couldn't think of another way to do the expression rewriting with our current design. This expression is quite different from the ones implemented so far.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T06:06:52.116+0000",
                    "updated": "2020-11-24T06:06:52.116+0000",
                    "started": "2020-11-24T06:06:52.116+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515912",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529223608\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -342,6 +386,82 @@ impl Expr {\n     }\n }\n \n+pub struct CaseWhenBuilder {\n+    expr: Option<Box<Expr>>,\n+    when_expr: Vec<Expr>,\n+    then_expr: Vec<Expr>,\n+}\n+\n+pub struct CaseThenBuilder {\n+    expr: Option<Box<Expr>>,\n+    when_expr: Vec<Expr>,\n+    then_expr: Vec<Expr>,\n+}\n+\n+impl CaseWhenBuilder {\n+    pub fn when(&mut self, expr: Expr) -> CaseThenBuilder {\n+        self.when_expr.push(expr);\n+        CaseThenBuilder {\n+            expr: self.expr.clone(),\n+            when_expr: self.when_expr.clone(),\n+            then_expr: self.then_expr.clone(),\n+        }\n+    }\n+    pub fn or_else(&mut self, else_expr: Expr) -> Expr {\n+        Expr::Case {\n+            expr: self.expr.clone(),\n+            when_then_expr: self\n+                .when_expr\n+                .iter()\n+                .zip(self.then_expr.iter())\n+                .map(|(w, t)| (Box::new(w.clone()), Box::new(t.clone())))\n+                .collect(),\n+            else_expr: Some(Box::new(else_expr)),\n+        }\n+    }\n+    pub fn end(&mut self) -> Expr {\n+        Expr::Case {\n+            expr: self.expr.clone(),\n+            when_then_expr: self\n+                .when_expr\n+                .iter()\n+                .zip(self.then_expr.iter())\n+                .map(|(w, t)| (Box::new(w.clone()), Box::new(t.clone())))\n+                .collect(),\n+            else_expr: None,\n+        }\n+    }\n+}\n\nReview comment:\n       I was aiming for a fluent-style API but this could work too. I will take a look at some other DataFrame APIs tomorrow (pandas, spark, etc) and see how they do it.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T06:07:56.071+0000",
                    "updated": "2020-11-24T06:07:56.071+0000",
                    "started": "2020-11-24T06:07:56.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515913",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/515914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529223705\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -141,6 +166,7 @@ impl Expr {\n             Expr::Column(name) => Ok(schema.field_with_name(name)?.data_type().clone()),\n             Expr::ScalarVariable(_) => Ok(DataType::Utf8),\n             Expr::Literal(l) => Ok(l.get_datatype()),\n+            Expr::Case { when_then_expr, .. } => when_then_expr[0].1.get_type(schema),\n\nReview comment:\n       I agree. I can look at adding this tomorrow.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T06:08:21.100+0000",
                    "updated": "2020-11-24T06:08:21.100+0000",
                    "started": "2020-11-24T06:08:21.100+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "515914",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/516219",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529690058\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -141,6 +166,7 @@ impl Expr {\n             Expr::Column(name) => Ok(schema.field_with_name(name)?.data_type().clone()),\n             Expr::ScalarVariable(_) => Ok(DataType::Utf8),\n             Expr::Literal(l) => Ok(l.get_datatype()),\n+            Expr::Case { when_then_expr, .. } => when_then_expr[0].1.get_type(schema),\n\nReview comment:\n       I've added a check for the case where all \"then\" values are literals, to make sure they have the same type.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T16:06:51.355+0000",
                    "updated": "2020-11-24T16:06:51.355+0000",
                    "started": "2020-11-24T16:06:51.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "516219",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/516220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#issuecomment-733076788\n\n\n   Thanks for the review @alamb. I have pushed some changes to address your feedback.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T16:08:14.427+0000",
                    "updated": "2020-11-24T16:08:14.427+0000",
                    "started": "2020-11-24T16:08:14.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "516220",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/516259",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r529756391\n\n\n\n##########\nFile path: rust/datafusion/src/optimizer/utils.rs\n##########\n@@ -216,26 +238,51 @@ pub fn from_plan(\n \n /// Returns all direct children `Expression`s of `expr`.\n /// E.g. if the expression is \"(a + 1) + 1\", it returns [\"a + 1\", \"1\"] (as Expr objects)\n-pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<&Expr>> {\n+pub fn expr_sub_expressions(expr: &Expr) -> Result<Vec<Expr>> {\n     match expr {\n-        Expr::BinaryExpr { left, right, .. } => Ok(vec![left, right]),\n-        Expr::IsNull(e) => Ok(vec![e]),\n-        Expr::IsNotNull(e) => Ok(vec![e]),\n-        Expr::ScalarFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::ScalarUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateFunction { args, .. } => Ok(args.iter().collect()),\n-        Expr::AggregateUDF { args, .. } => Ok(args.iter().collect()),\n-        Expr::Cast { expr, .. } => Ok(vec![expr]),\n+        Expr::BinaryExpr { left, right, .. } => {\n+            Ok(vec![left.as_ref().to_owned(), right.as_ref().to_owned()])\n+        }\n+        Expr::IsNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::IsNotNull(e) => Ok(vec![e.as_ref().to_owned()]),\n+        Expr::ScalarFunction { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::ScalarUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::AggregateFunction { args, .. } => {\n+            Ok(args.iter().map(|e| e.clone()).collect())\n+        }\n+        Expr::AggregateUDF { args, .. } => Ok(args.iter().map(|e| e.clone()).collect()),\n+        Expr::Case {\n+            expr,\n+            when_then_expr,\n+            else_expr,\n+            ..\n+        } => {\n+            let mut expr_list: Vec<Expr> = vec![];\n\nReview comment:\n       I filed https://issues.apache.org/jira/browse/ARROW-10716 for us to follow up on this discussion.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T17:34:06.319+0000",
                    "updated": "2020-11-24T17:34:06.319+0000",
                    "started": "2020-11-24T17:34:06.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "516259",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/516267",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove closed pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-24T17:41:17.521+0000",
                    "updated": "2020-11-24T17:41:17.521+0000",
                    "started": "2020-11-24T17:41:17.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "516267",
                    "issueId": "13342008"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/worklog/517517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #8746:\nURL: https://github.com/apache/arrow/pull/8746#discussion_r532032034\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -821,3 +851,26 @@ fn create_name(e: &Expr, input_schema: &Schema) -> Result<String> {\n pub fn exprlist_to_fields(expr: &[Expr], input_schema: &Schema) -> Result<Vec<Field>> {\n     expr.iter().map(|e| e.to_field(input_schema)).collect()\n }\n+\n+#[cfg(test)]\n+mod tests {\n+    use super::super::{col, lit, when};\n+    use super::*;\n+\n+    #[test]\n+    fn case_when_same_literal_then_types() -> Result<()> {\n+        let _ = when(col(\"state\").eq(lit(\"CO\")), lit(303))\n+            .when(col(\"state\").eq(lit(\"NY\")), lit(212))\n+            .end()?;\n+        Ok(())\n+    }\n+\n+    #[test]\n+    fn case_when_different_literal_then_types() -> Result<()> {\n+        let maybe_expr = when(col(\"state\").eq(lit(\"CO\")), lit(303))\n+            .when(col(\"state\").eq(lit(\"NY\")), lit(\"212\"))\n\nReview comment:\n       this is a classic error (string with a number) \ud83d\udc4d \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-11-28T12:00:25.568+0000",
                    "updated": "2020-11-28T12:00:25.568+0000",
                    "started": "2020-11-28T12:00:25.567+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "517517",
                    "issueId": "13342008"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@65c5bbf8[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@517924c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32fdbb5c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@bc1dabd[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b0adf2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3372b9b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c4f57fa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@595e7afc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b039318[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@61d21010[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47046b57[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6d2770d1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Nov 24 17:41:10 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-11-24T17:41:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10688/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-11-22T23:54:11.000+0000",
        "updated": "2020-11-28T12:00:26.000+0000",
        "timeoriginalestimate": null,
        "description": "Support CASE WHEN from DataFrame API",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Support CASE WHEN from DataFrame API",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13342008/comment/17238285",
                    "id": "17238285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "body": "Issue resolved by pull request 8746\n[https://github.com/apache/arrow/pull/8746]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=andygrove",
                        "name": "andygrove",
                        "key": "andygrove",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=andygrove&avatarId=28239",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=andygrove&avatarId=28239",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=andygrove&avatarId=28239",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=andygrove&avatarId=28239"
                        },
                        "displayName": "Andy Grove",
                        "active": true,
                        "timeZone": "America/Denver"
                    },
                    "created": "2020-11-24T17:41:10.002+0000",
                    "updated": "2020-11-24T17:41:10.002+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ktso:",
        "customfield_12314139": null
    }
}