{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13123286",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286",
    "key": "ARROW-1895",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341666",
                "id": "12341666",
                "name": "0.7.1",
                "archived": false,
                "released": true,
                "releaseDate": "2017-10-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cpcloud",
            "name": "cpcloud",
            "key": "cpcloud",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=cpcloud&avatarId=31265",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=cpcloud&avatarId=31265",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=cpcloud&avatarId=31265",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=cpcloud&avatarId=31265"
            },
            "displayName": "Phillip Cloud",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1895/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@57391d82[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@10ada514[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77abf984[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ad36760[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@569d93cc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@37fd0c1c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1f32b4be[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@e4b285f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3472d9a9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@6b30aed7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@61ad604b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@36f3a5f1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Dec 10 18:34:24 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-10T18:34:23.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1895/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-12-06T19:54:48.000+0000",
        "updated": "2017-12-10T18:34:24.000+0000",
        "timeoriginalestimate": null,
        "description": "See the discussion here for details:\r\n\r\nhttps://github.com/pandas-dev/pandas/pull/18201\r\n\r\nIn short we need a way to map index column names to field names in an arrow Table.\r\n\r\nAdditionally, we're depending on the index columns being written at the end of the table and fixing this would allow us to read metadata written by other systems (e.g., fastparquet) that don't make this assumption.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Add field_name to pandas index metadata",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16280912",
                    "id": "16280912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-349774641\n \n \n   @jorisvandenbossche would you mind reviewing and making sure this jives with the discussion so far?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T21:06:30.462+0000",
                    "updated": "2017-12-06T21:06:30.462+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281016",
                    "id": "16281016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on issue #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-349792851\n \n \n   One special case that I encountered in https://github.com/apache/arrow/pull/1386 is a DataFrame with column name `None` (from ipc when serializing a Series without name). \r\n   This case is not yet handled here:\r\n   \r\n   ```\r\n   In [6]: pa.Table.from_pandas(pd.DataFrame({None: [1,2,3]}))\r\n   Out[6]: \r\n   pyarrow.Table\r\n   None: int64\r\n   __index_level_0__: int64\r\n   metadata\r\n   --------\r\n   {b'pandas': b'{\"index_columns\": [\"__index_level_0__\"], \"column_indexes\": [{\"na'\r\n               b'me\": null, \"pandas_type\": \"mixed\", \"numpy_type\": \"object\", \"meta'\r\n               b'data\": null}], \"columns\": [{\"name\": null, \"field_name\": null, \"p'\r\n               b'andas_type\": \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}, '\r\n               b'{\"name\": null, \"field_name\": \"__index_level_0__\", \"pandas_type\":'\r\n               b' \"int64\", \"numpy_type\": \"int64\", \"metadata\": null}], \"pandas_ver'\r\n               b'sion\": \"0.22.0.dev0+260.g5da3759\"}'}\r\n   ```\r\n   \r\n   So for the column, `\"name\": null, \"field_name\": null,` are both null, while field_name should be \"None\"\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T22:15:21.184+0000",
                    "updated": "2017-12-06T22:15:21.184+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281045",
                    "id": "16281045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on issue #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-349798367\n \n \n   @jorisvandenbossche How is it possible in practice to get a `Series` with a name of `None`? How can one exist without explicitly constructing it or assigning its name to be `None`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T22:37:52.156+0000",
                    "updated": "2017-12-06T22:37:52.156+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281058",
                    "id": "16281058",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on issue #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-349800572\n \n \n   Indeed by just constructing it and not getting it as a column from a dataframe. \r\n   Such a dataframe as I show above is constructed in the ipc code to serialize Series objects:\r\n   \r\n   https://github.com/apache/arrow/blob/1d519d8351c0b26ccb3214116eaf3aa684e4bba0/python/pyarrow/serialization.py#L194-L195\r\n   \r\n   It is also tested explicitly: https://github.com/apache/arrow/blob/master/python/pyarrow/tests/test_ipc.py#L458\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T22:47:21.398+0000",
                    "updated": "2017-12-06T22:47:21.398+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281086",
                    "id": "16281086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155386391\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -450,9 +459,31 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n \n     block_table = table\n \n+    index_columns_set = frozenset(index_columns)\n+\n+    # 1. 'field_name' is the user-facing name of the column in an arrow Table\n \n Review comment:\n   in the comment below you already describe the logical name as the \"user-facing\" name  (\"There must be the same number of logical names (user-facing) and physical names (fields in the arrow Table)\") \r\n   I would add here as well an explanation how a \"logical name\" should be interpreted for clarity\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:05:40.408+0000",
                    "updated": "2017-12-06T23:05:40.408+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281087",
                    "id": "16281087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155382344\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -132,7 +132,7 @@ def get_extension_dtype_info(column):\n     return physical_dtype, metadata\n \n \n-def get_column_metadata(column, name, arrow_type):\n+def get_column_metadata(column, name, arrow_type, field_name):\n \n Review comment:\n   maybe update the docstring here as well\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:05:40.538+0000",
                    "updated": "2017-12-06T23:05:40.538+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281088",
                    "id": "16281088",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155385389\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -193,20 +194,28 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n     index_types = types[ncolumns - len(index_levels):]\n \n     column_metadata = [\n-        get_column_metadata(df[col_name], name=sanitized_name,\n-                            arrow_type=arrow_type)\n-        for col_name, sanitized_name, arrow_type in\n-        zip(df.columns, column_names, df_types)\n+        get_column_metadata(\n+            df[col_name],\n+            name=sanitized_name,\n+            arrow_type=arrow_type,\n+            field_name=sanitized_name\n+        ) for col_name, sanitized_name, arrow_type in zip(\n+            df.columns, column_names, df_types\n+        )\n     ]\n \n     if preserve_index:\n         index_column_names = list(map(\n             index_level_name, range(len(index_levels))\n         ))\n         index_column_metadata = [\n-            get_column_metadata(level, name=level.name, arrow_type=arrow_type)\n-            for i, (level, arrow_type) in enumerate(\n-                zip(index_levels, index_types)\n+            get_column_metadata(\n+                level,\n+                name=level.name,\n \n Review comment:\n   column names are automatically stringified, should the same be done for index columns? (so `str(level.name)`) \r\n   (although I don't find it that important to support, as it is never roundtrippable)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:05:40.734+0000",
                    "updated": "2017-12-06T23:05:40.734+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281089",
                    "id": "16281089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155387510\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,28 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a'), (2, 'b'), (3, 'c')],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        _, _, idx0, foo = js['columns']\n+        idx0_name, foo_name = js['index_columns']\n+        assert idx0_name == '__index_level_0__'\n+        assert idx0['field_name'] == idx0_name\n+\n \n Review comment:\n   Should we also assert that `idx0['name']` is None, or is that already tested elsewhere adequately?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:05:40.736+0000",
                    "updated": "2017-12-06T23:05:40.736+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281090",
                    "id": "16281090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155387915\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,28 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a'), (2, 'b'), (3, 'c')],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        _, _, idx0, foo = js['columns']\n+        idx0_name, foo_name = js['index_columns']\n+        assert idx0_name == '__index_level_0__'\n+        assert idx0['field_name'] == idx0_name\n+\n+        assert foo_name == '__index_level_1__'\n+        assert foo['name'] == 'foo'\n+\n \n Review comment:\n   For completeness, I would assert that for the other columns, the name and field_name are equal (this is obvious from the current code, but not explicitly tested):\r\n   \r\n   ```\r\n   col1, col2, idx0, foo = js['columns']\r\n   \r\n   assert col1['name'] == col1['field_name']\r\n   assert col2['name'] == col2['field_name']\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:05:40.737+0000",
                    "updated": "2017-12-06T23:05:40.737+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281110",
                    "id": "16281110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155391076\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -193,20 +194,28 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n     index_types = types[ncolumns - len(index_levels):]\n \n     column_metadata = [\n-        get_column_metadata(df[col_name], name=sanitized_name,\n-                            arrow_type=arrow_type)\n-        for col_name, sanitized_name, arrow_type in\n-        zip(df.columns, column_names, df_types)\n+        get_column_metadata(\n+            df[col_name],\n+            name=sanitized_name,\n+            arrow_type=arrow_type,\n+            field_name=sanitized_name\n+        ) for col_name, sanitized_name, arrow_type in zip(\n+            df.columns, column_names, df_types\n+        )\n     ]\n \n     if preserve_index:\n         index_column_names = list(map(\n             index_level_name, range(len(index_levels))\n         ))\n         index_column_metadata = [\n-            get_column_metadata(level, name=level.name, arrow_type=arrow_type)\n-            for i, (level, arrow_type) in enumerate(\n-                zip(index_levels, index_types)\n+            get_column_metadata(\n+                level,\n+                name=level.name,\n \n Review comment:\n   This is to preserve the `None` value when parsing `null` in JSON.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:20:52.285+0000",
                    "updated": "2017-12-06T23:20:52.285+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281113",
                    "id": "16281113",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155392100\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,28 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a'), (2, 'b'), (3, 'c')],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        _, _, idx0, foo = js['columns']\n+        idx0_name, foo_name = js['index_columns']\n+        assert idx0_name == '__index_level_0__'\n+        assert idx0['field_name'] == idx0_name\n+\n \n Review comment:\n   I'll add that\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:26:36.894+0000",
                    "updated": "2017-12-06T23:26:36.894+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281114",
                    "id": "16281114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155392121\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,28 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a'), (2, 'b'), (3, 'c')],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        _, _, idx0, foo = js['columns']\n+        idx0_name, foo_name = js['index_columns']\n+        assert idx0_name == '__index_level_0__'\n+        assert idx0['field_name'] == idx0_name\n+\n+        assert foo_name == '__index_level_1__'\n+        assert foo['name'] == 'foo'\n+\n \n Review comment:\n   Yep, will do\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:26:42.913+0000",
                    "updated": "2017-12-06T23:26:42.913+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281117",
                    "id": "16281117",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155392189\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -132,7 +132,7 @@ def get_extension_dtype_info(column):\n     return physical_dtype, metadata\n \n \n-def get_column_metadata(column, name, arrow_type):\n+def get_column_metadata(column, name, arrow_type, field_name):\n \n Review comment:\n   Thanks, will do\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:27:06.977+0000",
                    "updated": "2017-12-06T23:27:06.977+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281141",
                    "id": "16281141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155394901\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -193,20 +194,28 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n     index_types = types[ncolumns - len(index_levels):]\n \n     column_metadata = [\n-        get_column_metadata(df[col_name], name=sanitized_name,\n-                            arrow_type=arrow_type)\n-        for col_name, sanitized_name, arrow_type in\n-        zip(df.columns, column_names, df_types)\n+        get_column_metadata(\n+            df[col_name],\n+            name=sanitized_name,\n+            arrow_type=arrow_type,\n+            field_name=sanitized_name\n+        ) for col_name, sanitized_name, arrow_type in zip(\n+            df.columns, column_names, df_types\n+        )\n     ]\n \n     if preserve_index:\n         index_column_names = list(map(\n             index_level_name, range(len(index_levels))\n         ))\n         index_column_metadata = [\n-            get_column_metadata(level, name=level.name, arrow_type=arrow_type)\n-            for i, (level, arrow_type) in enumerate(\n-                zip(index_levels, index_types)\n+            get_column_metadata(\n+                level,\n+                name=level.name,\n \n Review comment:\n   Ah yes, of course. (So for columns it is converted to string when not None)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:43:40.299+0000",
                    "updated": "2017-12-06T23:43:40.299+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281145",
                    "id": "16281145",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155395268\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,35 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, 'c'])))\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == col1['field_name']\n+        assert col2['name'] is None\n+        assert col2['field_name'] is None\n \n Review comment:\n   So in principle, IMO this should be the string `\"None\"` to make `field_name` perfectly usable for schema lookup. \r\n   Otherwise you need to do `schema.get_field_index(field_name or \"None\")`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:46:13.899+0000",
                    "updated": "2017-12-06T23:46:13.899+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281153",
                    "id": "16281153",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155396053\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,35 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, 'c'])))\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == col1['field_name']\n+        assert col2['name'] is None\n+        assert col2['field_name'] is None\n \n Review comment:\n   Hm, this works without that, let me see what's happening.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:51:34.669+0000",
                    "updated": "2017-12-06T23:51:34.669+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281154",
                    "id": "16281154",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155396454\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,35 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, 'c'])))\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == col1['field_name']\n+        assert col2['name'] is None\n+        assert col2['field_name'] is None\n \n Review comment:\n   We're actually explicitly handling this case later on in `table_to_blockmanager` so this is okay.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:54:23.614+0000",
                    "updated": "2017-12-06T23:54:23.614+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281157",
                    "id": "16281157",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155396677\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -132,7 +132,7 @@ def get_extension_dtype_info(column):\n     return physical_dtype, metadata\n \n \n-def get_column_metadata(column, name, arrow_type):\n+def get_column_metadata(column, name, arrow_type, field_name):\n \n Review comment:\n   done\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-06T23:55:43.959+0000",
                    "updated": "2017-12-06T23:55:43.959+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281933",
                    "id": "16281933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155539165\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,35 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, 'c'])))\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == col1['field_name']\n+        assert col2['name'] is None\n+        assert col2['field_name'] is None\n \n Review comment:\n   Yes, the current code works without (just as it did work before with a \"name\" of None) as it is handled by `table_to_blockmanager`. \r\n   But that means that you will always have to special case this option, and for me that should be the point of \"field_name\" that ``schema.get_field_index(field_name)`` is guaranteed to not error (and you thus don't have to special case None)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T14:42:38.911+0000",
                    "updated": "2017-12-07T14:42:38.911+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16281951",
                    "id": "16281951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155542129\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,35 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, 'c'])))\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == col1['field_name']\n+        assert col2['name'] is None\n+        assert col2['field_name'] is None\n \n Review comment:\n   Ok, I've implemented this. Pushing it up now.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T14:52:54.543+0000",
                    "updated": "2017-12-07T14:52:54.543+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16282055",
                    "id": "16282055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155562651\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,40 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        # test None case, and strangely named non-index columns\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, '__index_level_0__'])))\n \n Review comment:\n   not that important, but doing `columns= ['a', None, '__index_level_0__']` inside the `DataFrame` call is a bit simpler\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T16:00:36.170+0000",
                    "updated": "2017-12-07T16:00:36.170+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16282063",
                    "id": "16282063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1397: ARROW-1895: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155563908\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -160,9 +160,40 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        # test None case, and strangely named non-index columns\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            )\n+        ).rename(columns=dict(zip(range(3), ['a', None, '__index_level_0__'])))\n \n Review comment:\n   Yep, thank you. That is much better.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T16:03:30.020+0000",
                    "updated": "2017-12-07T16:03:30.020+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16283471",
                    "id": "16283471",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "jorisvandenbossche commented on a change in pull request #1397: ARROW-1895/ARROW-1897: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#discussion_r155769103\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -174,15 +206,32 @@ def test_categorical_column_index(self):\n         column_indexes, = js['column_indexes']\n         assert column_indexes['name'] is None\n         assert column_indexes['pandas_type'] == 'categorical'\n-        assert column_indexes['numpy_type'] == 'object'\n+        assert column_indexes['numpy_type'] == 'int8'\n \n         md = column_indexes['metadata']\n         assert md['num_categories'] == 3\n         assert md['ordered'] is False\n \n+    def test_string_column_index(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 2.0), (2, 'b', 3.0), (3, 'c', 4.0)],\n+            columns=pd.Index(list('def'), name='stringz')\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        column_indexes, = js['column_indexes']\n+        assert column_indexes['name'] == 'stringz'\n+        assert column_indexes['name'] == column_indexes['field_name']\n+        assert column_indexes['pandas_type'] == ('bytes' if PY2 else 'unicode')\n+        assert column_indexes['numpy_type'] == 'object'\n+\n+        md = column_indexes['metadata']\n+        assert len(md) == 1\n+        assert md['encoding'] == 'UTF-8'\n \n Review comment:\n   Tests are failing on this one. Maybe this is only the case for unicode and not for bytes, and thus only for `not PY2` ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-08T12:41:58.455+0000",
                    "updated": "2017-12-08T12:41:58.455+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16285080",
                    "id": "16285080",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1397: ARROW-1895/ARROW-1897: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-350525359\n \n \n   I can merge this tomorrow once the build is passing, will also take a brief look through\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-10T04:58:04.582+0000",
                    "updated": "2017-12-10T04:58:04.582+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16285290",
                    "id": "16285290",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1397: ARROW-1895/ARROW-1897: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397#issuecomment-350556859\n \n \n   I'm going to be AFK for about 5 or 6 hours, @cpcloud or @xhochy please go and ahead and merge this once the Python builds run in Travis CI so @jorisvandenbossche can rebase. I'll be back on later today to work on some other patches for 0.8.0\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-10T15:40:48.542+0000",
                    "updated": "2017-12-10T15:40:48.542+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16285341",
                    "id": "16285341",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1397: ARROW-1895/ARROW-1897: [Python] Add field_name to pandas index metadata\nURL: https://github.com/apache/arrow/pull/1397\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 8459ec31b..afb204db8 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -110,7 +110,11 @@ def get_logical_type_from_numpy(pandas_collection):\n     except KeyError:\n         if hasattr(pandas_collection.dtype, 'tz'):\n             return 'datetimetz'\n-        return infer_dtype(pandas_collection)\n+        result = infer_dtype(pandas_collection)\n+\n+        if result == 'string':\n+            return 'bytes' if PY2 else 'unicode'\n+        return result\n \n \n def get_extension_dtype_info(column):\n@@ -122,7 +126,7 @@ def get_extension_dtype_info(column):\n             'num_categories': len(cats.categories),\n             'ordered': cats.ordered,\n         }\n-        physical_dtype = 'object'\n+        physical_dtype = str(cats.codes.dtype)\n     elif hasattr(dtype, 'tz'):\n         metadata = {'timezone': str(dtype.tz)}\n         physical_dtype = 'datetime64[ns]'\n@@ -132,7 +136,7 @@ def get_extension_dtype_info(column):\n     return physical_dtype, metadata\n \n \n-def get_column_metadata(column, name, arrow_type):\n+def get_column_metadata(column, name, arrow_type, field_name):\n     \"\"\"Construct the metadata for a given column\n \n     Parameters\n@@ -140,6 +144,10 @@ def get_column_metadata(column, name, arrow_type):\n     column : pandas.Series or pandas.Index\n     name : str\n     arrow_type : pyarrow.DataType\n+    field_name : str\n+        Equivalent to `name` when `column` is a `Series`, otherwise if `column`\n+        is a pandas Index then `field_name` will not be the same as `name`.\n+        This is the name of the field in the arrow Table's schema.\n \n     Returns\n     -------\n@@ -164,6 +172,7 @@ def get_column_metadata(column, name, arrow_type):\n \n     return {\n         'name': name,\n+        'field_name': str(field_name),\n         'pandas_type': logical_type,\n         'numpy_type': string_dtype,\n         'metadata': extra_metadata,\n@@ -193,10 +202,14 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n     index_types = types[ncolumns - len(index_levels):]\n \n     column_metadata = [\n-        get_column_metadata(df[col_name], name=sanitized_name,\n-                            arrow_type=arrow_type)\n-        for col_name, sanitized_name, arrow_type in\n-        zip(df.columns, column_names, df_types)\n+        get_column_metadata(\n+            df[col_name],\n+            name=sanitized_name,\n+            arrow_type=arrow_type,\n+            field_name=sanitized_name\n+        ) for col_name, sanitized_name, arrow_type in zip(\n+            df.columns, column_names, df_types\n+        )\n     ]\n \n     if preserve_index:\n@@ -204,9 +217,13 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n             index_level_name, range(len(index_levels))\n         ))\n         index_column_metadata = [\n-            get_column_metadata(level, name=level.name, arrow_type=arrow_type)\n-            for i, (level, arrow_type) in enumerate(\n-                zip(index_levels, index_types)\n+            get_column_metadata(\n+                level,\n+                name=level.name,\n+                arrow_type=arrow_type,\n+                field_name=field_name,\n+            ) for i, (level, arrow_type, field_name) in enumerate(\n+                zip(index_levels, index_types, index_column_names)\n             )\n         ]\n \n@@ -214,9 +231,16 @@ def construct_metadata(df, column_names, index_levels, preserve_index, types):\n \n         for level in getattr(df.columns, 'levels', [df.columns]):\n             string_dtype, extra_metadata = get_extension_dtype_info(level)\n+\n+            pandas_type = get_logical_type_from_numpy(level)\n+            if pandas_type == 'unicode':\n+                assert not extra_metadata\n+                extra_metadata = {'encoding': 'UTF-8'}\n+\n             column_index = {\n                 'name': level.name,\n-                'pandas_type': get_logical_type_from_numpy(level),\n+                'field_name': level.name,\n+                'pandas_type': pandas_type,\n                 'numpy_type': string_dtype,\n                 'metadata': extra_metadata,\n             }\n@@ -436,7 +460,6 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n     schema = table.schema\n     row_count = table.num_rows\n     metadata = schema.metadata\n-    columns_metadata = None\n \n     has_pandas_metadata = metadata is not None and b'pandas' in metadata\n \n@@ -446,13 +469,36 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n         columns = pandas_metadata['columns']\n         column_indexes = pandas_metadata.get('column_indexes', [])\n         table = _add_any_metadata(table, pandas_metadata)\n-        columns_metadata = pandas_metadata.get('columns', None)\n \n     block_table = table\n \n+    index_columns_set = frozenset(index_columns)\n+\n+    # 0. 'field_name' is the name of the column in the arrow Table\n+    # 1. 'name' is the user-facing name of the column, that is, it came from\n+    #    pandas\n+    # 2. 'field_name' and 'name' differ for index columns\n+    # 3. We fall back on c['name'] for backwards compatibility\n+    logical_index_names = [\n+        c['name'] for c in columns\n+        if c.get('field_name', c['name']) in index_columns_set\n+    ]\n+\n+    # There must be the same number of field names and physical names\n+    # (fields in the arrow Table)\n+    assert len(logical_index_names) == len(index_columns_set)\n+\n+    # It can never be the case in a released version of pyarrow that\n+    # c['name'] is None *and* 'field_name' is not a key in the column metadata,\n+    # because the change to allow c['name'] to be None and the change to add\n+    # 'field_name' are in the same release (0.8.0)\n+    assert all(\n+        (c['name'] is None and 'field_name' in c) or c['name'] is not None\n+        for c in columns\n+    )\n+\n     # Build up a list of index columns and names while removing those columns\n     # from the original table\n-    logical_index_names = [c['name'] for c in columns[-len(index_columns):]]\n     for raw_name, logical_name in zip(index_columns, logical_index_names):\n         i = schema.get_field_index(raw_name)\n         if i != -1:\n@@ -483,15 +529,12 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n         index = pd.RangeIndex(row_count)\n \n     column_strings = [x.name for x in block_table.itercolumns()]\n-    if columns_metadata is not None:\n-        columns_name_dict = dict(\n-            (str(x['name']), x['name'])\n-            for x in columns_metadata\n-        )\n+    if columns:\n+        columns_name_dict = {\n+            c.get('field_name', str(c['name'])): c['name'] for c in columns\n+        }\n         columns_values = [\n-            columns_name_dict[y]\n-            if y in columns_name_dict.keys() else y\n-            for y in column_strings\n+            columns_name_dict.get(name, name) for name in column_strings\n         ]\n     else:\n         columns_values = column_strings\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex e94ee4608..d7f059649 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -30,7 +30,7 @@\n import pandas as pd\n import pandas.util.testing as tm\n \n-from pyarrow.compat import u\n+from pyarrow.compat import u, PY2\n import pyarrow as pa\n import pyarrow.types as patypes\n \n@@ -160,9 +160,41 @@ def test_integer_index_column(self):\n         df = pd.DataFrame([(1, 'a'), (2, 'b'), (3, 'c')])\n         _check_pandas_roundtrip(df, preserve_index=True)\n \n+    def test_index_metadata_field_name(self):\n+        # test None case, and strangely named non-index columns\n+        df = pd.DataFrame(\n+            [(1, 'a', 3.1), (2, 'b', 2.2), (3, 'c', 1.3)],\n+            index=pd.MultiIndex.from_arrays(\n+                [['c', 'b', 'a'], [3, 2, 1]],\n+                names=[None, 'foo']\n+            ),\n+            columns=['a', None, '__index_level_0__'],\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        col1, col2, col3, idx0, foo = js['columns']\n+\n+        assert col1['name'] == 'a'\n+        assert col1['name'] == col1['field_name']\n+\n+        assert col2['name'] is None\n+        assert col2['field_name'] == 'None'\n+\n+        assert col3['name'] == '__index_level_0__'\n+        assert col3['name'] == col3['field_name']\n+\n+        idx0_name, foo_name = js['index_columns']\n+        assert idx0_name == '__index_level_0__'\n+        assert idx0['field_name'] == idx0_name\n+        assert idx0['name'] is None\n+\n+        assert foo_name == '__index_level_1__'\n+        assert foo['name'] == 'foo'\n+\n     def test_categorical_column_index(self):\n-        # I *really* hope no one uses category dtypes for single level column\n-        # indexes\n         df = pd.DataFrame(\n             [(1, 'a', 2.0), (2, 'b', 3.0), (3, 'c', 4.0)],\n             columns=pd.Index(list('def'), dtype='category')\n@@ -174,15 +206,36 @@ def test_categorical_column_index(self):\n         column_indexes, = js['column_indexes']\n         assert column_indexes['name'] is None\n         assert column_indexes['pandas_type'] == 'categorical'\n-        assert column_indexes['numpy_type'] == 'object'\n+        assert column_indexes['numpy_type'] == 'int8'\n \n         md = column_indexes['metadata']\n         assert md['num_categories'] == 3\n         assert md['ordered'] is False\n \n+    def test_string_column_index(self):\n+        df = pd.DataFrame(\n+            [(1, 'a', 2.0), (2, 'b', 3.0), (3, 'c', 4.0)],\n+            columns=pd.Index(list('def'), name='stringz')\n+        )\n+        t = pa.Table.from_pandas(df, preserve_index=True)\n+        raw_metadata = t.schema.metadata\n+        js = json.loads(raw_metadata[b'pandas'].decode('utf8'))\n+\n+        column_indexes, = js['column_indexes']\n+        assert column_indexes['name'] == 'stringz'\n+        assert column_indexes['name'] == column_indexes['field_name']\n+        assert column_indexes['pandas_type'] == ('bytes' if PY2 else 'unicode')\n+        assert column_indexes['numpy_type'] == 'object'\n+\n+        md = column_indexes['metadata']\n+\n+        if not PY2:\n+            assert len(md) == 1\n+            assert md['encoding'] == 'UTF-8'\n+        else:\n+            assert md is None or 'encoding' not in md\n+\n     def test_datetimetz_column_index(self):\n-        # I *really* hope no one uses category dtypes for single level column\n-        # indexes\n         df = pd.DataFrame(\n             [(1, 'a', 2.0), (2, 'b', 3.0), (3, 'c', 4.0)],\n             columns=pd.date_range(\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-10T18:34:07.291+0000",
                    "updated": "2017-12-10T18:34:07.291+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13123286/comment/16285342",
                    "id": "16285342",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1397\n[https://github.com/apache/arrow/pull/1397]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2017-12-10T18:34:24.027+0000",
                    "updated": "2017-12-10T18:34:24.027+0000"
                }
            ],
            "maxResults": 27,
            "total": 27,
            "startAt": 0
        },
        "customfield_12311820": "0|i3nmbr:",
        "customfield_12314139": null
    }
}