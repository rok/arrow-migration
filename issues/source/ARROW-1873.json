{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13121802",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802",
    "key": "ARROW-1873",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12521471",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12521471",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13122654",
                    "key": "ARROW-1886",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13122654",
                    "fields": {
                        "summary": "[Python] Add function to \"flatten\" structs within tables",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
            "name": "dbtsai",
            "key": "dbtsai",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
            },
            "displayName": "DB Tsai",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
            "name": "dbtsai",
            "key": "dbtsai",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
            },
            "displayName": "DB Tsai",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1873/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@177fab06[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@66596601[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e3db064[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@13f9a0cc[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b7316e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@56204ce1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5cd78d1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5bec5764[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@60eb2136[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@34782e8e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a9dc320[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@63f3e860[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Dec 08 01:06:55 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-08T01:06:54.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1873/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-11-30T01:51:31.000+0000",
        "updated": "2019-06-03T12:43:29.000+0000",
        "timeoriginalestimate": null,
        "description": "We are trying to load 100 parquet files, and each of them is around 20MB. Before we port [ARROW-1830] into our pyarrow distribution, we use {{glob}} to list all the files, and then load them as pandas dataframe through pyarrow. \r\n\r\nThe schema of the parquet files is like \r\n{code:java}\r\nroot\r\n |-- dateint: integer (nullable = true)\r\n |-- profileid: long (nullable = true)\r\n |-- time: long (nullable = true)\r\n |-- label: double (nullable = true)\r\n |-- weight: double (nullable = true)\r\n |-- features: array (nullable = true)\r\n |    |-- element: double (containsNull = true)\r\n{code}\r\n\r\nIf we only load couple of them, it works without any issue. However, when loading 100 of them, we got segmentation fault as the following. FYI, if we flatten {{features: array[double]}} into top level, the file sizes are around the same, and work fine too. \r\n\r\nIs there anything we can try to eliminate this issue? Thanks.\r\n\r\n{code}\r\n>>> import glob\r\n>>> files = glob.glob(\"/home/dbt/data/*\")\r\n>>> data = pq.ParquetDataset(files).read().to_pandas()\r\n[New Thread 0x7fffe8f84700 (LWP 23769)]\r\n[New Thread 0x7fffe3b93700 (LWP 23770)]\r\n[New Thread 0x7fffe3392700 (LWP 23771)]\r\n[New Thread 0x7fffe2b91700 (LWP 23772)]\r\n[Thread 0x7fffe2b91700 (LWP 23772) exited]\r\n[Thread 0x7fffe3b93700 (LWP 23770) exited]\r\n\r\nThread 4 \"python\" received signal SIGSEGV, Segmentation fault.\r\n[Switching to Thread 0x7fffe3392700 (LWP 23771)]\r\n0x00007ffff270fc94 in arrow::Status arrow::VisitTypeInline<arrow::py::ArrowDeserializer>(arrow::DataType const&, arrow::py::ArrowDeserializer*) ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n(gdb) backtrace\r\n#0  0x00007ffff270fc94 in arrow::Status arrow::VisitTypeInline<arrow::py::ArrowDeserializer>(arrow::DataType const&, arrow::py::ArrowDeserializer*) ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#1  0x00007ffff2700b5a in arrow::py::ConvertColumnToPandas(arrow::py::PandasOptions, std::shared_ptr<arrow::Column> const&, _object*, _object**) ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#2  0x00007ffff2714985 in arrow::Status arrow::py::ConvertListsLike<arrow::DoubleType>(arrow::py::PandasOptions, std::shared_ptr<arrow::Column> const&, _object**) () from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#3  0x00007ffff2716b92 in arrow::py::ObjectBlock::Write(std::shared_ptr<arrow::Column> const&, long, long) ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#4  0x00007ffff270a489 in arrow::py::DataFrameBlockCreator::WriteTableToBlocks(int)::{lambda(int)#1}::operator()(int) const ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#5  0x00007ffff270a67c in std::thread::_Impl<std::_Bind_simple<arrow::Status arrow::ParallelFor<arrow::py::DataFrameBlockCreator::WriteTableToBlocks(int)::{lambda(int)#1}&>(int, int, arrow::py::DataFrameBlockCreator::WriteTableToBlocks(int)::{lambda(int)#1}&)::{lambda()#1} ()> >::_M_run() ()\r\n   from /home/dbt/miniconda3/lib/python3.6/site-packages/pyarrow/../../../libarrow_python.so.0\r\n#6  0x00007ffff1e30c5c in std::execute_native_thread_routine_compat (__p=<optimized out>)\r\n    at /opt/conda/conda-bld/compilers_linux-64_1505664199673/work/.build/src/gcc-7.2.0/libstdc++-v3/src/c++11/thread.cc:110\r\n#7  0x00007ffff7bc16ba in start_thread (arg=0x7fffe3392700) at pthread_create.c:333\r\n#8  0x00007ffff78f73dd in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109\r\n{code}\r\n",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Segmentation fault when loading total 2GB of parquet files",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16274642",
                    "id": "16274642",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "If I had to guess, the features inner array is overflowing 2 billion elements. I marked this for 0.8.0 to take a look",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-01T17:06:49.071+0000",
                    "updated": "2017-12-01T17:06:49.071+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16275093",
                    "id": "16275093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "There are only 14 elements in the feature inner array, but there are 100M records in total. Anyway I can debug it or provide more information for you? Thanks. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-12-01T22:24:47.166+0000",
                    "updated": "2017-12-01T22:24:47.166+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16275374",
                    "id": "16275374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Doing some digging in a beefy machine, and it runs in big machine! \r\n\r\nWe have two variances of the same data in different schema. One is \r\n{code:java}\r\nroot\r\n |-- dateint: integer (nullable = true)\r\n |-- profileid: long (nullable = true)\r\n |-- time: long (nullable = true)\r\n |-- label: double (nullable = true)\r\n |-- weight: double (nullable = true)\r\n |-- features: array (nullable = true)\r\n |    |-- element: double (containsNull = true)\r\n{code}\r\nas previously shown, and it's 2.7G. \r\n\r\nThe other one is in struct, and the schema is like\r\n{code:java}\r\nroot\r\n |-- dateint: integer (nullable = true)\r\n |-- profileid: long (nullable = true)\r\n |-- time: long (nullable = true)\r\n |-- label: double (nullable = true)\r\n |-- weight: double (nullable = true)\r\n |-- features: struct (nullable = true)\r\n |    |-- f1: double (nullable = true)\r\n |    |-- f2: double (nullable = true)\r\n ...........\r\n |    |-- f14: double (nullable = true)\r\n{code}\r\nand the total size is 1.9G.\r\n\r\nIt does make sense that the files in struct are smaller due to better compression in columnar format. \r\n\r\nHowever, when the first one is loaded into memory, it takes 22.32GB, while the second one takes 127.97GB. In theory, for uncompressed data, it should at most take {{93993056 * (5 + 14) * 8 bytes = 14GB}}. Where is the overhead coming from? In particularly, the second one in struct is resulting almost 10x overhead. Is it possible to load those data in memory with compression like Spark's dataframe cache? Is it possible to lazily load the data, and only deserialize the data when in need?\r\n\r\nRegardless of the overhead issue, we should figure out how to return OOM instead of segmentation fault for easier debugging. \r\n\r\nThey are long questions, and thank you for helping out.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-12-02T02:08:26.748+0000",
                    "updated": "2017-12-02T02:08:26.748+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16276882",
                    "id": "16276882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'll take a look to see where the OOM might not be bubbling up. There are a number of places where we are not checking for Python errors as rigorously as we could, so at high memory pressure the OOM could happen in any number of places",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-04T14:48:22.485+0000",
                    "updated": "2017-12-04T14:48:22.485+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16277181",
                    "id": "16277181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[~wesmckinn] thanks. I wonder why the overhead of loading parquet files into memory is so huge. Is it technically addressable in pyarrow or in pandas? ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=dbtsai",
                        "name": "dbtsai",
                        "key": "dbtsai",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=dbtsai&avatarId=21803",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=dbtsai&avatarId=21803",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=dbtsai&avatarId=21803",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=dbtsai&avatarId=21803"
                        },
                        "displayName": "DB Tsai",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2017-12-04T18:16:34.952+0000",
                    "updated": "2017-12-04T18:16:34.952+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16277299",
                    "id": "16277299",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I think the overhead is coming from the Python objects that are being created by {{to_pandas}}. Try removing the {{to_pandas()}} call and then look at {{pyarrow.total_allocated_bytes()}}. All memory allocations in Arrow are precisely accounted for, so it should give you an exact accounting of how much data has been loaded into memory. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-04T19:16:47.753+0000",
                    "updated": "2017-12-04T19:16:47.753+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16277307",
                    "id": "16277307",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Note also\r\n\r\n{code}\r\nIn [8]: import sys\r\n\r\nIn [9]: d = 3.5\r\n\r\nIn [10]: sys.getsizeof(d)\r\nOut[10]: 24\r\n\r\nIn [11]: dct = {}\r\n\r\nIn [12]: sys.getsizeof(dct)\r\nOut[12]: 288\r\n{code}\r\n\r\nSo the \"features\" struct in the other table takes up a minimum of 624 bytes per record, probably more than that when you account for internal {{PyObject*}} which are created inside the hash table ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-04T19:20:27.221+0000",
                    "updated": "2017-12-04T19:20:27.221+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16277314",
                    "id": "16277314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I just created https://issues.apache.org/jira/browse/ARROW-1886 as a possible way to help with this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-04T19:22:44.358+0000",
                    "updated": "2017-12-04T19:22:44.358+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16282316",
                    "id": "16282316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm going to add a few missing null checks to help catch the OOM, will put up patch soon. I'm not sure how else to help with this",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-07T18:53:09.724+0000",
                    "updated": "2017-12-07T18:53:09.724+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16282516",
                    "id": "16282516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm opened a new pull request #1404: ARROW-1873: [Python] Catch more possible Python/OOM errors in to_pandas conversion path\nURL: https://github.com/apache/arrow/pull/1404\n \n \n   I also ran into a gnarly method dispatching bug ARROW-1904 while working on this. I will address that deprecation in a separate patch\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T20:55:43.482+0000",
                    "updated": "2017-12-07T20:55:43.482+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16282585",
                    "id": "16282585",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1404: ARROW-1873: [Python] Catch more possible Python/OOM errors in to_pandas conversion path\nURL: https://github.com/apache/arrow/pull/1404#issuecomment-350105625\n \n \n   Thanks! Here's an Appveyor build running on my fork, I will merge once this is passed: https://ci.appveyor.com/project/wesm/arrow/build/1.0.1566\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-07T21:52:35.192+0000",
                    "updated": "2017-12-07T21:52:35.192+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16282856",
                    "id": "16282856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1404\n[https://github.com/apache/arrow/pull/1404]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-08T01:06:54.344+0000",
                    "updated": "2017-12-08T01:06:54.344+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13121802/comment/16282857",
                    "id": "16282857",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1404: ARROW-1873: [Python] Catch more possible Python/OOM errors in to_pandas conversion path\nURL: https://github.com/apache/arrow/pull/1404\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 1a1b71125..08ce37cda 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -240,19 +240,14 @@ class PandasBlock {\n       block_arr = PyArray_SimpleNewFromDescr(1, block_dims, descr);\n     }\n \n-    if (block_arr == NULL) {\n-      // TODO(wesm): propagating Python exception\n-      return Status::OK();\n-    }\n+    RETURN_IF_PYERROR();\n \n     PyArray_ENABLEFLAGS(reinterpret_cast<PyArrayObject*>(block_arr), NPY_ARRAY_OWNDATA);\n \n     npy_intp placement_dims[1] = {num_columns_};\n     PyObject* placement_arr = PyArray_SimpleNew(1, placement_dims, NPY_INT64);\n-    if (placement_arr == NULL) {\n-      // TODO(wesm): propagating Python exception\n-      return Status::OK();\n-    }\n+\n+    RETURN_IF_PYERROR();\n \n     block_arr_.reset(block_arr);\n     placement_arr_.reset(placement_arr);\n@@ -282,12 +277,19 @@ class PandasBlock {\n   ARROW_DISALLOW_COPY_AND_ASSIGN(PandasBlock);\n };\n \n+template <typename T>\n+inline const T* GetPrimitiveValues(const Array& arr) {\n+  const auto& prim_arr = static_cast<const PrimitiveArray&>(arr);\n+  const T* raw_values = reinterpret_cast<const T*>(prim_arr.values()->data());\n+  return raw_values + arr.offset();\n+}\n+\n template <typename T>\n inline void ConvertIntegerWithNulls(PandasOptions options, const ChunkedArray& data,\n                                     double* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const T*>(arr.raw_values());\n+    const auto& arr = *data.chunk(c);\n+    const T* in_values = GetPrimitiveValues<T>(arr);\n     // Upcast to double, set NaN as appropriate\n \n     for (int i = 0; i < arr.length(); ++i) {\n@@ -300,8 +302,8 @@ template <typename T>\n inline void ConvertIntegerNoNullsSameType(PandasOptions options, const ChunkedArray& data,\n                                           T* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const T*>(arr.raw_values());\n+    const auto& arr = *data.chunk(c);\n+    const T* in_values = GetPrimitiveValues<T>(arr);\n     memcpy(out_values, in_values, sizeof(T) * arr.length());\n     out_values += arr.length();\n   }\n@@ -311,8 +313,8 @@ template <typename InType, typename OutType>\n inline void ConvertIntegerNoNullsCast(PandasOptions options, const ChunkedArray& data,\n                                       OutType* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const InType*>(arr.raw_values());\n+    const auto& arr = *data.chunk(c);\n+    const InType* in_values = GetPrimitiveValues<InType>(arr);\n     for (int64_t i = 0; i < arr.length(); ++i) {\n       *out_values = in_values[i];\n     }\n@@ -323,14 +325,13 @@ static Status ConvertBooleanWithNulls(PandasOptions options, const ChunkedArray&\n                                       PyObject** out_values) {\n   PyAcquireGIL lock;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const std::shared_ptr<Array> arr = data.chunk(c);\n-    auto bool_arr = static_cast<BooleanArray*>(arr.get());\n+    const auto& arr = static_cast<const BooleanArray&>(*data.chunk(c));\n \n-    for (int64_t i = 0; i < arr->length(); ++i) {\n-      if (bool_arr->IsNull(i)) {\n+    for (int64_t i = 0; i < arr.length(); ++i) {\n+      if (arr.IsNull(i)) {\n         Py_INCREF(Py_None);\n         *out_values++ = Py_None;\n-      } else if (bool_arr->Value(i)) {\n+      } else if (arr.Value(i)) {\n         // True\n         Py_INCREF(Py_True);\n         *out_values++ = Py_True;\n@@ -347,10 +348,9 @@ static Status ConvertBooleanWithNulls(PandasOptions options, const ChunkedArray&\n static void ConvertBooleanNoNulls(PandasOptions options, const ChunkedArray& data,\n                                   uint8_t* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const std::shared_ptr<Array> arr = data.chunk(c);\n-    auto bool_arr = static_cast<BooleanArray*>(arr.get());\n-    for (int64_t i = 0; i < arr->length(); ++i) {\n-      *out_values++ = static_cast<uint8_t>(bool_arr->Value(i));\n+    const auto& arr = static_cast<const BooleanArray&>(*data.chunk(c));\n+    for (int64_t i = 0; i < arr.length(); ++i) {\n+      *out_values++ = static_cast<uint8_t>(arr.Value(i));\n     }\n   }\n }\n@@ -361,17 +361,17 @@ inline Status ConvertBinaryLike(PandasOptions options, const ChunkedArray& data,\n   using ArrayType = typename TypeTraits<Type>::ArrayType;\n   PyAcquireGIL lock;\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    auto arr = static_cast<ArrayType*>(data.chunk(c).get());\n+    const auto& arr = static_cast<const ArrayType&>(*data.chunk(c));\n \n     const uint8_t* data_ptr;\n     int32_t length;\n     const bool has_nulls = data.null_count() > 0;\n-    for (int64_t i = 0; i < arr->length(); ++i) {\n-      if (has_nulls && arr->IsNull(i)) {\n+    for (int64_t i = 0; i < arr.length(); ++i) {\n+      if (has_nulls && arr.IsNull(i)) {\n         Py_INCREF(Py_None);\n         *out_values = Py_None;\n       } else {\n-        data_ptr = arr->GetValue(i, &length);\n+        data_ptr = arr.GetValue(i, &length);\n         *out_values = WrapBytes<ArrayType>::Wrap(data_ptr, length);\n         if (*out_values == nullptr) {\n           PyErr_Clear();\n@@ -530,13 +530,25 @@ inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Colu\n         PyObject* start = PyLong_FromLongLong(arr->value_offset(i) + chunk_offset);\n         PyObject* end = PyLong_FromLongLong(arr->value_offset(i + 1) + chunk_offset);\n         PyObject* slice = PySlice_New(start, end, NULL);\n+        Py_XDECREF(start);\n+        Py_XDECREF(end);\n+\n+        if (ARROW_PREDICT_FALSE(slice == nullptr)) {\n+          // Fall out of loop, will return from RETURN_IF_PYERROR\n+          break;\n+        }\n         *out_values = PyObject_GetItem(numpy_array, slice);\n-        Py_DECREF(start);\n-        Py_DECREF(end);\n-        Py_DECREF(slice);\n+\n+        if (*out_values == nullptr) {\n+          // Fall out of loop, will return from RETURN_IF_PYERROR\n+          break;\n+        }\n+\n+        Py_XDECREF(slice);\n       }\n       ++out_values;\n     }\n+    RETURN_IF_PYERROR();\n \n     chunk_offset += arr->values()->length();\n   }\n@@ -548,14 +560,12 @@ inline Status ConvertListsLike(PandasOptions options, const std::shared_ptr<Colu\n template <typename T>\n inline void ConvertNumericNullable(const ChunkedArray& data, T na_value, T* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const T*>(arr.raw_values());\n-\n-    const uint8_t* valid_bits = arr.null_bitmap_data();\n+    const auto& arr = *data.chunk(c);\n+    const T* in_values = GetPrimitiveValues<T>(arr);\n \n     if (arr.null_count() > 0) {\n       for (int64_t i = 0; i < arr.length(); ++i) {\n-        *out_values++ = BitUtil::BitNotSet(valid_bits, i) ? na_value : in_values[i];\n+        *out_values++ = arr.IsNull(i) ? na_value : in_values[i];\n       }\n     } else {\n       memcpy(out_values, in_values, sizeof(T) * arr.length());\n@@ -568,8 +578,8 @@ template <typename InType, typename OutType>\n inline void ConvertNumericNullableCast(const ChunkedArray& data, OutType na_value,\n                                        OutType* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const InType*>(arr.raw_values());\n+    const auto& arr = *data.chunk(c);\n+    const InType* in_values = GetPrimitiveValues<InType>(arr);\n \n     for (int64_t i = 0; i < arr.length(); ++i) {\n       *out_values++ = arr.IsNull(i) ? na_value : static_cast<OutType>(in_values[i]);\n@@ -577,11 +587,11 @@ inline void ConvertNumericNullableCast(const ChunkedArray& data, OutType na_valu\n   }\n }\n \n-template <typename InType, int64_t SHIFT>\n+template <typename T, int64_t SHIFT>\n inline void ConvertDatetimeNanos(const ChunkedArray& data, int64_t* out_values) {\n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr = static_cast<const PrimitiveArray&>(*data.chunk(c));\n-    auto in_values = reinterpret_cast<const InType*>(arr.raw_values());\n+    const auto& arr = *data.chunk(c);\n+    const T* in_values = GetPrimitiveValues<T>(arr);\n \n     for (int64_t i = 0; i < arr.length(); ++i) {\n       *out_values++ = arr.IsNull(i) ? kPandasTimestampNull\n@@ -631,7 +641,7 @@ static Status ConvertDecimals(PandasOptions options, const ChunkedArray& data,\n   PyObject* Decimal = Decimal_ref.obj();\n \n   for (int c = 0; c < data.num_chunks(); c++) {\n-    const auto& arr(static_cast<const arrow::Decimal128Array&>(*data.chunk(c).get()));\n+    const auto& arr = static_cast<const arrow::Decimal128Array&>(*data.chunk(c));\n \n     for (int64_t i = 0; i < arr.length(); ++i) {\n       if (arr.IsNull(i)) {\n@@ -856,7 +866,7 @@ class BoolBlock : public PandasBlock {\n     uint8_t* out_buffer =\n         reinterpret_cast<uint8_t*>(block_data_) + rel_placement * num_rows_;\n \n-    ConvertBooleanNoNulls(options_, *col->data().get(), out_buffer);\n+    ConvertBooleanNoNulls(options_, *col->data(), out_buffer);\n     placement_data_[rel_placement] = abs_placement;\n     return Status::OK();\n   }\n@@ -884,7 +894,7 @@ class DatetimeBlock : public PandasBlock {\n     int64_t* out_buffer =\n         reinterpret_cast<int64_t*>(block_data_) + rel_placement * num_rows_;\n \n-    const ChunkedArray& data = *col.get()->data();\n+    const ChunkedArray& data = *col->data();\n \n     if (type == Type::DATE32) {\n       // Convert from days since epoch to datetime64[ns]\n@@ -1089,7 +1099,7 @@ class CategoricalBlock : public PandasBlock {\n   Status AllocateNDArrayFromIndices(int npy_type, const PrimitiveArray& indices) {\n     npy_intp block_dims[1] = {num_rows_};\n \n-    auto in_values = reinterpret_cast<const T*>(indices.raw_values());\n+    const T* in_values = GetPrimitiveValues<T>(indices);\n     void* data = const_cast<T*>(in_values);\n \n     PyAcquireGIL lock;\n@@ -1420,6 +1430,7 @@ class ArrowDeserializer {\n     PyAcquireGIL lock;\n \n     result_ = NewArray1DFromType(col_->type().get(), type, col_->length(), nullptr);\n+    RETURN_IF_PYERROR();\n     arr_ = reinterpret_cast<PyArrayObject*>(result_);\n     return Status::OK();\n   }\n@@ -1429,8 +1440,7 @@ class ArrowDeserializer {\n                                std::shared_ptr<Array> arr) {\n     typedef typename internal::arrow_traits<TYPE>::T T;\n \n-    const auto& prim_arr = static_cast<const PrimitiveArray&>(*arr);\n-    auto in_values = reinterpret_cast<const T*>(prim_arr.raw_values());\n+    const T* in_values = GetPrimitiveValues<T>(*arr);\n \n     // Zero-Copy. We can pass the data pointer directly to NumPy.\n     void* data = const_cast<T*>(in_values);\n@@ -1528,8 +1538,8 @@ class ArrowDeserializer {\n     constexpr int64_t kShift = traits::npy_shift;\n \n     for (int c = 0; c < data_.num_chunks(); c++) {\n-      const auto& arr = static_cast<const PrimitiveArray&>(*data_.chunk(c));\n-      auto in_values = reinterpret_cast<const c_type*>(arr.raw_values());\n+      const auto& arr = *data_.chunk(c);\n+      const c_type* in_values = GetPrimitiveValues<c_type>(arr);\n \n       for (int64_t i = 0; i < arr.length(); ++i) {\n         *out_values++ = arr.IsNull(i) ? na_value : static_cast<T>(in_values[i]) / kShift;\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-08T01:06:55.944+0000",
                    "updated": "2017-12-08T01:06:55.944+0000"
                }
            ],
            "maxResults": 13,
            "total": 13,
            "startAt": 0
        },
        "customfield_12311820": "0|i3nd9b:",
        "customfield_12314139": null
    }
}