{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13192282",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282",
    "key": "ARROW-3543",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12346687",
                "id": "12346687",
                "description": "",
                "name": "0.17.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-04-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
            "name": "Olafsson",
            "key": "olafsson",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Olaf",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
            "name": "Olafsson",
            "key": "olafsson",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Olaf",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 7800,
            "total": 7800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3543/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/392563",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488\n \n \n   Most of this patch is test refactoring in test-Array.R, with the purpose of making sure that our R <--> Arrow roundtrips are faithful. In the process this uncovered a few issues we weren't handling correctly, and in fixing the timezone handling for timestamps, I realized that this longstanding bug might also be fixed. https://github.com/apache/arrow/commit/507762fa51d17e61f08d36d3626ab8b8df716198 is the commit with the bugfix.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-25T14:13:40.199+0000",
                    "updated": "2020-02-25T14:13:40.199+0000",
                    "started": "2020-02-25T14:13:40.198+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "392563",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/392564",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#issuecomment-590887735\n \n \n   https://issues.apache.org/jira/browse/ARROW-3543\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-25T14:16:48.864+0000",
                    "updated": "2020-02-25T14:16:48.864+0000",
                    "started": "2020-02-25T14:16:48.863+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "392564",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393477",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384503649\n \n \n\n ##########\n File path: r/src/array_to_vector.cpp\n ##########\n @@ -516,6 +516,9 @@ class Converter_Timestamp : public Converter_Time<value_type, TimestampType> {\n   SEXP Allocate(R_xlen_t n) const {\n     Rcpp::NumericVector data(no_init(n));\n     Rf_classgets(data, arrow::r::data::classes_POSIXct);\n+    auto array = static_cast<TimestampArray*>(Converter::arrays_[0].get());\n \n Review comment:\n   Is it possible to have zero `arrays_`?\r\n   \r\n   Also, please use `checked_cast` instead of `static_cast`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T14:00:49.153+0000",
                    "updated": "2020-02-26T14:00:49.153+0000",
                    "started": "2020-02-26T14:00:49.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393477",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393478",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384505297\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -65,230 +75,136 @@ test_that(\"Array supports NA\", {\n   expect_true(x_int$IsNull(10L))\n   expect_true(x_dbl$IsNull(10L))\n \n Review comment:\n   Why not also check `x_int$IsValid(10L)` and friends? \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T14:00:49.325+0000",
                    "updated": "2020-02-26T14:00:49.325+0000",
                    "started": "2020-02-26T14:00:49.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393478",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384504309\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -17,11 +17,32 @@\n \n context(\"Array\")\n \n-test_that(\"Array\", {\n-  x <- Array$create(c(1:10, 1:10, 1:5))\n-  expect_equal(x$type, int32())\n-  expect_equal(length(x), 25L)\n-  expect_equal(x$as_vector(), c(1:10, 1:10, 1:5))\n+expect_array_roundtrip <- function(x, type) {\n+  a <- Array$create(x)\n+  expect_equal(a$type, type)\n+  expect_identical(length(a), length(x))\n+  if (!inherits(type, \"ListType\")) {\n+    # TODO: is this a bug that these aren't equal?\n \n Review comment:\n   What is \"these\" here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T14:00:49.329+0000",
                    "updated": "2020-02-26T14:00:49.329+0000",
                    "started": "2020-02-26T14:00:49.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393479",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384503712\n \n \n\n ##########\n File path: r/src/array_to_vector.cpp\n ##########\n @@ -516,6 +516,9 @@ class Converter_Timestamp : public Converter_Time<value_type, TimestampType> {\n   SEXP Allocate(R_xlen_t n) const {\n     Rcpp::NumericVector data(no_init(n));\n     Rf_classgets(data, arrow::r::data::classes_POSIXct);\n+    auto array = static_cast<TimestampArray*>(Converter::arrays_[0].get());\n+    auto array_type = static_cast<const TimestampType*>(array->type().get());\n \n Review comment:\n   `checked_cast`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T14:00:49.330+0000",
                    "updated": "2020-02-26T14:00:49.330+0000",
                    "started": "2020-02-26T14:00:49.329+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393480",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384506416\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -65,230 +75,136 @@ test_that(\"Array supports NA\", {\n   expect_true(x_int$IsNull(10L))\n   expect_true(x_dbl$IsNull(10L))\n \n-  # this is not part of Array api\n-  expect_equal(Array__Mask(x_int), c(rep(TRUE, 10), FALSE))\n-  expect_equal(Array__Mask(x_dbl), c(rep(TRUE, 10), FALSE))\n+  expect_equal(is.na(x_int), c(rep(FALSE, 10), TRUE))\n+  expect_equal(is.na(x_dbl), c(rep(FALSE, 10), TRUE))\n })\n \n test_that(\"Array support null type (ARROW-7064)\", {\n-  a <- Array$create(vctrs::unspecified(10))\n-  expect_equal(a$type, null())\n-\n-  v <- a$as_vector()\n-  expect_equal(v, vctrs::unspecified(10))\n+  expect_array_roundtrip(vctrs::unspecified(10), null())\n })\n \n test_that(\"Array supports logical vectors (ARROW-3341)\", {\n   # with NA\n   x <- sample(c(TRUE, FALSE, NA), 1000, replace = TRUE)\n-  arr_lgl <- Array$create(x)\n-  expect_identical(x, arr_lgl$as_vector())\n+  expect_array_roundtrip(x, bool())\n \n   # without NA\n   x <- sample(c(TRUE, FALSE), 1000, replace = TRUE)\n-  arr_lgl <- Array$create(x)\n-  expect_identical(x, arr_lgl$as_vector())\n+  expect_array_roundtrip(x, bool())\n })\n \n test_that(\"Array supports character vectors (ARROW-3339)\", {\n-  # with NA\n-  x <- c(\"itsy\", NA, \"spider\")\n-  arr_chr <- Array$create(x)\n-  expect_equal(arr_chr$length(), 3L)\n-  expect_identical(arr_chr$as_vector(), x)\n-  expect_true(arr_chr$IsValid(0))\n-  expect_true(arr_chr$IsNull(1))\n-  expect_true(arr_chr$IsValid(2))\n-\n-  sl <- arr_chr$Slice(1)\n-  expect_equal(sl$as_vector(), x[2:3])\n-\n   # without NA\n-  x <- c(\"itsy\", \"bitsy\", \"spider\")\n-  arr_chr <- Array$create(x)\n-  expect_equal(arr_chr$length(), 3L)\n-  expect_identical(arr_chr$as_vector(), x)\n+  expect_array_roundtrip(c(\"itsy\", \"bitsy\", \"spider\"), utf8())\n+  # with NA\n+  expect_array_roundtrip(c(\"itsy\", NA, \"spider\"), utf8())\n })\n \n test_that(\"empty arrays are supported\", {\n-  x <- character()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- integer()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- numeric()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- factor(character())\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- logical()\n-  expect_equal(Array$create(x)$as_vector(), x)\n+  expect_array_roundtrip(character(), utf8())\n+  expect_array_roundtrip(integer(), int32())\n+  expect_array_roundtrip(numeric(), float64())\n+  expect_array_roundtrip(factor(character()), dictionary(int8(), utf8()))\n+  expect_array_roundtrip(logical(), bool())\n })\n \n test_that(\"array with all nulls are supported\", {\n   nas <- c(NA, NA)\n-\n-  x <- as.logical(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.integer(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.numeric(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.character(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.factor(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n+  expect_array_roundtrip(as.character(nas), utf8())\n+  expect_array_roundtrip(as.integer(nas), int32())\n+  expect_array_roundtrip(as.numeric(nas), float64())\n+  expect_array_roundtrip(as.factor(nas), dictionary(int8(), utf8()))\n+  expect_array_roundtrip(as.logical(nas), bool())\n })\n \n test_that(\"Array supports unordered factors (ARROW-3355)\", {\n   # without NA\n   f <- factor(c(\"itsy\", \"bitsy\", \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsValid(2))\n-  expect_true(arr_fac$IsValid(3))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 3L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:4])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8()))\n \n   # with NA\n   f <- factor(c(\"itsy\", \"bitsy\", NA, \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 5L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsNull(2))\n-  expect_true(arr_fac$IsValid(3))\n-  expect_true(arr_fac$IsValid(4))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:5])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8()))\n })\n \n test_that(\"Array supports ordered factors (ARROW-3355)\", {\n   # without NA\n   f <- ordered(c(\"itsy\", \"bitsy\", \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsValid(2))\n-  expect_true(arr_fac$IsValid(3))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 3L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:4])\n+  arr_fac <- expect_array_roundtrip(f, dictionary(int8(), utf8(), ordered = TRUE))\n+  expect_true(arr_fac$ordered)\n \n   # with NA\n   f <- ordered(c(\"itsy\", \"bitsy\", NA, \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 5L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsNull(2))\n-  expect_true(arr_fac$IsValid(3))\n-  expect_true(arr_fac$IsValid(4))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:5])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8(), ordered = TRUE))\n })\n \n test_that(\"array supports Date (ARROW-3340)\", {\n   d <- Sys.Date() + 1:10\n-  a <- Array$create(d)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n+  expect_array_roundtrip(d, date32())\n \n   d[5] <- NA\n-  a <- Array$create(d)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n-  expect_true(a$IsNull(4))\n+  expect_array_roundtrip(d, date32())\n \n-  d2 <- d + .5\n-  a <- Array$create(d2)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n-  expect_true(a$IsNull(4))\n+  # Test code path where Date is numeric underneath, not integer\n+  d2 <- structure(as.numeric(d), class = \"Date\")\n+  expect_array_roundtrip(d2, date32())\n+  # PSA: IngestDoubleRange(Date32Builder) truncates decimals, so this only\n+  # works where the dates are integer-ish\n })\n \n test_that(\"array supports POSIXct (ARROW-3340)\", {\n   times <- lubridate::ymd_hms(\"2018-10-07 19:04:05\") + 1:10\n-  a <- Array$create(times)\n-  expect_equal(a$type$name, \"timestamp\")\n-  expect_equal(a$type$unit(), unclass(TimeUnit$MICRO))\n-  expect_equal(a$length(), 10L)\n-  expect_equal(as.numeric(a$as_vector()), as.numeric(times))\n+  expect_array_roundtrip(times, timestamp(\"us\", \"UTC\"))\n \n   times[5] <- NA\n-  a <- Array$create(times)\n-  expect_equal(a$type$name, \"timestamp\")\n-  expect_equal(a$type$unit(), unclass(TimeUnit$MICRO))\n-  expect_equal(a$length(), 10L)\n-  expect_equal(as.numeric(a$as_vector()), as.numeric(times))\n-  expect_true(a$IsNull(4))\n+  expect_array_roundtrip(times, timestamp(\"us\", \"UTC\"))\n+\n+  times2 <- lubridate::ymd_hms(\"2018-10-07 19:04:05\", tz = \"US/Eastern\") + 1:10\n \n Review comment:\n   \"lubridate\"...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T14:00:49.563+0000",
                    "updated": "2020-02-26T14:00:49.563+0000",
                    "started": "2020-02-26T14:00:49.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393481",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/393719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r384707174\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -65,230 +75,136 @@ test_that(\"Array supports NA\", {\n   expect_true(x_int$IsNull(10L))\n   expect_true(x_dbl$IsNull(10L))\n \n-  # this is not part of Array api\n-  expect_equal(Array__Mask(x_int), c(rep(TRUE, 10), FALSE))\n-  expect_equal(Array__Mask(x_dbl), c(rep(TRUE, 10), FALSE))\n+  expect_equal(is.na(x_int), c(rep(FALSE, 10), TRUE))\n+  expect_equal(is.na(x_dbl), c(rep(FALSE, 10), TRUE))\n })\n \n test_that(\"Array support null type (ARROW-7064)\", {\n-  a <- Array$create(vctrs::unspecified(10))\n-  expect_equal(a$type, null())\n-\n-  v <- a$as_vector()\n-  expect_equal(v, vctrs::unspecified(10))\n+  expect_array_roundtrip(vctrs::unspecified(10), null())\n })\n \n test_that(\"Array supports logical vectors (ARROW-3341)\", {\n   # with NA\n   x <- sample(c(TRUE, FALSE, NA), 1000, replace = TRUE)\n-  arr_lgl <- Array$create(x)\n-  expect_identical(x, arr_lgl$as_vector())\n+  expect_array_roundtrip(x, bool())\n \n   # without NA\n   x <- sample(c(TRUE, FALSE), 1000, replace = TRUE)\n-  arr_lgl <- Array$create(x)\n-  expect_identical(x, arr_lgl$as_vector())\n+  expect_array_roundtrip(x, bool())\n })\n \n test_that(\"Array supports character vectors (ARROW-3339)\", {\n-  # with NA\n-  x <- c(\"itsy\", NA, \"spider\")\n-  arr_chr <- Array$create(x)\n-  expect_equal(arr_chr$length(), 3L)\n-  expect_identical(arr_chr$as_vector(), x)\n-  expect_true(arr_chr$IsValid(0))\n-  expect_true(arr_chr$IsNull(1))\n-  expect_true(arr_chr$IsValid(2))\n-\n-  sl <- arr_chr$Slice(1)\n-  expect_equal(sl$as_vector(), x[2:3])\n-\n   # without NA\n-  x <- c(\"itsy\", \"bitsy\", \"spider\")\n-  arr_chr <- Array$create(x)\n-  expect_equal(arr_chr$length(), 3L)\n-  expect_identical(arr_chr$as_vector(), x)\n+  expect_array_roundtrip(c(\"itsy\", \"bitsy\", \"spider\"), utf8())\n+  # with NA\n+  expect_array_roundtrip(c(\"itsy\", NA, \"spider\"), utf8())\n })\n \n test_that(\"empty arrays are supported\", {\n-  x <- character()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- integer()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- numeric()\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- factor(character())\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- logical()\n-  expect_equal(Array$create(x)$as_vector(), x)\n+  expect_array_roundtrip(character(), utf8())\n+  expect_array_roundtrip(integer(), int32())\n+  expect_array_roundtrip(numeric(), float64())\n+  expect_array_roundtrip(factor(character()), dictionary(int8(), utf8()))\n+  expect_array_roundtrip(logical(), bool())\n })\n \n test_that(\"array with all nulls are supported\", {\n   nas <- c(NA, NA)\n-\n-  x <- as.logical(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.integer(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.numeric(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.character(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n-\n-  x <- as.factor(nas)\n-  expect_equal(Array$create(x)$as_vector(), x)\n+  expect_array_roundtrip(as.character(nas), utf8())\n+  expect_array_roundtrip(as.integer(nas), int32())\n+  expect_array_roundtrip(as.numeric(nas), float64())\n+  expect_array_roundtrip(as.factor(nas), dictionary(int8(), utf8()))\n+  expect_array_roundtrip(as.logical(nas), bool())\n })\n \n test_that(\"Array supports unordered factors (ARROW-3355)\", {\n   # without NA\n   f <- factor(c(\"itsy\", \"bitsy\", \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsValid(2))\n-  expect_true(arr_fac$IsValid(3))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 3L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:4])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8()))\n \n   # with NA\n   f <- factor(c(\"itsy\", \"bitsy\", NA, \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 5L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsNull(2))\n-  expect_true(arr_fac$IsValid(3))\n-  expect_true(arr_fac$IsValid(4))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:5])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8()))\n })\n \n test_that(\"Array supports ordered factors (ARROW-3355)\", {\n   # without NA\n   f <- ordered(c(\"itsy\", \"bitsy\", \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsValid(2))\n-  expect_true(arr_fac$IsValid(3))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 3L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:4])\n+  arr_fac <- expect_array_roundtrip(f, dictionary(int8(), utf8(), ordered = TRUE))\n+  expect_true(arr_fac$ordered)\n \n   # with NA\n   f <- ordered(c(\"itsy\", \"bitsy\", NA, \"spider\", \"spider\"))\n-  arr_fac <- Array$create(f)\n-  expect_equal(arr_fac$length(), 5L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_identical(arr_fac$as_vector(), f)\n-  expect_true(arr_fac$IsValid(0))\n-  expect_true(arr_fac$IsValid(1))\n-  expect_true(arr_fac$IsNull(2))\n-  expect_true(arr_fac$IsValid(3))\n-  expect_true(arr_fac$IsValid(4))\n-\n-  sl <- arr_fac$Slice(1)\n-  expect_equal(sl$length(), 4L)\n-  expect_equal(arr_fac$type$index_type, int8())\n-  expect_equal(sl$as_vector(), f[2:5])\n+  expect_array_roundtrip(f, dictionary(int8(), utf8(), ordered = TRUE))\n })\n \n test_that(\"array supports Date (ARROW-3340)\", {\n   d <- Sys.Date() + 1:10\n-  a <- Array$create(d)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n+  expect_array_roundtrip(d, date32())\n \n   d[5] <- NA\n-  a <- Array$create(d)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n-  expect_true(a$IsNull(4))\n+  expect_array_roundtrip(d, date32())\n \n-  d2 <- d + .5\n-  a <- Array$create(d2)\n-  expect_equal(a$type, date32())\n-  expect_equal(a$length(), 10L)\n-  expect_equal(a$as_vector(), d)\n-  expect_true(a$IsNull(4))\n+  # Test code path where Date is numeric underneath, not integer\n+  d2 <- structure(as.numeric(d), class = \"Date\")\n+  expect_array_roundtrip(d2, date32())\n+  # PSA: IngestDoubleRange(Date32Builder) truncates decimals, so this only\n+  # works where the dates are integer-ish\n })\n \n test_that(\"array supports POSIXct (ARROW-3340)\", {\n   times <- lubridate::ymd_hms(\"2018-10-07 19:04:05\") + 1:10\n-  a <- Array$create(times)\n-  expect_equal(a$type$name, \"timestamp\")\n-  expect_equal(a$type$unit(), unclass(TimeUnit$MICRO))\n-  expect_equal(a$length(), 10L)\n-  expect_equal(as.numeric(a$as_vector()), as.numeric(times))\n+  expect_array_roundtrip(times, timestamp(\"us\", \"UTC\"))\n \n   times[5] <- NA\n-  a <- Array$create(times)\n-  expect_equal(a$type$name, \"timestamp\")\n-  expect_equal(a$type$unit(), unclass(TimeUnit$MICRO))\n-  expect_equal(a$length(), 10L)\n-  expect_equal(as.numeric(a$as_vector()), as.numeric(times))\n-  expect_true(a$IsNull(4))\n+  expect_array_roundtrip(times, timestamp(\"us\", \"UTC\"))\n+\n+  times2 <- lubridate::ymd_hms(\"2018-10-07 19:04:05\", tz = \"US/Eastern\") + 1:10\n \n Review comment:\n   It's a thing https://lubridate.tidyverse.org/\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-26T19:17:26.322+0000",
                    "updated": "2020-02-26T19:17:26.322+0000",
                    "started": "2020-02-26T19:17:26.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "393719",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r385145957\n \n \n\n ##########\n File path: r/src/array_to_vector.cpp\n ##########\n @@ -516,6 +516,9 @@ class Converter_Timestamp : public Converter_Time<value_type, TimestampType> {\n   SEXP Allocate(R_xlen_t n) const {\n     Rcpp::NumericVector data(no_init(n));\n     Rf_classgets(data, arrow::r::data::classes_POSIXct);\n+    auto array = static_cast<TimestampArray*>(Converter::arrays_[0].get());\n \n Review comment:\n   I'm not sure, I was copying a pattern I saw in the code elsewhere. In the moment I convinced myself that there must be a constraint somewhere. I'm not sure how I'd get to call the code to convert an arrow Array to R if I didn't have any arrays, but you're right, that is potentially an issue.\r\n   \r\n   I think I tried the checked_cast and it didn't compile but I'll try again.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-27T14:06:16.049+0000",
                    "updated": "2020-02-27T14:06:16.049+0000",
                    "started": "2020-02-27T14:06:16.048+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394181",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r385146157\n \n \n\n ##########\n File path: r/src/array_to_vector.cpp\n ##########\n @@ -516,6 +516,9 @@ class Converter_Timestamp : public Converter_Time<value_type, TimestampType> {\n   SEXP Allocate(R_xlen_t n) const {\n     Rcpp::NumericVector data(no_init(n));\n     Rf_classgets(data, arrow::r::data::classes_POSIXct);\n+    auto array = static_cast<TimestampArray*>(Converter::arrays_[0].get());\n \n Review comment:\n   I'm not sure, I was copying a pattern I saw in the code elsewhere. In the moment I convinced myself that there must be a constraint somewhere. I'm not sure how I'd get to call the code to convert an arrow Array to R if I didn't have any arrays, but you're right, that is potentially an issue.\r\n   \r\n   I think I tried the checked_cast and it didn't compile but I'll try again.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-27T14:06:44.714+0000",
                    "updated": "2020-02-27T14:06:44.714+0000",
                    "started": "2020-02-27T14:06:44.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394182",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394183",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r385146157\n \n \n\n ##########\n File path: r/src/array_to_vector.cpp\n ##########\n @@ -516,6 +516,9 @@ class Converter_Timestamp : public Converter_Time<value_type, TimestampType> {\n   SEXP Allocate(R_xlen_t n) const {\n     Rcpp::NumericVector data(no_init(n));\n     Rf_classgets(data, arrow::r::data::classes_POSIXct);\n+    auto array = static_cast<TimestampArray*>(Converter::arrays_[0].get());\n \n Review comment:\n   I'm not sure, I was copying a pattern I saw in the code elsewhere. In the moment I convinced myself that there must be a constraint somewhere. I'm not sure how I'd get to call the code to convert an arrow Array to R if I didn't have any arrays, but you're right, that is potentially an issue.\r\n   \r\n   I think I tried the checked_cast and it didn't compile but I'll try again.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-27T14:06:56.960+0000",
                    "updated": "2020-02-27T14:06:56.960+0000",
                    "started": "2020-02-27T14:06:56.960+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394183",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394890",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r385699719\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -17,11 +17,32 @@\n \n context(\"Array\")\n \n-test_that(\"Array\", {\n-  x <- Array$create(c(1:10, 1:10, 1:5))\n-  expect_equal(x$type, int32())\n-  expect_equal(length(x), 25L)\n-  expect_equal(x$as_vector(), c(1:10, 1:10, 1:5))\n+expect_array_roundtrip <- function(x, type) {\n+  a <- Array$create(x)\n+  expect_equal(a$type, type)\n+  expect_identical(length(a), length(x))\n+  if (!inherits(type, \"ListType\")) {\n+    # TODO: is this a bug that these aren't equal?\n \n Review comment:\n   The validity masks. R `list` objects don't handle missingness the same way as other vectors--there's no true NA sentinel value for lists. `is.na(list)` checks for whether each element of the list is identical to `NA` (which is technically of type \"logical\"). \r\n   \r\n   ```r\r\n   > x <- list(1:3, NA, 4:5)\r\n   > x\r\n   [[1]]\r\n   [1] 1 2 3\r\n   \r\n   [[2]]\r\n   [1] NA\r\n   \r\n   [[3]]\r\n   [1] 4 5\r\n   \r\n   > is.na(x)\r\n   [1] FALSE  TRUE FALSE\r\n   # But...\r\n   > x <- list(1:3, NULL, 4:5)\r\n   > is.na(x)\r\n   [1] FALSE FALSE FALSE\r\n   > x <- list(1:3, c(NA, NA), 4:5)\r\n   > is.na(x)\r\n   [1] FALSE FALSE FALSE\r\n   ```\r\n   \r\n   So I think it's a limitation of the language that we can't unambiguously represent missing values in a list array. But I'm not sure. This probably deserves a Jira. \r\n   \r\n   @romainfrancois how does `vctrs` deal with missing values and lists?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-28T13:39:52.072+0000",
                    "updated": "2020-02-28T13:39:52.072+0000",
                    "started": "2020-02-28T13:39:52.072+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394890",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394891",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#discussion_r385700714\n \n \n\n ##########\n File path: r/tests/testthat/test-Array.R\n ##########\n @@ -65,230 +75,136 @@ test_that(\"Array supports NA\", {\n   expect_true(x_int$IsNull(10L))\n   expect_true(x_dbl$IsNull(10L))\n \n Review comment:\n   That's originally what I was planning to do in this branch, fill in coverage for those methods (and make sure that `x_int$IsNull(\"ten\")` doesn't segfault), but now I think I'll take that up separately since this PR is big enough already and it fixes a different bug.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-28T13:41:59.523+0000",
                    "updated": "2020-02-28T13:41:59.523+0000",
                    "started": "2020-02-28T13:41:59.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394891",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394976",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488#issuecomment-592577121\n \n \n   CI is green, merging.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-28T15:59:41.541+0000",
                    "updated": "2020-02-28T15:59:41.541+0000",
                    "started": "2020-02-28T15:59:41.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394976",
                    "issueId": "13192282"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/worklog/394977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #6488: ARROW-3543: [R] Better support for timestamp format and time zones in R\nURL: https://github.com/apache/arrow/pull/6488\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-02-28T16:00:31.064+0000",
                    "updated": "2020-02-28T16:00:31.064+0000",
                    "started": "2020-02-28T16:00:31.064+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "394977",
                    "issueId": "13192282"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 7800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79b90e3f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c80d990[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29d0c7e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7346d71a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1794cfd7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@40bb7752[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ffb0f23[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2ac0fbc1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b9b7339[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@8196ff[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37b403db[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1a07f81f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 7800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Feb 28 16:00:34 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-02-28T16:00:34.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3543/watchers",
            "watchCount": 7,
            "isWatching": false
        },
        "created": "2018-10-17T15:22:43.000+0000",
        "updated": "2020-02-28T16:00:58.000+0000",
        "timeoriginalestimate": null,
        "description": "See below for original description and reports. In sum, there is a mismatch between how the C++ library and R interpret data without a timezone, and it turns out that we're not passing the timezone to R if it is set in Arrow C++ anyway. \r\n\r\nThe [C++ library docs|http://arrow.apache.org/docs/cpp/api/datatype.html#_CPPv4N5arrow13TimestampTypeE] say \"If a timezone-aware field contains a recognized timezone, its values may be localized to that locale upon display; the values of timezone-naive fields must always be displayed \u201cas is\u201d, with no localization performed on them.\" But R's print default, as well as the parsing default, is the current time zone: https://stat.ethz.ch/R-manual/R-devel/library/base/html/strptime.html\r\n\r\nThe C++ library seems to parse timestamp strings that don't have timezone information as if they are UTC, so when you read timezone-naive timestamps from Arrow and print them in R, they are shifted to be localized to the current timezone. If you print timestamp data from Arrow with {{print(timestamp_var, tz=\"GMT\")}} it would look as you expect.\r\n\r\nOn further inspection, the [arrow-to-vector code for timestamp|https://github.com/apache/arrow/blob/master/r/src/array_to_vector.cpp#L504-L514] doesn't seem to consider time zone information even if it does exist. So we don't have the means currently in R to display timestamp data faithfully, whether or not it is timezone-aware.\r\n\r\nAmong the tasks here:\r\n\r\n* Include the timezone attribute in the POSIXct R vector that gets created from a timestamp Arrow array\r\n* Ensure that timezone-naive data from Arrow is printed in R \"as is\" with no localization \r\n\r\n-----\r\nOriginal description:\r\n\r\nHello the dream team,\r\n\r\nPasting from\u00a0[https://github.com/wesm/feather/issues/351]\r\n\r\nThanks for this wonderful package. I was playing with feather and some timestamps and I noticed some dangerous behavior. Maybe it is a bug.\r\n\r\nConsider this\r\n\r\n\u00a0\r\n{code:java}\r\nimport pandas as pd\r\nimport feather\r\nimport numpy as np\r\ndf = pd.DataFrame(\r\n{'string_time_utc' : [pd.to_datetime('2018-02-01 14:00:00.531'), pd.to_datetime('2018-02-01 14:01:00.456'), pd.to_datetime('2018-03-05 14:01:02.200')]}\r\n)\r\ndf['timestamp_est'] = pd.to_datetime(df.string_time_utc).dt.tz_localize('UTC').dt.tz_convert('US/Eastern').dt.tz_localize(None)\r\ndf\r\n Out[17]: \r\n string_time_utc timestamp_est\r\n 0 2018-02-01 14:00:00.531 2018-02-01 09:00:00.531\r\n 1 2018-02-01 14:01:00.456 2018-02-01 09:01:00.456\r\n 2 2018-03-05 14:01:02.200 2018-03-05 09:01:02.200\r\n{code}\r\nHere I create the corresponding `EST` timestamp of my original timestamps (in `UTC` time).\r\n\r\nNow saving the dataframe to `csv` or to `feather` will generate two completely different results.\r\n\r\n\u00a0\r\n{code:java}\r\ndf.to_csv('P://testing.csv')\r\ndf.to_feather('P://testing.feather')\r\n{code}\r\nSwitching to R.\r\n\r\nUsing the good old `csv` gives me something a bit annoying, but expected. R thinks my timezone is `UTC` by default, and wrongly attached this timezone to `timestamp_est`. No big deal, I can always use `with_tz` or even better: import as character and process as timestamp while in R.\r\n\r\n\u00a0\r\n{code:java}\r\n> dataframe <- read_csv('P://testing.csv')\r\n Parsed with column specification:\r\n cols(\r\n X1 = col_integer(),\r\n string_time_utc = col_datetime(format = \"\"),\r\n timestamp_est = col_datetime(format = \"\")\r\n )\r\n Warning message:\r\n Missing column names filled in: 'X1' [1] \r\n > \r\n > dataframe %>% mutate(mytimezone = tz(timestamp_est))\r\n\r\nA tibble: 3 x 4\r\n X1 string_time_utc timestamp_est \r\n <int> <dttm> <dttm> \r\n 1 0 2018-02-01 14:00:00.530 2018-02-01 09:00:00.530\r\n 2 1 2018-02-01 14:01:00.456 2018-02-01 09:01:00.456\r\n 3 2 2018-03-05 14:01:02.200 2018-03-05 09:01:02.200\r\n mytimezone\r\n <chr> \r\n 1 UTC \r\n 2 UTC \r\n 3 UTC  {code}\r\n{code:java}\r\n#Now look at what happens with feather:\r\n\u00a0\r\n > dataframe <- read_feather('P://testing.feather')\r\n > \r\n > dataframe %>% mutate(mytimezone = tz(timestamp_est))\r\n\r\nA tibble: 3 x 3\r\n string_time_utc timestamp_est mytimezone\r\n <dttm> <dttm> <chr> \r\n 1 2018-02-01 09:00:00.531 2018-02-01 04:00:00.531 \"\" \r\n 2 2018-02-01 09:01:00.456 2018-02-01 04:01:00.456 \"\" \r\n 3 2018-03-05 09:01:02.200 2018-03-05 04:01:02.200 \"\" {code}\r\nMy timestamps have been converted!!! pure insanity. \r\n Am I missing something here?\r\n\r\nThanks!!",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 7800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Better support for timestamp format and time zones in R",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16709587",
                    "id": "16709587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~romainfrancois] can you have a look and see if this bug is still present?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-05T04:22:52.310+0000",
                    "updated": "2018-12-05T04:22:52.310+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16719488",
                    "id": "16719488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "I can confirm this bug is still present. Most recent commit in my pull is\r\n\r\nc0ac97f126c98fb29e81d6544adfea9d4ab74aff\r\n\r\n\u00a0\r\n\r\nFor others, the R libraries needed to re-run Olaf's code (in addition to arrow) are readr, dplyr, and lubridate.\r\n\r\nI will mess around but won't be hurt if a stronger R coder takes this before I finish.\r\n\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2018-12-12T21:58:48.354+0000",
                    "updated": "2018-12-12T21:58:48.354+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16724688",
                    "id": "16724688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I'm moving to 0.13. If someone gets to this in time for 0.12, that's great, but since 0.12 isn't likely to make it to CRAN yet this isn't as urgent",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-12-19T04:36:56.734+0000",
                    "updated": "2018-12-19T04:36:56.734+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16762806",
                    "id": "16762806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~romainfrancois] any chance you could look at what's going on with this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-02-07T16:05:58.535+0000",
                    "updated": "2019-02-07T16:05:58.535+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16785210",
                    "id": "16785210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hello there! any updates on this? I mean, this is a very serious bug and right now I had to simply stop using `feather` at all because I use timestamps all the time... Cant wait for this to be fixed... what do you think? thanks!!!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-03-06T04:22:10.564+0000",
                    "updated": "2019-03-06T04:22:10.564+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16785529",
                    "id": "16785529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "Hi [~Olafsson] I am still looking at this. My mom passed away last week and I have been listless and distracted since then. I am sorry for your inconvenience.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-03-06T11:29:27.366+0000",
                    "updated": "2019-03-06T11:29:27.366+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16785947",
                    "id": "16785947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi Tanya really sorry to hear that! my sincere condolences!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-03-06T17:52:43.757+0000",
                    "updated": "2019-03-06T17:52:43.757+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16785957",
                    "id": "16785957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "<3 Thank you Olaf!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=tanya",
                        "name": "tanya",
                        "key": "tanya",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=tanya&avatarId=37360",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=tanya&avatarId=37360",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=tanya&avatarId=37360",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=tanya&avatarId=37360"
                        },
                        "displayName": "Tanya Schlusser",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-03-06T18:00:36.980+0000",
                    "updated": "2019-03-06T18:00:36.980+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16811573",
                    "id": "16811573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "hello there! do you think someone can help Tanya here? I mean this bug is killing the package entirely. My team stopped using it completely because with our high frequency data we work with timestamps all the time. I am happy to help testing if I can! thanks and keep up the good work",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-06T12:50:24.696+0000",
                    "updated": "2019-04-06T12:50:24.696+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16811810",
                    "id": "16811810",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "[~Olafsson] For now, I think your best approach is to have a look and try to fix it by yourself. Feel free to reach out on the mailing lists when you have questions on debugging the issue.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2019-04-07T09:12:36.752+0000",
                    "updated": "2019-04-07T09:12:36.752+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16812496",
                    "id": "16812496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "ha! perhaps a workaround would be to ask read_feather to import the timestamps as strings (and not timestamps). However, I do not see a col_type argument in read_feather. what do you think? Thanks!!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-04-08T15:15:26.270+0000",
                    "updated": "2019-04-08T15:15:26.270+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16852543",
                    "id": "16852543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "cc [~npr]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-05-31T01:27:23.010+0000",
                    "updated": "2019-05-31T01:27:23.010+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16861446",
                    "id": "16861446",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Do we know what is the problem here? Seems like this could pose a correctness issue for Feather users",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-11T20:12:09.681+0000",
                    "updated": "2019-06-11T20:12:09.681+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16861480",
                    "id": "16861480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Hard to tell if it's pandas <\u2013> arrow, a mismatch between arrow and the lighter feather library, or arrow/feather --> R. Possibly related, I see a few open issues about pandas/pyarrow and timestamps.\u00a0\r\n\r\nI'd be curious to see the test the other way (write from R and read in pandas), or even just reading the feather file back into pandas. It would also be interesting to see if there is the same issue reading/writing feather files with the full arrow library and not wesm/feather.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-06-11T20:39:32.618+0000",
                    "updated": "2019-06-11T20:39:32.618+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16865609",
                    "id": "16865609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "It would be nice if this could be assessed against the current Feather-in-Arrow implementation",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-17T13:43:35.310+0000",
                    "updated": "2019-06-17T13:43:35.310+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929452",
                    "id": "16929452",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I ran a simple test trying to read delimited file in R, and i'm seeing issue with timestamps changing:\r\n\r\nsystem: Red Hat Enterprise Linux Server release 7.6 (Maipo)\r\n$ rpm -qa |grep arrow\r\narrow-glib-libs-0.14.1-1.el7.x86_64\r\narrow-glib-devel-0.14.1-1.el7.x86_64\r\narrow-devel-0.14.1-1.el7.x86_64\r\narrow-libs-0.14.1-1.el7.x86_64\r\n$ rpm -qa |grep parq\r\nparquet-glib-libs-0.14.1-1.el7.x86_64\r\nparquet-devel-0.14.1-1.el7.x86_64\r\nparquet-libs-0.14.1-1.el7.x86_64\r\nparquet-glib-devel-0.14.1-1.el7.x86_64\r\n\r\n\r\n\r\n> packageVersion(\"arrow\")> packageVersion(\"arrow\")[1] \u20180.14.1.1\u2019\r\n|> library(arrow)> Sys.timezone()[1] \"America/Los_Angeles\"> readLines(\"test.log\") [1] \"DateTime\\|LogLevel\\|Type\\|FunctionName\\|Message\\|UserName\"                                                             \r\n [2] \"2019-09-11 21:36:22\\|[INFO]\\|CentralLogger\\| \\|CentralLogger Initialized\\|shannon.lewis\"                               \r\n [3] \"2019-09-11 21:36:22\\|[INFO]\\|Controller\\| \\|Controller.R Initialized\\|shannon.lewis\"                                   \r\n [4] \"2019-09-11 22:43:58\\|[INFO]\\|studyId1\\|archiveStudy\\|Start of archiveStudy : Intialized\\|shannon.lewis\"                \r\n [5] \"2019-09-11 22:43:58\\|[INFO]\\|studyId1\\|archiveStudy\\|archiveStudy All done, quitting.\\|shannon.lewis\"                  \r\n [6] \"2019-09-11 23:11:39\\|[INFO]\\|central\\|consolidateStudyLogs\\|Start of consolidateStudyLogs : Initialized\\|shannon.lewis\"\r\n [7] \"2019-09-12 00:36:22\\|[INFO]\\|CentralLogger\\| \\|CentralLogger Initialized\\|shannon.lewis\"                               \r\n [8] \"2019-09-12 00:36:22\\|[INFO]\\|Controller\\| \\|Controller.R Initialized\\|shannon.lewis\"                                   \r\n [9] \"2019-09-12 00:43:58\\|[INFO]\\|studyId1\\|archiveStudy\\|Start of archiveStudy : Intialized\\|shannon.lewis\"                \r\n[10] \"2019-09-12 00:43:58\\|[INFO]\\|studyId1\\|archiveStudy\\|archiveStudy All done, quitting.\\|shannon.lewis\"                  \r\n[11] \"2019-09-12 01:11:39\\|[INFO]\\|central\\|consolidateStudyLogs\\|Start of consolidateStudyLogs : Initialized\\|shannon.lewis\"Warning message:In readLines(\"test.log\") : incomplete final line found on 'test.log'> arrow_log <-read_delim_arrow(\"test.log\",delim = \"\\|\")> str(arrow_log)Classes \u2018tbl_df\u2019, \u2018tbl\u2019 and 'data.frame':\t10 obs. of  6 variables:\r\n $ DateTime    : POSIXct, format: \"2019-09-11 14:36:22\" \"2019-09-11 14:36:22\" \"2019-09-11 15:43:58\" \"2019-09-11 15:43:58\" ...\r\n $ LogLevel    : chr  \"[INFO]\" \"[INFO]\" \"[INFO]\" \"[INFO]\" ...\r\n $ Type        : chr  \"CentralLogger\" \"Controller\" \"studyId1\" \"studyId1\" ...\r\n $ FunctionName: chr  \" \" \" \" \"archiveStudy\" \"archiveStudy\" ...\r\n $ Message     : chr  \"CentralLogger Initialized\" \"Controller.R Initialized\" \"Start of archiveStudy : Intialized\" \"archiveStudy All done, quitting.\" ...\r\n $ UserName    : chr  \"shannon.lewis\" \"shannon.lewis\" \"shannon.lewis\" \"shannon.lewis\" ...> arrow_log# A tibble: 10 x 6   DateTime            LogLevel Type          FunctionName         Message                                     UserName        <dttm>              <chr>    <chr>         <chr>                <chr>                                       <chr> 1 2019-09-11 14:36:22 [INFO]   CentralLogger \" \"                  CentralLogger Initialized                   shannon.lewis 2 2019-09-11 14:36:22 [INFO]   Controller    \" \"                  Controller.R Initialized                    shannon.lewis 3 2019-09-11 15:43:58 [INFO]   studyId1      archiveStudy         Start of archiveStudy : Intialized          shannon.lewis 4 2019-09-11 15:43:58 [INFO]   studyId1      archiveStudy         archiveStudy All done, quitting.            shannon.lewis 5 2019-09-11 16:11:39 [INFO]   central       consolidateStudyLogs Start of consolidateStudyLogs : Initialized shannon.lewis 6 2019-09-11 17:36:22 [INFO]   CentralLogger \" \"                  CentralLogger Initialized                   shannon.lewis 7 2019-09-11 17:36:22 [INFO]   Controller    \" \"                  Controller.R Initialized                    shannon.lewis 8 2019-09-11 17:43:58 [INFO]   studyId1      archiveStudy         Start of archiveStudy : Intialized          shannon.lewis 9 2019-09-11 17:43:58 [INFO]   studyId1      archiveStudy         archiveStudy All done, quitting.            shannon.lewis10 2019-09-11 18:11:39 [INFO]   central       consolidateStudyLogs Start of consolidateStudyLogs : Initialized shannon.lewis> base_log <-read.delim(\"test.log\",sep = \"\\|\")> str(base_log)'data.frame':\t10 obs. of  6 variables:\r\n $ DateTime    : Factor w/ 6 levels \"2019-09-11 21:36:22\",..: 1 1 2 2 3 4 4 5 5 6\r\n $ LogLevel    : Factor w/ 1 level \"[INFO]\": 1 1 1 1 1 1 1 1 1 1\r\n $ Type        : Factor w/ 4 levels \"central\",\"CentralLogger\",..: 2 3 4 4 1 2 3 4 4 1\r\n $ FunctionName: Factor w/ 3 levels \" \",\"archiveStudy\",..: 1 1 2 2 3 1 1 2 2 3\r\n $ Message     : Factor w/ 5 levels \"archiveStudy All done, quitting.\",..: 2 3 4 1 5 2 3 4 1 5\r\n $ UserName    : Factor w/ 1 level \"shannon.lewis\": 1 1 1 1 1 1 1 1 1 1> base_log              DateTime LogLevel          Type         FunctionName                                     Message      UserName\r\n1  2019-09-11 21:36:22   [INFO] CentralLogger                                        CentralLogger Initialized shannon.lewis\r\n2  2019-09-11 21:36:22   [INFO]    Controller                                         Controller.R Initialized shannon.lewis\r\n3  2019-09-11 22:43:58   [INFO]      studyId1         archiveStudy          Start of archiveStudy : Intialized shannon.lewis\r\n4  2019-09-11 22:43:58   [INFO]      studyId1         archiveStudy            archiveStudy All done, quitting. shannon.lewis\r\n5  2019-09-11 23:11:39   [INFO]       central consolidateStudyLogs Start of consolidateStudyLogs : Initialized shannon.lewis\r\n6  2019-09-12 00:36:22   [INFO] CentralLogger                                        CentralLogger Initialized shannon.lewis\r\n7  2019-09-12 00:36:22   [INFO]    Controller                                         Controller.R Initialized shannon.lewis\r\n8  2019-09-12 00:43:58   [INFO]      studyId1         archiveStudy          Start of archiveStudy : Intialized shannon.lewis\r\n9  2019-09-12 00:43:58   [INFO]      studyId1         archiveStudy            archiveStudy All done, quitting. shannon.lewis\r\n10 2019-09-12 01:11:39   [INFO]       central consolidateStudyLogs Start of consolidateStudyLogs : Initialized shannon.lewis|\r\n|\u00a0|\r\n|\r\n|\u00a0|\r\n|",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-13T18:49:07.217+0000",
                    "updated": "2019-09-13T18:49:07.217+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929476",
                    "id": "16929476",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Hi [~shannon.lewis], that output is a little hard to read, what are you seeing that's a problem? AFAICT the only difference I'm seeing is that {{arrow::read_delim_arrow()}} detects that the first column is a timestamp, while {{read.delim()}} doesn't parse it and keeps it a {{factor}}. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-09-13T19:32:24.707+0000",
                    "updated": "2019-09-13T19:32:24.707+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929565",
                    "id": "16929565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hi Neal,\u00a0\r\n\r\nSorry for the formatting....yes it seems that read_delim_arrow detects it is a\u00a0POSIXct, format....\r\n I tried another test and split the datetime field into date and time fields.\r\n\r\nNow the date field is a\u00a0POSIXct, format, and the time is a character.\r\n\r\nBut the date field is one day before and at time of 17:00:00:\r\n Classes \u2018tbl_df\u2019, \u2018tbl\u2019 and 'data.frame': 10 obs. of 7 variables:\r\n $ Date : POSIXct, format: \"2019-09-10 17:00:00\" \"2019-09-10 17:00:00\" \"2019-09-10 17:00:00\" \"2019-09-10 17:00:00\" ...\r\n $ Time : chr \"21:36:22\" \"21:36:22\" \"22:43:58\" \"22:43:58\" ...\r\n $ LogLevel : chr \"[INFO]\" \"[INFO]\" \"[INFO]\" \"[INFO]\" ...\r\n\r\ntbl_df:\r\n\r\nDate Time LogLevel Type FunctionName Message UserName\r\n 1 *{color:#ff0000}2019-09-10 17:00:00{color}* 21:36:22 [INFO] CentralLogger CentralLogger Initialized shannon.lewis\r\n 2 2019-09-10 17:00:00 21:36:22 [INFO] Controller Controller.R Initialized shannon.lewis\r\n\r\nLogfile:\r\n Date|Time|LogLevel|Type|FunctionName|Message|UserName\r\n *{color:#00875a}2019-09-11{color}*|21:36:22|[INFO]|CentralLogger| |CentralLogger Initialized|shannon.lewis\r\n 2019-09-11|21:36:22|[INFO]|Controller| |Controller.R Initialized|shannon.lewis\r\n\r\n\r\nUpdate:\r\n\r\nI also read the same log file with readr (read_delim) it detects as POSIXct and date times are correct (both as datetime field and date field and time field split):\r\n\r\n$ DateTime : POSIXct, format: \"2019-09-11 21:36:22\" \"2019-09-11 21:36:22\"\r\n# A tibble: 10 x 7\r\n Date Time LogLevel Type FunctionName Message UserName \r\n <date> <time> <chr> <chr> <chr> <chr> <chr> \r\n 1 2019-09-11 21:36:22 [INFO] CentralLogger NA CentralLogger Initialized shannon.lewis\r\n 2 2019-09-11 21:36:22 [INFO] Controller NA Controller.R Initialized shannon.lewis\r\n\r\n\u00a0\r\n\r\n\u00a0\r\n\r\nShannon",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-13T22:17:39.689+0000",
                    "updated": "2019-09-13T22:48:47.016+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929592",
                    "id": "16929592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I can't quite put my finger on it but I think there's some mismatch on how the C++ library and R interpret data without a timezone. The [C++ library docs|http://arrow.apache.org/docs/cpp/api/datatype.html#_CPPv4N5arrow13TimestampTypeE] say \"If a timezone-aware field contains a recognized timezone, its values may be localized to that locale upon display; the values of timezone-naive fields must always be displayed \u201cas is\u201d, with no localization performed on them.\" \r\n\r\nBut R's print default is the current time zone: https://stat.ethz.ch/R-manual/R-devel/library/base/html/strptime.html\r\n\r\nMy guess is that readr::read_delim interprets timestamps without a timezone to be the current time zone, but arrow C++ interprets that as UTC, which becomes a problem when R tries to print the timestamp. \r\n\r\nI'm guessing that if you did {{print(df$Date, tz=\"GMT\")}} it would look as you expect. \r\n\r\nIt's reasonable to believe that if this is the issue for you, it's also the cause for the original report, which was about Feather and the {{feather}} R package, not read_delim_arrow. \r\n\r\nOther fun fact I saw while digging in: the arrow-to-vector code for timestamp doesn't seem to consider time zone information if it does exist, so we should handle that too. https://github.com/apache/arrow/blob/master/r/src/array_to_vector.cpp#L504-L514\r\n\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-09-13T23:06:06.187+0000",
                    "updated": "2019-09-13T23:06:06.187+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929603",
                    "id": "16929603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I think a solution would be to have {{Converter_Timestamp}} attach a \"tzone\" attribute if the timestamp type has a timezone set. (There may have to be a translation between what Arrow C++ understands as a timezone string and what R understands.) If no \"tzone\" is set, then the \"class\" attribute should have a \"naivePOSIXct\" subclass appended. And then we define\r\n\r\n{code:r}\r\nformat.naivePOSIXct <- function(x, format = \"\", tz = \"GMT\", usetz = FALSE, ...) {\r\n  format.POSIXct(x, format, tz, usetz, ...)\r\n}\r\n{code}\r\n\r\nnoting that the default for \"tz\" is now \"GMT\" instead of \"\", the default for {{format.POSIXct}} which means to use the current locale. So when this timestamp column prints in R, it will appear to be timezoneless and faithfully represent the number of seconds in the epoch.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-09-13T23:18:14.281+0000",
                    "updated": "2019-09-13T23:18:14.281+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929781",
                    "id": "16929781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Hey Neal,\r\n\r\nyep, when I run print(arrow_log$datetime, tz=\"GMT\") i'm getting the correct datetime:\r\n> print(arrow_log$DateTime,tz=\"GMT\")\r\n [1] \"2019-09-11 21:36:22 GMT\" \"2019-09-11 21:36:22 GMT\" \"2019-09-11 22:43:58 GMT\" \"2019-09-11 22:43:58 GMT\" \"2019-09-11 23:11:39 GMT\" \"2019-09-12 00:36:22 GMT\"\r\n [7] \"2019-09-12 00:36:22 GMT\" \"2019-09-12 00:43:58 GMT\" \"2019-09-12 00:43:58 GMT\" \"2019-09-12 01:11:39 GMT\r\n\r\nI also tested this with saving with python to feather and reading with both feather and arrow:\r\n> print(py_feather$DateTime,tz=\"GMT\")\r\n [1] \"2019-09-11 21:36:22 GMT\" \"2019-09-11 21:36:22 GMT\" \"2019-09-11 22:43:58 GMT\" \"2019-09-11 22:43:58 GMT\" \"2019-09-11 23:11:39 GMT\" \"2019-09-12 00:36:22 GMT\"\r\n [7] \"2019-09-12 00:36:22 GMT\" \"2019-09-12 00:43:58 GMT\" \"2019-09-12 00:43:58 GMT\" \"2019-09-12 01:11:39 GMT\"\r\n\r\nSo it seem like you have identified the issue :)\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-14T15:39:11.004+0000",
                    "updated": "2019-09-14T15:39:11.004+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929846",
                    "id": "16929846",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "OP here. so we finally close to have this fixed? amazing!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=Olafsson",
                        "name": "Olafsson",
                        "key": "olafsson",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Olaf",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-09-15T00:32:51.144+0000",
                    "updated": "2019-09-15T00:32:51.144+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16929982",
                    "id": "16929982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "A PR seems to still be needed",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-09-15T15:12:35.251+0000",
                    "updated": "2019-09-15T15:12:35.251+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16946162",
                    "id": "16946162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Any updates on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-07T19:27:25.670+0000",
                    "updated": "2019-10-07T19:27:25.670+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16957884",
                    "id": "16957884",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Just checking in any updates on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shannon.lewis",
                        "name": "shannon.lewis",
                        "key": "shannon.lewis",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Shannon C Lewis",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-23T13:55:40.742+0000",
                    "updated": "2019-10-23T13:55:40.742+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/16957889",
                    "id": "16957889",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "There will be an update on JIRA when there is activity. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-23T14:04:26.368+0000",
                    "updated": "2019-10-23T14:04:26.368+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13192282/comment/17047759",
                    "id": "17047759",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 6488\n[https://github.com/apache/arrow/pull/6488]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-02-28T16:00:34.692+0000",
                    "updated": "2020-02-28T16:00:34.692+0000"
                }
            ],
            "maxResults": 27,
            "total": 27,
            "startAt": 0
        },
        "customfield_12311820": "0|i3zben:",
        "customfield_12314139": null
    }
}