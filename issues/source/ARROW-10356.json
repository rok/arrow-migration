{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13336335",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335",
    "key": "ARROW-10356",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "beginner",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12606215",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12606215",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "inwardIssue": {
                    "id": "13351073",
                    "key": "ARROW-11182",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13351073",
                    "fields": {
                        "summary": "[Rust] [DataFusion] Improve performance if IN list function",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=MikeSeddonAU",
            "name": "MikeSeddonAU",
            "key": "mikeseddonau",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Mike Seddon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12335005",
                "id": "12335005",
                "name": "Rust - DataFusion"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 36000,
            "total": 36000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 36000,
            "total": 36000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10356/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 60,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/528944",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 opened a new pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038\n\n\n   This PR is a work-in-progress simple implementation of `InList` (`'ABC' IN ('ABC', 'DEF')`) which currently only operates on strings.\r\n   \r\n   It uses the `kernels::comparison::contains` implementation but there are a few issues I am struggling with:\r\n   \r\n   1. `kernels::comparison::contains` allows each value in the input array to match against potentially different value arrays. My implementation is very inefficiently creating the same array n times to prevent the error of mismatched input lengths (https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/comparison.rs#L696). Is there a more efficient way to create these `ListArray`s?\r\n   \r\n   2. `kernels::comparison::contains` returns `false` if either of the comparison values is `null`. Is this the desired behavior? If not I can modify the kernel to return null instead.\r\n   \r\n   3. If the basic implementation looks correct I can add the rest of the data types (via macros).\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-28T23:30:50.832+0000",
                    "updated": "2020-12-28T23:30:50.832+0000",
                    "started": "2020-12-28T23:30:50.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528944",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/528950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-751897778\n\n\n   https://issues.apache.org/jira/browse/ARROW-10356\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-28T23:44:17.946+0000",
                    "updated": "2020-12-28T23:44:17.946+0000",
                    "started": "2020-12-28T23:44:17.945+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528950",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/528994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549550179\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n\nReview comment:\n       I think it might be easier to convert it here already to a vec where each element should have the same datatype,. And we check that while generating it?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T02:57:27.874+0000",
                    "updated": "2020-12-29T02:57:27.874+0000",
                    "started": "2020-12-29T02:57:27.874+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528994",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/528997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549551271\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n+        /// Whether the expression is negated\n+        negated: bool,\n\nReview comment:\n       We might keep negated out and use `not` instead?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T03:04:42.784+0000",
                    "updated": "2020-12-29T03:04:42.784+0000",
                    "started": "2020-12-29T03:04:42.784+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528997",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/528998",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549551740\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions.rs\n##########\n@@ -2414,6 +2417,129 @@ impl PhysicalSortExpr {\n     }\n }\n \n+/// Not expression\n+#[derive(Debug)]\n+pub struct InListExpr {\n+    expr: Arc<dyn PhysicalExpr>,\n+    list: Vec<Arc<dyn PhysicalExpr>>,\n+}\n+\n+impl InListExpr {\n+    /// Create a new InList function\n+    pub fn new(expr: Arc<dyn PhysicalExpr>, list: Vec<Arc<dyn PhysicalExpr>>) -> Self {\n+        Self { expr, list }\n+    }\n+\n+    fn compare_utf8(\n+        &self,\n+        array: Arc<dyn Array>,\n+        list_values: Vec<ColumnarValue>,\n+    ) -> Result<ColumnarValue> {\n+        let array = array\n+            .as_any()\n+            .downcast_ref::<GenericStringArray<i32>>()\n+            .unwrap();\n+\n+        // create the ListArray expected by comparison::contains_utf8\n+        let values_builder = StringBuilder::new(list_values.len());\n+        let mut builder = ListBuilder::new(values_builder);\n+        for _ in 0..array.len() {\n+            list_values.iter().for_each(|expr| match expr {\n+                ColumnarValue::Scalar(s) => match s {\n+                    ScalarValue::Utf8(Some(v)) => {\n+                        builder.values().append_value(v).unwrap();\n+                    }\n+                    _ => unimplemented!(\"not yet implemented\"),\n+                },\n+                ColumnarValue::Array(_) => {\n+                    unimplemented!(\"InList should not receive Array\")\n+                }\n+            });\n+            builder.append(true).unwrap();\n+        }\n+        let list_array = builder.finish();\n+\n+        Ok(ColumnarValue::Array(Arc::new(\n+            kernels::comparison::contains_utf8(array, &list_array)\n+                .map_err(DataFusionError::ArrowError)?,\n+        )))\n+    }\n+}\n+\n+impl fmt::Display for InListExpr {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{} IN ({:?})\", self.expr, self.list)\n+    }\n+}\n+\n+impl PhysicalExpr for InListExpr {\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Boolean)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let value_data_type = value.data_type();\n+\n+        let list_values = self\n+            .list\n+            .iter()\n+            .map(|expr| expr.evaluate(batch))\n+            .collect::<Result<Vec<_>>>()?;\n+        let list_values_data_types = list_values\n+            .iter()\n+            .map(|expr| expr.data_type())\n+            .collect::<Vec<DataType>>();\n+\n+        if list_values_data_types\n+            .iter()\n+            .any(|dt| *dt != value_data_type)\n+        {\n+            return Err(DataFusionError::Internal(format!(\n\nReview comment:\n       I think we should do this earlier already when creating/checking the logical plan.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T03:07:16.515+0000",
                    "updated": "2020-12-29T03:07:16.515+0000",
                    "started": "2020-12-29T03:07:16.515+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528998",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529002",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-751931814\n\n\n   I think this is a great start @seddonm1 !\r\n   \r\n   Just some thoughts: an \"ideal\" implementation would convert the items upfront to an `Vec<i64>`, `Vec<String>`, etc on creation, so less work would be needed when executing the plan. Also, at some threshold for bigger arrays we could create a `HashSet<i64>`, `HashSet<String>` etc instead and write a kernel using a this HashSet.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T03:17:57.075+0000",
                    "updated": "2020-12-29T03:17:57.075+0000",
                    "started": "2020-12-29T03:17:57.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529002",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529003",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549554046\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n+        /// Whether the expression is negated\n+        negated: bool,\n\nReview comment:\n       This helps keeping the logical plan simple, and also makes future code that uses the LP tree simple, e.g. an optimization rule on `not(..)`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T03:22:37.228+0000",
                    "updated": "2020-12-29T03:22:37.228+0000",
                    "started": "2020-12-29T03:22:37.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529003",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549888900\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n\nReview comment:\n       I cannot find another example where we do validation like checking same datatypes in the Logical Plan. Most of this type of validation is performed in the Physical Plan: https://github.com/apache/arrow/blob/master/rust/datafusion/src/physical_plan/expressions.rs#L1650\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T23:44:03.687+0000",
                    "updated": "2020-12-29T23:44:03.687+0000",
                    "started": "2020-12-29T23:44:03.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529318",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r549889188\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n+        /// Whether the expression is negated\n+        negated: bool,\n\nReview comment:\n       I mainly included `negated` to allow pretty printing like: `'z' NOT IN ('x','y')`. I have changed this so it now uses the `not` `expr` so will now display `NOT 'z' IN ('x','y')`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T23:45:36.920+0000",
                    "updated": "2020-12-29T23:45:36.920+0000",
                    "started": "2020-12-29T23:45:36.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529319",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529321",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752278501\n\n\n   Thanks @Dandandan \r\n   \r\n   Do you think we should re-evaluate the current behavior of the `kernels::comparison::contains` based on my comments 1 and 2?\r\n   \r\n   Creating the same array `n` times feels very inefficient if we can modify the kernel.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-29T23:47:34.314+0000",
                    "updated": "2020-12-29T23:47:34.314+0000",
                    "started": "2020-12-29T23:47:34.314+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529321",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752382480\n\n\n   1. Yes I think there should be a different/more efficient implementation that handles the \"scalar\" case, where the scalar in this case is the list with values.\r\n   2. I believe the current behavior related to NULL is correct, just as field=NULL will also be false.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T09:04:15.454+0000",
                    "updated": "2020-12-30T09:04:15.454+0000",
                    "started": "2020-12-30T09:04:15.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529433",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752776874\n\n\n   > 1. Yes I think there should be a different/more efficient implementation that handles the \"scalar\" case, where the scalar in this case is the list with values.\r\n   Agree. I can have a look as part of this PR.\r\n   \r\n   > 2. I believe the current behavior related to NULL is correct, just as field=NULL will also be false.\r\n   I have tested in Postgres and it will return `NULL` if value is `NULL` unlike this implementation which returns `false`.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T22:26:14.654+0000",
                    "updated": "2020-12-30T22:26:14.654+0000",
                    "started": "2020-12-30T22:26:14.654+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529632",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529633",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 edited a comment on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752776874\n\n\n   > 1. Yes I think there should be a different/more efficient implementation that handles the \"scalar\" case, where the scalar in this case is the list with values.\r\n   \r\n   Agree. I can have a look as part of this PR.\r\n   \r\n   > 2. I believe the current behavior related to NULL is correct, just as field=NULL will also be false.\r\n   \r\n   I have tested in Postgres and it will return `NULL` if value is `NULL` unlike this implementation which returns `false`.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T22:26:27.715+0000",
                    "updated": "2020-12-30T22:26:27.715+0000",
                    "started": "2020-12-30T22:26:27.715+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529633",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752807355\n\n\n   I have updated this PR with a reimplementation of the logic so that the kernel which has two undesired behaviour (see points 1 and 2) is no longer invoked. It should also support the full range of types as well.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T01:07:59.548+0000",
                    "updated": "2020-12-31T01:07:59.548+0000",
                    "started": "2020-12-31T01:07:59.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529657",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-752956409\n\n\n   The full set of Rust CI tests did not run on this PR :(\r\n   \r\n   Can you please rebase this PR against [apache/master](https://github.com/apache/arrow) to pick up the changes in https://github.com/apache/arrow/pull/9056 so that they do? \r\n   \r\n   I apologize for the inconvenience. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T13:18:17.203+0000",
                    "updated": "2020-12-31T13:18:17.203+0000",
                    "started": "2020-12-31T13:18:17.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529803",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529834",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r550507926\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n\nReview comment:\n       Yes, I see. Maybe could be a future optimization so that we can convert it to a more efficient representation upfront, and generating an error earlier when it can not be executed.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-31T15:45:04.715+0000",
                    "updated": "2020-12-31T15:45:04.715+0000",
                    "started": "2020-12-31T15:45:04.714+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529834",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529920",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "seddonm1 commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-753240012\n\n\n   @Dandandan @alamb rebased and added some tests. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T01:54:46.022+0000",
                    "updated": "2021-01-01T01:54:46.022+0000",
                    "started": "2021-01-01T01:54:46.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529920",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529921",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#issuecomment-753241531\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=h1) Report\n   > Merging [#9038](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=desc) (ae61b57) into [master](https://codecov.io/gh/apache/arrow/commit/dd5fe7095bb662236e27d3343eb82bc4375f93ef?el=desc) (dd5fe70) will **decrease** coverage by `0.06%`.\n   > The diff coverage is `64.97%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9038/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9038      +/-   ##\n   ==========================================\n   - Coverage   82.61%   82.55%   -0.07%     \n   ==========================================\n     Files         202      202              \n     Lines       50052    50249     +197     \n   ==========================================\n   + Hits        41350    41481     +131     \n   - Misses       8702     8768      +66     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/datafusion/src/optimizer/utils.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9vcHRpbWl6ZXIvdXRpbHMucnM=) | `58.42% <33.33%> (-0.29%)` | :arrow_down: |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `76.28% <50.00%> (-0.62%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/utils.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvdXRpbHMucnM=) | `54.49% <53.33%> (-0.11%)` | :arrow_down: |\n   | [rust/datafusion/src/physical\\_plan/expressions.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2V4cHJlc3Npb25zLnJz) | `82.39% <59.84%> (-2.09%)` | :arrow_down: |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `84.06% <81.81%> (+0.09%)` | :arrow_up: |\n   | [rust/datafusion/src/physical\\_plan/planner.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3BsYW5uZXIucnM=) | `77.96% <83.33%> (+0.06%)` | :arrow_up: |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.83% <100.00%> (+<0.01%)` | :arrow_up: |\n   | [rust/parquet/src/encodings/encoding.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9lbmNvZGluZ3MvZW5jb2RpbmcucnM=) | `95.43% <0.00%> (+0.19%)` | :arrow_up: |\n   | [rust/datafusion/src/scalar.rs](https://codecov.io/gh/apache/arrow/pull/9038/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zY2FsYXIucnM=) | `59.49% <0.00%> (+0.42%)` | :arrow_up: |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=footer). Last update [709f20d...ae61b57](https://codecov.io/gh/apache/arrow/pull/9038?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T02:14:23.456+0000",
                    "updated": "2021-01-01T02:14:23.456+0000",
                    "started": "2021-01-01T02:14:23.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529921",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/529999",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r550760379\n\n\n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions.rs\n##########\n@@ -2414,6 +2417,212 @@ impl PhysicalSortExpr {\n     }\n }\n \n+/// InList\n+#[derive(Debug)]\n+pub struct InListExpr {\n+    expr: Arc<dyn PhysicalExpr>,\n+    list: Vec<Arc<dyn PhysicalExpr>>,\n+}\n+\n+macro_rules! make_contains {\n+    ($ARRAY:expr, $LIST_VALUES:expr, $SCALAR_VALUE:ident, $ARRAY_TYPE:ident) => {{\n+        let array = $ARRAY.as_any().downcast_ref::<$ARRAY_TYPE>().unwrap();\n+\n+        let values = $LIST_VALUES\n+            .iter()\n+            .map(|expr| match expr {\n+                ColumnarValue::Scalar(s) => match s {\n+                    ScalarValue::$SCALAR_VALUE(Some(v)) => v,\n+                    datatype => unimplemented!(\"Unexpected type {} for InList\", datatype),\n+                },\n+                ColumnarValue::Array(_) => {\n+                    unimplemented!(\"InList should not receive Array\")\n+                }\n+            })\n+            .collect::<Vec<_>>();\n+\n+        Ok(ColumnarValue::Array(Arc::new(\n+            array\n+                .iter()\n+                .map(|x| x.map(|x| values.contains(&&x)))\n+                .collect::<BooleanArray>(),\n+        )))\n+    }};\n+}\n+\n+impl InListExpr {\n+    /// Create a new InList expression\n+    pub fn new(expr: Arc<dyn PhysicalExpr>, list: Vec<Arc<dyn PhysicalExpr>>) -> Self {\n+        Self { expr, list }\n+    }\n+\n+    /// Compare for specific utf8 types\n+    fn compare_utf8<T: StringOffsetSizeTrait>(\n+        &self,\n+        array: ArrayRef,\n+        list_values: Vec<ColumnarValue>,\n+    ) -> Result<ColumnarValue> {\n+        let array = array\n+            .as_any()\n+            .downcast_ref::<GenericStringArray<T>>()\n+            .unwrap();\n+\n+        let values = list_values\n+            .iter()\n+            .map(|expr| match expr {\n+                ColumnarValue::Scalar(s) => match s {\n+                    ScalarValue::Utf8(Some(v)) => v.as_str(),\n+                    datatype => unimplemented!(\"Unexpected type {} for InList\", datatype),\n+                },\n+                ColumnarValue::Array(_) => {\n+                    unimplemented!(\"InList should not receive Array\")\n\nReview comment:\n       this should probably generate an error earlier in planing too (e.g. if you see an expression like `my_col IN (my_other_col, 'foo')` )\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n\nReview comment:\n       I think the rationale / idea (largely expressed by @jorgecarleitao ) was that actual type coercion happens during physical planning (so that we could potentially have different backend physical planning mechanisms but the same logical mechanisms).\r\n   \r\n   You could potentially use the coercion logic here: https://github.com/apache/arrow/blob/master/rust/datafusion/src/physical_plan/type_coercion.rs#L118\r\n   \r\n   And coerce the in list items all to the same types \n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions.rs\n##########\n@@ -2414,6 +2417,212 @@ impl PhysicalSortExpr {\n     }\n }\n \n+/// InList\n+#[derive(Debug)]\n+pub struct InListExpr {\n+    expr: Arc<dyn PhysicalExpr>,\n+    list: Vec<Arc<dyn PhysicalExpr>>,\n+}\n+\n+macro_rules! make_contains {\n+    ($ARRAY:expr, $LIST_VALUES:expr, $SCALAR_VALUE:ident, $ARRAY_TYPE:ident) => {{\n+        let array = $ARRAY.as_any().downcast_ref::<$ARRAY_TYPE>().unwrap();\n+\n+        let values = $LIST_VALUES\n+            .iter()\n+            .map(|expr| match expr {\n+                ColumnarValue::Scalar(s) => match s {\n+                    ScalarValue::$SCALAR_VALUE(Some(v)) => v,\n+                    datatype => unimplemented!(\"Unexpected type {} for InList\", datatype),\n+                },\n+                ColumnarValue::Array(_) => {\n+                    unimplemented!(\"InList should not receive Array\")\n+                }\n+            })\n+            .collect::<Vec<_>>();\n+\n+        Ok(ColumnarValue::Array(Arc::new(\n+            array\n+                .iter()\n+                .map(|x| x.map(|x| values.contains(&&x)))\n\nReview comment:\n       I wonder if this handles `NULL` correctly -- like for a value of where `expr` is NULL the output should be NULL (not true/false). The semantics when there is a literal `NULL` in the inlist are even stranger (but likely could be handled as a follow on PR)\r\n   \r\n   For example:\r\n   \r\n   sqlite> create table t(c1 int);\r\n   sqlite> insert into t values (10);\r\n   sqlite> insert into t values (20);\r\n   sqlite> insert into t values(NULL);\r\n   sqlite> select c1, c1 IN (20, NULL) from t;\r\n   10|\r\n   20|1\r\n   |\r\n   sqlite> select c1, c1 IN (20) from t;\r\n   10|0\r\n   20|1\r\n   |\r\n   ```\r\n   \r\n   Note that `10 IN (20, NULL)` is actually `NULL` rather than `FALSE`. Crazy\r\n   \n\n##########\nFile path: rust/datafusion/src/physical_plan/expressions.rs\n##########\n@@ -2414,6 +2417,129 @@ impl PhysicalSortExpr {\n     }\n }\n \n+/// Not expression\n+#[derive(Debug)]\n+pub struct InListExpr {\n+    expr: Arc<dyn PhysicalExpr>,\n+    list: Vec<Arc<dyn PhysicalExpr>>,\n+}\n+\n+impl InListExpr {\n+    /// Create a new InList function\n+    pub fn new(expr: Arc<dyn PhysicalExpr>, list: Vec<Arc<dyn PhysicalExpr>>) -> Self {\n+        Self { expr, list }\n+    }\n+\n+    fn compare_utf8(\n+        &self,\n+        array: Arc<dyn Array>,\n+        list_values: Vec<ColumnarValue>,\n+    ) -> Result<ColumnarValue> {\n+        let array = array\n+            .as_any()\n+            .downcast_ref::<GenericStringArray<i32>>()\n+            .unwrap();\n+\n+        // create the ListArray expected by comparison::contains_utf8\n+        let values_builder = StringBuilder::new(list_values.len());\n+        let mut builder = ListBuilder::new(values_builder);\n+        for _ in 0..array.len() {\n+            list_values.iter().for_each(|expr| match expr {\n+                ColumnarValue::Scalar(s) => match s {\n+                    ScalarValue::Utf8(Some(v)) => {\n+                        builder.values().append_value(v).unwrap();\n+                    }\n+                    _ => unimplemented!(\"not yet implemented\"),\n+                },\n+                ColumnarValue::Array(_) => {\n+                    unimplemented!(\"InList should not receive Array\")\n+                }\n+            });\n+            builder.append(true).unwrap();\n+        }\n+        let list_array = builder.finish();\n+\n+        Ok(ColumnarValue::Array(Arc::new(\n+            kernels::comparison::contains_utf8(array, &list_array)\n+                .map_err(DataFusionError::ArrowError)?,\n+        )))\n+    }\n+}\n+\n+impl fmt::Display for InListExpr {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        write!(f, \"{} IN ({:?})\", self.expr, self.list)\n+    }\n+}\n+\n+impl PhysicalExpr for InListExpr {\n+    fn data_type(&self, _input_schema: &Schema) -> Result<DataType> {\n+        Ok(DataType::Boolean)\n+    }\n+\n+    fn nullable(&self, input_schema: &Schema) -> Result<bool> {\n+        self.expr.nullable(input_schema)\n+    }\n+\n+    fn evaluate(&self, batch: &RecordBatch) -> Result<ColumnarValue> {\n+        let value = self.expr.evaluate(batch)?;\n+        let value_data_type = value.data_type();\n+\n+        let list_values = self\n+            .list\n+            .iter()\n+            .map(|expr| expr.evaluate(batch))\n+            .collect::<Result<Vec<_>>>()?;\n+        let list_values_data_types = list_values\n+            .iter()\n+            .map(|expr| expr.data_type())\n+            .collect::<Vec<DataType>>();\n+\n+        if list_values_data_types\n+            .iter()\n+            .any(|dt| *dt != value_data_type)\n+        {\n+            return Err(DataFusionError::Internal(format!(\n\nReview comment:\n       I suggest that the appropriate place would be to \"coerce\" all the in list  item types to the same data type during Logical --> Physical plan creation. \n\n##########\nFile path: rust/datafusion/src/sql/planner.rs\n##########\n@@ -761,6 +761,28 @@ impl<'a, S: ContextProvider> SqlToRel<'a, S> {\n                 high: Box::new(self.sql_expr_to_logical_expr(&high)?),\n             }),\n \n+            SQLExpr::InList {\n+                ref expr,\n+                ref list,\n+                ref negated,\n+            } => {\n+                let list_expr = list\n+                    .iter()\n+                    .map(|e| self.sql_expr_to_logical_expr(e))\n\nReview comment:\n       Here is where I think you could add the type coercion / checking logic\n\n##########\nFile path: rust/datafusion/tests/sql.rs\n##########\n@@ -1849,3 +1849,45 @@ async fn string_expressions() -> Result<()> {\n     assert_eq!(expected, actual);\n     Ok(())\n }\n+\n+#[tokio::test]\n\nReview comment:\n       Since there is also support in this PR for numeric types, I would also suggest some basic tests for IN lists with numbers as well (e.g. `c1 IN (1, 2 3)` as well as `c1 IN (1, NULL)`\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T11:59:53.737+0000",
                    "updated": "2021-01-01T11:59:53.737+0000",
                    "started": "2021-01-01T11:59:53.737+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529999",
                    "issueId": "13336335"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/worklog/530000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9038:\nURL: https://github.com/apache/arrow/pull/9038#discussion_r550761831\n\n\n\n##########\nFile path: rust/datafusion/src/logical_plan/expr.rs\n##########\n@@ -158,6 +158,15 @@ pub enum Expr {\n         /// List of expressions to feed to the functions as arguments\n         args: Vec<Expr>,\n     },\n+    /// Returns whether the list contains the expr value.\n+    InList {\n+        /// The value to compare\n+        expr: Box<Expr>,\n+        /// The low end of the range\n+        list: Vec<Expr>,\n+        /// Whether the expression is negated\n+        negated: bool,\n\nReview comment:\n       I think supporting sql style `NOT IN` would be nice (though no changes needed in this PR) \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T12:01:07.033+0000",
                    "updated": "2021-01-01T12:01:07.033+0000",
                    "started": "2021-01-01T12:01:07.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530000",
                    "issueId": "13336335"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 36000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6ebceb78[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f253702[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@789d8807[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@7e062d31[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34352c7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5ffe000d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b376645[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@497a5b7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@195c17aa[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@360d82e4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@46f8df2e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7f7b705b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 36000,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jan 08 11:52:12 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-08T11:51:22.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10356/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2020-10-20T16:27:41.000+0000",
        "updated": "2021-01-10T03:57:30.000+0000",
        "timeoriginalestimate": null,
        "description": "Add support for a function that returns true if an element belongs to a finite list of elements in a list.\r\n\r\nThe list should be an arrow array (to be dynamically-typed).\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 36000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [DataFusion] Add support for is_in",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17218272",
                    "id": "17218272",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "I had some list kernels at [https://github.com/nevi-me/rust-dataframe/blob/master/src/functions/array.rs.]\u00a0The code is old, so it's written with the builder pattern, but some of it could be used as a start.\r\n\r\n[~jorgecarleitao]\u00a0how about we classify kernels into groups, and implement them as subtasks in an umbrella JIRA? It might help with completeness for say list kernels. We could use Spark as inspiration for what to support (as I had done above)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-10-21T12:45:28.980+0000",
                    "updated": "2020-10-21T12:45:28.980+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17227881",
                    "id": "17227881",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi all, I would like to work on it. But I am not sure where to start. Any pointers/references or what is expected would be useful for me. \r\nThanks for your time.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-08T00:52:54.543+0000",
                    "updated": "2020-11-08T00:52:54.543+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17227899",
                    "id": "17227899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi [~apatniv], Sure!\r\n\r\nSo, broad steps, we can split this issue in two:\r\n * changes in the arrow crate\r\n * changes in the datafusion crate\r\n\r\nArrow:\r\n # fork the repo on github and clone it to your computer\r\n # bootsrap your working environment (e.g. vs code + git + rust analyzer plugin)\r\n # create a new module `is_in.rs` on the arrow crate under compute/kernels.\r\n # Design the function. E.g. `is_in` is something like `fn is_in(array1, array2) -> boolean array`.\r\n ## Can we leverage the arrow format somehow, or do we need to do it directly on the values? E.g. `is_in` seems to be a NxM problem, as we need to check each element in array1 on array2. Is there any way to speed this process?\r\n ## which utility methods do we may need?\r\n ## Any edge cases?\r\n # Implement. Check other kernels for inspiration. It is fine to PR only a subset of all types. e.g. start with the implementation for only primitive arrays (int32, int64, etc.)\r\n # Add tests (can be done first)\r\n # Update README\r\n # PR (optional, good to get initial feedback :))\r\n\r\nDataFusion:\r\n # Use the kernel defined above on data fusion on physical_plan/functions.rs\r\n # Add the function `is_in` to the `impl` of Expr in logical_plan.rs\r\n # Update README\r\n # PR\r\n\r\nLet us know if you have any questions!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-08T02:51:13.493+0000",
                    "updated": "2020-11-08T02:54:03.653+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17227912",
                    "id": "17227912",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "[~jorgecarleitao]\u00a0is this not the same as ARROW-10103? We called it 'contains' there, where we check if a list contains a primitive, returning a boolean. If it is, perhaps we could use this to expand the datatypes supported there (if we don't support all), and maybe tweak behaviour where desired (there were some questions around null behaviour at the time)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-11-08T04:36:29.260+0000",
                    "updated": "2020-11-08T04:36:29.260+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17228131",
                    "id": "17228131",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Just to confirm are these the corresponding code repos.\r\n[https://github.com/apache/arrow/tree/master/rust/arrow]\r\n[https://github.com/apache/arrow/tree/master/rust/datafusion]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-08T16:31:00.356+0000",
                    "updated": "2020-11-08T16:31:00.356+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17231955",
                    "id": "17231955",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~nevi_me], it is. I think we should move that to `compute::kernels`, for consistency.\r\n\r\n\u00a0\r\n\r\n[~apatniv], I am really sorry, this is a duplicate, I did not know this was already supported. Yes, those are the directories.\r\n\r\nEDIT: this is not supported in DataFusion, AFAIK. So, there is still work in this issue to add it to DataFusion.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
                        "name": "jorgecarleitao",
                        "key": "jorgecarleitao",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
                        },
                        "displayName": "Jorge Leit\u00e3o",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-14T07:34:41.059+0000",
                    "updated": "2020-11-14T07:35:37.909+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17232064",
                    "id": "17232064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~nevi_me] Not a problem. I can work on integrating into DataFusion.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apatniv",
                        "name": "apatniv",
                        "key": "apatniv",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
                        },
                        "displayName": "Vivek Akupatni",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2020-11-14T16:10:46.219+0000",
                    "updated": "2020-11-14T16:10:46.219+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17261252",
                    "id": "17261252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 9038\n[https://github.com/apache/arrow/pull/9038]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-08T11:51:22.796+0000",
                    "updated": "2021-01-08T11:51:22.796+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13336335/comment/17261254",
                    "id": "17261254",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "FWIW [~MikeSeddonAU] has implemented this -- there is still other work that is possible -- see https://issues.apache.org/jira/browse/ARROW-11182",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-01-08T11:52:12.459+0000",
                    "updated": "2021-01-08T11:52:12.459+0000"
                }
            ],
            "maxResults": 9,
            "total": 9,
            "startAt": 0
        },
        "customfield_12311820": "0|z0jutk:",
        "customfield_12314139": null
    }
}