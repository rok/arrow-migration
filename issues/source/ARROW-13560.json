{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393549",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549",
    "key": "ARROW-13560",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13560/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/634700",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#issuecomment-893669493\n\n\n   https://issues.apache.org/jira/browse/ARROW-13560\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T18:01:34.338+0000",
                    "updated": "2021-08-05T18:01:34.338+0000",
                    "started": "2021-08-05T18:01:34.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634700",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/634703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r683681911\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,10 +85,22 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj<- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n+      # TODO: should we check names and make sure we only project once per?\n+      proj <- c(proj, projection)\n+    }\n+\n+    filt <- dataset$filtered_rows\n+    if (!isTRUE(filter)) {\n+      filt <- build_expr(\"&\", filt, filter)\n+    }\n+\n\nReview comment:\n       Use this helper to handle a few other edge cases (then restore `dataset$filtered_rows` in the call to Scanner$create below)\r\n   \r\n   ```suggestion\r\n       if (!isTRUE(filter)) {\r\n         dataset <- set_filter(dataset, filter)\r\n       }\r\n   \r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T18:11:50.339+0000",
                    "updated": "2021-08-05T18:11:50.339+0000",
                    "started": "2021-08-05T18:11:50.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634703",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/634704",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r683683809\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,10 +85,22 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj<- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n+      # TODO: should we check names and make sure we only project once per?\n+      proj <- c(proj, projection)\n\nReview comment:\n       I don't think you want to `c()` because IIUC the projection should be applied after the existing projection. One possibility is that we special case for here and only accept a character vector here, so you'd end up doing:\r\n   \r\n   ```suggestion\r\n         proj <- proj[projection]\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-05T18:14:35.885+0000",
                    "updated": "2021-08-05T18:14:35.885+0000",
                    "started": "2021-08-05T18:14:35.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "634704",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r696952499\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,10 +85,22 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj<- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n+      # TODO: should we check names and make sure we only project once per?\n+      proj <- c(proj, projection)\n\nReview comment:\n       I've addressed this while also retaining the ability for projection to include new columns as well. I can pull out the new-columns code and only accept characters if we think we should be that limiting.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-26T20:24:40.022+0000",
                    "updated": "2021-08-26T20:24:40.022+0000",
                    "started": "2021-08-26T20:24:40.022+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642565",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#issuecomment-906719227\n\n\n   This is ready for re-review (well, once all the CI passes, I'll address it if there are failures)\r\n   \r\n   Since these are pretty low-level interface that we don't expect people to be using unless they are extending Arrow, I'm ok with the fact that the errors aren't _super clear_ how to go about fixing mis-specified inputs. But correct me if you think we should be doing more input-checking here. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-26T20:25:55.781+0000",
                    "updated": "2021-08-26T20:25:55.781+0000",
                    "started": "2021-08-26T20:25:55.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642566",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642827",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r697434894\n\n\n\n##########\nFile path: r/R/dplyr-filter.R\n##########\n@@ -71,8 +71,14 @@ filter.Dataset <- filter.ArrowTabular <- filter.arrow_dplyr_query\n \n set_filters <- function(.data, expressions) {\n   if (length(expressions)) {\n-    # expressions is a list of Expressions. AND them together and set them on .data\n-    new_filter <- Reduce(\"&\", expressions)\n+    if (is.list(expressions)) {\n+      # expressions is a list of Expressions. AND them together and set them on .data\n+      new_filter <- Reduce(\"&\", expressions)\n+    } else {\n+      # expressions is an expression already\n\nReview comment:\n       Should we assert that it is an expression?\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,26 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n+      # grab all of the projection elements that are characters to select columns\n+      # TODO: should we check names and make sure we only project once per?\n\nReview comment:\n       why?\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,26 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n\nReview comment:\n       Can you update the docstrings above to explain what the accepted inputs and behaviors are? (I think it's not 100% up to date before this change too, but I want to be clear about what the expected inputs are (and I'm curious whether that will sound sensible when you write it out).)\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -1071,6 +1071,60 @@ test_that(\"Scanner$ToRecordBatchReader()\", {\n   )\n })\n \n+test_that(\"Scanner$create() filter/projection pushdown\", {\n+  ds <- open_dataset(dataset_dir, partitioning = \"part\")\n+\n+  # the standard to compare all Scanner$create()s against\n+  scan_one <- ds %>%\n+    filter(int > 7 & dbl < 57) %>%\n+    select(int, dbl, lgl) %>%\n+    mutate(int_plus = int + 1, dbl_minus = dbl - 1) %>%\n+    Scanner$create()\n+\n+  # add a column in projection\n+  scan_two <- ds %>%\n+    filter(int > 7 & dbl < 57) %>%\n+    select(int, dbl, lgl) %>%\n+    mutate(int_plus = int + 1) %>%\n+    Scanner$create(projection = list(\n+      \"int\", \"dbl\", \"lgl\", \"int_plus\",\n\nReview comment:\n       A combination of bare strings and named expressions? That seems odd.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-27T13:24:52.799+0000",
                    "updated": "2021-08-27T13:24:52.799+0000",
                    "started": "2021-08-27T13:24:52.798+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642827",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r697480591\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,26 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+    if (!is.null(projection)) {\n+      # grab all of the projection elements that are characters to select columns\n+      # TODO: should we check names and make sure we only project once per?\n\nReview comment:\n       This was (partially) a holdover from the code that Hannes proposed \u2014 I also though there was another constraint about fields named the same.  I tried projections with multiple of the same columns and it works just fine (even if it is a little bit of an odd thing to do), so I'll delete this since it works if someone wants to do that.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-27T14:20:39.140+0000",
                    "updated": "2021-08-27T14:20:39.140+0000",
                    "started": "2021-08-27T14:20:39.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642848",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642942",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r697644390\n\n\n\n##########\nFile path: r/tests/testthat/test-dataset.R\n##########\n@@ -1071,6 +1071,60 @@ test_that(\"Scanner$ToRecordBatchReader()\", {\n   )\n })\n \n+test_that(\"Scanner$create() filter/projection pushdown\", {\n+  ds <- open_dataset(dataset_dir, partitioning = \"part\")\n+\n+  # the standard to compare all Scanner$create()s against\n+  scan_one <- ds %>%\n+    filter(int > 7 & dbl < 57) %>%\n+    select(int, dbl, lgl) %>%\n+    mutate(int_plus = int + 1, dbl_minus = dbl - 1) %>%\n+    Scanner$create()\n+\n+  # add a column in projection\n+  scan_two <- ds %>%\n+    filter(int > 7 & dbl < 57) %>%\n+    select(int, dbl, lgl) %>%\n+    mutate(int_plus = int + 1) %>%\n+    Scanner$create(projection = list(\n+      \"int\", \"dbl\", \"lgl\", \"int_plus\",\n\nReview comment:\n       Yeah, you're right \u2014 I've backed out the ability to commingle these and now you either can do all characters _or_ expressions (with possibly many `a = Expression$field_ref(\"a\")`)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-27T18:34:37.404+0000",
                    "updated": "2021-08-27T18:34:37.404+0000",
                    "started": "2021-08-27T18:34:37.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642942",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642956",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r697660485\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       This TODO are for cases like the following:\r\n   \r\n   ```\r\n   ds %>%\r\n       filter(int > 7) %>%\r\n       select(int, dbl, lgl) %>%\r\n       mutate(int_plus = int + 1) %>% \r\n       Scanner$create(projection = list(\r\n         int = Expression$field_ref(\"int\"),\r\n         int_plus = Expression$field_ref(\"int_plus\"),\r\n         dbl_minus = Expression$create(\r\n           \"subtract_checked\",\r\n           Expression$field_ref(\"dbl\"),\r\n           Expression$scalar(1)\r\n         )\r\n   ```\r\n   \r\n   Selecting `int` is fine with `Expression$field_ref()`, but the variable previously added with `mutate()` (`int_plus`) is not a field to reference at this point. We could munge the list of expressions to extract the expression creating `int_plus` from `dataset$temp_columns` and munge the `projection` list to include that though that feels hacky / opening up a \ud83d\uddd1\ufe0f of \ud83d\udc0d s. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-27T19:03:56.750+0000",
                    "updated": "2021-08-27T19:03:56.750+0000",
                    "started": "2021-08-27T19:03:56.749+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642956",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/642957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#issuecomment-907412301\n\n\n   Ok, I've made changes based on those comments. I've also [asked one question](https://github.com/apache/arrow/pull/10888/files#r697660485) about an edgecase with this approach. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-27T19:04:40.233+0000",
                    "updated": "2021-08-27T19:04:40.233+0000",
                    "started": "2021-08-27T19:04:40.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642957",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/643514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r698579535\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       @nealrichardson do you have any thoughts on this? I've looked into using `projection[[i]]$field_name` to identify any references to fields, and then replace them with what's in `proj[projection[[i]]$field_name]`, which should work for this case, but looks brittle to me (but maybe I'm being paranoid?).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-30T15:19:46.866+0000",
                    "updated": "2021-08-30T15:19:46.866+0000",
                    "started": "2021-08-30T15:19:46.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "643514",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/643652",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r698706872\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n\nReview comment:\n       Should probably assert `all(projection %in% names(proj))`, otherwise you'll get some garbage here.\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       I agree it's not great, but if we know that duckdb is just using the character vector version, let's make a todo jira and punt this.\n\n##########\nFile path: r/R/dplyr-filter.R\n##########\n@@ -71,8 +71,15 @@ filter.Dataset <- filter.ArrowTabular <- filter.arrow_dplyr_query\n \n set_filters <- function(.data, expressions) {\n   if (length(expressions)) {\n-    # expressions is a list of Expressions. AND them together and set them on .data\n-    new_filter <- Reduce(\"&\", expressions)\n+    if (is.list(expressions)) {\n+      # expressions is a list of Expressions. AND them together and set them on .data\n+      new_filter <- Reduce(\"&\", expressions)\n+    } else {\n+      # expressions should be an expression or list of expressions already\n+      stopifnot(is_list_of(expressions, \"Expression\") | inherits(expressions, \"Expression\"))\n+      new_filter <- expressions\n+    }\n\nReview comment:\n       how do you have a list of expressions here? won't `is.list(expressions)` catch that? do you mean something like this? \r\n   \r\n   ```suggestion\r\n       } else if (inherits(expressions, \"Expression\")) {\r\n         new_filter <- expressions\r\n       } else {\r\n         stop(\"Some error message here\", call. = FALSE)\r\n       }\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-30T18:27:02.140+0000",
                    "updated": "2021-08-30T18:27:02.140+0000",
                    "started": "2021-08-30T18:27:02.140+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "643652",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/643686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r698754176\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       If I'm reading[ DuckDB's source](https://github.com/duckdb/duckdb/blob/979a798219262349e8c2c3d52ef203a04d6ee728/tools/rpkg/src/register.cpp#L86) correctly they are only using strings for projection. I'll pull out the expr + make the appropriate todos/jiras. This might get simpler with the exec node stuff you're working on too / we might be able to push this complexity down to that at some point in the future.\r\n   \r\n   After I pull it out, I'll run some test data through duckdb to ensure that we aren't hitting anything funny there either.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-30T19:36:59.968+0000",
                    "updated": "2021-08-30T19:36:59.968+0000",
                    "started": "2021-08-30T19:36:59.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "643686",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/644034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r699317536\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,28 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else {\n+        # TODO: ARROW-13802 accepting lists of Expressions as a projectoin\n\nReview comment:\n       ```suggestion\r\n           # TODO: ARROW-13802 accepting lists of Expressions as a projection\r\n   ```\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -28,7 +28,7 @@\n #'\n #' * `dataset`: A `Dataset` or `arrow_dplyr_query` object, as returned by the\n #'    `dplyr` methods on `Dataset`.\n-#' * `projection`: A character vector of column names to select\n+#' * `projection`: A character vector of column names to select columns\n\nReview comment:\n       As it turns out, `projection` can be a named list of Expressions, just not when dataset is an arrow_dplyr_query (and thus already contains a named list of Expressions)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T13:24:14.237+0000",
                    "updated": "2021-08-31T13:24:14.237+0000",
                    "started": "2021-08-31T13:24:14.237+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644034",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/644346",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r698579535\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       @nealrichardson do you have any thoughts on this? I've looked into using `projection[[i]]$field_name` to identify any references to fields, and then replace them with what's in `proj[projection[[i]]$field_name]`, which should work for this case, but looks brittle to me (but maybe I'm being paranoid?).\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       If I'm reading[ DuckDB's source](https://github.com/duckdb/duckdb/blob/979a798219262349e8c2c3d52ef203a04d6ee728/tools/rpkg/src/register.cpp#L86) correctly they are only using strings for projection. I'll pull out the expr + make the appropriate todos/jiras. This might get simpler with the exec node stuff you're working on too / we might be able to push this complexity down to that at some point in the future.\r\n   \r\n   After I pull it out, I'll run some test data through duckdb to ensure that we aren't hitting anything funny there either.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T15:14:05.797+0000",
                    "updated": "2021-08-31T15:14:05.797+0000",
                    "started": "2021-08-31T15:14:05.797+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644346",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/644434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r698706872\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n\nReview comment:\n       Should probably assert `all(projection %in% names(proj))`, otherwise you'll get some garbage here.\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +86,30 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else if (is_list_of(projection, \"Expression\")) {\n+        # TODO: need to check and see if there are any Expressions that are simply\n+        # field refs in projections, but are richer expressions in proj?\n+        proj <- projection\n\nReview comment:\n       I agree it's not great, but if we know that duckdb is just using the character vector version, let's make a todo jira and punt this.\n\n##########\nFile path: r/R/dplyr-filter.R\n##########\n@@ -71,8 +71,15 @@ filter.Dataset <- filter.ArrowTabular <- filter.arrow_dplyr_query\n \n set_filters <- function(.data, expressions) {\n   if (length(expressions)) {\n-    # expressions is a list of Expressions. AND them together and set them on .data\n-    new_filter <- Reduce(\"&\", expressions)\n+    if (is.list(expressions)) {\n+      # expressions is a list of Expressions. AND them together and set them on .data\n+      new_filter <- Reduce(\"&\", expressions)\n+    } else {\n+      # expressions should be an expression or list of expressions already\n+      stopifnot(is_list_of(expressions, \"Expression\") | inherits(expressions, \"Expression\"))\n+      new_filter <- expressions\n+    }\n\nReview comment:\n       how do you have a list of expressions here? won't `is.list(expressions)` catch that? do you mean something like this? \r\n   \r\n   ```suggestion\r\n       } else if (inherits(expressions, \"Expression\")) {\r\n         new_filter <- expressions\r\n       } else {\r\n         stop(\"Some error message here\", call. = FALSE)\r\n       }\r\n   ```\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,28 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else {\n+        # TODO: ARROW-13802 accepting lists of Expressions as a projectoin\n\nReview comment:\n       ```suggestion\r\n           # TODO: ARROW-13802 accepting lists of Expressions as a projection\r\n   ```\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -28,7 +28,7 @@\n #'\n #' * `dataset`: A `Dataset` or `arrow_dplyr_query` object, as returned by the\n #'    `dplyr` methods on `Dataset`.\n-#' * `projection`: A character vector of column names to select\n+#' * `projection`: A character vector of column names to select columns\n\nReview comment:\n       As it turns out, `projection` can be a named list of Expressions, just not when dataset is an arrow_dplyr_query (and thus already contains a named list of Expressions)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T15:24:19.318+0000",
                    "updated": "2021-08-31T15:24:19.318+0000",
                    "started": "2021-08-31T15:24:19.318+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644434",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/644543",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r699546925\n\n\n\n##########\nFile path: r/R/dplyr-filter.R\n##########\n@@ -71,8 +71,15 @@ filter.Dataset <- filter.ArrowTabular <- filter.arrow_dplyr_query\n \n set_filters <- function(.data, expressions) {\n   if (length(expressions)) {\n-    # expressions is a list of Expressions. AND them together and set them on .data\n-    new_filter <- Reduce(\"&\", expressions)\n+    if (is.list(expressions)) {\n+      # expressions is a list of Expressions. AND them together and set them on .data\n+      new_filter <- Reduce(\"&\", expressions)\n+    } else {\n+      # expressions should be an expression or list of expressions already\n+      stopifnot(is_list_of(expressions, \"Expression\") | inherits(expressions, \"Expression\"))\n+      new_filter <- expressions\n+    }\n\nReview comment:\n       Yeah, this is a holdover from a previous construction where this was outside of the if. Lemme move this around like you suggest.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T17:46:58.448+0000",
                    "updated": "2021-08-31T17:46:58.448+0000",
                    "started": "2021-08-31T17:46:58.447+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644543",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/644599",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane closed pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T19:54:53.928+0000",
                    "updated": "2021-08-31T19:54:53.928+0000",
                    "started": "2021-08-31T19:54:53.927+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644599",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/645085",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r699546925\n\n\n\n##########\nFile path: r/R/dplyr-filter.R\n##########\n@@ -71,8 +71,15 @@ filter.Dataset <- filter.ArrowTabular <- filter.arrow_dplyr_query\n \n set_filters <- function(.data, expressions) {\n   if (length(expressions)) {\n-    # expressions is a list of Expressions. AND them together and set them on .data\n-    new_filter <- Reduce(\"&\", expressions)\n+    if (is.list(expressions)) {\n+      # expressions is a list of Expressions. AND them together and set them on .data\n+      new_filter <- Reduce(\"&\", expressions)\n+    } else {\n+      # expressions should be an expression or list of expressions already\n+      stopifnot(is_list_of(expressions, \"Expression\") | inherits(expressions, \"Expression\"))\n+      new_filter <- expressions\n+    }\n\nReview comment:\n       Yeah, this is a holdover from a previous construction where this was outside of the if. Lemme move this around like you suggest.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T09:35:25.983+0000",
                    "updated": "2021-09-01T09:35:25.983+0000",
                    "started": "2021-09-01T09:35:25.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645085",
                    "issueId": "13393549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/worklog/645156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #10888:\nURL: https://github.com/apache/arrow/pull/10888#discussion_r699317536\n\n\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -85,9 +85,28 @@ Scanner$create <- function(dataset,\n       # To handle mutate() on Table/RecordBatch, we need to collect(as_data_frame=FALSE) now\n       dataset <- dplyr::collect(dataset, as_data_frame = FALSE)\n     }\n+\n+    proj <- c(dataset$selected_columns, dataset$temp_columns)\n+\n+    if (!is.null(projection)) {\n+      if (is.character(projection)) {\n+        proj <- proj[projection]\n+      } else {\n+        # TODO: ARROW-13802 accepting lists of Expressions as a projectoin\n\nReview comment:\n       ```suggestion\r\n           # TODO: ARROW-13802 accepting lists of Expressions as a projection\r\n   ```\n\n##########\nFile path: r/R/dataset-scan.R\n##########\n@@ -28,7 +28,7 @@\n #'\n #' * `dataset`: A `Dataset` or `arrow_dplyr_query` object, as returned by the\n #'    `dplyr` methods on `Dataset`.\n-#' * `projection`: A character vector of column names to select\n+#' * `projection`: A character vector of column names to select columns\n\nReview comment:\n       As it turns out, `projection` can be a named list of Expressions, just not when dataset is an arrow_dplyr_query (and thus already contains a named list of Expressions)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T09:44:23.270+0000",
                    "updated": "2021-09-01T09:44:23.270+0000",
                    "started": "2021-09-01T09:44:23.270+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645156",
                    "issueId": "13393549"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2d08fd36[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4895b93e[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@390e92a7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5cb780f1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6595950b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1fcffd41[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5219dfb5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@32c97d0f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bbd9b90[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1b785453[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@780c4fe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7e58e004[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Aug 31 19:54:49 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-31T19:54:49.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13560/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-08-04T18:05:50.000+0000",
        "updated": "2021-09-01T09:46:33.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently, when calling {{Scanner$create()}} on an {{arrow_dplyr_query}} the `projection` and `filter` arguments are ignored silently (since the dplyr query filters should be applied). \r\n\r\nThis is helpful for predicate pushdowns \r\n\r\nOne proposal is at https://gist.github.com/hannesmuehleisen/61d655bb345e0af374d10ca303894eef",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Allow Scanner$create() to accept filter / project even with arrow_dplyr_querys",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393549/comment/17407623",
                    "id": "17407623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10888\n[https://github.com/apache/arrow/pull/10888]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-08-31T19:54:49.934+0000",
                    "updated": "2021-08-31T19:54:49.934+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tm6w:",
        "customfield_12314139": null
    }
}