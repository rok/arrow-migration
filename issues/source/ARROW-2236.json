{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13141624",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624",
    "key": "ARROW-2236",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342821",
                "id": "12342821",
                "description": "",
                "name": "JS-0.3.1",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-16"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
            "name": "bhulette",
            "key": "bhulette",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Brian Hulette",
            "active": true,
            "timeZone": "America/Vancouver"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2236/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3e1f8eba[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5697239f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@403c5994[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2fd801d7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@697fd9dc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@48a3443c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6af14445[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5c83675[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@126ebe29[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@40be9afc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@200d2dc2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6432cc28[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 09 16:05:46 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-09T15:32:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2236/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-28T20:05:42.000+0000",
        "updated": "2018-03-09T16:05:46.000+0000",
        "timeoriginalestimate": null,
        "description": "Right now {{arrow.predicate}} only supports ==, >=, <=, &&, and ||\r\nWe should also support !=, <, > at the very least",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Add more complete set of predicates",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16380992",
                    "id": "16380992",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit opened a new pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683\n \n \n   Adds not, gt, lt, and neq\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-28T20:25:44.271+0000",
                    "updated": "2018-02-28T20:25:44.271+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16381144",
                    "id": "16381144",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r171409046\n \n \n\n ##########\n File path: js/test/unit/vector-tests.ts\n ##########\n @@ -18,7 +18,7 @@\n import { TextEncoder } from 'text-encoding-utf-8';\n import Arrow from '../Arrow';\n import { type, TypedArray, TypedArrayConstructor, Vector } from '../../src/Arrow';\n-import { packBools } from '../../src/util/bit'\n \n Review comment:\n   @TheNeuralBit ah, do we not export this util in the main package? if so, we can. that way we'll test the compiled code. On line 20 I think we should also do `const { type, Vector } = Arrow;`, and only import the interfaces from the source dir.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-28T22:38:44.371+0000",
                    "updated": "2018-02-28T22:38:44.371+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16382417",
                    "id": "16382417",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r171646498\n \n \n\n ##########\n File path: js/test/unit/vector-tests.ts\n ##########\n @@ -18,7 +18,7 @@\n import { TextEncoder } from 'text-encoding-utf-8';\n import Arrow from '../Arrow';\n import { type, TypedArray, TypedArrayConstructor, Vector } from '../../src/Arrow';\n-import { packBools } from '../../src/util/bit'\n \n Review comment:\n   Yeah good call. My syntax checker, [tsuquyomi](https://github.com/Quramy/tsuquyomi), complains about the `const { type, Vector } = Arrow;` approach so I shied away from it, but the tests run just fine.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-01T18:17:01.112+0000",
                    "updated": "2018-03-01T18:17:01.112+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388420",
                    "id": "16388420",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#issuecomment-370904866\n \n \n   When this is good to go / merged I can cut the new RC, let me know\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T19:47:39.065+0000",
                    "updated": "2018-03-06T19:47:39.065+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388430",
                    "id": "16388430",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172639828\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   Is there any prior art for naming these methods in JavaScript? (in Python we have lt, le, gt, ge, eq, ne)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T19:54:02.321+0000",
                    "updated": "2018-03-06T19:54:02.321+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388435",
                    "id": "16388435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172641811\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   Not that I'm aware of. We (CCRi) chose them arbitrarily when first implementing this. I wouldn't be opposed to renaming to those two-letter names to be more consistent and concise.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T20:01:08.986+0000",
                    "updated": "2018-03-06T20:01:08.986+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388455",
                    "id": "16388455",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172645919\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   @trxcllnt do you have an opinion?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T20:16:03.901+0000",
                    "updated": "2018-03-06T20:16:03.901+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388519",
                    "id": "16388519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172656147\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   @wesm I'd be partial to the two-letter names if it means we're more aligned with other data-science tools. But I'm also not the primary consumer of these APIs yet (we're focused on GPU dataframe ops), so I feel my vote should count less than @TheNeuralBit's here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T20:54:17.159+0000",
                    "updated": "2018-03-06T20:54:17.159+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388522",
                    "id": "16388522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "trxcllnt commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172656147\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   @wesm I'd be partial to the two-letter names if it means we're more aligned with other data-science tools. But I'm also not the primary consumer of these APIs yet (we're focused on GPU dataframe ops), so I'll defer to @TheNeuralBit here.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T20:54:42.725+0000",
                    "updated": "2018-03-06T20:54:42.725+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16388639",
                    "id": "16388639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on a change in pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#discussion_r172683740\n \n \n\n ##########\n File path: js/src/Arrow.externs.js\n ##########\n @@ -79,6 +79,12 @@ Value.prototype.gteq;\n Value.prototype.lteq;\n \n Review comment:\n   ok I'll go ahead and update the names here. Thanks for the suggestion Wes, it's good to make these changes now.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-06T22:33:27.387+0000",
                    "updated": "2018-03-06T22:33:27.387+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16393009",
                    "id": "16393009",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/js/src/Arrow.externs.js b/js/src/Arrow.externs.js\nindex cf4db9134..be89be152 100644\n--- a/js/src/Arrow.externs.js\n+++ b/js/src/Arrow.externs.js\n@@ -74,17 +74,24 @@ var custom = function () {};\n \n var Value = function() {};\n /** @type {?} */\n-Value.prototype.gteq;\n+Value.prototype.ge;\n /** @type {?} */\n-Value.prototype.lteq;\n+Value.prototype.le;\n /** @type {?} */\n Value.prototype.eq;\n+/** @type {?} */\n+Value.prototype.lt;\n+/** @type {?} */\n+Value.prototype.gt;\n+/** @type {?} */\n+Value.prototype.ne;\n \n var Col = function() {};\n /** @type {?} */\n Col.prototype.bind;\n var Or = function() {};\n var And = function() {};\n+var Not = function() {};\n var GTeq = function () {};\n /** @type {?} */\n GTeq.prototype.and;\n@@ -108,6 +115,8 @@ Predicate.prototype.and;\n /** @type {?} */\n Predicate.prototype.or;\n /** @type {?} */\n+Predicate.prototype.not;\n+/** @type {?} */\n Predicate.prototype.ands;\n var Literal = function() {};\n \n@@ -209,6 +218,8 @@ Int128.prototype.plus\n /** @type {?} */\n Int128.prototype.hex\n \n+var packBools = function() {};\n+\n var Type = function() {};\n /** @type {?} */\n Type.NONE = function() {};\ndiff --git a/js/src/Arrow.ts b/js/src/Arrow.ts\nindex 4a0a2ac6d..23e8b9983 100644\n--- a/js/src/Arrow.ts\n+++ b/js/src/Arrow.ts\n@@ -18,7 +18,8 @@\n import * as type_ from './type';\n import * as data_ from './data';\n import * as vector_ from './vector';\n-import * as util_ from './util/int';\n+import * as util_int_ from './util/int';\n+import * as util_bit_ from './util/bit';\n import * as visitor_ from './visitor';\n import * as view_ from './vector/view';\n import * as predicate_ from './predicate';\n@@ -40,9 +41,10 @@ export { Table, DataFrame, NextFunc, BindFunc, CountByResult };\n export { Field, Schema, RecordBatch, Vector, Type };\n \n export namespace util {\n-    export import Uint64 = util_.Uint64;\n-    export import Int64 = util_.Int64;\n-    export import Int128 = util_.Int128;\n+    export import Uint64 = util_int_.Uint64;\n+    export import Int64 = util_int_.Int64;\n+    export import Int128 = util_int_.Int128;\n+    export import packBools = util_bit_.packBools;\n }\n \n export namespace data {\n@@ -173,6 +175,7 @@ export namespace predicate {\n     export import Or = predicate_.Or;\n     export import Col = predicate_.Col;\n     export import And = predicate_.And;\n+    export import Not = predicate_.Not;\n     export import GTeq = predicate_.GTeq;\n     export import LTeq = predicate_.LTeq;\n     export import Value = predicate_.Value;\n@@ -222,16 +225,16 @@ Table['empty'] = Table.empty;\n Vector['create'] = Vector.create;\n RecordBatch['from'] = RecordBatch.from;\n \n-util_.Uint64['add'] = util_.Uint64.add;\n-util_.Uint64['multiply'] = util_.Uint64.multiply;\n+util_int_.Uint64['add'] = util_int_.Uint64.add;\n+util_int_.Uint64['multiply'] = util_int_.Uint64.multiply;\n \n-util_.Int64['add'] = util_.Int64.add;\n-util_.Int64['multiply'] = util_.Int64.multiply;\n-util_.Int64['fromString'] = util_.Int64.fromString;\n+util_int_.Int64['add'] = util_int_.Int64.add;\n+util_int_.Int64['multiply'] = util_int_.Int64.multiply;\n+util_int_.Int64['fromString'] = util_int_.Int64.fromString;\n \n-util_.Int128['add'] = util_.Int128.add;\n-util_.Int128['multiply'] = util_.Int128.multiply;\n-util_.Int128['fromString'] = util_.Int128.fromString;\n+util_int_.Int128['add'] = util_int_.Int128.add;\n+util_int_.Int128['multiply'] = util_int_.Int128.multiply;\n+util_int_.Int128['fromString'] = util_int_.Int128.fromString;\n \n data_.ChunkedData['computeOffsets'] = data_.ChunkedData.computeOffsets;\n \ndiff --git a/js/src/predicate.ts b/js/src/predicate.ts\nindex b177b4fa7..bff393863 100644\n--- a/js/src/predicate.ts\n+++ b/js/src/predicate.ts\n@@ -26,14 +26,23 @@ export abstract class Value<T> {\n         if (!(other instanceof Value)) { other = new Literal(other); }\n         return new Equals(this, other);\n     }\n-    lteq(other: Value<T> | T): Predicate {\n+    le(other: Value<T> | T): Predicate {\n         if (!(other instanceof Value)) { other = new Literal(other); }\n         return new LTeq(this, other);\n     }\n-    gteq(other: Value<T> | T): Predicate {\n+    ge(other: Value<T> | T): Predicate {\n         if (!(other instanceof Value)) { other = new Literal(other); }\n         return new GTeq(this, other);\n     }\n+    lt(other: Value<T> | T): Predicate {\n+        return new Not(this.ge(other));\n+    }\n+    gt(other: Value<T> | T): Predicate {\n+        return new Not(this.le(other));\n+    }\n+    ne(other: Value<T> | T): Predicate {\n+        return new Not(this.eq(other));\n+    }\n }\n \n export class Literal<T= any> extends Value<T> {\n@@ -70,6 +79,7 @@ export abstract class Predicate {\n     abstract bind(batch: RecordBatch): PredicateFunc;\n     and(expr: Predicate): Predicate { return new And(this, expr); }\n     or(expr: Predicate): Predicate { return new Or(this, expr); }\n+    not(): Predicate { return new Not(this); }\n     ands(): Predicate[] { return [this]; }\n }\n \n@@ -222,6 +232,17 @@ export class GTeq extends ComparisonPredicate {\n     }\n }\n \n+export class Not extends Predicate {\n+    constructor(public readonly child: Predicate) {\n+        super();\n+    }\n+\n+    bind(batch: RecordBatch) {\n+        const func = this.child.bind(batch);\n+        return (idx: number, batch: RecordBatch) => !func(idx, batch);\n+    }\n+}\n+\n export class CustomPredicate extends Predicate {\n     constructor(private next: PredicateFunc, private bind_: (batch: RecordBatch) => void) {\n         super();\ndiff --git a/js/test/unit/table-tests.ts b/js/test/unit/table-tests.ts\nindex 8a433815d..37bbf6242 100644\n--- a/js/test/unit/table-tests.ts\n+++ b/js/test/unit/table-tests.ts\n@@ -327,27 +327,39 @@ describe(`Table`, () => {\n             const filter_tests = [\n                 {\n                     name:     `filter on f32 >= 0`,\n-                    filtered: table.filter(col('f32').gteq(0)),\n+                    filtered: table.filter(col('f32').ge(0)),\n                     expected: values.filter((row) => row[F32] >= 0)\n                 }, {\n                     name:     `filter on 0 <= f32`,\n-                    filtered: table.filter(lit(0).lteq(col('f32'))),\n+                    filtered: table.filter(lit(0).le(col('f32'))),\n                     expected: values.filter((row) => 0 <= row[F32])\n                 }, {\n                     name:     `filter on i32 <= 0`,\n-                    filtered: table.filter(col('i32').lteq(0)),\n+                    filtered: table.filter(col('i32').le(0)),\n                     expected: values.filter((row) => row[I32] <= 0)\n                 }, {\n                     name:     `filter on 0 >= i32`,\n-                    filtered: table.filter(lit(0).gteq(col('i32'))),\n+                    filtered: table.filter(lit(0).ge(col('i32'))),\n                     expected: values.filter((row) => 0 >= row[I32])\n+                }, {\n+                    name:     `filter on f32 < 0`,\n+                    filtered: table.filter(col('f32').lt(0)),\n+                    expected: values.filter((row) => row[F32] < 0)\n+                }, {\n+                    name:     `filter on i32 > 1 (empty)`,\n+                    filtered: table.filter(col('i32').gt(0)),\n+                    expected: values.filter((row) => row[I32] > 0)\n                 }, {\n                     name:     `filter on f32 <= -.25 || f3 >= .25`,\n-                    filtered: table.filter(col('f32').lteq(-.25).or(col('f32').gteq(.25))),\n+                    filtered: table.filter(col('f32').le(-.25).or(col('f32').ge(.25))),\n                     expected: values.filter((row) => row[F32] <= -.25 || row[F32] >= .25)\n+                }, {\n+                    name:     `filter on !(f32 <= -.25 || f3 >= .25) (not)`,\n+                    filtered: table.filter(col('f32').le(-.25).or(col('f32').ge(.25)).not()),\n+                    expected: values.filter((row) => !(row[F32] <= -.25 || row[F32] >= .25))\n                 }, {\n                     name:     `filter method combines predicates (f32 >= 0 && i32 <= 0)`,\n-                    filtered: table.filter(col('i32').lteq(0)).filter(col('f32').gteq(0)),\n+                    filtered: table.filter(col('i32').le(0)).filter(col('f32').ge(0)),\n                     expected: values.filter((row) => row[I32] <= 0 && row[F32] >= 0)\n                 }, {\n                     name:     `filter on dictionary == 'a'`,\n@@ -357,13 +369,17 @@ describe(`Table`, () => {\n                     name:     `filter on 'a' == dictionary (commutativity)`,\n                     filtered: table.filter(lit('a').eq(col('dictionary'))),\n                     expected: values.filter((row) => row[DICT] === 'a')\n+                }, {\n+                    name:     `filter on dictionary != 'b'`,\n+                    filtered: table.filter(col('dictionary').ne('b')),\n+                    expected: values.filter((row) => row[DICT] !== 'b')\n                 }, {\n                     name:     `filter on f32 >= i32`,\n-                    filtered: table.filter(col('f32').gteq(col('i32'))),\n+                    filtered: table.filter(col('f32').ge(col('i32'))),\n                     expected: values.filter((row) => row[F32] >= row[I32])\n                 }, {\n                     name:     `filter on f32 <= i32`,\n-                    filtered: table.filter(col('f32').lteq(col('i32'))),\n+                    filtered: table.filter(col('f32').le(col('i32'))),\n                     expected: values.filter((row) => row[F32] <= row[I32])\n                 }, {\n                     name:     `filter on f32*i32 > 0 (custom predicate)`,\n@@ -455,17 +471,17 @@ describe(`Table`, () => {\n                 expect(selected.toString()).toEqual(expected);\n             });\n             test(`table.filter(..).count() on always false predicates returns 0`, () => {\n-                expect(table.filter(col('i32').gteq(100)).count()).toEqual(0);\n+                expect(table.filter(col('i32').ge(100)).count()).toEqual(0);\n                 expect(table.filter(col('dictionary').eq('z')).count()).toEqual(0);\n             });\n             describe(`lit-lit comparison`, () => {\n                 test(`always-false count() returns 0`, () => {\n                     expect(table.filter(lit('abc').eq('def')).count()).toEqual(0);\n-                    expect(table.filter(lit(0).gteq(1)).count()).toEqual(0);\n+                    expect(table.filter(lit(0).ge(1)).count()).toEqual(0);\n                 });\n                 test(`always-true count() returns length`, () => {\n                     expect(table.filter(lit('abc').eq('abc')).count()).toEqual(table.length);\n-                    expect(table.filter(lit(-100).lteq(0)).count()).toEqual(table.length);\n+                    expect(table.filter(lit(-100).le(0)).count()).toEqual(table.length);\n                 });\n             });\n             describe(`col-col comparison`, () => {\ndiff --git a/js/test/unit/vector-tests.ts b/js/test/unit/vector-tests.ts\nindex 3eb3fbe01..d25e0e9fd 100644\n--- a/js/test/unit/vector-tests.ts\n+++ b/js/test/unit/vector-tests.ts\n@@ -17,13 +17,13 @@\n \n import { TextEncoder } from 'text-encoding-utf-8';\n import Arrow from '../Arrow';\n-import { type, TypedArray, TypedArrayConstructor, Vector } from '../../src/Arrow';\n-import { packBools } from '../../src/util/bit'\n+import { TypedArray, TypedArrayConstructor } from '../../src/Arrow';\n \n const utf8Encoder = new TextEncoder('utf-8');\n \n+const { packBools } = Arrow.util;\n const { BoolData, FlatData, FlatListData, DictionaryData } = Arrow.data;\n-const { IntVector, FloatVector, BoolVector, Utf8Vector, DictionaryVector } = Arrow.vector;\n+const { Vector, IntVector, FloatVector, BoolVector, Utf8Vector, DictionaryVector } = Arrow.vector;\n const {\n     Dictionary, Utf8, Bool,\n     Float16, Float32, Float64,\n@@ -143,7 +143,7 @@ describe('Float16Vector', () => {\n     const values = concatTyped(Uint16Array, ...bytes);\n     const vector = bytes\n         .map((b) => new Uint16Array(b.buffer))\n-        .map((b) => new FloatVector<type.Float16>(new FlatData(new Float16(), b.length, null, b)))\n+        .map((b) => new FloatVector<Float16>(new FlatData(new Float16(), b.length, null, b)))\n         .reduce((v: any, v2) => v.concat(v2));\n     const n = values.length;\n     const clamp = (x: number) => (x -  32767) / 32767;\n@@ -336,7 +336,7 @@ describe(`DictionaryVector`, () => {\n \n         describe(`sliced`, () => {\n             basicVectorTests(vector.slice(10, 20), values.slice(10,20), extras);\n-        })\n+        });\n     });\n \n     describe(`index with nullCount > 0`, () => {\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T15:32:47.090+0000",
                    "updated": "2018-03-09T15:32:47.090+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16393010",
                    "id": "16393010",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1683\n[https://github.com/apache/arrow/pull/1683]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-09T15:32:47.927+0000",
                    "updated": "2018-03-09T15:32:47.927+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16393011",
                    "id": "16393011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#issuecomment-371846331\n \n \n   I'll get going on a 0.3.1 RC\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T15:33:04.515+0000",
                    "updated": "2018-03-09T15:33:04.515+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16393044",
                    "id": "16393044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "TheNeuralBit commented on issue #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#issuecomment-371852964\n \n \n   Thanks Wes! Anything I can do to help out with the release process?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T15:54:40.556+0000",
                    "updated": "2018-03-09T15:54:40.556+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13141624/comment/16393062",
                    "id": "16393062",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1683: ARROW-2236: [JS] Add more complete set of predicates\nURL: https://github.com/apache/arrow/pull/1683#issuecomment-371856273\n \n \n   Nope, it should be pretty straightforward. It might be nice to have the release script generate an e-mail template like https://github.com/apache/parquet-cpp/blob/master/dev/release/release-candidate#L257\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-09T16:05:46.013+0000",
                    "updated": "2018-03-09T16:05:46.013+0000"
                }
            ],
            "maxResults": 15,
            "total": 15,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qpqn:",
        "customfield_12314139": null
    }
}