{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13116820",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820",
    "key": "ARROW-1778",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1778/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3d013a11[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42fbf934[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48453733[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@55ea4556[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6fc4851a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@11c21b8d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@70df5a29[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@77186191[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cbfd63d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3d20bc54[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37a4b7cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3044c47[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Nov 20 14:27:18 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-11-20T14:27:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1778/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2017-11-07T22:25:41.000+0000",
        "updated": "2017-11-20T14:27:18.000+0000",
        "timeoriginalestimate": null,
        "description": "We currently link parquet-cpp dynamically in the {{manylinux1}}\u00a0wheels. This also makes us the authority on the distribution of {{parquet-cpp}} inside of the wheel-based ecosystem. Instead of doing this, we should statically, privately link {{parquet-cpp}} inside of the wheels.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Link parquet-cpp statically, privately in manylinux1 wheels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16243029",
                    "id": "16243029",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "[~wesmckinn] any strong opinion on this? Otherwise I would go ahead and change the linking.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2017-11-07T22:26:17.813+0000",
                    "updated": "2017-11-07T22:26:17.813+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16244561",
                    "id": "16244561",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I would be fine with this, however will it require linking all the transitive dependencies (including libarrow and its dependencies)?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-08T19:08:00.478+0000",
                    "updated": "2017-11-08T19:08:00.478+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16244574",
                    "id": "16244574",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "No, this should only mean that {{_parquet.pyx}} will include the {{parquet-cpp}} symbols, it would still dynamically link against {{libarrow}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2017-11-08T19:16:08.760+0000",
                    "updated": "2017-11-08T19:16:08.760+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16244578",
                    "id": "16244578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Got it. Sounds good to me, then",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-08T19:17:46.594+0000",
                    "updated": "2017-11-08T19:17:46.594+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16258404",
                    "id": "16258404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy opened a new pull request #1331: ARROW-1778: [Python] Link parquet-cpp statically, privately in manylinux1 wheels\nURL: https://github.com/apache/arrow/pull/1331\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-19T09:27:48.839+0000",
                    "updated": "2017-11-19T09:27:48.839+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16259286",
                    "id": "16259286",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1331: ARROW-1778: [Python] Link parquet-cpp statically, privately in manylinux1 wheels\nURL: https://github.com/apache/arrow/pull/1331\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/cmake_modules/FindThrift.cmake b/cpp/cmake_modules/FindThrift.cmake\nnew file mode 100644\nindex 000000000..25f50825c\n--- /dev/null\n+++ b/cpp/cmake_modules/FindThrift.cmake\n@@ -0,0 +1,102 @@\n+# Copyright 2012 Cloudera Inc.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+\n+# - Find Thrift (a cross platform RPC lib/tool)\n+#\n+# Variables used by this module, they can change the default behaviour and need\n+# to be set before calling find_package:\n+#\n+#  Thrift_HOME - When set, this path is inspected instead of standard library\n+#                locations as the root of the Thrift installation.\n+#                The environment variable THRIFT_HOME overrides this variable.\n+#\n+# This module defines\n+#  THRIFT_VERSION, version string of ant if found\n+#  THRIFT_INCLUDE_DIR, where to find THRIFT headers\n+#  THRIFT_CONTRIB_DIR, where contrib thrift files (e.g. fb303.thrift) are installed\n+#  THRIFT_STATIC_LIB, THRIFT static library\n+#  THRIFT_FOUND, If false, do not try to use ant\n+\n+# prefer the thrift version supplied in THRIFT_HOME\n+if( NOT \"${THRIFT_HOME}\" STREQUAL \"\")\n+    file( TO_CMAKE_PATH \"${THRIFT_HOME}\" _native_path )\n+    list( APPEND _thrift_roots ${_native_path} )\n+elseif ( Thrift_HOME )\n+    list( APPEND _thrift_roots ${Thrift_HOME} )\n+endif()\n+\n+message(STATUS \"THRIFT_HOME: ${THRIFT_HOME}\")\n+find_path(THRIFT_INCLUDE_DIR thrift/Thrift.h HINTS\n+  ${_thrift_roots}\n+  NO_DEFAULT_PATH\n+  PATH_SUFFIXES \"include\"\n+)\n+\n+find_path(THRIFT_CONTRIB_DIR share/fb303/if/fb303.thrift HINTS\n+  ${_thrift_roots}\n+  NO_DEFAULT_PATH\n+)\n+\n+if (MSVC AND NOT THRIFT_MSVC_STATIC_LIB_SUFFIX)\n+  set(THRIFT_MSVC_STATIC_LIB_SUFFIX md)\n+endif()\n+\n+find_library(THRIFT_STATIC_LIB NAMES\n+  ${CMAKE_STATIC_LIBRARY_PREFIX}thrift${THRIFT_MSVC_STATIC_LIB_SUFFIX}${CMAKE_STATIC_LIBRARY_SUFFIX}\n+  HINTS ${_thrift_roots}\n+  NO_DEFAULT_PATH\n+  PATH_SUFFIXES \"lib/${CMAKE_LIBRARY_ARCHITECTURE}\" \"lib\"\n+)\n+\n+find_program(THRIFT_COMPILER thrift HINTS\n+  ${_thrift_roots}\n+  NO_DEFAULT_PATH\n+  PATH_SUFFIXES \"bin\"\n+)\n+\n+if (THRIFT_STATIC_LIB)\n+  set(THRIFT_FOUND TRUE)\n+  exec_program(${THRIFT_COMPILER}\n+    ARGS -version OUTPUT_VARIABLE THRIFT_VERSION RETURN_VALUE THRIFT_RETURN)\n+else ()\n+  set(THRIFT_FOUND FALSE)\n+endif ()\n+\n+if (THRIFT_FOUND)\n+  if (NOT Thrift_FIND_QUIETLY)\n+    message(STATUS \"Thrift version: ${THRIFT_VERSION}\")\n+  endif ()\n+else ()\n+  if (NOT Thrift_FIND_QUIETLY)\n+    set(THRIFT_ERR_MSG \"Thrift compiler/libraries NOT found: ${THRIFT_RETURN}\")\n+    set(THRIFT_ERR_MSG \"${THRIFT_ERR_MSG} (${THRIFT_INCLUDE_DIR}, ${THRIFT_STATIC_LIB}).\")\n+    if ( _thrift_roots )\n+      set(THRIFT_ERR_MSG \"${THRIFT_ERR_MSG} Looked in ${_thrift_roots}.\")\n+    else ()\n+      set(THRIFT_ERR_MSG \"${THRIFT_ERR_MSG} Looked in system search paths.\")\n+    endif ()\n+    if ( Thrift_FIND_REQUIRED )\n+      message(FATAL_ERROR \"${THRIFT_ERR_MSG}\")\n+    else ()\n+      message(STATUS \"${THRIFT_ERR_MSG}\")\n+    endif ()\n+  endif ()\n+endif ()\n+\n+\n+mark_as_advanced(\n+  THRIFT_STATIC_LIB\n+  THRIFT_COMPILER\n+  THRIFT_INCLUDE_DIR\n+)\ndiff --git a/python/CMakeLists.txt b/python/CMakeLists.txt\nindex 8c7348298..00a4ee687 100644\n--- a/python/CMakeLists.txt\n+++ b/python/CMakeLists.txt\n@@ -61,6 +61,9 @@ if(\"${CMAKE_SOURCE_DIR}\" STREQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\")\n   option(PYARROW_BUILD_PARQUET\n     \"Build the PyArrow Parquet integration\"\n     OFF)\n+  option(PYARROW_PARQUET_USE_SHARED\n+    \"Rely on parquet shared libraries where relevant\"\n+    ON)\n   option(PYARROW_BUILD_PLASMA\n     \"Build the PyArrow Plasma integration\"\n     OFF)\n@@ -282,24 +285,41 @@ if (PYARROW_BUILD_PARQUET)\n   endif()\n   include_directories(SYSTEM ${PARQUET_INCLUDE_DIR})\n \n-  if (PYARROW_BUNDLE_ARROW_CPP)\n-    bundle_arrow_lib(PARQUET_SHARED_LIB\n-      ABI_VERSION ${PARQUET_ABI_VERSION}\n-      SO_VERSION ${PARQUET_SO_VERSION})\n+  if (PYARROW_PARQUET_USE_SHARED)\n+    if (PYARROW_BUNDLE_ARROW_CPP)\n+      bundle_arrow_lib(PARQUET_SHARED_LIB\n+        ABI_VERSION ${PARQUET_ABI_VERSION}\n+        SO_VERSION ${PARQUET_SO_VERSION})\n+      if (MSVC)\n+        bundle_arrow_implib(PARQUET_SHARED_IMP_LIB)\n+      endif()\n+    endif()\n     if (MSVC)\n-      bundle_arrow_implib(PARQUET_SHARED_IMP_LIB)\n+      ADD_THIRDPARTY_LIB(parquet\n+        SHARED_LIB ${PARQUET_SHARED_IMP_LIB})\n+    else()\n+      ADD_THIRDPARTY_LIB(parquet\n+        SHARED_LIB ${PARQUET_SHARED_LIB})\n     endif()\n-  endif()\n-  if (MSVC)\n-    ADD_THIRDPARTY_LIB(parquet\n-      SHARED_LIB ${PARQUET_SHARED_IMP_LIB})\n+    set(LINK_LIBS\n+      ${LINK_LIBS}\n+      parquet_shared)\n   else()\n+    find_package(Thrift)\n+    set(Boost_USE_STATIC_LIBS ON)\n+    find_package(Boost COMPONENTS regex REQUIRED)\n+    ADD_THIRDPARTY_LIB(boost_regex\n+      STATIC_LIB ${Boost_REGEX_LIBRARY_RELEASE})\n     ADD_THIRDPARTY_LIB(parquet\n-      SHARED_LIB ${PARQUET_SHARED_LIB})\n+      STATIC_LIB ${PARQUET_STATIC_LIB})\n+    ADD_THIRDPARTY_LIB(thrift\n+      STATIC_LIB ${THRIFT_STATIC_LIB})\n+    set(LINK_LIBS\n+      ${LINK_LIBS}\n+      parquet_static\n+      thrift_static\n+      boost_regex_static)\n   endif()\n-  set(LINK_LIBS\n-    ${LINK_LIBS}\n-    parquet_shared)\n   set(CYTHON_EXTENSIONS\n     ${CYTHON_EXTENSIONS}\n     _parquet)\ndiff --git a/python/manylinux1/Dockerfile-x86_64 b/python/manylinux1/Dockerfile-x86_64\nindex 69d8d3dbf..919a32be7 100644\n--- a/python/manylinux1/Dockerfile-x86_64\n+++ b/python/manylinux1/Dockerfile-x86_64\n@@ -29,5 +29,5 @@ RUN /check_arrow_visibility.sh\n WORKDIR /\n RUN git clone https://github.com/apache/parquet-cpp.git\n WORKDIR /parquet-cpp\n-RUN ARROW_HOME=/arrow-dist cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DPARQUET_BUILD_TESTS=OFF -DPARQUET_BOOST_USE_SHARED=OFF -GNinja .\n+RUN ARROW_HOME=/arrow-dist cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/arrow-dist -DPARQUET_BUILD_TESTS=OFF -DPARQUET_BUILD_SHARED=OFF -DPARQUET_BUILD_STATIC=ON -DPARQUET_BOOST_USE_SHARED=OFF -GNinja .\n RUN ninja install\ndiff --git a/python/manylinux1/build_arrow.sh b/python/manylinux1/build_arrow.sh\nindex 074bd0056..ced4556e9 100755\n--- a/python/manylinux1/build_arrow.sh\n+++ b/python/manylinux1/build_arrow.sh\n@@ -40,11 +40,11 @@ cd /arrow/python\n # PyArrow build configuration\n export PYARROW_BUILD_TYPE='release'\n export PYARROW_WITH_PARQUET=1\n+export PYARROW_WITH_STATIC_PARQUET=1\n export PYARROW_WITH_PLASMA=1\n export PYARROW_BUNDLE_ARROW_CPP=1\n-# Need as otherwise arrow_io is sometimes not linked\n-export LDFLAGS=\"-Wl,--no-as-needed\"\n export PKG_CONFIG_PATH=/arrow-dist/lib64/pkgconfig\n+export PYARROW_CMAKE_OPTIONS='-DTHRIFT_HOME=/usr'\n # Ensure the target directory exists\n mkdir -p /io/dist\n \n@@ -65,7 +65,7 @@ for PYTHON in ${PYTHON_VERSIONS}; do\n     # Clear output directory\n     rm -rf dist/\n     echo \"=== (${PYTHON}) Building wheel ===\"\n-    PATH=\"$PATH:$(cpython_path $PYTHON)/bin\" $PYTHON_INTERPRETER setup.py build_ext --inplace --with-parquet --bundle-arrow-cpp\n+    PATH=\"$PATH:$(cpython_path $PYTHON)/bin\" $PYTHON_INTERPRETER setup.py build_ext --inplace --with-parquet --with-static-parquet --bundle-arrow-cpp\n     PATH=\"$PATH:$(cpython_path $PYTHON)/bin\" $PYTHON_INTERPRETER setup.py bdist_wheel\n \n     echo \"=== (${PYTHON}) Test the existence of optional modules ===\"\ndiff --git a/python/setup.py b/python/setup.py\nindex ccab8fb65..2270cf79c 100644\n--- a/python/setup.py\n+++ b/python/setup.py\n@@ -82,6 +82,7 @@ def run(self):\n     user_options = ([('extra-cmake-args=', None, 'extra arguments for CMake'),\n                      ('build-type=', None, 'build type (debug or release)'),\n                      ('with-parquet', None, 'build the Parquet extension'),\n+                     ('with-static-parquet', None, 'link parquet statically'),\n                      ('with-plasma', None, 'build the Plasma extension'),\n                      ('bundle-arrow-cpp', None,\n                       'bundle the Arrow C++ libraries')] +\n@@ -102,6 +103,8 @@ def initialize_options(self):\n \n         self.with_parquet = strtobool(\n             os.environ.get('PYARROW_WITH_PARQUET', '0'))\n+        self.with_static_parquet = strtobool(\n+            os.environ.get('PYARROW_WITH_STATIC_PARQUET', '0'))\n         self.with_plasma = strtobool(\n             os.environ.get('PYARROW_WITH_PLASMA', '0'))\n         self.bundle_arrow_cpp = strtobool(\n@@ -144,6 +147,8 @@ def _run_cmake(self):\n \n         if self.with_parquet:\n             cmake_options.append('-DPYARROW_BUILD_PARQUET=on')\n+        if self.with_static_parquet:\n+            cmake_options.append('-DPYARROW_PARQUET_USE_SHARED=off')\n \n         if self.with_plasma:\n             cmake_options.append('-DPYARROW_BUILD_PLASMA=on')\n@@ -225,7 +230,7 @@ def _run_cmake(self):\n             move_shared_libs(build_prefix, build_lib, \"arrow_python\")\n             if self.with_plasma:\n                 move_shared_libs(build_prefix, build_lib, \"plasma\")\n-            if self.with_parquet:\n+            if self.with_parquet and not self.with_static_parquet:\n                 move_shared_libs(build_prefix, build_lib, \"parquet\")\n \n         print('Bundling includes: ' + pjoin(build_prefix, 'include'))\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-11-20T14:27:13.128+0000",
                    "updated": "2017-11-20T14:27:13.128+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13116820/comment/16259287",
                    "id": "16259287",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1331\n[https://github.com/apache/arrow/pull/1331]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-11-20T14:27:18.080+0000",
                    "updated": "2017-11-20T14:27:18.080+0000"
                }
            ],
            "maxResults": 7,
            "total": 7,
            "startAt": 0
        },
        "customfield_12311820": "0|i3milj:",
        "customfield_12314139": null
    }
}