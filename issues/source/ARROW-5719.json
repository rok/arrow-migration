{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13241379",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379",
    "key": "ARROW-5719",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15000,
            "total": 15000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5719/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/267246",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699\n \n \n   Support in-place sorting for vectors. An in-place sorter sorts the vector by directly modifying the vector data, so the input and output vectors are the same one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-26T04:07:03.933+0000",
                    "updated": "2019-06-26T04:07:03.933+0000",
                    "started": "2019-06-26T04:07:03.932+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "267246",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268301",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298028375\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n \n Review comment:\n   try with resources?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:53:06.497+0000",
                    "updated": "2019-06-27T06:53:06.497+0000",
                    "started": "2019-06-27T06:53:06.496+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268301",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298029026\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n+    this.pivotBuffer.allocateNew(1);\n+\n+    comparator.attachVectors(vec, pivotBuffer);\n+    quickSort(0, vec.getValueCount() - 1);\n+    this.pivotBuffer.close();\n+  }\n+\n+  private void quickSort(int low, int high) {\n+    if (low < high) {\n+      int mid = partition(low, high);\n+      quickSort(low, mid - 1);\n+      quickSort(mid + 1, high);\n+    }\n+  }\n+\n+  private int partition(int low, int high) {\n+    VectorDataCopier.fixedWidthDataCopy(vec, low, pivotBuffer, 0, typeWidth);\n \n Review comment:\n   I would expect we wouldn't need an additional vector for in-place sorting of fixed width types?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:53:06.540+0000",
                    "updated": "2019-06-27T06:53:06.540+0000",
                    "started": "2019-06-27T06:53:06.540+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268302",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298029322\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n+          BaseFixedWidthVector srcVector, int srcIndex, BaseFixedWidthVector dstVector, int dstIndex, int typeWidth) {\n+    if (srcVector.isNull(srcIndex)) {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 0);\n+    } else {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 1);\n+      PlatformDependent.copyMemory(srcVector.getDataBuffer().memoryAddress() + srcIndex * typeWidth,\n+              dstVector.getDataBuffer().memoryAddress() + dstIndex * typeWidth, typeWidth);\n+    }\n+  }\n+\n+  /**\n+   * Copy data for variable-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   */\n+  public static void variableWidthDataCopy(\n \n Review comment:\n   it looks like this is unused except in the test?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:53:06.615+0000",
                    "updated": "2019-06-27T06:53:06.615+0000",
                    "started": "2019-06-27T06:53:06.615+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268303",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268304",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298030073\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   would it make sense to add a swap method to FixedWidthVector classes instead of doing this externally?  For in-place sorting I think you probably want a swap operation instead anyways?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T06:53:06.662+0000",
                    "updated": "2019-06-27T06:53:06.662+0000",
                    "started": "2019-06-27T06:53:06.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268304",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298056234\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n \n Review comment:\n   It seems Java does not support try-with-resources on a class member.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T08:12:54.384+0000",
                    "updated": "2019-06-27T08:12:54.384+0000",
                    "started": "2019-06-27T08:12:54.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268356",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298059515\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n+    this.pivotBuffer.allocateNew(1);\n+\n+    comparator.attachVectors(vec, pivotBuffer);\n+    quickSort(0, vec.getValueCount() - 1);\n+    this.pivotBuffer.close();\n+  }\n+\n+  private void quickSort(int low, int high) {\n+    if (low < high) {\n+      int mid = partition(low, high);\n+      quickSort(low, mid - 1);\n+      quickSort(mid + 1, high);\n+    }\n+  }\n+\n+  private int partition(int low, int high) {\n+    VectorDataCopier.fixedWidthDataCopy(vec, low, pivotBuffer, 0, typeWidth);\n \n Review comment:\n   Some sorting algorithms do not need extra memory space, while others may require extra memory spaces. Both types of algorithms can be in-place sort algorithms. \r\n   \r\n   We choose the quick-sort algorithm, because it is the fastest one according to common sense. In addition, it requires only O(1) extra memory space to save the pivot.\r\n   \r\n   It should be noted that it is difficult to come up with a sorting algorithm with 0 extra memory space. Most commonly used algorithm are based on elements swap, and swap requires O(1) memory space.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T08:21:38.054+0000",
                    "updated": "2019-06-27T08:21:38.054+0000",
                    "started": "2019-06-27T08:21:38.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268359",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298059801\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n+          BaseFixedWidthVector srcVector, int srcIndex, BaseFixedWidthVector dstVector, int dstIndex, int typeWidth) {\n+    if (srcVector.isNull(srcIndex)) {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 0);\n+    } else {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 1);\n+      PlatformDependent.copyMemory(srcVector.getDataBuffer().memoryAddress() + srcIndex * typeWidth,\n+              dstVector.getDataBuffer().memoryAddress() + dstIndex * typeWidth, typeWidth);\n+    }\n+  }\n+\n+  /**\n+   * Copy data for variable-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   */\n+  public static void variableWidthDataCopy(\n \n Review comment:\n   You are right. It is not currently used except in the test.\r\n   However, I think this should be a useful feature. So can we keep it?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T08:22:21.142+0000",
                    "updated": "2019-06-27T08:22:21.142+0000",
                    "started": "2019-06-27T08:22:21.141+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268360",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298061482\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   Good suggestion. Swap is definitively a useful feature. \r\n   However, it is more difficult to implement it, because it requires extra memory space. In addition, it is not used in the code so far. So can we do it in the future by opening a separate JIRA?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T08:26:26.471+0000",
                    "updated": "2019-06-27T08:26:26.471+0000",
                    "started": "2019-06-27T08:26:26.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268362",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298066969\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   If it is needed we can add it.  I also meant to ask is this more appropriate as a method on BaseFixedWidthVector?  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T08:40:46.735+0000",
                    "updated": "2019-06-27T08:40:46.735+0000",
                    "started": "2019-06-27T08:40:46.734+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268369",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298149169\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   As you suggested, there are two ways to implement the feature:\r\n   1. As a method on BaseFixedWidthVector\r\n   2. In a separate class in the algorithm module.\r\n   \r\n   Generally, I prefer solution 2, because\r\n   1. Sometimes, the swap may involve two vectors, and \r\n   2. Swap requires extra memory, and a separate class makes it easier to manage the extra memory.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-27T12:26:33.039+0000",
                    "updated": "2019-06-27T12:26:33.039+0000",
                    "started": "2019-06-27T12:26:33.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268495",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/268981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298149169\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   As you suggested, there are two ways to implement the feature:\r\n   1. As a method on BaseFixedWidthVector\r\n   2. In a separate class in the algorithm module.\r\n   \r\n   Generally, I prefer solution 2, because\r\n   1. Sometimes, the swap may involve two vectors, and \r\n   2. Swap requires extra memory, and a separate class makes it easier to manage the extra memory.\r\n   \r\n   What do you think?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T02:30:12.917+0000",
                    "updated": "2019-06-28T02:30:12.917+0000",
                    "started": "2019-06-28T02:30:12.915+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "268981",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269041",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298453492\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n+          BaseFixedWidthVector srcVector, int srcIndex, BaseFixedWidthVector dstVector, int dstIndex, int typeWidth) {\n+    if (srcVector.isNull(srcIndex)) {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 0);\n+    } else {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 1);\n+      PlatformDependent.copyMemory(srcVector.getDataBuffer().memoryAddress() + srcIndex * typeWidth,\n+              dstVector.getDataBuffer().memoryAddress() + dstIndex * typeWidth, typeWidth);\n+    }\n+  }\n+\n+  /**\n+   * Copy data for variable-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   */\n+  public static void variableWidthDataCopy(\n+          BaseVariableWidthVector srcVector, int srcIndex, BaseVariableWidthVector dstVector, int dstIndex) {\n+    if (srcVector.isNull(srcIndex)) {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 0);\n \n Review comment:\n   is the separate code path needed it seems like it would the you can copy the validity bitmap directly in the else, and dataLength = 0, so it would be equivalent?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T05:06:54.147+0000",
                    "updated": "2019-06-28T05:06:54.147+0000",
                    "started": "2019-06-28T05:06:54.146+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269041",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269042",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298452415\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   Sorry let me rephrase, lets ignore swap (I assumed an implementation without reading closely I apologize).  For this copy feature in the fixed width case, extra memory is never needed correct, so you could have a method like\r\n   ```\r\n   class BasedFixedWidthVector {\r\n      void copyTo(BaseFixWidthVector v, srcIndex, dstIndex);\r\n   }\r\n   ```\r\n   The type width is an implementation details of BaseFixedWidth vector and this encapsulates the Vector move logic.   Unless there are use-cases for using a typeWidth different then the two vectors?  having the second vector passed in also lets you manage the memory separately, I believe.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T05:06:54.155+0000",
                    "updated": "2019-06-28T05:06:54.155+0000",
                    "started": "2019-06-28T05:06:54.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269042",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298453964\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n+    this.pivotBuffer.allocateNew(1);\n+\n+    comparator.attachVectors(vec, pivotBuffer);\n+    quickSort(0, vec.getValueCount() - 1);\n+    this.pivotBuffer.close();\n+  }\n+\n+  private void quickSort(int low, int high) {\n+    if (low < high) {\n+      int mid = partition(low, high);\n+      quickSort(low, mid - 1);\n+      quickSort(mid + 1, high);\n+    }\n+  }\n+\n+  private int partition(int low, int high) {\n+    VectorDataCopier.fixedWidthDataCopy(vec, low, pivotBuffer, 0, typeWidth);\n \n Review comment:\n   Sorry I didn't look closely enough, I asssumed the pivotBuffer was larger.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T05:06:54.169+0000",
                    "updated": "2019-06-28T05:06:54.169+0000",
                    "started": "2019-06-28T05:06:54.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269043",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298453756\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n+          BaseFixedWidthVector srcVector, int srcIndex, BaseFixedWidthVector dstVector, int dstIndex, int typeWidth) {\n+    if (srcVector.isNull(srcIndex)) {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 0);\n+    } else {\n+      BitVectorHelper.setValidityBit(dstVector.getValidityBuffer(), dstIndex, 1);\n+      PlatformDependent.copyMemory(srcVector.getDataBuffer().memoryAddress() + srcIndex * typeWidth,\n+              dstVector.getDataBuffer().memoryAddress() + dstIndex * typeWidth, typeWidth);\n+    }\n+  }\n+\n+  /**\n+   * Copy data for variable-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   */\n+  public static void variableWidthDataCopy(\n \n Review comment:\n   My concern with this is it seems like it corrupts all values after dstIndex?  If you only support linear appends it might pay to try to build something from a combination of a reader and a writer?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T05:06:54.195+0000",
                    "updated": "2019-06-28T05:06:54.195+0000",
                    "started": "2019-06-28T05:06:54.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269044",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298453909\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n \n Review comment:\n   OK, in that case I think you might might want to use try-catch-finally just to be safe that the close is always called.  Unless we are 100% sure an exception can never be thrown.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T05:06:54.240+0000",
                    "updated": "2019-06-28T05:06:54.240+0000",
                    "started": "2019-06-28T05:06:54.240+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269045",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298534152\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   @emkornfield thanks for the good point. I agree that implementing the copyTo as a member function is a better choice.\r\n   \r\n   However, currently each vector has its own implementation of the copyFrom method, which performs similar functionality. So the current problem is to extract these copyFrom methods to the super class, so we can use it in the sorter.\r\n   \r\n   This involves substantial changes, so I think we need a separate JIRA for it. I have opened one (ARROW-5778). Let's hold this PR until that one is resolved. \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-28T10:02:45.891+0000",
                    "updated": "2019-06-28T10:02:45.891+0000",
                    "started": "2019-06-28T10:02:45.890+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269180",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/269947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r298869387\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/move/VectorDataCopier.java\n ##########\n @@ -0,0 +1,89 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.move;\n+\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+import org.apache.arrow.vector.BaseVariableWidthVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.util.internal.PlatformDependent;\n+\n+/**\n+ * Utilities for moving data between vectors.\n+ */\n+public class VectorDataCopier {\n+\n+  /**\n+   * Copy data for fixed-width vectors.\n+   * @param srcVector the source vector.\n+   * @param srcIndex the data index in the source vector.\n+   * @param dstVector the destination vector.\n+   * @param dstIndex the data index in the destination vector.\n+   * @param typeWidth the width of the data type.\n+   */\n+  public static void fixedWidthDataCopy(\n \n Review comment:\n   SGTM\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-01T03:06:13.581+0000",
                    "updated": "2019-07-01T03:06:13.581+0000",
                    "started": "2019-07-01T03:06:13.580+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "269947",
                    "issueId": "13241379"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/worklog/271457",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4699: ARROW-5719: [Java] Support in-place vector sorting\nURL: https://github.com/apache/arrow/pull/4699#discussion_r299827362\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/sort/FixedWidthInPlaceVectorSorter.java\n ##########\n @@ -0,0 +1,85 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.sort;\n+\n+import org.apache.arrow.algorithm.move.VectorDataCopier;\n+import org.apache.arrow.vector.BaseFixedWidthVector;\n+\n+/**\n+ * Default in-place sorter for fixed-width vectors.\n+ * It is based on quick-sort, with average time complexity O(n*log(n)).\n+ * @param <V> vector type.\n+ */\n+public class FixedWidthInPlaceVectorSorter<V extends BaseFixedWidthVector> implements InPlaceVectorSorter<V> {\n+\n+  private VectorValueComparator<V> comparator;\n+\n+  private int typeWidth;\n+\n+  /**\n+   * The vector to sort.\n+   */\n+  private V vec;\n+\n+  /**\n+   * The buffer to hold the pivot.\n+   * It always has length 1.\n+   */\n+  private V pivotBuffer;\n+\n+  @Override\n+  public void sortInPlace(V vec, VectorValueComparator<V> comparator) {\n+    this.vec = vec;\n+    this.comparator = comparator;\n+    this.typeWidth = comparator.valueWidth;\n+    this.pivotBuffer = (V) vec.getField().createVector(vec.getAllocator());\n \n Review comment:\n   Good suggestion. I have placed the statement to close buffer in the finally block.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-07-03T08:09:41.399+0000",
                    "updated": "2019-07-03T08:09:41.399+0000",
                    "started": "2019-07-03T08:09:41.398+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "271457",
                    "issueId": "13241379"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 15000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2e3ca97f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@185a7e2f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33bf40bf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@785febe1[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@651ee428[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6b2466b[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4fc144ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4846be40[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5aeb2cc4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4efea8ec[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@bdfd11d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7616ca98[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15000,
        "customfield_12312520": null,
        "customfield_12312521": "Tue Jul 09 05:04:03 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-07-09T05:04:03.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5719/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-06-25T02:56:46.000+0000",
        "updated": "2019-08-01T22:39:52.000+0000",
        "timeoriginalestimate": null,
        "description": "Support in-place sorting for vectors. An in-place sorter sorts the\u00a0vector by directly modifying the vector data, so the input and output vectors are the same one.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Support in-place vector sorting",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13241379/comment/16880933",
                    "id": "16880933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4699\n[https://github.com/apache/arrow/pull/4699]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-07-09T05:04:03.630+0000",
                    "updated": "2019-07-09T05:04:03.630+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z042cw:",
        "customfield_12314139": null
    }
}