{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13415606",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606",
    "key": "ARROW-14993",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351051",
                "id": "12351051",
                "description": "",
                "name": "8.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-05-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12628291",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12628291",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13416619",
                    "key": "ARROW-15064",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13416619",
                    "fields": {
                        "summary": "[C++] Vectorize CheckStringHasNoStructuralChars in CSV writer",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
            "name": "yibocai",
            "key": "yibo",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
            },
            "displayName": "Yibo Cai",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10200,
            "total": 10200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14993/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 17,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/724940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1035880852\n\n\n   https://issues.apache.org/jira/browse/ARROW-14993\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-11T04:45:44.143+0000",
                    "updated": "2022-02-11T04:45:44.143+0000",
                    "started": "2022-02-11T04:45:44.143+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724940",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/724941",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1035881525\n\n\n   Example output:\r\n   \r\n   ```\r\n   ---------------------------------------------------------------------------------------\r\n   Benchmark                             Time             CPU   Iterations UserCounters...\r\n   ---------------------------------------------------------------------------------------\r\n   WriteCsvNumeric/0                882346 ns       882379 ns          792 bytes_per_second=203.708M/s null_percent=0\r\n   WriteCsvNumeric/1                881449 ns       881461 ns          795 bytes_per_second=202.252M/s null_percent=1\r\n   WriteCsvNumeric/10               899436 ns       899461 ns          777 bytes_per_second=182.639M/s null_percent=10\r\n   WriteCsvNumeric/50              1045240 ns      1045265 ns          670 bytes_per_second=95.1745M/s null_percent=50\r\n   WriteCsvStringNoQuote/0          598421 ns       598429 ns         1167 bytes_per_second=704.532M/s null_percent=0\r\n   WriteCsvStringNoQuote/1          621845 ns       621857 ns         1123 bytes_per_second=671.606M/s null_percent=1\r\n   WriteCsvStringNoQuote/10         638067 ns       638081 ns         1092 bytes_per_second=599.363M/s null_percent=10\r\n   WriteCsvStringNoQuote/50         688014 ns       688034 ns         1020 bytes_per_second=321.68M/s null_percent=50\r\n   WriteCsvStringWithQuote/0        969798 ns       969806 ns          723 bytes_per_second=474.074M/s null_percent=0\r\n   WriteCsvStringWithQuote/1        994439 ns       994454 ns          703 bytes_per_second=457.973M/s null_percent=1\r\n   WriteCsvStringWithQuote/10       994757 ns       994785 ns          712 bytes_per_second=419.136M/s null_percent=10\r\n   WriteCsvStringWithQuote/50       865218 ns       865244 ns          811 bytes_per_second=277.951M/s null_percent=50\r\n   WriteCsvStringRejectQuote/0      727734 ns       727747 ns          955 bytes_per_second=526.922M/s null_percent=0\r\n   WriteCsvStringRejectQuote/1      723819 ns       723826 ns          966 bytes_per_second=524.784M/s null_percent=1\r\n   WriteCsvStringRejectQuote/10     734601 ns       734621 ns          957 bytes_per_second=473.625M/s null_percent=10\r\n   WriteCsvStringRejectQuote/50     709406 ns       709427 ns          989 bytes_per_second=284.96M/s null_percent=50\r\n   WriteCsvNumericCheckQuote/0     1102710 ns      1102735 ns          635 bytes_per_second=197.595M/s null_percent=0\r\n   WriteCsvNumericCheckQuote/1     1122673 ns      1122681 ns          623 bytes_per_second=192.463M/s null_percent=1\r\n   WriteCsvNumericCheckQuote/10    1140526 ns      1140546 ns          614 bytes_per_second=174.271M/s null_percent=10\r\n   WriteCsvNumericCheckQuote/50    1209031 ns      1209055 ns          579 bytes_per_second=98.0726M/s null_percent=50\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-11T04:48:16.132+0000",
                    "updated": "2022-02-11T04:48:16.132+0000",
                    "started": "2022-02-11T04:48:16.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "724941",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/726855",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 removed a comment on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1035881525\n\n\n   Example output:\r\n   \r\n   ```\r\n   ---------------------------------------------------------------------------------------\r\n   Benchmark                             Time             CPU   Iterations UserCounters...\r\n   ---------------------------------------------------------------------------------------\r\n   WriteCsvNumeric/0                882346 ns       882379 ns          792 bytes_per_second=203.708M/s null_percent=0\r\n   WriteCsvNumeric/1                881449 ns       881461 ns          795 bytes_per_second=202.252M/s null_percent=1\r\n   WriteCsvNumeric/10               899436 ns       899461 ns          777 bytes_per_second=182.639M/s null_percent=10\r\n   WriteCsvNumeric/50              1045240 ns      1045265 ns          670 bytes_per_second=95.1745M/s null_percent=50\r\n   WriteCsvStringNoQuote/0          598421 ns       598429 ns         1167 bytes_per_second=704.532M/s null_percent=0\r\n   WriteCsvStringNoQuote/1          621845 ns       621857 ns         1123 bytes_per_second=671.606M/s null_percent=1\r\n   WriteCsvStringNoQuote/10         638067 ns       638081 ns         1092 bytes_per_second=599.363M/s null_percent=10\r\n   WriteCsvStringNoQuote/50         688014 ns       688034 ns         1020 bytes_per_second=321.68M/s null_percent=50\r\n   WriteCsvStringWithQuote/0        969798 ns       969806 ns          723 bytes_per_second=474.074M/s null_percent=0\r\n   WriteCsvStringWithQuote/1        994439 ns       994454 ns          703 bytes_per_second=457.973M/s null_percent=1\r\n   WriteCsvStringWithQuote/10       994757 ns       994785 ns          712 bytes_per_second=419.136M/s null_percent=10\r\n   WriteCsvStringWithQuote/50       865218 ns       865244 ns          811 bytes_per_second=277.951M/s null_percent=50\r\n   WriteCsvStringRejectQuote/0      727734 ns       727747 ns          955 bytes_per_second=526.922M/s null_percent=0\r\n   WriteCsvStringRejectQuote/1      723819 ns       723826 ns          966 bytes_per_second=524.784M/s null_percent=1\r\n   WriteCsvStringRejectQuote/10     734601 ns       734621 ns          957 bytes_per_second=473.625M/s null_percent=10\r\n   WriteCsvStringRejectQuote/50     709406 ns       709427 ns          989 bytes_per_second=284.96M/s null_percent=50\r\n   WriteCsvNumericCheckQuote/0     1102710 ns      1102735 ns          635 bytes_per_second=197.595M/s null_percent=0\r\n   WriteCsvNumericCheckQuote/1     1122673 ns      1122681 ns          623 bytes_per_second=192.463M/s null_percent=1\r\n   WriteCsvNumericCheckQuote/10    1140526 ns      1140546 ns          614 bytes_per_second=174.271M/s null_percent=10\r\n   WriteCsvNumericCheckQuote/50    1209031 ns      1209055 ns          579 bytes_per_second=98.0726M/s null_percent=50\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T06:11:13.347+0000",
                    "updated": "2022-02-15T06:11:13.347+0000",
                    "started": "2022-02-15T06:11:13.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726855",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/726858",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1039896632\n\n\n   Benchmark result on xeon gold 5218, clang-12.\r\n   \r\n   ```\r\n   ---------------------------------------------------------------------------------------\r\n   Benchmark                             Time             CPU   Iterations UserCounters...\r\n   ---------------------------------------------------------------------------------------\r\n   WriteCsvNumeric/0                874437 ns       874473 ns          800 bytes_per_second=205.55M/s null_percent=0\r\n   WriteCsvNumeric/1                870735 ns       870745 ns          803 bytes_per_second=204.741M/s null_percent=1\r\n   WriteCsvNumeric/10               894088 ns       894117 ns          782 bytes_per_second=183.731M/s null_percent=10\r\n   WriteCsvNumeric/50              1064965 ns      1065000 ns          658 bytes_per_second=93.4108M/s null_percent=50\r\n   WriteCsvStringNoQuote/0          600664 ns       600674 ns         1164 bytes_per_second=701.9M/s null_percent=0\r\n   WriteCsvStringNoQuote/1          622669 ns       622686 ns         1121 bytes_per_second=670.711M/s null_percent=1\r\n   WriteCsvStringNoQuote/10         655435 ns       655452 ns         1071 bytes_per_second=583.479M/s null_percent=10\r\n   WriteCsvStringNoQuote/50         675990 ns       676004 ns         1037 bytes_per_second=327.404M/s null_percent=50\r\n   WriteCsvStringWithQuote/0        985102 ns       985131 ns          711 bytes_per_second=466.699M/s null_percent=0\r\n   WriteCsvStringWithQuote/1       1002379 ns      1002376 ns          688 bytes_per_second=454.353M/s null_percent=1\r\n   WriteCsvStringWithQuote/10       993824 ns       993854 ns          715 bytes_per_second=419.529M/s null_percent=10\r\n   WriteCsvStringWithQuote/50       856739 ns       856753 ns          817 bytes_per_second=280.706M/s null_percent=50\r\n   WriteCsvStringRejectQuote/0      302351 ns       302361 ns         2345 bytes_per_second=1.23851G/s null_percent=0\r\n   WriteCsvStringRejectQuote/1      292672 ns       292678 ns         2390 bytes_per_second=1.26743G/s null_percent=1\r\n   WriteCsvStringRejectQuote/10     330824 ns       330829 ns         2112 bytes_per_second=1051.71M/s null_percent=10\r\n   WriteCsvStringRejectQuote/50     497627 ns       497644 ns         1403 bytes_per_second=406.23M/s null_percent=50\r\n   WriteCsvNumericCheckQuote/0     1107120 ns      1107136 ns          632 bytes_per_second=196.809M/s null_percent=0\r\n   WriteCsvNumericCheckQuote/1     1123197 ns      1123231 ns          623 bytes_per_second=192.369M/s null_percent=1\r\n   WriteCsvNumericCheckQuote/10    1134986 ns      1135010 ns          617 bytes_per_second=175.121M/s null_percent=10\r\n   WriteCsvNumericCheckQuote/50    1196066 ns      1196060 ns          584 bytes_per_second=99.1381M/s null_percent=50\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T06:13:23.587+0000",
                    "updated": "2022-02-15T06:13:23.587+0000",
                    "started": "2022-02-15T06:13:23.587+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726858",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/726907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#discussion_r806609112\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,48 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.offset();\n\nReview comment:\n       ```suggestion\r\n       const uint8_t* const data = array.raw_data() + array.value_offset(0);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,48 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.offset();\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n+#endif\n+    while ((offset + 16) <= buffer_size) {\n+      const auto v = simd_batch::load_unaligned(data + offset);\n+      if (xsimd::any((v == '\\n') | (v == '\\r') | (v == ',') | (v == '\"'))) {\n+        break;\n+      }\n+      offset += 16;\n+    }\n+#endif\n+    while (offset < buffer_size) {\n+      // error happened or remaining bytes to check\n+      const char c = static_cast<char>(data[offset]);\n+      if (c == '\\n' || c == '\\r' || c == ',' || c == '\"') {\n+        // extract the offending string from array per offset\n+        const auto* offsets = array.raw_value_offsets();\n+        const auto index =\n+            std::upper_bound(offsets, offsets + array.length(), offset) - offsets;\n\nReview comment:\n       Need to account for the fact that the stored offsets do not necessarily start at 0 (unlike the `offset` variable):\r\n   ```suggestion\r\n           const auto index =\r\n               std::upper_bound(offsets, offsets + array.length(), offset + offsets[0]) - offsets;\r\n   ```\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T09:21:05.393+0000",
                    "updated": "2022-02-15T09:21:05.393+0000",
                    "started": "2022-02-15T09:21:05.392+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "726907",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/727175",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#discussion_r807112118\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,49 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.value_offset(0);\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n\nReview comment:\n       Is `neon64` expected even though we want to load 16 bytes at a time below?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T17:29:56.414+0000",
                    "updated": "2022-02-15T17:29:56.414+0000",
                    "started": "2022-02-15T17:29:56.413+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727175",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/727241",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#discussion_r806609112\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,48 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.offset();\n\nReview comment:\n       ```suggestion\r\n       const uint8_t* const data = array.raw_data() + array.value_offset(0);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,48 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.offset();\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n+#endif\n+    while ((offset + 16) <= buffer_size) {\n+      const auto v = simd_batch::load_unaligned(data + offset);\n+      if (xsimd::any((v == '\\n') | (v == '\\r') | (v == ',') | (v == '\"'))) {\n+        break;\n+      }\n+      offset += 16;\n+    }\n+#endif\n+    while (offset < buffer_size) {\n+      // error happened or remaining bytes to check\n+      const char c = static_cast<char>(data[offset]);\n+      if (c == '\\n' || c == '\\r' || c == ',' || c == '\"') {\n+        // extract the offending string from array per offset\n+        const auto* offsets = array.raw_value_offsets();\n+        const auto index =\n+            std::upper_bound(offsets, offsets + array.length(), offset) - offsets;\n\nReview comment:\n       Need to account for the fact that the stored offsets do not necessarily start at 0 (unlike the `offset` variable):\r\n   ```suggestion\r\n           const auto index =\r\n               std::upper_bound(offsets, offsets + array.length(), offset + offsets[0]) - offsets;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,49 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.value_offset(0);\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n\nReview comment:\n       Is `neon64` expected even though we want to load 16 bytes at a time below?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T18:34:13.682+0000",
                    "updated": "2022-02-15T18:34:13.682+0000",
                    "started": "2022-02-15T18:34:13.682+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727241",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/727296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 removed a comment on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1035881525\n\n\n   Example output:\r\n   \r\n   ```\r\n   ---------------------------------------------------------------------------------------\r\n   Benchmark                             Time             CPU   Iterations UserCounters...\r\n   ---------------------------------------------------------------------------------------\r\n   WriteCsvNumeric/0                882346 ns       882379 ns          792 bytes_per_second=203.708M/s null_percent=0\r\n   WriteCsvNumeric/1                881449 ns       881461 ns          795 bytes_per_second=202.252M/s null_percent=1\r\n   WriteCsvNumeric/10               899436 ns       899461 ns          777 bytes_per_second=182.639M/s null_percent=10\r\n   WriteCsvNumeric/50              1045240 ns      1045265 ns          670 bytes_per_second=95.1745M/s null_percent=50\r\n   WriteCsvStringNoQuote/0          598421 ns       598429 ns         1167 bytes_per_second=704.532M/s null_percent=0\r\n   WriteCsvStringNoQuote/1          621845 ns       621857 ns         1123 bytes_per_second=671.606M/s null_percent=1\r\n   WriteCsvStringNoQuote/10         638067 ns       638081 ns         1092 bytes_per_second=599.363M/s null_percent=10\r\n   WriteCsvStringNoQuote/50         688014 ns       688034 ns         1020 bytes_per_second=321.68M/s null_percent=50\r\n   WriteCsvStringWithQuote/0        969798 ns       969806 ns          723 bytes_per_second=474.074M/s null_percent=0\r\n   WriteCsvStringWithQuote/1        994439 ns       994454 ns          703 bytes_per_second=457.973M/s null_percent=1\r\n   WriteCsvStringWithQuote/10       994757 ns       994785 ns          712 bytes_per_second=419.136M/s null_percent=10\r\n   WriteCsvStringWithQuote/50       865218 ns       865244 ns          811 bytes_per_second=277.951M/s null_percent=50\r\n   WriteCsvStringRejectQuote/0      727734 ns       727747 ns          955 bytes_per_second=526.922M/s null_percent=0\r\n   WriteCsvStringRejectQuote/1      723819 ns       723826 ns          966 bytes_per_second=524.784M/s null_percent=1\r\n   WriteCsvStringRejectQuote/10     734601 ns       734621 ns          957 bytes_per_second=473.625M/s null_percent=10\r\n   WriteCsvStringRejectQuote/50     709406 ns       709427 ns          989 bytes_per_second=284.96M/s null_percent=50\r\n   WriteCsvNumericCheckQuote/0     1102710 ns      1102735 ns          635 bytes_per_second=197.595M/s null_percent=0\r\n   WriteCsvNumericCheckQuote/1     1122673 ns      1122681 ns          623 bytes_per_second=192.463M/s null_percent=1\r\n   WriteCsvNumericCheckQuote/10    1140526 ns      1140546 ns          614 bytes_per_second=174.271M/s null_percent=10\r\n   WriteCsvNumericCheckQuote/50    1209031 ns      1209055 ns          579 bytes_per_second=98.0726M/s null_percent=50\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T18:38:20.603+0000",
                    "updated": "2022-02-15T18:38:20.603+0000",
                    "started": "2022-02-15T18:38:20.603+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727296",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/727533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1039896632\n\n\n   Benchmark result on xeon gold 5218, clang-12.\r\n   \r\n   ```\r\n   ---------------------------------------------------------------------------------------\r\n   Benchmark                             Time             CPU   Iterations UserCounters...\r\n   ---------------------------------------------------------------------------------------\r\n   WriteCsvNumeric/0                874437 ns       874473 ns          800 bytes_per_second=205.55M/s null_percent=0\r\n   WriteCsvNumeric/1                870735 ns       870745 ns          803 bytes_per_second=204.741M/s null_percent=1\r\n   WriteCsvNumeric/10               894088 ns       894117 ns          782 bytes_per_second=183.731M/s null_percent=10\r\n   WriteCsvNumeric/50              1064965 ns      1065000 ns          658 bytes_per_second=93.4108M/s null_percent=50\r\n   WriteCsvStringNoQuote/0          600664 ns       600674 ns         1164 bytes_per_second=701.9M/s null_percent=0\r\n   WriteCsvStringNoQuote/1          622669 ns       622686 ns         1121 bytes_per_second=670.711M/s null_percent=1\r\n   WriteCsvStringNoQuote/10         655435 ns       655452 ns         1071 bytes_per_second=583.479M/s null_percent=10\r\n   WriteCsvStringNoQuote/50         675990 ns       676004 ns         1037 bytes_per_second=327.404M/s null_percent=50\r\n   WriteCsvStringWithQuote/0        985102 ns       985131 ns          711 bytes_per_second=466.699M/s null_percent=0\r\n   WriteCsvStringWithQuote/1       1002379 ns      1002376 ns          688 bytes_per_second=454.353M/s null_percent=1\r\n   WriteCsvStringWithQuote/10       993824 ns       993854 ns          715 bytes_per_second=419.529M/s null_percent=10\r\n   WriteCsvStringWithQuote/50       856739 ns       856753 ns          817 bytes_per_second=280.706M/s null_percent=50\r\n   WriteCsvStringRejectQuote/0      302351 ns       302361 ns         2345 bytes_per_second=1.23851G/s null_percent=0\r\n   WriteCsvStringRejectQuote/1      292672 ns       292678 ns         2390 bytes_per_second=1.26743G/s null_percent=1\r\n   WriteCsvStringRejectQuote/10     330824 ns       330829 ns         2112 bytes_per_second=1051.71M/s null_percent=10\r\n   WriteCsvStringRejectQuote/50     497627 ns       497644 ns         1403 bytes_per_second=406.23M/s null_percent=50\r\n   WriteCsvNumericCheckQuote/0     1107120 ns      1107136 ns          632 bytes_per_second=196.809M/s null_percent=0\r\n   WriteCsvNumericCheckQuote/1     1123197 ns      1123231 ns          623 bytes_per_second=192.369M/s null_percent=1\r\n   WriteCsvNumericCheckQuote/10    1134986 ns      1135010 ns          617 bytes_per_second=175.121M/s null_percent=10\r\n   WriteCsvNumericCheckQuote/50    1196066 ns      1196060 ns          584 bytes_per_second=99.1381M/s null_percent=50\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-15T18:59:15.364+0000",
                    "updated": "2022-02-15T18:59:15.364+0000",
                    "started": "2022-02-15T18:59:15.364+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "727533",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728001",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#discussion_r807476472\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,49 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.value_offset(0);\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n\nReview comment:\n       `xsimd::neon` implements neon instructions before armv8 (64bit arch), the simd register size is 128bits. `xsimd::neon64` adds neon instructions for armv8, the simd register size is still 128bits.\r\n   E.g., reduce function `vmaxvq_u8` is only implemented on armv8, `ximd::any` can use it only if `xsimd::neon64` is specified [1], otherwise it has to use lower efficient code [2].\r\n   \r\n   [1] https://github.com/xtensor-stack/xsimd/blob/master/include/xsimd/arch/xsimd_neon64.hpp#L65\r\n   [2] https://github.com/xtensor-stack/xsimd/blob/master/include/xsimd/arch/xsimd_neon.hpp#L2121\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T02:17:41.892+0000",
                    "updated": "2022-02-16T02:17:41.892+0000",
                    "started": "2022-02-16T02:17:41.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728001",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728018",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 commented on a change in pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#discussion_r807494515\n\n\n\n##########\nFile path: cpp/src/arrow/csv/writer.cc\n##########\n@@ -194,34 +204,49 @@ class UnquotedColumnPopulator : public ColumnPopulator {\n       return Status::OK();\n     };\n \n-    if (reject_values_with_quotes_) {\n-      // When using this UnquotedColumnPopulator on values that, after casting, could\n-      // produce quotes, we need to return an error in accord with RFC4180. We need to\n-      // precede valid_func with a check.\n-      return VisitArrayDataInline<StringType>(\n-          *casted_array_->data(),\n-          [&](arrow::util::string_view s) {\n-            RETURN_NOT_OK(CheckStringHasNoStructuralChars(s));\n-            return valid_function(s);\n-          },\n-          null_function);\n-    } else {\n-      // Populate without checking and rejecting values with quotes.\n-      return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n-                                              null_function);\n-    }\n+    return VisitArrayDataInline<StringType>(*casted_array_->data(), valid_function,\n+                                            null_function);\n   }\n \n  private:\n-  // Returns an error status if s has any structural characters.\n-  static Status CheckStringHasNoStructuralChars(const util::string_view& s) {\n-    if (std::any_of(s.begin(), s.end(), [](const char& c) {\n-          return c == '\\n' || c == '\\r' || c == ',' || c == '\"';\n-        })) {\n-      return Status::Invalid(\n-          \"CSV values may not contain structural characters if quoting style is \"\n-          \"\\\"None\\\". See RFC4180. Invalid value: \",\n-          s);\n+  // Returns an error status if string array has any structural characters.\n+  static Status CheckStringArrayHasNoStructuralChars(const StringArray& array) {\n+    // scan the underlying string array buffer as a single big string\n+    const uint8_t* const data = array.raw_data() + array.value_offset(0);\n+    const int64_t buffer_size = array.total_values_length();\n+    int64_t offset = 0;\n+#if defined(ARROW_HAVE_SSE4_2) || defined(ARROW_HAVE_NEON)\n+#if defined(ARROW_HAVE_SSE4_2)\n+    // _mm_cmpistrc gives slightly better performance than the naive approach,\n+    // probably doesn't deserve the effort\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::sse4_2>;\n+#else\n+    using simd_batch = xsimd::batch<uint8_t, xsimd::neon64>;\n\nReview comment:\n       Looks xsimd::any/all can be improved.\r\n   https://github.com/xtensor-stack/xsimd/issues/672\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T03:00:49.613+0000",
                    "updated": "2022-02-16T03:00:49.613+0000",
                    "started": "2022-02-16T03:00:49.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728018",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728121",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1041353439\n\n\n   @cyb70289 Do you want to make further changes to this PR? Otherwise we can merge.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T10:46:05.404+0000",
                    "updated": "2022-02-16T10:46:05.404+0000",
                    "started": "2022-02-16T10:46:05.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728121",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "cyb70289 closed pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T13:44:34.892+0000",
                    "updated": "2022-02-16T13:44:34.892+0000",
                    "started": "2022-02-16T13:44:34.892+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728200",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728209",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1041512655\n\n\n   Benchmark runs are scheduled for baseline = 12490eb7a39cb2ceab87f0c1b9183dfe7ffd1507 and contender = 07db461daad60792f7bffea4532e2ed813c2f7b8. 07db461daad60792f7bffea4532e2ed813c2f7b8 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/cafa340c5eef45288be8e50cc4f6f927...76a9c9d9ba9041c0b8f85e2e38a3436b/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/0cbf26b0f11649078918fcd8d619aec6...4eba51f719f04a0aa17623c43d1e4264/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f483880537304c3183e1972e22a4811e...c5291ca2c7e5481b824811831efa3d8a/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c02da61725cb4750beb7474e708d030d...3af7f51b99974dd19c4a35328fd550ae/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T13:51:45.489+0000",
                    "updated": "2022-02-16T13:51:45.489+0000",
                    "started": "2022-02-16T13:51:45.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728209",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1041512655\n\n\n   Benchmark runs are scheduled for baseline = 12490eb7a39cb2ceab87f0c1b9183dfe7ffd1507 and contender = 07db461daad60792f7bffea4532e2ed813c2f7b8. 07db461daad60792f7bffea4532e2ed813c2f7b8 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/cafa340c5eef45288be8e50cc4f6f927...76a9c9d9ba9041c0b8f85e2e38a3436b/)\n   [Scheduled] [test-mac-arm](https://conbench.ursa.dev/compare/runs/0cbf26b0f11649078918fcd8d619aec6...4eba51f719f04a0aa17623c43d1e4264/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f483880537304c3183e1972e22a4811e...c5291ca2c7e5481b824811831efa3d8a/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c02da61725cb4750beb7474e708d030d...3af7f51b99974dd19c4a35328fd550ae/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T14:01:47.387+0000",
                    "updated": "2022-02-16T14:01:47.387+0000",
                    "started": "2022-02-16T14:01:47.387+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728220",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1041512655\n\n\n   Benchmark runs are scheduled for baseline = 12490eb7a39cb2ceab87f0c1b9183dfe7ffd1507 and contender = 07db461daad60792f7bffea4532e2ed813c2f7b8. 07db461daad60792f7bffea4532e2ed813c2f7b8 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/cafa340c5eef45288be8e50cc4f6f927...76a9c9d9ba9041c0b8f85e2e38a3436b/)\n   [Failed] [test-mac-arm](https://conbench.ursa.dev/compare/runs/0cbf26b0f11649078918fcd8d619aec6...4eba51f719f04a0aa17623c43d1e4264/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f483880537304c3183e1972e22a4811e...c5291ca2c7e5481b824811831efa3d8a/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c02da61725cb4750beb7474e708d030d...3af7f51b99974dd19c4a35328fd550ae/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-16T14:41:41.551+0000",
                    "updated": "2022-02-16T14:41:41.551+0000",
                    "started": "2022-02-16T14:41:41.551+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728245",
                    "issueId": "13415606"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/worklog/728620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #12399:\nURL: https://github.com/apache/arrow/pull/12399#issuecomment-1041512655\n\n\n   Benchmark runs are scheduled for baseline = 12490eb7a39cb2ceab87f0c1b9183dfe7ffd1507 and contender = 07db461daad60792f7bffea4532e2ed813c2f7b8. 07db461daad60792f7bffea4532e2ed813c2f7b8 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Failed] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/cafa340c5eef45288be8e50cc4f6f927...76a9c9d9ba9041c0b8f85e2e38a3436b/)\n   [Failed] [test-mac-arm](https://conbench.ursa.dev/compare/runs/0cbf26b0f11649078918fcd8d619aec6...4eba51f719f04a0aa17623c43d1e4264/)\n   [Failed] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f483880537304c3183e1972e22a4811e...c5291ca2c7e5481b824811831efa3d8a/)\n   [Failed] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/c02da61725cb4750beb7474e708d030d...3af7f51b99974dd19c4a35328fd550ae/)\n   Supported benchmarks:\n   ec2-t3-xlarge-us-east-2: Supported benchmark langs: Python. Runs only benchmarks with cloud = True\n   test-mac-arm: Supported benchmark langs: C++, Python, R\n   ursa-i9-9960x: Supported benchmark langs: Python, R, JavaScript\n   ursa-thinkcentre-m75q: Supported benchmark langs: C++, Java\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2022-02-17T01:21:38.795+0000",
                    "updated": "2022-02-17T01:21:38.795+0000",
                    "started": "2022-02-17T01:21:38.795+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "728620",
                    "issueId": "13415606"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 10200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@372273a2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@442bf737[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1e3af155[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5333fea[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13af7f1c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@20ebb013[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@69124d02[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7542f3a5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1dfd358e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@606b650a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b6a4e58[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@79d7494b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10200,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Feb 16 13:44:40 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-02-16T13:44:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14993/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-12-06T13:55:27.000+0000",
        "updated": "2022-02-17T01:21:39.000+0000",
        "timeoriginalestimate": null,
        "description": "The CSV writer in C++ is still relatively new and has no benchmarks; now that it's getting some more work done (e.g. ARROW-14905, ARROW-14906) we should add benchmarks to track its performance and guard against regressions.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Benchmark CSV writer",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13415606/comment/17493243",
                    "id": "17493243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 12399\n[https://github.com/apache/arrow/pull/12399]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=yibocai",
                        "name": "yibocai",
                        "key": "yibo",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=yibo&avatarId=47542",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=yibo&avatarId=47542",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=yibo&avatarId=47542",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=yibo&avatarId=47542"
                        },
                        "displayName": "Yibo Cai",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-02-16T13:44:40.828+0000",
                    "updated": "2022-02-16T13:44:40.828+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0xe2w:",
        "customfield_12314139": null
    }
}