{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13216635",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635",
    "key": "ARROW-4626",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12592493",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12592493",
                "type": {
                    "id": "12310051",
                    "name": "Supercedes",
                    "inward": "is superceded by",
                    "outward": "supercedes",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310051"
                },
                "outwardIssue": {
                    "id": "13226802",
                    "key": "ARROW-5143",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226802",
                    "fields": {
                        "summary": "[Flight] Enable integration testing of batches with dictionaries",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                            "name": "Closed",
                            "id": "6",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334621",
                "id": "12334621",
                "name": "FlightRPC"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328932",
                "id": "12328932",
                "name": "Format"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
            "name": "lidavidm",
            "key": "lidavidm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "David Li",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 62400,
            "total": 62400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 62400,
            "total": 62400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4626/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 111,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/239744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282\n \n \n   Also covers [ARROW-4627](https://issues.apache.org/jira/browse/ARROW-4627).\r\n   \r\n   This is quite an enormous change, if preferred, I can do my best to try and separate changes.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-09T13:40:35.884+0000",
                    "updated": "2019-05-09T13:40:35.884+0000",
                    "started": "2019-05-09T13:40:35.883+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "239744",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284257764\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.h\n ##########\n @@ -57,6 +57,33 @@ class ARROW_EXPORT FlightCallOptions {\n   TimeoutDuration timeout;\n };\n \n+/// \\brief A RecordBatchReader that also exposes application-defined\n+/// metadata from the Flight protocol.\n+class ARROW_EXPORT FlightStreamReader : public RecordBatchReader {\n+ public:\n+  virtual ~FlightStreamReader();\n+  virtual Status ReadWithMetadata(std::shared_ptr<RecordBatch>* out,\n+                                  std::shared_ptr<Buffer>* app_metadata) = 0;\n+};\n+\n+/// \\brief A RecordBatchReader that also allows sending\n \n Review comment:\n   \"RecordBatchWriter\"\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.571+0000",
                    "updated": "2019-05-15T14:20:45.571+0000",
                    "started": "2019-05-15T14:20:45.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242513",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284265306\n \n \n\n ##########\n File path: cpp/src/arrow/flight/test-integration-client.cc\n ##########\n @@ -68,14 +78,27 @@ arrow::Status ReadToTable(std::unique_ptr<arrow::ipc::internal::json::JsonReader\n                                          retrieved_data);\n }\n \n-/// \\brief Helper to copy a RecordBatchReader to a RecordBatchWriter.\n-arrow::Status CopyReaderToWriter(std::unique_ptr<arrow::RecordBatchReader>& reader,\n-                                 arrow::ipc::RecordBatchWriter& writer) {\n+/// \\brief Upload the contents of a RecordBatchReader to a Flight\n+/// server, validating the application metadata on the side.\n+arrow::Status UploadReaderToFlight(std::unique_ptr<arrow::RecordBatchReader>& reader,\n \n Review comment:\n   You can simply pass a `arrow::RecordBatchReader*` if you're not taking ownership.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.586+0000",
                    "updated": "2019-05-15T14:20:45.586+0000",
                    "started": "2019-05-15T14:20:45.586+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242514",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284255641\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.cc\n ##########\n @@ -203,6 +312,10 @@ class DoPutPayloadWriter : public ipc::internal::IpcPayloadWriter {\n       first_payload_ = false;\n     }\n \n+    if (stream_writer_->app_metadata_) {\n+      payload.app_metadata = stream_writer_->app_metadata_;\n \n Review comment:\n   Should this use `std::move` too?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.609+0000",
                    "updated": "2019-05-15T14:20:45.609+0000",
                    "started": "2019-05-15T14:20:45.609+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242515",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284270078\n \n \n\n ##########\n File path: format/Flight.proto\n ##########\n @@ -296,7 +301,8 @@ message FlightData {\n }\n \n /**\n- * The response message (currently empty) associated with the submission of a\n- * DoPut.\n+ * The response message associated with the submission of a DoPut.\n  */\n-message PutResult {}\n+message PutResult {\n+  bytes data_app_metadata = 1;\n \n Review comment:\n   Same here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.736+0000",
                    "updated": "2019-05-15T14:20:45.736+0000",
                    "started": "2019-05-15T14:20:45.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242516",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242517",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284269968\n \n \n\n ##########\n File path: format/Flight.proto\n ##########\n @@ -286,6 +286,11 @@ message FlightData {\n    */\n   bytes data_header = 2;\n \n+  /*\n+   * Application-defined metadata.\n+   */\n+  bytes data_app_metadata = 3;\n \n Review comment:\n   Isn't \"app_metadata\" sufficient?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.796+0000",
                    "updated": "2019-05-15T14:20:45.796+0000",
                    "started": "2019-05-15T14:20:45.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242517",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242518",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284270869\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -47,17 +48,52 @@ def do_get(self, context, ticket):\n         return flight.RecordBatchStream(table)\n \n \n+class MetadataFlightServer(flight.FlightServerBase):\n+    \"\"\"A Flight server that numbers incoming/outgoing data.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        data = [\n+            pa.array([-10, -5, 0, 5, 10])\n+        ]\n+        table = pa.Table.from_arrays(data, names=['a'])\n+        return flight.GeneratorStream(\n+            table.schema,\n+            MetadataFlightServer.number_batches(table))\n \n Review comment:\n   Can simply write `self.number_batches(table)`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:45.919+0000",
                    "updated": "2019-05-15T14:20:45.919+0000",
                    "started": "2019-05-15T14:20:45.918+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242518",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242519",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284272085\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -47,17 +48,52 @@ def do_get(self, context, ticket):\n         return flight.RecordBatchStream(table)\n \n \n+class MetadataFlightServer(flight.FlightServerBase):\n+    \"\"\"A Flight server that numbers incoming/outgoing data.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        data = [\n+            pa.array([-10, -5, 0, 5, 10])\n+        ]\n+        table = pa.Table.from_arrays(data, names=['a'])\n+        return flight.GeneratorStream(\n+            table.schema,\n+            MetadataFlightServer.number_batches(table))\n+\n+    def do_put(self, context, descriptor, reader, writer):\n+        counter = 0\n+        while True:\n+            try:\n+                batch, buf = reader.read_with_metadata()\n \n Review comment:\n   `batch` is not validated at some point?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.080+0000",
                    "updated": "2019-05-15T14:20:46.080+0000",
                    "started": "2019-05-15T14:20:46.079+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242519",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242520",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284275301\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -97,9 +128,14 @@ cdef class Result:\n \n \n class DescriptorType(enum.Enum):\n+    \"\"\"The type of a FlightDescriptor.\"\"\"\n+\n     UNKNOWN = 0\n+    \"\"\"An unknown descriptor type.\"\"\"\n \n Review comment:\n   Docstrings intertwined with regular code like this won't be introspected.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.238+0000",
                    "updated": "2019-05-15T14:20:46.238+0000",
                    "started": "2019-05-15T14:20:46.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242520",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242521",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284273780\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -47,17 +48,52 @@ def do_get(self, context, ticket):\n         return flight.RecordBatchStream(table)\n \n \n+class MetadataFlightServer(flight.FlightServerBase):\n+    \"\"\"A Flight server that numbers incoming/outgoing data.\"\"\"\n+\n+    def do_get(self, context, ticket):\n+        data = [\n+            pa.array([-10, -5, 0, 5, 10])\n+        ]\n+        table = pa.Table.from_arrays(data, names=['a'])\n+        return flight.GeneratorStream(\n+            table.schema,\n+            MetadataFlightServer.number_batches(table))\n+\n+    def do_put(self, context, descriptor, reader, writer):\n+        counter = 0\n+        while True:\n+            try:\n+                batch, buf = reader.read_with_metadata()\n+                assert buf is not None\n+                client_counter, = struct.unpack('<i', buf.to_pybytes())\n+                assert counter == client_counter\n+                writer.write(struct.pack('<i', counter))\n+                counter += 1\n+            except StopIteration:\n \n Review comment:\n   Raising `StopIteration` doesn't sound great for a regular function or method. Perhaps return `None` instead?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.250+0000",
                    "updated": "2019-05-15T14:20:46.250+0000",
                    "started": "2019-05-15T14:20:46.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242521",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242522",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284274329\n \n \n\n ##########\n File path: python/pyarrow/tests/test_flight.py\n ##########\n @@ -345,3 +385,49 @@ def test_token_auth_invalid():\n         client = flight.FlightClient.connect('localhost', server_port)\n         with pytest.raises(pa.ArrowException, match=\".*unauthenticated.*\"):\n             client.authenticate(TokenClientAuthHandler('test', 'wrong'))\n+\n+\n+def test_flight_do_get_metadata():\n+    \"\"\"Try a simple do_get call with metadata.\"\"\"\n+    data = [\n+        pa.array([-10, -5, 0, 5, 10])\n+    ]\n+    table = pa.Table.from_arrays(data, names=['a'])\n+\n+    batches = []\n+    with flight_server(MetadataFlightServer) as server_port:\n+        client = flight.FlightClient.connect('localhost', server_port)\n+        reader = client.do_get(flight.Ticket(b''))\n+        idx = 0\n+        while True:\n+            try:\n+                batch, metadata = reader.read_with_metadata()\n+                batches.append(batch)\n+                server_idx, = struct.unpack('<i', metadata.to_pybytes())\n+                assert idx == server_idx\n+                idx += 1\n+            except StopIteration:\n \n Review comment:\n   Same remark wrt. `StopIteration`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.295+0000",
                    "updated": "2019-05-15T14:20:46.295+0000",
                    "started": "2019-05-15T14:20:46.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242522",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242523",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284281144\n \n \n\n ##########\n File path: docs/source/format/Flight.rst\n ##########\n @@ -0,0 +1,106 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+Arrow Flight RPC\n \n Review comment:\n   Thanks for the doc additions!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.422+0000",
                    "updated": "2019-05-15T14:20:46.422+0000",
                    "started": "2019-05-15T14:20:46.421+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242523",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284277127\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -292,12 +331,136 @@ cdef class FlightInfo:\n         return result\n \n \n-cdef class FlightRecordBatchReader(_CRecordBatchReader, _ReadPandasOption):\n+cdef class FlightStreamReader(_CRecordBatchReader, _ReadPandasOption):\n+    \"\"\"A RecordBatchReader that also allows reading application metadata.\"\"\"\n+\n     cdef dict __dict__\n \n+    cdef readonly:\n+        Schema schema\n+\n+    def read_with_metadata(self):\n+        \"\"\"Read the next RecordBatch along with any metadata.\n+\n+        Returns\n+        -------\n+        batch : RecordBatch\n+            The next RecordBatch in the stream.\n+        metadata : Buffer or None\n+            Application-specific metadata for the batch as defined by\n+            Flight.\n+        \"\"\"\n+        cdef:\n+            shared_ptr[CRecordBatch] batch\n+            shared_ptr[CBuffer] app_metadata\n+\n+        with nogil:\n+            check_status((<CFlightStreamReader*> self.reader.get())\n+                         .ReadWithMetadata(&batch, &app_metadata))\n+\n+        if batch.get() == NULL:\n+            raise StopIteration\n+\n+        if app_metadata != NULL:\n+            metadata = pyarrow_wrap_buffer(app_metadata)\n+        else:\n+            metadata = None\n+\n+        return pyarrow_wrap_batch(batch), metadata\n+\n+\n+cdef class FlightMessageReader(_CRecordBatchReader, _ReadPandasOption):\n \n Review comment:\n   So this is exactly identical to `FlightStreamReader`, except that the implementation casts its reader to `CFlightMessageReader*` instead of `CFlightStreamReader*`. Is there a way to reconcile this? Perhaps we can have a common C++ interface (with different implementations potentially)...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.427+0000",
                    "updated": "2019-05-15T14:20:46.427+0000",
                    "started": "2019-05-15T14:20:46.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242524",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242525",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284279297\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -424,31 +595,38 @@ cdef class FlightClient:\n         cdef:\n             # TODO: introduce unwrap\n             CTicket c_ticket\n-            unique_ptr[CRecordBatchReader] reader\n+            unique_ptr[CFlightStreamReader] reader\n             CFlightCallOptions* c_options = FlightCallOptions.unwrap(options)\n \n         c_ticket.ticket = ticket.ticket\n         with nogil:\n             check_status(\n                 self.client.get().DoGet(deref(c_options), c_ticket, &reader))\n-        result = FlightRecordBatchReader()\n+        result = FlightStreamReader()\n         result.reader.reset(reader.release())\n+        result.schema = pyarrow_wrap_schema(result.reader.get().schema())\n         return result\n \n     def do_put(self, descriptor: FlightDescriptor, schema: Schema,\n                options: FlightCallOptions = None):\n         \"\"\"Upload data to a flight.\"\"\"\n \n Review comment:\n   Document return type?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.457+0000",
                    "updated": "2019-05-15T14:20:46.457+0000",
                    "started": "2019-05-15T14:20:46.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242525",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242526",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284277428\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -292,12 +331,136 @@ cdef class FlightInfo:\n         return result\n \n \n-cdef class FlightRecordBatchReader(_CRecordBatchReader, _ReadPandasOption):\n+cdef class FlightStreamReader(_CRecordBatchReader, _ReadPandasOption):\n+    \"\"\"A RecordBatchReader that also allows reading application metadata.\"\"\"\n+\n     cdef dict __dict__\n \n+    cdef readonly:\n+        Schema schema\n+\n+    def read_with_metadata(self):\n+        \"\"\"Read the next RecordBatch along with any metadata.\n+\n+        Returns\n+        -------\n+        batch : RecordBatch\n+            The next RecordBatch in the stream.\n+        metadata : Buffer or None\n+            Application-specific metadata for the batch as defined by\n+            Flight.\n+        \"\"\"\n+        cdef:\n+            shared_ptr[CRecordBatch] batch\n+            shared_ptr[CBuffer] app_metadata\n+\n+        with nogil:\n+            check_status((<CFlightStreamReader*> self.reader.get())\n+                         .ReadWithMetadata(&batch, &app_metadata))\n+\n+        if batch.get() == NULL:\n+            raise StopIteration\n+\n+        if app_metadata != NULL:\n+            metadata = pyarrow_wrap_buffer(app_metadata)\n+        else:\n+            metadata = None\n+\n+        return pyarrow_wrap_batch(batch), metadata\n \n Review comment:\n   I think it would be nicer to return a namedtuple, perhaps with fields named `batch` and `metadata` (or `app_metadata`).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:46.466+0000",
                    "updated": "2019-05-15T14:20:46.466+0000",
                    "started": "2019-05-15T14:20:46.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242526",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284254257\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.cc\n ##########\n @@ -162,23 +199,95 @@ class FlightIpcMessageReader : public ipc::MessageReader {\n     return std::move(st);\n   }\n \n+ private:\n+  GrpcStreamReader* flight_reader_;\n   // The RPC context lifetime must be coupled to the ClientReader\n   std::unique_ptr<ClientRpc> rpc_;\n   std::unique_ptr<grpc::ClientReader<pb::FlightData>> stream_;\n   bool stream_finished_;\n };\n \n+GrpcStreamReader::GrpcStreamReader() {}\n+\n+Status GrpcStreamReader::Open(std::unique_ptr<ClientRpc> rpc,\n+                              std::unique_ptr<grpc::ClientReader<pb::FlightData>> stream,\n+                              std::unique_ptr<GrpcStreamReader>* out) {\n+  *out = std::unique_ptr<GrpcStreamReader>(new GrpcStreamReader);\n+  std::unique_ptr<GrpcIpcMessageReader> message_reader(\n+      new GrpcIpcMessageReader(out->get(), std::move(rpc), std::move(stream)));\n+  return ipc::RecordBatchStreamReader::Open(std::move(message_reader),\n+                                            &(*out)->batch_reader_);\n+}\n+\n+std::shared_ptr<Schema> GrpcStreamReader::schema() const {\n+  return batch_reader_->schema();\n+}\n+\n+Status GrpcStreamReader::ReadNext(std::shared_ptr<RecordBatch>* out) {\n+  std::shared_ptr<Buffer> app_metadata;\n+  return ReadWithMetadata(out, &app_metadata);\n+}\n+\n+Status GrpcStreamReader::ReadWithMetadata(std::shared_ptr<RecordBatch>* out,\n+                                          std::shared_ptr<Buffer>* app_metadata) {\n+  RETURN_NOT_OK(batch_reader_->ReadNext(out));\n+  *app_metadata = last_app_metadata_;\n \n Review comment:\n   Shouldn't we use `std::move` here, so that the buffer doesn't stay around when the client doesn't need it anymore?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:47.968+0000",
                    "updated": "2019-05-15T14:20:47.968+0000",
                    "started": "2019-05-15T14:20:47.967+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242527",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284250791\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.h\n ##########\n @@ -57,6 +57,33 @@ class ARROW_EXPORT FlightCallOptions {\n   TimeoutDuration timeout;\n };\n \n+/// \\brief A RecordBatchReader that also exposes application-defined\n+/// metadata from the Flight protocol.\n+class ARROW_EXPORT FlightStreamReader : public RecordBatchReader {\n+ public:\n+  virtual ~FlightStreamReader();\n+  virtual Status ReadWithMetadata(std::shared_ptr<RecordBatch>* out,\n+                                  std::shared_ptr<Buffer>* app_metadata) = 0;\n+};\n+\n+/// \\brief A RecordBatchReader that also allows sending\n+/// application-defined metadata via the Flight protocol.\n+class ARROW_EXPORT FlightStreamWriter : public ipc::RecordBatchWriter {\n+ public:\n+  virtual Status WriteWithMetadata(const RecordBatch& batch,\n+                                   std::shared_ptr<Buffer> app_metadata,\n+                                   bool allow_64bit = false) = 0;\n \n Review comment:\n   Would it make sense to have the following signature instead:\r\n   ```cpp\r\n   Status WriteWithMetadata(const RecordBatch& batch,\r\n     std::shared_ptr<Buffer> app_metadata,\r\n     bool allow_64bit = false, std::shared_ptr<Buffer>* response_metadata = nullptr) = 0;\r\n   ```\r\n   where `response_metadata` would receive the metadata sent back by the peer?\r\n   \r\n   Or do we want to allow a number of \"return\" metadata independent from the number of batches sent?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T14:20:49.344+0000",
                    "updated": "2019-05-15T14:20:49.344+0000",
                    "started": "2019-05-15T14:20:49.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242528",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284350998\n \n \n\n ##########\n File path: cpp/src/arrow/flight/client.h\n ##########\n @@ -57,6 +57,33 @@ class ARROW_EXPORT FlightCallOptions {\n   TimeoutDuration timeout;\n };\n \n+/// \\brief A RecordBatchReader that also exposes application-defined\n+/// metadata from the Flight protocol.\n+class ARROW_EXPORT FlightStreamReader : public RecordBatchReader {\n+ public:\n+  virtual ~FlightStreamReader();\n+  virtual Status ReadWithMetadata(std::shared_ptr<RecordBatch>* out,\n+                                  std::shared_ptr<Buffer>* app_metadata) = 0;\n+};\n+\n+/// \\brief A RecordBatchReader that also allows sending\n+/// application-defined metadata via the Flight protocol.\n+class ARROW_EXPORT FlightStreamWriter : public ipc::RecordBatchWriter {\n+ public:\n+  virtual Status WriteWithMetadata(const RecordBatch& batch,\n+                                   std::shared_ptr<Buffer> app_metadata,\n+                                   bool allow_64bit = false) = 0;\n \n Review comment:\n   I think the two should be fully independent, especially as I don't want to block writes on reads (though that does raise the point that we should test that thoroughly!). Or perhaps are we worried that other RPC transports might not support fully bidirectional communication?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T16:45:08.007+0000",
                    "updated": "2019-05-15T16:45:08.007+0000",
                    "started": "2019-05-15T16:45:08.007+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242651",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242654",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284351516\n \n \n\n ##########\n File path: python/pyarrow/_flight.pyx\n ##########\n @@ -292,12 +331,136 @@ cdef class FlightInfo:\n         return result\n \n \n-cdef class FlightRecordBatchReader(_CRecordBatchReader, _ReadPandasOption):\n+cdef class FlightStreamReader(_CRecordBatchReader, _ReadPandasOption):\n+    \"\"\"A RecordBatchReader that also allows reading application metadata.\"\"\"\n+\n     cdef dict __dict__\n \n+    cdef readonly:\n+        Schema schema\n+\n+    def read_with_metadata(self):\n+        \"\"\"Read the next RecordBatch along with any metadata.\n+\n+        Returns\n+        -------\n+        batch : RecordBatch\n+            The next RecordBatch in the stream.\n+        metadata : Buffer or None\n+            Application-specific metadata for the batch as defined by\n+            Flight.\n+        \"\"\"\n+        cdef:\n+            shared_ptr[CRecordBatch] batch\n+            shared_ptr[CBuffer] app_metadata\n+\n+        with nogil:\n+            check_status((<CFlightStreamReader*> self.reader.get())\n+                         .ReadWithMetadata(&batch, &app_metadata))\n+\n+        if batch.get() == NULL:\n+            raise StopIteration\n+\n+        if app_metadata != NULL:\n+            metadata = pyarrow_wrap_buffer(app_metadata)\n+        else:\n+            metadata = None\n+\n+        return pyarrow_wrap_batch(batch), metadata\n+\n+\n+cdef class FlightMessageReader(_CRecordBatchReader, _ReadPandasOption):\n \n Review comment:\n   Good point, I'll try to wrangle some of the duplication here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T16:46:23.292+0000",
                    "updated": "2019-05-15T16:46:23.292+0000",
                    "started": "2019-05-15T16:46:23.291+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242654",
                    "issueId": "13216635"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/worklog/242657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lihalite commented on pull request #4282: ARROW-4626: [Flight] Add application-defined metadata to DoGet/DoPut\nURL: https://github.com/apache/arrow/pull/4282#discussion_r284351786\n \n \n\n ##########\n File path: docs/source/format/Flight.rst\n ##########\n @@ -0,0 +1,106 @@\n+.. Licensed to the Apache Software Foundation (ASF) under one\n+.. or more contributor license agreements.  See the NOTICE file\n+.. distributed with this work for additional information\n+.. regarding copyright ownership.  The ASF licenses this file\n+.. to you under the Apache License, Version 2.0 (the\n+.. \"License\"); you may not use this file except in compliance\n+.. with the License.  You may obtain a copy of the License at\n+\n+..   http://www.apache.org/licenses/LICENSE-2.0\n+\n+.. Unless required by applicable law or agreed to in writing,\n+.. software distributed under the License is distributed on an\n+.. \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+.. KIND, either express or implied.  See the License for the\n+.. specific language governing permissions and limitations\n+.. under the License.\n+\n+Arrow Flight RPC\n \n Review comment:\n   Of course! We have teams that wanted fuller docs, so hope this is a reasonable starting point.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-05-15T16:47:13.870+0000",
                    "updated": "2019-05-15T16:47:13.870+0000",
                    "started": "2019-05-15T16:47:13.870+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "242657",
                    "issueId": "13216635"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 62400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@3a3c34a3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1550e2eb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7366ae01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@61b35d3c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@732728a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@fea6cb8[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@49badde2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@329b3354[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2629b1af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7afa967e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6530010e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@eda8f6f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 62400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 26 19:21:25 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-26T19:21:25.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4626/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-02-19T13:58:10.000+0000",
        "updated": "2020-07-01T13:38:24.000+0000",
        "timeoriginalestimate": null,
        "description": "As [proposed on the mailing list|https://lists.apache.org/thread.html/c550264cd60e000d77e10d9d7ac81ea8c49efc37ad447177fa8ee4ee@%3Cdev.arrow.apache.org%3E], we should add a field for application-specific metadata in DoGet payloads and expose this in the APIs. The current APIs are rather RecordBatch-oriented, though.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "17h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 62400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Flight] Add application metadata field to DoGet",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13216635/comment/16873609",
                    "id": "16873609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 4282\n[https://github.com/apache/arrow/pull/4282]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-26T19:21:25.098+0000",
                    "updated": "2019-06-26T19:21:25.098+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|yi14uo:",
        "customfield_12314139": null
    }
}