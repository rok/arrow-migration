{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13250190",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190",
    "key": "ARROW-6208",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pprudhvi",
            "name": "pprudhvi",
            "key": "pprudhvi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Prudhvi Porandla",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6208/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/292930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T06:53:51.521+0000",
                    "updated": "2019-08-12T06:53:51.521+0000",
                    "started": "2019-08-12T06:53:51.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292930",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/292933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312796096\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   the purpose is to compare memory segment in lexicographic order, right?\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T07:01:15.078+0000",
                    "updated": "2019-08-12T07:01:15.078+0000",
                    "started": "2019-08-12T07:01:15.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292933",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/292951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520324029\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=h1) Report\n   > Merging [#5063](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/5daba72aef8810940b5bfadb807851f87c219020?src=pr&el=desc) will **increase** coverage by `1.68%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5063/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #5063      +/-   ##\n   =========================================\n   + Coverage   88.02%   89.7%   +1.68%     \n   =========================================\n     Files         919     670     -249     \n     Lines      135068   99383   -35685     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       118895   89156   -29739     \n   + Misses      16163   10227    -5936     \n   + Partials       10       0      -10\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [js/src/builder/index.ts](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-anMvc3JjL2J1aWxkZXIvaW5kZXgudHM=) | | |\n   | [r/src/arrow\\_types.h](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9zcmMvYXJyb3dfdHlwZXMuaA==) | | |\n   | ... and [243 more](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=footer). Last update [5daba72...488ae5f](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T07:33:34.096+0000",
                    "updated": "2019-08-12T07:33:34.096+0000",
                    "started": "2019-08-12T07:33:34.095+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292951",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312857562\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   yes. I added a unittest, please take a look.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T10:17:40.218+0000",
                    "updated": "2019-08-12T10:17:40.218+0000",
                    "started": "2019-08-12T10:17:40.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293031",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293040",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312866626\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   @pprudhvi thanks for your effort.\r\n   I think we need to address two problems here:\r\n   \r\n   1) we need to check the byte order before we decide if we need to reserve bytes.\r\n   2) we must make sure that comparing long values in endian order is identical to comparing 8 bytes in lexicographic order.\r\n   \r\n   I have a little doubtful about 2). If you have an answer to it, please let me know. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T10:47:30.230+0000",
                    "updated": "2019-08-12T10:47:30.230+0000",
                    "started": "2019-08-12T10:47:30.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293040",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pprudhvi commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312880141\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   The following prints 2^24\r\n   \r\n   ```\r\n       ArrowBuf left = allocator.buffer(4);\r\n       left.setByte(0, 0);\r\n       left.setByte(1, 0);\r\n       left.setByte(2, 0);\r\n       left.setByte(3, 1);\r\n       System.out.println(PlatformDependent.getInt(left.memoryAddress()));\r\n       left.close();\r\n   ```\r\n   this means the bytes are assumed to be in little endian format while reading as int. Directly comparing int won't be the same as comparing in lexicographic order\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T11:32:22.135+0000",
                    "updated": "2019-08-12T11:32:22.135+0000",
                    "started": "2019-08-12T11:32:22.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293086",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293090",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520324029\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=h1) Report\n   > Merging [#5063](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/6381043a6ea66ac2f8c69cdaabf0b5c96ee66152?src=pr&el=desc) will **increase** coverage by `1.67%`.\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5063/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##           master   #5063      +/-   ##\n   =========================================\n   + Coverage   88.02%   89.7%   +1.67%     \n   =========================================\n     Files         919     670     -249     \n     Lines      135068   99383   -35685     \n     Branches     1418       0    -1418     \n   =========================================\n   - Hits       118898   89154   -29744     \n   + Misses      16160   10229    -5931     \n   + Partials       10       0      -10\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/util/thread-pool-test.cc](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy91dGlsL3RocmVhZC1wb29sLXRlc3QuY2M=) | `97.66% <0%> (-0.94%)` | :arrow_down: |\n   | [r/src/recordbatch.cpp](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9zcmMvcmVjb3JkYmF0Y2guY3Bw) | | |\n   | [r/R/Table.R](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9SL1RhYmxlLlI=) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [r/src/symbols.cpp](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-ci9zcmMvc3ltYm9scy5jcHA=) | | |\n   | [rust/datafusion/src/execution/projection.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vcHJvamVjdGlvbi5ycw==) | | |\n   | [rust/datafusion/src/execution/filter.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZmlsdGVyLnJz) | | |\n   | [rust/arrow/src/csv/writer.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY3N2L3dyaXRlci5ycw==) | | |\n   | [rust/datafusion/src/bin/main.rs](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9iaW4vbWFpbi5ycw==) | | |\n   | [js/src/builder/index.ts](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree#diff-anMvc3JjL2J1aWxkZXIvaW5kZXgudHM=) | | |\n   | ... and [242 more](https://codecov.io/gh/apache/arrow/pull/5063/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=footer). Last update [6381043...a5b490d](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T11:51:33.982+0000",
                    "updated": "2019-08-12T11:51:33.982+0000",
                    "started": "2019-08-12T11:51:33.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293090",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293102",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312892213\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   @pprudhvi Maybe I did not make it clear enough. Let me explain the two points in more detail:\r\n   \r\n   1) Some machines are big endian while others are little endian. We should check this before reversing the bytes. If the code is running on a big endian machine, there is no need to reverse bytes.\r\n   \r\n   2) I am not sure if the following two results are always identical when comparing 2 pieces of continuous 8 bytes data:\r\n     a) read both data as longs (in big endian order), and compare the long values.\r\n     b) read both data as 8 bytes, and compare the 8 bytes in sequence, until the first unmatched bytes are found. If all 8 bytes are matched, we return 0.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T12:09:36.983+0000",
                    "updated": "2019-08-12T12:09:36.983+0000",
                    "started": "2019-08-12T12:09:36.983+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293102",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293115",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520405645\n \n \n   Arrow is little endian by definition. No need to deal with big endian.\n   \n   On Mon, Aug 12, 2019, 7:09 AM liyafan82 <notifications@github.com> wrote:\n   \n   > *@liyafan82* commented on this pull request.\n   > ------------------------------\n   >\n   > In\n   > java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n   > <https://github.com/apache/arrow/pull/5063#discussion_r312892213>:\n   >\n   > > @@ -140,7 +140,7 @@ private static int memcmp(\n   >        long leftLong = PlatformDependent.getLong(lPos);\n   >        long rightLong = PlatformDependent.getLong(rPos);\n   >        if (leftLong != rightLong) {\n   > -        return unsignedLongCompare(leftLong, rightLong);\n   > +        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n   >\n   > @pprudhvi <https://github.com/pprudhvi> Maybe I did not make it clear\n   > enough. Let me explain the two points in more detail:\n   >\n   >    1.\n   >\n   >    Some machines are big endian while others are little endian. We should\n   >    check this before reversing the bytes. If the code is running on a big\n   >    endian machine, there is no need to reverse bytes.\n   >    2.\n   >\n   >    I am not sure if the following two results are always identical when\n   >    comparing 2 pieces of continuous 8 bytes data:\n   >    a) read both data as longs (in big endian order), and compare the long\n   >    values.\n   >    b) read both data as 8 bytes, and compare the 8 bytes in sequence,\n   >    until the first unmatched bytes are found. If all 8 bytes are matched, we\n   >    return 0.\n   >\n   > \u2014\n   > You are receiving this because you are subscribed to this thread.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/5063?email_source=notifications&email_token=AABMYNTZZ733N7VOWNFJ34DQEFHIDA5CNFSM4IK6LHHKYY3PNVWWK3TUL52HS4DFWFIHK3DMKJSXC5LFON2FEZLWNFSXPKTDN5WW2ZLOORPWSZGOCBHZIRY#discussion_r312892213>,\n   > or mute the thread\n   > <https://github.com/notifications/unsubscribe-auth/AABMYNQIJRWRW2IYK5ZYEVTQEFHIDANCNFSM4IK6LHHA>\n   > .\n   >\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T12:32:18.033+0000",
                    "updated": "2019-08-12T12:32:18.033+0000",
                    "started": "2019-08-12T12:32:18.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293115",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293150",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on pull request #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#discussion_r312936160\n \n \n\n ##########\n File path: java/memory/src/main/java/org/apache/arrow/memory/util/ByteFunctionHelpers.java\n ##########\n @@ -140,7 +140,7 @@ private static int memcmp(\n       long leftLong = PlatformDependent.getLong(lPos);\n       long rightLong = PlatformDependent.getLong(rPos);\n       if (leftLong != rightLong) {\n-        return unsignedLongCompare(leftLong, rightLong);\n+        return unsignedLongCompare(Long.reverseBytes(leftLong), Long.reverseBytes(rightLong));\n \n Review comment:\n   the arrow buffers are always encoded in little-endian, and java is always in big-endian. so, I think we don't need to check endianness again.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-12T13:54:27.203+0000",
                    "updated": "2019-08-12T13:54:27.203+0000",
                    "started": "2019-08-12T13:54:27.202+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293150",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293545",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520664247\n \n \n   @jacques-n and @pravindra Thanks a lot for your information.\r\n   \r\n   I am wondering how is this achieved (Arrow is always in little endian). For example, the call stack for IntVector#getInt is \r\n   \r\n   IntVector#getInt -> ArrowBuf#getInt -> PlatformDependent#getInt -> PlatformDependent0#getInt -> UNSAFE#getInt\r\n   \r\n   Since UNSAFE#getInt's behavior (little endian or big endian) is platform dependent, the behavior of IntVector#getInt is also platform dependent. \r\n   \r\n   Please correct me where I am wrong. Thank you very much.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T02:28:22.094+0000",
                    "updated": "2019-08-13T02:28:22.094+0000",
                    "started": "2019-08-13T02:28:22.094+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293545",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/293853",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520808710\n \n \n   > Since UNSAFE#getInt's behavior (little endian or big endian) is platform dependent, \r\n   > the behavior of IntVector#getInt is also platform dependent.\r\n   \r\n   I think you are right, we probably do all our testing on little endian machines and so, haven't hit this. Per the arrow spec, the buffers should always be LE and if PlatformDependant doesn't always guarantee LE, we need to have wrappers above it.\r\n   \r\n   I see that in a similar impl in guava, they do reverseBytes() based on the native order for the platform. https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/LittleEndianByteArray.java\r\n   \r\n   This code has been around forever, so it's possible I'm confused - I'll double check and confirm.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-13T12:10:54.809+0000",
                    "updated": "2019-08-13T12:10:54.809+0000",
                    "started": "2019-08-13T12:10:54.809+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "293853",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294429",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521094608\n \n \n   > > Since UNSAFE#getInt's behavior (little endian or big endian) is platform dependent,\r\n   > > the behavior of IntVector#getInt is also platform dependent.\r\n   > \r\n   > I think you are right, we probably do all our testing on little endian machines and so, haven't hit this. Per the arrow spec, the buffers should always be LE and if PlatformDependant doesn't always guarantee LE, we need to have wrappers above it.\r\n   > \r\n   > I see that in a similar impl in guava, they do reverseBytes() based on the native order for the platform. https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/LittleEndianByteArray.java\r\n   > \r\n   > This code has been around forever, so it's possible I'm confused - I'll double check and confirm.\r\n   \r\n   @pravindra Thanks a lot for the effort.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T04:11:08.576+0000",
                    "updated": "2019-08-14T04:11:08.576+0000",
                    "started": "2019-08-14T04:11:08.575+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294429",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-520324029\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@2723884`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5063/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #5063   +/-   ##\n   =========================================\n     Coverage          ?   89.74%           \n   =========================================\n     Files             ?      672           \n     Lines             ?   100352           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    90060           \n     Misses            ?    10292           \n     Partials          ?        0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=footer). Last update [2723884...fbf1341](https://codecov.io/gh/apache/arrow/pull/5063?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T08:16:26.222+0000",
                    "updated": "2019-08-14T08:16:26.222+0000",
                    "started": "2019-08-14T08:16:26.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294593",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521165859\n \n \n   @pprudhvi has added the check for the platform endianness before reversing the bytes. And, tests for this use-case.\r\n   \r\n   @liyafan82 can you please give an example for the second issue that you raised ? i.e why would the unsigned-long compare be different from the byte-by-byte compare (after fixing the endianness) ?\r\n   \r\n   Regarding the use of PlatformDependant macros, I'll follow up and raise new jiras if required. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T09:06:58.203+0000",
                    "updated": "2019-08-14T09:06:58.203+0000",
                    "started": "2019-08-14T09:06:58.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294625",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521193338\n \n \n   > @pprudhvi has added the check for the platform endianness before reversing the bytes. And, tests for this use-case.\r\n   > \r\n   > @liyafan82 can you please give an example for the second issue that you raised ? i.e why would the unsigned-long compare be different from the byte-by-byte compare (after fixing the endianness) ?\r\n   > \r\n   > Regarding the use of PlatformDependant macros, I'll follow up and raise new jiras if required.\r\n   \r\n   @pravindra \r\n   I can think of such an example. Without loss of generality, suppose we compare by int rather than long. \r\n   \r\n   Suppose we have two ints:\r\n   int a = 0x000000ff;\r\n   int b = 0x0000007f;\r\n   \r\n   If we compare by int, we have a > b,  since a = 255 and b = 127.\r\n   If we compare them by bytes (in big endian), we have the first 3 bytes equal (all equal to 0). \r\n   For the last byte, for a we have 0xff which is -1, and for b we have 0x7f, which is 127. \r\n   So we get a < b.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T10:34:36.736+0000",
                    "updated": "2019-08-14T10:34:36.736+0000",
                    "started": "2019-08-14T10:34:36.735+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294672",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294699",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521208546\n \n \n   @liyafan82 we are doing an unsigned comparison in this functions for both byte-level (compare after 0xff) and int-level (unsignedIntCompare). With the unsigned compare, a > b in either case.\r\n   \r\n    \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T11:30:32.437+0000",
                    "updated": "2019-08-14T11:30:32.437+0000",
                    "started": "2019-08-14T11:30:32.436+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294699",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521216107\n \n \n   > @liyafan82 we are doing an unsigned comparison in this functions for both byte-level (compare after 0xff) and int-level (unsignedIntCompare). With the unsigned compare, a > b in either case.\r\n   \r\n   @pravindra I see. Thanks a lot.\r\n   Although we do not have a unsignedByteCompare method, we are actually comparing bytes as unsigned bytes.\r\n   So problem 2 is no longer a problem. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T11:57:14.287+0000",
                    "updated": "2019-08-14T11:57:14.287+0000",
                    "started": "2019-08-14T11:57:14.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294712",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/294790",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jacques-n commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521276547\n \n \n   I believe arrow has code (in the allocator?) where we simply throw\n   unsupported on big endian systems. The Java code doesn't support running on\n   big endian systems at all. This is unsupported.\n   \n   On Tue, Aug 13, 2019, 7:10 AM Pindikura Ravindra <notifications@github.com>\n   wrote:\n   \n   > Since UNSAFE#getInt's behavior (little endian or big endian) is platform\n   > dependent,\n   > the behavior of IntVector#getInt is also platform dependent.\n   >\n   > I think you are right, we probably do all our testing on little endian\n   > machines and so, haven't hit this. Per the arrow spec, the buffers should\n   > always be LE and if PlatformDependant doesn't always guarantee LE, we need\n   > to have wrappers above it.\n   >\n   > I see that in a similar impl in guava, they do reverseBytes() based on the\n   > native order for the platform.\n   > https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/LittleEndianByteArray.java\n   >\n   > This code has been around forever, so it's possible I'm confused - I'll\n   > double check and confirm.\n   >\n   > \u2014\n   > You are receiving this because you were mentioned.\n   > Reply to this email directly, view it on GitHub\n   > <https://github.com/apache/arrow/pull/5063?email_source=notifications&email_token=AABMYNTE7FQ3ZTCD36PG6RDQEKQE5A5CNFSM4IK6LHHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4FOSBQ#issuecomment-520808710>,\n   > or mute the thread\n   > <https://github.com/notifications/unsubscribe-auth/AABMYNVEPPVJPRUFLFOFLGTQEKQE5ANCNFSM4IK6LHHA>\n   > .\n   >\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-14T14:44:39.657+0000",
                    "updated": "2019-08-14T14:44:39.657+0000",
                    "started": "2019-08-14T14:44:39.656+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "294790",
                    "issueId": "13250190"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/worklog/295135",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #5063: ARROW-6208: [Java] Correct byte order before comparing in ByteFunctionHelpers\nURL: https://github.com/apache/arrow/pull/5063#issuecomment-521487694\n \n \n   > I believe arrow has code (in the allocator?) where we simply throw unsupported on big endian systems. The Java code doesn't support running on big endian systems at all. This is unsupported.\r\n   > [\u2026](#)\r\n   > On Tue, Aug 13, 2019, 7:10 AM Pindikura Ravindra ***@***.***> wrote: Since UNSAFE#getInt's behavior (little endian or big endian) is platform dependent, the behavior of IntVector#getInt is also platform dependent. I think you are right, we probably do all our testing on little endian machines and so, haven't hit this. Per the arrow spec, the buffers should always be LE and if PlatformDependant doesn't always guarantee LE, we need to have wrappers above it. I see that in a similar impl in guava, they do reverseBytes() based on the native order for the platform. https://github.com/google/guava/blob/master/guava/src/com/google/common/hash/LittleEndianByteArray.java This code has been around forever, so it's possible I'm confused - I'll double check and confirm. \u2014 You are receiving this because you were mentioned. Reply to this email directly, view it on GitHub <#5063?email_source=notifications&email_token=AABMYNTE7FQ3ZTCD36PG6RDQEKQE5A5CNFSM4IK6LHHKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD4FOSBQ#issuecomment-520808710>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AABMYNVEPPVJPRUFLFOFLGTQEKQE5ANCNFSM4IK6LHHA> .\r\n   \r\n   @jacques-n Thanks for the informaton.\r\n   The related code is in class UnsafeDirectLittleEndian. If the byte order is big endian, an exception will be thrown.\r\n   This class is used in the AllocationManager.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-15T02:11:31.478+0000",
                    "updated": "2019-08-15T02:11:31.478+0000",
                    "started": "2019-08-15T02:11:31.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "295135",
                    "issueId": "13250190"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@210aed92[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56732b66[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3d39115a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@725e2580[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@456f318b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@465b9d75[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@331df725[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@30eca6e3[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cb33a1c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1619beca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a61c7f3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1f6fbbe2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 16 05:52:35 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-08-16T05:52:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6208/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-08-12T06:49:37.000+0000",
        "updated": "2019-08-16T05:52:43.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Correct byte order before comparing in ByteFunctionHelpers",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13250190/comment/16908745",
                    "id": "16908745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 5063\n[https://github.com/apache/arrow/pull/5063]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2019-08-16T05:52:35.701+0000",
                    "updated": "2019-08-16T05:52:35.701+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z05k3s:",
        "customfield_12314139": null
    }
}