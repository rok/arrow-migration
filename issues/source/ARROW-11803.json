{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13361325",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325",
    "key": "ARROW-11803",
    "fields": {
        "parent": {
            "id": "13354157",
            "key": "ARROW-11364",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13354157",
            "fields": {
                "summary": "[Rust] Umbrella issue for parquet 2.6.0 support",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349493",
                "id": "12349493",
                "description": "",
                "name": "4.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-04-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11803/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/558875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592\n\n\n   This implements the LogicalType from v2 of the format, by:\r\n   - renaming `parquet::basic::LogicalType` to `parquet::basic::ConvertedType` to reflect the change in the spec\r\n   - implementing `parquet::basic::LogicalType` which maps to `parquet_format::LogicalType`\r\n   - writing the logical type in `parquet_format::SchemaElement` if v2 of the writer is used\r\n   - making minor changes to align with the spec on column ordering\r\n   \r\n   This lays the groundwork for us to be able to:\r\n   - support UUID and nanosecond precision timestamps (Arrow and non-Arrow)\r\n   - support the new text schema format (`INT_32` and friends are deprecated)\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-27T08:54:31.699+0000",
                    "updated": "2021-02-27T08:54:31.699+0000",
                    "started": "2021-02-27T08:54:31.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558875",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/558876",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787039217\n\n\n   https://issues.apache.org/jira/browse/ARROW-11803\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-27T08:54:45.058+0000",
                    "updated": "2021-02-27T08:54:45.058+0000",
                    "started": "2021-02-27T08:54:45.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558876",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/558878",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r584092785\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       This change enables us to write the logical type if v2 of the format is used.\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -647,34 +806,128 @@ impl str::FromStr for Type {\n     }\n }\n \n+impl str::FromStr for ConvertedType {\n+    type Err = ParquetError;\n+\n+    fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n+        match s {\n+            \"NONE\" => Ok(ConvertedType::NONE),\n+            \"UTF8\" => Ok(ConvertedType::UTF8),\n+            \"MAP\" => Ok(ConvertedType::MAP),\n+            \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n+            \"LIST\" => Ok(ConvertedType::LIST),\n+            \"ENUM\" => Ok(ConvertedType::ENUM),\n+            \"DECIMAL\" => Ok(ConvertedType::DECIMAL),\n+            \"DATE\" => Ok(ConvertedType::DATE),\n+            \"TIME_MILLIS\" => Ok(ConvertedType::TIME_MILLIS),\n+            \"TIME_MICROS\" => Ok(ConvertedType::TIME_MICROS),\n+            \"TIMESTAMP_MILLIS\" => Ok(ConvertedType::TIMESTAMP_MILLIS),\n+            \"TIMESTAMP_MICROS\" => Ok(ConvertedType::TIMESTAMP_MICROS),\n+            \"UINT_8\" => Ok(ConvertedType::UINT_8),\n+            \"UINT_16\" => Ok(ConvertedType::UINT_16),\n+            \"UINT_32\" => Ok(ConvertedType::UINT_32),\n+            \"UINT_64\" => Ok(ConvertedType::UINT_64),\n+            \"INT_8\" => Ok(ConvertedType::INT_8),\n+            \"INT_16\" => Ok(ConvertedType::INT_16),\n+            \"INT_32\" => Ok(ConvertedType::INT_32),\n+            \"INT_64\" => Ok(ConvertedType::INT_64),\n+            \"JSON\" => Ok(ConvertedType::JSON),\n+            \"BSON\" => Ok(ConvertedType::BSON),\n+            \"INTERVAL\" => Ok(ConvertedType::INTERVAL),\n+            other => Err(general_err!(\"Invalid logical type {}\", other)),\n+        }\n+    }\n+}\n+\n impl str::FromStr for LogicalType {\n     type Err = ParquetError;\n \n     fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n         match s {\n-            \"NONE\" => Ok(LogicalType::NONE),\n-            \"UTF8\" => Ok(LogicalType::UTF8),\n-            \"MAP\" => Ok(LogicalType::MAP),\n-            \"MAP_KEY_VALUE\" => Ok(LogicalType::MAP_KEY_VALUE),\n-            \"LIST\" => Ok(LogicalType::LIST),\n-            \"ENUM\" => Ok(LogicalType::ENUM),\n-            \"DECIMAL\" => Ok(LogicalType::DECIMAL),\n-            \"DATE\" => Ok(LogicalType::DATE),\n-            \"TIME_MILLIS\" => Ok(LogicalType::TIME_MILLIS),\n-            \"TIME_MICROS\" => Ok(LogicalType::TIME_MICROS),\n-            \"TIMESTAMP_MILLIS\" => Ok(LogicalType::TIMESTAMP_MILLIS),\n-            \"TIMESTAMP_MICROS\" => Ok(LogicalType::TIMESTAMP_MICROS),\n-            \"UINT_8\" => Ok(LogicalType::UINT_8),\n-            \"UINT_16\" => Ok(LogicalType::UINT_16),\n-            \"UINT_32\" => Ok(LogicalType::UINT_32),\n-            \"UINT_64\" => Ok(LogicalType::UINT_64),\n-            \"INT_8\" => Ok(LogicalType::INT_8),\n-            \"INT_16\" => Ok(LogicalType::INT_16),\n-            \"INT_32\" => Ok(LogicalType::INT_32),\n-            \"INT_64\" => Ok(LogicalType::INT_64),\n-            \"JSON\" => Ok(LogicalType::JSON),\n-            \"BSON\" => Ok(LogicalType::BSON),\n-            \"INTERVAL\" => Ok(LogicalType::INTERVAL),\n+            \"INTEGER(8,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(16,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(32,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(64,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(8,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(16,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(32,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(64,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: false,\n+            })),\n+            \"MAP\" => Ok(LogicalType::MAP(MapType {})),\n+            // \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n+            \"LIST\" => Ok(LogicalType::LIST(ListType {})),\n+            \"ENUM\" => Ok(LogicalType::ENUM(EnumType {})),\n+            // \"DECIMAL\" => Ok(ConvertedType::DECIMAL),\n\nReview comment:\n       This is incomplete, I'm leaving it as is for now, and will address as part of ARROW-11365\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -1035,22 +1082,26 @@ fn to_thrift_helper(schema: &Type, elements: &mut Vec<SchemaElement>) {\n                 repetition_type: repetition,\n                 name: basic_info.name().to_owned(),\n                 num_children: Some(fields.len() as i32),\n-                converted_type: basic_info.logical_type().into(),\n+                converted_type: basic_info.converted_type().into(),\n                 scale: None,\n                 precision: None,\n                 field_id: if basic_info.has_id() {\n                     Some(basic_info.id())\n                 } else {\n                     None\n                 },\n-                logical_type: None,\n+                logical_type: if writer_version > 1 {\n\nReview comment:\n       We weren't populating this\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-27T09:02:57.428+0000",
                    "updated": "2021-02-27T09:02:57.428+0000",
                    "started": "2021-02-27T09:02:57.427+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558878",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/558880",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787041283\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=h1) Report\n   > Merging [#9592](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=desc) (bbe9e0c) into [master](https://codecov.io/gh/apache/arrow/commit/acd2a4741012189bd8510e8a501db84446133de4?el=desc) (acd2a47) will **decrease** coverage by `0.13%`.\n   > The diff coverage is `76.47%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9592/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9592      +/-   ##\n   ==========================================\n   - Coverage   82.33%   82.19%   -0.14%     \n   ==========================================\n     Files         245      245              \n     Lines       56270    56618     +348     \n   ==========================================\n   + Hits        46329    46537     +208     \n   - Misses       9941    10081     +140     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/parquet/src/schema/visitor.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdmlzaXRvci5ycw==) | `68.42% <66.66%> (\u00f8)` | |\n   | [rust/parquet/src/basic.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9iYXNpYy5ycw==) | `84.19% <70.69%> (-13.08%)` | :arrow_down: |\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `77.53% <75.00%> (-0.08%)` | :arrow_down: |\n   | [rust/parquet/src/record/reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9yZWNvcmQvcmVhZGVyLnJz) | `91.09% <75.00%> (\u00f8)` | |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.67% <79.54%> (+0.12%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/schema.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9zY2hlbWEucnM=) | `92.36% <87.23%> (\u00f8)` | |\n   | [rust/parquet/src/schema/parser.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcGFyc2VyLnJz) | `90.20% <88.88%> (\u00f8)` | |\n   | [rust/parquet/src/schema/printer.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcHJpbnRlci5ycw==) | `62.08% <95.00%> (\u00f8)` | |\n   | [rust/parquet/src/column/reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9jb2x1bW4vcmVhZGVyLnJz) | `74.74% <100.00%> (\u00f8)` | |\n   | [rust/parquet/src/file/footer.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9maWxlL2Zvb3Rlci5ycw==) | `96.26% <100.00%> (+0.03%)` | :arrow_up: |\n   | ... and [13 more](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=footer). Last update [acd2a47...bbe9e0c](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-27T09:10:17.026+0000",
                    "updated": "2021-02-27T09:10:17.026+0000",
                    "started": "2021-02-27T09:10:17.026+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558880",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559025",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r584251475\n\n\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -337,8 +396,11 @@ impl ColumnOrder {\n             // If the max is -0, the row group may contain +0 values as well.\n             // When looking for NaN values, min and max should be ignored.\n             Type::FLOAT | Type::DOUBLE => SortOrder::SIGNED,\n-            // unsigned byte-wise comparison\n-            Type::BYTE_ARRAY | Type::FIXED_LEN_BYTE_ARRAY => SortOrder::UNSIGNED,\n+            // Unsigned byte-wise comparison\n+            Type::BYTE_ARRAY => SortOrder::UNSIGNED,\n+            // Only unsigned if there was a logical type that supports unsigned sort.\n+            // Interval has no defined sort order, and should not use UNSIGNED.\n\nReview comment:\n       Not quite sure about this: since `INTERVAL` is already handled above with `UNDEFINED`, why should we use `UNDEFINED` for this? \r\n   \r\n   Seems [parquet-mr](https://github.com/apache/parquet-mr/blob/master/parquet-column/src/main/java/org/apache/parquet/schema/PrimitiveType.java#L507) only uses `UNDEFINED` for `INT96` and `INTERVAL`.\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       Can you elaborate a bit why `writer_version` is needed? I thought it would just be a straightforward conversion from the `SchemaElement` to the thrift counterpart.\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -647,34 +806,128 @@ impl str::FromStr for Type {\n     }\n }\n \n+impl str::FromStr for ConvertedType {\n+    type Err = ParquetError;\n+\n+    fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n+        match s {\n+            \"NONE\" => Ok(ConvertedType::NONE),\n+            \"UTF8\" => Ok(ConvertedType::UTF8),\n+            \"MAP\" => Ok(ConvertedType::MAP),\n+            \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n+            \"LIST\" => Ok(ConvertedType::LIST),\n+            \"ENUM\" => Ok(ConvertedType::ENUM),\n+            \"DECIMAL\" => Ok(ConvertedType::DECIMAL),\n+            \"DATE\" => Ok(ConvertedType::DATE),\n+            \"TIME_MILLIS\" => Ok(ConvertedType::TIME_MILLIS),\n+            \"TIME_MICROS\" => Ok(ConvertedType::TIME_MICROS),\n+            \"TIMESTAMP_MILLIS\" => Ok(ConvertedType::TIMESTAMP_MILLIS),\n+            \"TIMESTAMP_MICROS\" => Ok(ConvertedType::TIMESTAMP_MICROS),\n+            \"UINT_8\" => Ok(ConvertedType::UINT_8),\n+            \"UINT_16\" => Ok(ConvertedType::UINT_16),\n+            \"UINT_32\" => Ok(ConvertedType::UINT_32),\n+            \"UINT_64\" => Ok(ConvertedType::UINT_64),\n+            \"INT_8\" => Ok(ConvertedType::INT_8),\n+            \"INT_16\" => Ok(ConvertedType::INT_16),\n+            \"INT_32\" => Ok(ConvertedType::INT_32),\n+            \"INT_64\" => Ok(ConvertedType::INT_64),\n+            \"JSON\" => Ok(ConvertedType::JSON),\n+            \"BSON\" => Ok(ConvertedType::BSON),\n+            \"INTERVAL\" => Ok(ConvertedType::INTERVAL),\n+            other => Err(general_err!(\"Invalid logical type {}\", other)),\n+        }\n+    }\n+}\n+\n impl str::FromStr for LogicalType {\n     type Err = ParquetError;\n \n     fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n         match s {\n-            \"NONE\" => Ok(LogicalType::NONE),\n-            \"UTF8\" => Ok(LogicalType::UTF8),\n-            \"MAP\" => Ok(LogicalType::MAP),\n-            \"MAP_KEY_VALUE\" => Ok(LogicalType::MAP_KEY_VALUE),\n-            \"LIST\" => Ok(LogicalType::LIST),\n-            \"ENUM\" => Ok(LogicalType::ENUM),\n-            \"DECIMAL\" => Ok(LogicalType::DECIMAL),\n-            \"DATE\" => Ok(LogicalType::DATE),\n-            \"TIME_MILLIS\" => Ok(LogicalType::TIME_MILLIS),\n-            \"TIME_MICROS\" => Ok(LogicalType::TIME_MICROS),\n-            \"TIMESTAMP_MILLIS\" => Ok(LogicalType::TIMESTAMP_MILLIS),\n-            \"TIMESTAMP_MICROS\" => Ok(LogicalType::TIMESTAMP_MICROS),\n-            \"UINT_8\" => Ok(LogicalType::UINT_8),\n-            \"UINT_16\" => Ok(LogicalType::UINT_16),\n-            \"UINT_32\" => Ok(LogicalType::UINT_32),\n-            \"UINT_64\" => Ok(LogicalType::UINT_64),\n-            \"INT_8\" => Ok(LogicalType::INT_8),\n-            \"INT_16\" => Ok(LogicalType::INT_16),\n-            \"INT_32\" => Ok(LogicalType::INT_32),\n-            \"INT_64\" => Ok(LogicalType::INT_64),\n-            \"JSON\" => Ok(LogicalType::JSON),\n-            \"BSON\" => Ok(LogicalType::BSON),\n-            \"INTERVAL\" => Ok(LogicalType::INTERVAL),\n+            \"INTEGER(8,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(16,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(32,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(64,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(8,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(16,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(32,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(64,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: false,\n+            })),\n+            \"MAP\" => Ok(LogicalType::MAP(MapType {})),\n+            // \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n\nReview comment:\n       nit: should we remove this?\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -647,34 +806,128 @@ impl str::FromStr for Type {\n     }\n }\n \n+impl str::FromStr for ConvertedType {\n+    type Err = ParquetError;\n+\n+    fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n+        match s {\n+            \"NONE\" => Ok(ConvertedType::NONE),\n+            \"UTF8\" => Ok(ConvertedType::UTF8),\n+            \"MAP\" => Ok(ConvertedType::MAP),\n+            \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n+            \"LIST\" => Ok(ConvertedType::LIST),\n+            \"ENUM\" => Ok(ConvertedType::ENUM),\n+            \"DECIMAL\" => Ok(ConvertedType::DECIMAL),\n+            \"DATE\" => Ok(ConvertedType::DATE),\n+            \"TIME_MILLIS\" => Ok(ConvertedType::TIME_MILLIS),\n+            \"TIME_MICROS\" => Ok(ConvertedType::TIME_MICROS),\n+            \"TIMESTAMP_MILLIS\" => Ok(ConvertedType::TIMESTAMP_MILLIS),\n+            \"TIMESTAMP_MICROS\" => Ok(ConvertedType::TIMESTAMP_MICROS),\n+            \"UINT_8\" => Ok(ConvertedType::UINT_8),\n+            \"UINT_16\" => Ok(ConvertedType::UINT_16),\n+            \"UINT_32\" => Ok(ConvertedType::UINT_32),\n+            \"UINT_64\" => Ok(ConvertedType::UINT_64),\n+            \"INT_8\" => Ok(ConvertedType::INT_8),\n+            \"INT_16\" => Ok(ConvertedType::INT_16),\n+            \"INT_32\" => Ok(ConvertedType::INT_32),\n+            \"INT_64\" => Ok(ConvertedType::INT_64),\n+            \"JSON\" => Ok(ConvertedType::JSON),\n+            \"BSON\" => Ok(ConvertedType::BSON),\n+            \"INTERVAL\" => Ok(ConvertedType::INTERVAL),\n+            other => Err(general_err!(\"Invalid logical type {}\", other)),\n\nReview comment:\n       nit: logical -> converted\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -1035,22 +1082,26 @@ fn to_thrift_helper(schema: &Type, elements: &mut Vec<SchemaElement>) {\n                 repetition_type: repetition,\n                 name: basic_info.name().to_owned(),\n                 num_children: Some(fields.len() as i32),\n-                converted_type: basic_info.logical_type().into(),\n+                converted_type: basic_info.converted_type().into(),\n                 scale: None,\n                 precision: None,\n                 field_id: if basic_info.has_id() {\n                     Some(basic_info.id())\n                 } else {\n                     None\n                 },\n-                logical_type: None,\n+                logical_type: if writer_version > 1 {\n\nReview comment:\n       Hmm populating what?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-28T07:45:51.813+0000",
                    "updated": "2021-02-28T07:45:51.813+0000",
                    "started": "2021-02-28T07:45:51.812+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559025",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559034",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r584257095\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -1035,22 +1082,26 @@ fn to_thrift_helper(schema: &Type, elements: &mut Vec<SchemaElement>) {\n                 repetition_type: repetition,\n                 name: basic_info.name().to_owned(),\n                 num_children: Some(fields.len() as i32),\n-                converted_type: basic_info.logical_type().into(),\n+                converted_type: basic_info.converted_type().into(),\n                 scale: None,\n                 precision: None,\n                 field_id: if basic_info.has_id() {\n                     Some(basic_info.id())\n                 } else {\n                     None\n                 },\n-                logical_type: None,\n+                logical_type: if writer_version > 1 {\n\nReview comment:\n       Sorry, wasn't detailed. We weren't populating the `logical_type` when writing files, so even if one was writing a v2 file; they were only populating the `converted_type`.\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -647,34 +806,128 @@ impl str::FromStr for Type {\n     }\n }\n \n+impl str::FromStr for ConvertedType {\n+    type Err = ParquetError;\n+\n+    fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n+        match s {\n+            \"NONE\" => Ok(ConvertedType::NONE),\n+            \"UTF8\" => Ok(ConvertedType::UTF8),\n+            \"MAP\" => Ok(ConvertedType::MAP),\n+            \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n+            \"LIST\" => Ok(ConvertedType::LIST),\n+            \"ENUM\" => Ok(ConvertedType::ENUM),\n+            \"DECIMAL\" => Ok(ConvertedType::DECIMAL),\n+            \"DATE\" => Ok(ConvertedType::DATE),\n+            \"TIME_MILLIS\" => Ok(ConvertedType::TIME_MILLIS),\n+            \"TIME_MICROS\" => Ok(ConvertedType::TIME_MICROS),\n+            \"TIMESTAMP_MILLIS\" => Ok(ConvertedType::TIMESTAMP_MILLIS),\n+            \"TIMESTAMP_MICROS\" => Ok(ConvertedType::TIMESTAMP_MICROS),\n+            \"UINT_8\" => Ok(ConvertedType::UINT_8),\n+            \"UINT_16\" => Ok(ConvertedType::UINT_16),\n+            \"UINT_32\" => Ok(ConvertedType::UINT_32),\n+            \"UINT_64\" => Ok(ConvertedType::UINT_64),\n+            \"INT_8\" => Ok(ConvertedType::INT_8),\n+            \"INT_16\" => Ok(ConvertedType::INT_16),\n+            \"INT_32\" => Ok(ConvertedType::INT_32),\n+            \"INT_64\" => Ok(ConvertedType::INT_64),\n+            \"JSON\" => Ok(ConvertedType::JSON),\n+            \"BSON\" => Ok(ConvertedType::BSON),\n+            \"INTERVAL\" => Ok(ConvertedType::INTERVAL),\n+            other => Err(general_err!(\"Invalid logical type {}\", other)),\n+        }\n+    }\n+}\n+\n impl str::FromStr for LogicalType {\n     type Err = ParquetError;\n \n     fn from_str(s: &str) -> result::Result<Self, Self::Err> {\n         match s {\n-            \"NONE\" => Ok(LogicalType::NONE),\n-            \"UTF8\" => Ok(LogicalType::UTF8),\n-            \"MAP\" => Ok(LogicalType::MAP),\n-            \"MAP_KEY_VALUE\" => Ok(LogicalType::MAP_KEY_VALUE),\n-            \"LIST\" => Ok(LogicalType::LIST),\n-            \"ENUM\" => Ok(LogicalType::ENUM),\n-            \"DECIMAL\" => Ok(LogicalType::DECIMAL),\n-            \"DATE\" => Ok(LogicalType::DATE),\n-            \"TIME_MILLIS\" => Ok(LogicalType::TIME_MILLIS),\n-            \"TIME_MICROS\" => Ok(LogicalType::TIME_MICROS),\n-            \"TIMESTAMP_MILLIS\" => Ok(LogicalType::TIMESTAMP_MILLIS),\n-            \"TIMESTAMP_MICROS\" => Ok(LogicalType::TIMESTAMP_MICROS),\n-            \"UINT_8\" => Ok(LogicalType::UINT_8),\n-            \"UINT_16\" => Ok(LogicalType::UINT_16),\n-            \"UINT_32\" => Ok(LogicalType::UINT_32),\n-            \"UINT_64\" => Ok(LogicalType::UINT_64),\n-            \"INT_8\" => Ok(LogicalType::INT_8),\n-            \"INT_16\" => Ok(LogicalType::INT_16),\n-            \"INT_32\" => Ok(LogicalType::INT_32),\n-            \"INT_64\" => Ok(LogicalType::INT_64),\n-            \"JSON\" => Ok(LogicalType::JSON),\n-            \"BSON\" => Ok(LogicalType::BSON),\n-            \"INTERVAL\" => Ok(LogicalType::INTERVAL),\n+            \"INTEGER(8,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(16,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(32,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(64,true)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: true,\n+            })),\n+            \"INTEGER(8,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 8,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(16,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 16,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(32,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 32,\n+                is_signed: false,\n+            })),\n+            \"INTEGER(64,false)\" => Ok(LogicalType::INTEGER(IntType {\n+                bit_width: 64,\n+                is_signed: false,\n+            })),\n+            \"MAP\" => Ok(LogicalType::MAP(MapType {})),\n+            // \"MAP_KEY_VALUE\" => Ok(ConvertedType::MAP_KEY_VALUE),\n\nReview comment:\n       Yes, I'll remove it, and add a TODO to the DECIMAL below\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       I'll add a comment if you agree with my logic below.\r\n   \r\n   I understand the format to mean that `LogicalType` is a version 2 only detail, such that someone writing version 1 of the format, would not expect a `LogicalType` to be populated. So, I'm checking if one is intending on writing v2, and only populating `LogicalType` in that instance.\r\n   \r\n   This would become relevant when parsing the schema and displaying it (future PR). a v2 file's text schema has `INTEGER(32,true)` instead of `INT_32`, so to ensure that this is the case, we shouldn't write the `LogicalType` for v1 files; as a loose reader could end up misinterpreting the schema.\n\n##########\nFile path: rust/parquet/src/basic.rs\n##########\n@@ -337,8 +396,11 @@ impl ColumnOrder {\n             // If the max is -0, the row group may contain +0 values as well.\n             // When looking for NaN values, min and max should be ignored.\n             Type::FLOAT | Type::DOUBLE => SortOrder::SIGNED,\n-            // unsigned byte-wise comparison\n-            Type::BYTE_ARRAY | Type::FIXED_LEN_BYTE_ARRAY => SortOrder::UNSIGNED,\n+            // Unsigned byte-wise comparison\n+            Type::BYTE_ARRAY => SortOrder::UNSIGNED,\n+            // Only unsigned if there was a logical type that supports unsigned sort.\n+            // Interval has no defined sort order, and should not use UNSIGNED.\n\nReview comment:\n       After thinking more about it, I agree with you. I initially resorted to only using LogicalType + PhysicalType, in which case there would have been no ConvertedType covering INTERVAL. I changed this after realising that it was a mistake; but forgot to revise this.\r\n   \r\n   I'll change this.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-28T08:29:45.294+0000",
                    "updated": "2021-02-28T08:29:45.294+0000",
                    "started": "2021-02-28T08:29:45.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559034",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559037",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787419699\n\n\n   > LGTM. I am not very familiar with the codebase, are there integration tests to verify that the code with the new changes can read the file written by the previous version and vice versa?\r\n   \r\n   Thanks for looking @sadikovi, I'll be able to address this in detail on follow-up PRs when I start using the populated logical_type. I have created ARROW-11824 for this.\r\n   For now, I'll write a few files with v2 and test reading them with Spark and pyarrow.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-28T09:02:12.711+0000",
                    "updated": "2021-02-28T09:02:12.711+0000",
                    "started": "2021-02-28T09:02:12.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559037",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559083",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787462991\n\n\n   FWIW, I think that we should have a bunch of golden parquet files and the corresponding `.json`, e.g. generated by C++, so that we can change parquets' implementation without introducing regressions.\r\n   \r\n   I.e. exactly the same as we already do for the IPC, where we have `.arrow` and `.json` with a json representation of the expected in-memory data.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-28T14:40:32.293+0000",
                    "updated": "2021-02-28T14:40:32.293+0000",
                    "started": "2021-02-28T14:40:32.293+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559083",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559182",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787629194\n\n\n   @sunchao I've updated the PR, @sadikovi I added a test that checks that we roundtrip the logical type to the file.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T04:34:44.691+0000",
                    "updated": "2021-03-01T04:34:44.691+0000",
                    "started": "2021-03-01T04:34:44.691+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559182",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r584495886\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       Hmm, the `LogicalType` is not version 2 only though: it was introduced in 2.4.0. It is also an optional field which means backward compatibility. Therefore, I guess it should be fine to write it no matter the `writer_version` is 1 or 2? A reader > 2.4.0 will try to parse the optional `LogicalType` first while one < 2.4.0 will just look at the `ConvertedType` field.\r\n   \r\n   I don't fully understand the implication of parsing schema. When looking at `INTEGER(32,true)`, shouldn't we just populate the `LogicalType` together with the `ConvertedType` field? and only populate `ConvertedType` when seeing `INT_32`?\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T07:35:46.356+0000",
                    "updated": "2021-03-01T07:35:46.356+0000",
                    "started": "2021-03-01T07:35:46.355+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559240",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559245",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r584495886\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       Hmm, to be precise `LogicalType` was introduced in 2.4.0, so it feel a bit strange that we choose to write it when version is, say, 2.3, but not when version is 1. It is also an optional field which means backward compatibility. Therefore, I guess it should be fine to write it no matter the `writer_version` is 1 or 2? A reader > 2.4.0 will try to parse the optional `LogicalType` first while one < 2.4.0 will just look at the `ConvertedType` field.\r\n   \r\n   I don't fully understand the implication of parsing schema. When looking at `INTEGER(32,true)`, shouldn't we just populate the `LogicalType` together with the `ConvertedType` field? and only populate `ConvertedType` when seeing `INT_32`?\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T07:42:50.762+0000",
                    "updated": "2021-03-01T07:42:50.762+0000",
                    "started": "2021-03-01T07:42:50.762+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559245",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559772",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#discussion_r585250535\n\n\n\n##########\nFile path: rust/parquet/src/schema/types.rs\n##########\n@@ -972,18 +1011,22 @@ fn from_thrift_helper(\n }\n \n /// Method to convert to Thrift.\n-pub fn to_thrift(schema: &Type) -> Result<Vec<SchemaElement>> {\n+pub fn to_thrift(schema: &Type, writer_version: i32) -> Result<Vec<SchemaElement>> {\n\nReview comment:\n       I see what you mean @sunchao. I've removed the version check, and always write the logical type. I suppose I'm not thinking of this well from a compatibility perspective. We'll always want to write complying with whatever `parquet-format` version we're using.\r\n   \r\n   There's still something that's unclear to me about how we'll deal with the text schema format, but I can raise the questions when I work on its relevant PR.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-02T04:54:55.769+0000",
                    "updated": "2021-03-02T04:54:55.769+0000",
                    "started": "2021-03-02T04:54:55.769+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559772",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/559778",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787041283\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=h1) Report\n   > Merging [#9592](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=desc) (132949a) into [master](https://codecov.io/gh/apache/arrow/commit/35daca2ef999ab05e801e9ec9aad977115b61231?el=desc) (35daca2) will **decrease** coverage by `0.07%`.\n   > The diff coverage is `81.28%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9592/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9592      +/-   ##\n   ==========================================\n   - Coverage   82.32%   82.25%   -0.08%     \n   ==========================================\n     Files         245      245              \n     Lines       56412    56797     +385     \n   ==========================================\n   + Hits        46442    46719     +277     \n   - Misses       9970    10078     +108     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/benchmarks/src/bin/tpch.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9iZW5jaG1hcmtzL3NyYy9iaW4vdHBjaC5ycw==) | `38.33% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/datatypes/field.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzL2ZpZWxkLnJz) | `55.47% <47.61%> (-0.66%)` | :arrow_down: |\n   | [rust/parquet/src/schema/visitor.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdmlzaXRvci5ycw==) | `68.42% <66.66%> (\u00f8)` | |\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `77.53% <75.00%> (-0.08%)` | :arrow_down: |\n   | [rust/parquet/src/record/reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9yZWNvcmQvcmVhZGVyLnJz) | `91.09% <75.00%> (\u00f8)` | |\n   | [rust/parquet/src/basic.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9iYXNpYy5ycw==) | `87.22% <77.28%> (-10.04%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.79% <78.48%> (+0.25%)` | :arrow_up: |\n   | [rust/arrow/src/datatypes/schema.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzL3NjaGVtYS5ycw==) | `73.39% <78.57%> (+0.76%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/schema.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9zY2hlbWEucnM=) | `92.36% <87.23%> (\u00f8)` | |\n   | [rust/parquet/src/schema/parser.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcGFyc2VyLnJz) | `90.20% <88.88%> (\u00f8)` | |\n   | ... and [9 more](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=footer). Last update [7184c3f...132949a](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-02T05:08:13.458+0000",
                    "updated": "2021-03-02T05:08:13.458+0000",
                    "started": "2021-03-02T05:08:13.458+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559778",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/560410",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-789652617\n\n\n   The failing CI check, https://github.com/apache/arrow/pull/9592/checks?check_run_id=2010574916 has the same pattern as was fixed in https://github.com/apache/arrow/pull/9593\r\n   \r\n   I pulled this branch locally and merged with apache/master and re-ran all the tests.  One seems to be failing for me locally:\r\n   \r\n   ```\r\n   test util::io::tests::test_io_large_read ... ok\r\n   \r\n   failures:\r\n   \r\n   ---- file::writer::tests::test_file_writer_with_metadata stdout ----\r\n   thread 'file::writer::tests::test_file_writer_with_metadata' panicked at 'called `Result::unwrap()` on an `Err` value: General(\"Could not parse metadata: end of file\")', parquet/src/file/writer.rs:712:54\r\n   \r\n   \r\n   failures:\r\n       file::writer::tests::test_file_writer_with_metadata\r\n   ```\r\n   \r\n   I think I did the merge / updated submodules correctly:\r\n   ```\r\n   (arrow_dev) alamb@MacBook-Pro:~/Software/arrow2$ git status\r\n   On branch parquet-v2-support\r\n   Your branch is ahead of 'nevi-me/parquet-v2-support' by 9 commits.\r\n     (use \"git push\" to publish your local commits)\r\n   \r\n   nothing to commit, working tree clean\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-03T11:39:12.171+0000",
                    "updated": "2021-03-03T11:39:12.171+0000",
                    "started": "2021-03-03T11:39:12.171+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560410",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561725",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-791885806\n\n\n   > One seems to be failing for me locally:\r\n   \r\n   @alamb I was writing to the same file from 2 tests, so it looks like it was a timing issue. I've now fixed this.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T06:55:51.956+0000",
                    "updated": "2021-03-06T06:55:51.956+0000",
                    "started": "2021-03-06T06:55:51.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561725",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561731",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787041283\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=h1) Report\n   > Merging [#9592](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=desc) (209622a) into [master](https://codecov.io/gh/apache/arrow/commit/dec5ab9677a0dfb9e324a57ccf5550217a2117be?el=desc) (dec5ab9) will **decrease** coverage by `0.09%`.\n   > The diff coverage is `79.89%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9592/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9592      +/-   ##\n   ==========================================\n   - Coverage   82.51%   82.42%   -0.10%     \n   ==========================================\n     Files         245      245              \n     Lines       57329    57646     +317     \n   ==========================================\n   + Hits        47306    47515     +209     \n   - Misses      10023    10131     +108     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `92.88% <\u00f8> (-0.07%)` | :arrow_down: |\n   | [rust/arrow/src/datatypes/native.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzL25hdGl2ZS5ycw==) | `76.59% <22.22%> (-12.88%)` | :arrow_down: |\n   | [rust/parquet/src/schema/visitor.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdmlzaXRvci5ycw==) | `68.42% <66.66%> (\u00f8)` | |\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `77.53% <75.00%> (-0.08%)` | :arrow_down: |\n   | [rust/parquet/src/record/reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9yZWNvcmQvcmVhZGVyLnJz) | `91.09% <75.00%> (\u00f8)` | |\n   | [rust/parquet/src/basic.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9iYXNpYy5ycw==) | `87.22% <77.28%> (-10.04%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.79% <78.48%> (+0.25%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/schema.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9zY2hlbWEucnM=) | `92.36% <87.23%> (\u00f8)` | |\n   | [rust/parquet/src/schema/parser.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcGFyc2VyLnJz) | `90.20% <88.88%> (\u00f8)` | |\n   | [rust/parquet/src/schema/printer.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcHJpbnRlci5ycw==) | `62.08% <95.00%> (\u00f8)` | |\n   | ... and [8 more](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=footer). Last update [b07027e...209622a](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T07:11:29.215+0000",
                    "updated": "2021-03-06T07:11:29.215+0000",
                    "started": "2021-03-06T07:11:29.215+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561731",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-787041283\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=h1) Report\n   > Merging [#9592](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=desc) (209622a) into [master](https://codecov.io/gh/apache/arrow/commit/dec5ab9677a0dfb9e324a57ccf5550217a2117be?el=desc) (dec5ab9) will **decrease** coverage by `0.09%`.\n   > The diff coverage is `79.89%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9592/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9592      +/-   ##\n   ==========================================\n   - Coverage   82.51%   82.42%   -0.10%     \n   ==========================================\n     Files         245      245              \n     Lines       57329    57646     +317     \n   ==========================================\n   + Hits        47306    47515     +209     \n   - Misses      10023    10131     +108     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `92.88% <\u00f8> (-0.07%)` | :arrow_down: |\n   | [rust/arrow/src/datatypes/native.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzL25hdGl2ZS5ycw==) | `76.59% <22.22%> (-12.88%)` | :arrow_down: |\n   | [rust/parquet/src/schema/visitor.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdmlzaXRvci5ycw==) | `68.42% <66.66%> (\u00f8)` | |\n   | [rust/parquet/src/arrow/array\\_reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9hcnJheV9yZWFkZXIucnM=) | `77.53% <75.00%> (-0.08%)` | :arrow_down: |\n   | [rust/parquet/src/record/reader.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9yZWNvcmQvcmVhZGVyLnJz) | `91.09% <75.00%> (\u00f8)` | |\n   | [rust/parquet/src/basic.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9iYXNpYy5ycw==) | `87.22% <77.28%> (-10.04%)` | :arrow_down: |\n   | [rust/parquet/src/schema/types.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvdHlwZXMucnM=) | `89.79% <78.48%> (+0.25%)` | :arrow_up: |\n   | [rust/parquet/src/arrow/schema.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9hcnJvdy9zY2hlbWEucnM=) | `92.36% <87.23%> (\u00f8)` | |\n   | [rust/parquet/src/schema/parser.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcGFyc2VyLnJz) | `90.20% <88.88%> (\u00f8)` | |\n   | [rust/parquet/src/schema/printer.rs](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree#diff-cnVzdC9wYXJxdWV0L3NyYy9zY2hlbWEvcHJpbnRlci5ycw==) | `62.08% <95.00%> (\u00f8)` | |\n   | ... and [8 more](https://codecov.io/gh/apache/arrow/pull/9592/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=footer). Last update [b07027e...209622a](https://codecov.io/gh/apache/arrow/pull/9592?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T09:16:05.016+0000",
                    "updated": "2021-03-06T09:16:05.016+0000",
                    "started": "2021-03-06T09:16:05.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561751",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561754",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-791901636\n\n\n   @alamb tests are getting stuck after the below, seems to be happening in master too, so likely not related to this PR.\r\n   \r\n   ```\r\n   running 17 tests\r\n   test src/arrow/array_reader.rs - arrow::array_reader::StructArrayReader::next_batch (line 958) ... ignored\r\n   test src/arrow/array_reader.rs - arrow::array_reader::StructArrayReader::next_batch (line 964) ... ignored\r\n   test src/arrow/array_reader.rs - arrow::array_reader::StructArrayReader::next_batch (line 969) ... ignored\r\n   test src/arrow/mod.rs - arrow (line 26) ... ok\r\n   test src/column/mod.rs - column (line 38) ... ok\r\n   test src/compression.rs - compression (line 25) ... ok\r\n   test src/file/mod.rs - file (line 29) ... ok\r\n   test src/file/mod.rs - file (line 64) ... ok\r\n   test src/file/mod.rs - file (line 81) ... ok\r\n   test src/file/statistics.rs - file::statistics (line 23) ... ok\r\n   test src/file/properties.rs - file::properties (line 22) ... ok\r\n   test src/record/api.rs - record::api::Row::get_column_iter (line 62) ... ok\r\n   test src/schema/mod.rs - schema (line 22) ... ok\r\n   test src/schema/parser.rs - schema::parser (line 24) ... ok\r\n   ```\r\n   \r\n   On my machine, this is the last set of tests that run\r\n   \r\n   ```\r\n   test src/schema/types.rs - schema::types::ColumnPath::string (line 540) ... ok\r\n   test src/file/statistics.rs - file::statistics (line 23) ... ok\r\n   test src/schema/parser.rs - schema::parser (line 24) ... ok\r\n   test src/schema/mod.rs - schema (line 22) ... ok\r\n   test src/schema/printer.rs - schema::printer (line 23) ... ok\r\n   ```\r\n   \r\n   There's 3 tests missing from the stalled CI. I can't establish what about the missing tests is special to start blocking CI on master and this PR.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T09:24:09.645+0000",
                    "updated": "2021-03-06T09:24:09.645+0000",
                    "started": "2021-03-06T09:24:09.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561754",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561780",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-791929398\n\n\n   @nevi-me -- I see the failure on master too: https://github.com/apache/arrow/runs/2045186826 but it doesn't seem to happen for me locally (though I haven't run `cargo update` recently). I will file a ticket\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T12:29:53.796+0000",
                    "updated": "2021-03-06T12:29:53.796+0000",
                    "started": "2021-03-06T12:29:53.796+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561780",
                    "issueId": "13361325"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/worklog/561781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9592:\nURL: https://github.com/apache/arrow/pull/9592#issuecomment-791929778\n\n\n   https://issues.apache.org/jira/browse/ARROW-11896\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-06T12:33:07.366+0000",
                    "updated": "2021-03-06T12:33:07.366+0000",
                    "started": "2021-03-06T12:33:07.366+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "561781",
                    "issueId": "13361325"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@20cf4275[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@cb216ce[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@237ab957[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3fe2cf90[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@727054e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6f9699f4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19503550[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@30e7f7a5[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40c04a20[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1bc222f5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3206e68[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@cf5eb76[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Mar 07 19:09:50 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-03-07T19:09:50.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11803/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-02-27T08:41:36.000+0000",
        "updated": "2021-03-07T19:12:08.000+0000",
        "timeoriginalestimate": null,
        "description": "We currently do not read nor write the version 2 logical types. This is mainly because we do not have a mapping for it from parquet-format-rs.\r\n\r\nTo implement this, we can:\r\n- convert \"parquet::basic::LogicalType\" to \"parquet::basic::ConvertedType\"\r\n- implement \"parquet::basic::LogicalType\" which mirrors \"parquet_format::LogicalType\"\r\n- create a mapping between ConvertedType and LogicalType\r\n- write LogicalType to \"parquet_format::SchemaElement\" if v2 of the writer is used\r\n\r\nThis would be a good starting point for implementing 2.6 types (UUID, NANOS precision time & timestamp).\r\nFollow-up work would be:\r\n- parsing v2 of the schema [ARROW-11365]\r\n- Using v2 in the Arrow writer (mostly schema conversion)\r\n- Supporting nanosecond precision time & timestamp",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] [Parquet] Support v2 LogicalType",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13361325/comment/17296952",
                    "id": "17296952",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 9592\n[https://github.com/apache/arrow/pull/9592]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2021-03-07T19:09:50.794+0000",
                    "updated": "2021-03-07T19:09:50.794+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0o4fk:",
        "customfield_12314139": null
    }
}