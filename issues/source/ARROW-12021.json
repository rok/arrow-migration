{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13366182",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182",
    "key": "ARROW-12021",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rodrigojdebem",
            "name": "rodrigojdebem",
            "key": "rodrigojdebem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rodrigo Jacomozzi de Bem",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rodrigojdebem",
            "name": "rodrigojdebem",
            "key": "rodrigojdebem",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Rodrigo Jacomozzi de Bem",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 8400,
            "total": 8400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12021/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 14,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/571125",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#issuecomment-805791763\n\n\n   > OK, this PR lacks any documentation to that affect, especially around pattern. Is this meant to emulate sql server or Oracle's to_char?\r\n   \r\n   @emkornfield I'll be implementing the Oracle `to_char`. Thanks for the heads up about the documentation and JIRA issue, I'll be fixing those as well!\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T12:47:42.450+0000",
                    "updated": "2021-03-24T12:47:42.450+0000",
                    "started": "2021-03-24T12:47:42.450+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "571125",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/571243",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#issuecomment-805919945\n\n\n   https://issues.apache.org/jira/browse/ARROW-12021\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-24T15:26:01.330+0000",
                    "updated": "2021-03-24T15:26:01.330+0000",
                    "started": "2021-03-24T15:26:01.330+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "571243",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/573676",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#issuecomment-809653407\n\n\n   @emkornfield hello! Do you know the reason for the checks being skipped? Is it because the PR is old?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-29T19:34:14.109+0000",
                    "updated": "2021-03-29T19:34:14.109+0000",
                    "started": "2021-03-29T19:34:14.109+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "573676",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/574094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#issuecomment-810165381\n\n\n   > @emkornfield hello! Do you know the reason for the checks being skipped? Is it because the PR is old?\r\n   \r\n   Maybe the WIP tag?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-30T12:05:01.228+0000",
                    "updated": "2021-03-30T12:05:01.228+0000",
                    "started": "2021-03-30T12:05:01.228+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "574094",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/578114",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r608324514\n\n\n\n##########\nFile path: cpp/src/gandiva/function_registry_string.cc\n##########\n@@ -114,6 +114,22 @@ std::vector<NativeFunction> GetStringFunctionRegistry() {\n                      utf8(), kResultNullIfNull, \"substr_utf8_int64_int64\",\n                      NativeFunction::kNeedsContext),\n \n+      NativeFunction(\"to_char\", {}, DataTypeVector{int32(), int64()}, utf8(),\n\nReview comment:\n       The signature looks incorrect. Aren't you taking pattern (string) as second argument.\r\n   It should be {int32(), utf8()}\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -337,6 +384,42 @@ void ExportedStubFunctions::AddMappings(Engine* engine) const {\n \n   engine->AddGlobalMappingForFunc(\"gdv_fn_castFLOAT8_utf8\", types->double_type(), args,\n                                   reinterpret_cast<void*>(gdv_fn_castFLOAT8_utf8));\n+\n+    // gdv_fn_to_char_int32_int64\n+    args = {types->i64_type(),       // int64_t execution_context\n+            types->i32_type(),       // int32_t value\n+            types->i64_type(),       // int64_t len\n+            types->i32_ptr_type()};  // int32_t* out_len\n+    engine->AddGlobalMappingForFunc(\n\nReview comment:\n       This arguments here are also different to your actual function.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -176,6 +180,49 @@ char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n     return val;                                                                      \\\n   }\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                         \\\n+  GANDIVA_EXPORT                                                                         \\\n+  const char* gdv_fn_to_char_##IN_TYPE##_int64(int64_t context, gdv_##IN_TYPE value, \\\n+                                                   int64_t len, const char* pattern, int32_t * out_len) {     \\\n\nReview comment:\n       This signature is also different.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-07T04:13:50.561+0000",
                    "updated": "2021-04-07T04:13:50.561+0000",
                    "started": "2021-04-07T04:13:50.561+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "578114",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/578434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r608789105\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -160,4 +160,118 @@ TEST(TestGdvFnStubs, TestCastFloat8) {\n   ctx.Reset();\n }\n \n+    TEST(TestGdvFnStubs, TestToCharFromInt32) {\n+        gandiva::ExecutionContext ctx;\n+        uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+        int32_t out_len = 0;\n+\n+        const char* out_str = gdv_fn_to_char_int32_int64(ctx_ptr, -46, 100, \"%1\", &out_len);\n\nReview comment:\n       Can you check some other examples for format.  I'm not sure the library that is being used uses the same specification for format strings a SQL to_char would.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-07T16:00:17.188+0000",
                    "updated": "2021-04-07T16:00:17.188+0000",
                    "started": "2021-04-07T16:00:17.188+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "578434",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/584306",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r614922807\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -302,40 +302,41 @@ char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n     return val;                                                                      \\\n   }\n \n-#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                         \\\n-  GANDIVA_EXPORT                                                                         \\\n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                          \\\n\nReview comment:\n       there should be comments on these macros to describe what the function does.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-16T15:22:32.732+0000",
                    "updated": "2021-04-16T15:22:32.732+0000",
                    "started": "2021-04-16T15:22:32.732+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "584306",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/585541",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r616322266\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -160,4 +160,118 @@ TEST(TestGdvFnStubs, TestCastFloat8) {\n   ctx.Reset();\n }\n \n+    TEST(TestGdvFnStubs, TestToCharFromInt32) {\n+        gandiva::ExecutionContext ctx;\n+        uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+        int32_t out_len = 0;\n+\n+        const char* out_str = gdv_fn_to_char_int32_int64(ctx_ptr, -46, 100, \"%1\", &out_len);\n\nReview comment:\n       The implementation is aiming to use the Java formatting.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T03:48:12.328+0000",
                    "updated": "2021-04-20T03:48:12.328+0000",
                    "started": "2021-04-20T03:48:12.327+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585541",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/585544",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r616324386\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -160,4 +160,118 @@ TEST(TestGdvFnStubs, TestCastFloat8) {\n   ctx.Reset();\n }\n \n+    TEST(TestGdvFnStubs, TestToCharFromInt32) {\n+        gandiva::ExecutionContext ctx;\n+        uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+        int32_t out_len = 0;\n+\n+        const char* out_str = gdv_fn_to_char_int32_int64(ctx_ptr, -46, 100, \"%1\", &out_len);\n\nReview comment:\n       I thought this was mean to mimic oracle's to_char?  if Java formatting is the target, maybe include more examples from that?  I'm not sure the boost formatting library has the same formatting options with the same characters.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T03:55:56.498+0000",
                    "updated": "2021-04-20T03:55:56.498+0000",
                    "started": "2021-04-20T03:55:56.497+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585544",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/585552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r616336819\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs_test.cc\n##########\n@@ -290,4 +290,121 @@ TEST(TestGdvFnStubs, TestCastVARCHARFromDouble) {\n   EXPECT_FALSE(ctx.has_error());\n }\n \n+TEST(TestGdvFnStubs, TestToCharFromInt32) {\n+  gandiva::ExecutionContext ctx;\n+  uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+\n+  const char* out_str = gdv_fn_to_char_int32_int64(ctx_ptr, -46, 100, \"##\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"-46\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  out_str = gdv_fn_to_char_int32_int64(ctx_ptr, 2147483647, 100, \"##########\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"2147483647\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  out_str =\n+      gdv_fn_to_char_int32_int64(ctx_ptr, -2147483647 - 1, 100, \"##########\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"-2147483648\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  out_str = gdv_fn_to_char_int32_int64(ctx_ptr, 0, 100, \"#\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"0\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  // test with required length less than actual buffer length\n+  out_str = gdv_fn_to_char_int32_int64(ctx_ptr, 34567, 3, \"###\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"345\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  out_str = gdv_fn_to_char_int32_int64(ctx_ptr, 347, 0, \"#\", &out_len);\n+  EXPECT_EQ(std::string(out_str, out_len), \"\");\n+  EXPECT_FALSE(ctx.has_error());\n+\n+  out_str = gdv_fn_to_char_int32_int64(ctx_ptr, 347, -1, \"%1\", &out_len);\n+  EXPECT_THAT(ctx.get_error(), ::testing::HasSubstr(\"Buffer length can not be negative\"));\n+  ctx.Reset();\n+}\n+\n+TEST(TestGdvFnStubs, TestToCharFromInt64) {\n+  gandiva::ExecutionContext ctx;\n+  uint64_t ctx_ptr = reinterpret_cast<int64_t>(&ctx);\n+  int32_t out_len = 0;\n+\n+  const char* out_str =\n+      gdv_fn_to_char_int64_int64(ctx_ptr, 9223372036854775807LL, 100, \"%1\", &out_len);\n\nReview comment:\n       what does %1 do?\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -300,6 +302,50 @@ char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n     return val;                                                                      \\\n   }\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                         \\\n+  /* Converts expression to a string using the format specified in format */                                                                                  \\\n+  GANDIVA_EXPORT                                                                         \\\n+  const char* gdv_fn_to_char_##IN_TYPE##_int64(int64_t context, gdv_##IN_TYPE value, \\\n+                                                   int64_t len, const char* pattern, int32_t * out_len) {     \\\n\nReview comment:\n       You are not using pattern at all in your code. Doesn't look like it should be working.\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -300,6 +302,50 @@ char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n     return val;                                                                      \\\n   }\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                         \\\n+  /* Converts expression to a string using the format specified in format */                                                                                  \\\n\nReview comment:\n       Can you write a more detailed comment explaining the format?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-20T04:35:41.118+0000",
                    "updated": "2021-04-20T04:35:41.118+0000",
                    "started": "2021-04-20T04:35:41.118+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585552",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/586432",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rodrigojdebem commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r617354364\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -300,6 +302,50 @@ char* gdv_fn_dec_to_string(int64_t context, int64_t x_high, uint64_t x_low,\n     return val;                                                                      \\\n   }\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE)                                         \\\n+  /* Converts expression to a string using the format specified in format */                                                                                  \\\n+  GANDIVA_EXPORT                                                                         \\\n+  const char* gdv_fn_to_char_##IN_TYPE##_int64(int64_t context, gdv_##IN_TYPE value, \\\n+                                                   int64_t len, const char* pattern, int32_t * out_len) {     \\\n\nReview comment:\n       You're right. I lost something among my commits and merges. Looking into it now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T09:26:59.229+0000",
                    "updated": "2021-04-21T09:26:59.229+0000",
                    "started": "2021-04-21T09:26:59.229+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586432",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/674608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r741913957\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -307,6 +310,21 @@ CAST_NUMERIC_FROM_STRING(double, arrow::DoubleType, FLOAT8)\n \n #undef CAST_NUMERIC_FROM_STRING\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE, TYPE_NAME)                                 \\\n+  GANDIVA_EXPORT                                                                       \\\n+  const char* gdv_fn_to_char_##TYPE_NAME##_utf8(                                       \\\n+      int64_t context, gdv_##IN_TYPE data, const char* format, int32_t format_len) {   \\\n+    gandiva::ToCharHolder* holder = reinterpret_cast<gandiva::ToCharHolder*>(context); \\\n+    return holder->Format<gdv_##IN_TYPE>(data);                                        \\\n+  }\n+\n+GDV_FN_TO_CHAR(int32, arrow::Int32Type, INT)\n+GDV_FN_TO_CHAR(int64, arrow::Int64Type, BIGINT)\n+GDV_FN_TO_CHAR(float32, arrow::FloatType, FLOAT4)\n+GDV_FN_TO_CHAR(float64, arrow::DoubleType, FLOAT8)\n+\n+#undef CAST_NUMERIC_FROM_STRING\n\nReview comment:\n       Shouldn't this be #undef GDV_FN_TO_CHAR?\n\n##########\nFile path: cpp/src/gandiva/to_char_holder.h\n##########\n@@ -0,0 +1,79 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+/// Function Holder for SQL 'to_char'\n+\n+class GANDIVA_EXPORT ToCharHolder : public FunctionHolder {\n+ public:\n+  ~ToCharHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ToCharHolder>* holder);\n+\n+  static Status Make(const std::string& java_pattern,\n+                     std::shared_ptr<ToCharHolder>* holder);\n+\n+  template <typename T>\n+  const char* Format(T number) {\n+    return \"\";\n+  }\n+\n+ private:\n+  explicit ToCharHolder(const char* pattern, int32_t pattern_size)\n+      : pattern_(pattern), pattern_size_(pattern_size) {\n+    maximumFractionDigits_ = Setup();\n+  }\n+\n+  // Sets the format's metadata, such as the maximum number of decimal digits and if\n+  // the patterns contains a dollar sign.\n+  int32_t Setup() {\n+    int32_t ret = 0;\n+    bool is_decimal_part = false;\n+    has_dollar_sign_ = false;\n+    for (size_t i = 0; i < pattern_size_; ++i) {\n+      if (pattern_[i] == '$') {\n+        has_dollar_sign_ = true;\n\nReview comment:\n       Add continue here\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T13:45:33.652+0000",
                    "updated": "2021-11-03T13:45:33.652+0000",
                    "started": "2021-11-03T13:45:33.652+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674608",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/675421",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r741913957\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -307,6 +310,21 @@ CAST_NUMERIC_FROM_STRING(double, arrow::DoubleType, FLOAT8)\n \n #undef CAST_NUMERIC_FROM_STRING\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE, TYPE_NAME)                                 \\\n+  GANDIVA_EXPORT                                                                       \\\n+  const char* gdv_fn_to_char_##TYPE_NAME##_utf8(                                       \\\n+      int64_t context, gdv_##IN_TYPE data, const char* format, int32_t format_len) {   \\\n+    gandiva::ToCharHolder* holder = reinterpret_cast<gandiva::ToCharHolder*>(context); \\\n+    return holder->Format<gdv_##IN_TYPE>(data);                                        \\\n+  }\n+\n+GDV_FN_TO_CHAR(int32, arrow::Int32Type, INT)\n+GDV_FN_TO_CHAR(int64, arrow::Int64Type, BIGINT)\n+GDV_FN_TO_CHAR(float32, arrow::FloatType, FLOAT4)\n+GDV_FN_TO_CHAR(float64, arrow::DoubleType, FLOAT8)\n+\n+#undef CAST_NUMERIC_FROM_STRING\n\nReview comment:\n       Shouldn't this be #undef GDV_FN_TO_CHAR?\n\n##########\nFile path: cpp/src/gandiva/to_char_holder.h\n##########\n@@ -0,0 +1,79 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+/// Function Holder for SQL 'to_char'\n+\n+class GANDIVA_EXPORT ToCharHolder : public FunctionHolder {\n+ public:\n+  ~ToCharHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ToCharHolder>* holder);\n+\n+  static Status Make(const std::string& java_pattern,\n+                     std::shared_ptr<ToCharHolder>* holder);\n+\n+  template <typename T>\n+  const char* Format(T number) {\n+    return \"\";\n+  }\n+\n+ private:\n+  explicit ToCharHolder(const char* pattern, int32_t pattern_size)\n+      : pattern_(pattern), pattern_size_(pattern_size) {\n+    maximumFractionDigits_ = Setup();\n+  }\n+\n+  // Sets the format's metadata, such as the maximum number of decimal digits and if\n+  // the patterns contains a dollar sign.\n+  int32_t Setup() {\n+    int32_t ret = 0;\n+    bool is_decimal_part = false;\n+    has_dollar_sign_ = false;\n+    for (size_t i = 0; i < pattern_size_; ++i) {\n+      if (pattern_[i] == '$') {\n+        has_dollar_sign_ = true;\n\nReview comment:\n       Add continue here\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -307,6 +310,21 @@ CAST_NUMERIC_FROM_STRING(double, arrow::DoubleType, FLOAT8)\n \n #undef CAST_NUMERIC_FROM_STRING\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE, TYPE_NAME)                                 \\\n+  GANDIVA_EXPORT                                                                       \\\n+  const char* gdv_fn_to_char_##TYPE_NAME##_utf8(                                       \\\n+      int64_t context, gdv_##IN_TYPE data, const char* format, int32_t format_len) {   \\\n+    gandiva::ToCharHolder* holder = reinterpret_cast<gandiva::ToCharHolder*>(context); \\\n+    return holder->Format<gdv_##IN_TYPE>(data);                                        \\\n+  }\n+\n+GDV_FN_TO_CHAR(int32, arrow::Int32Type, INT)\n+GDV_FN_TO_CHAR(int64, arrow::Int64Type, BIGINT)\n+GDV_FN_TO_CHAR(float32, arrow::FloatType, FLOAT4)\n+GDV_FN_TO_CHAR(float64, arrow::DoubleType, FLOAT8)\n+\n+#undef CAST_NUMERIC_FROM_STRING\n\nReview comment:\n       Shouldn't this be #undef GDV_FN_TO_CHAR?\n\n##########\nFile path: cpp/src/gandiva/to_char_holder.h\n##########\n@@ -0,0 +1,79 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+/// Function Holder for SQL 'to_char'\n+\n+class GANDIVA_EXPORT ToCharHolder : public FunctionHolder {\n+ public:\n+  ~ToCharHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ToCharHolder>* holder);\n+\n+  static Status Make(const std::string& java_pattern,\n+                     std::shared_ptr<ToCharHolder>* holder);\n+\n+  template <typename T>\n+  const char* Format(T number) {\n+    return \"\";\n+  }\n+\n+ private:\n+  explicit ToCharHolder(const char* pattern, int32_t pattern_size)\n+      : pattern_(pattern), pattern_size_(pattern_size) {\n+    maximumFractionDigits_ = Setup();\n+  }\n+\n+  // Sets the format's metadata, such as the maximum number of decimal digits and if\n+  // the patterns contains a dollar sign.\n+  int32_t Setup() {\n+    int32_t ret = 0;\n+    bool is_decimal_part = false;\n+    has_dollar_sign_ = false;\n+    for (size_t i = 0; i < pattern_size_; ++i) {\n+      if (pattern_[i] == '$') {\n+        has_dollar_sign_ = true;\n\nReview comment:\n       Add continue here\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:49:37.466+0000",
                    "updated": "2021-11-04T00:49:37.466+0000",
                    "started": "2021-11-04T00:49:37.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675421",
                    "issueId": "13366182"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13366182/worklog/676069",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vvellanki commented on a change in pull request #9750:\nURL: https://github.com/apache/arrow/pull/9750#discussion_r741913957\n\n\n\n##########\nFile path: cpp/src/gandiva/gdv_function_stubs.cc\n##########\n@@ -307,6 +310,21 @@ CAST_NUMERIC_FROM_STRING(double, arrow::DoubleType, FLOAT8)\n \n #undef CAST_NUMERIC_FROM_STRING\n \n+#define GDV_FN_TO_CHAR(IN_TYPE, ARROW_TYPE, TYPE_NAME)                                 \\\n+  GANDIVA_EXPORT                                                                       \\\n+  const char* gdv_fn_to_char_##TYPE_NAME##_utf8(                                       \\\n+      int64_t context, gdv_##IN_TYPE data, const char* format, int32_t format_len) {   \\\n+    gandiva::ToCharHolder* holder = reinterpret_cast<gandiva::ToCharHolder*>(context); \\\n+    return holder->Format<gdv_##IN_TYPE>(data);                                        \\\n+  }\n+\n+GDV_FN_TO_CHAR(int32, arrow::Int32Type, INT)\n+GDV_FN_TO_CHAR(int64, arrow::Int64Type, BIGINT)\n+GDV_FN_TO_CHAR(float32, arrow::FloatType, FLOAT4)\n+GDV_FN_TO_CHAR(float64, arrow::DoubleType, FLOAT8)\n+\n+#undef CAST_NUMERIC_FROM_STRING\n\nReview comment:\n       Shouldn't this be #undef GDV_FN_TO_CHAR?\n\n##########\nFile path: cpp/src/gandiva/to_char_holder.h\n##########\n@@ -0,0 +1,79 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+#pragma once\n+\n+#include \"arrow/status.h\"\n+\n+#include \"gandiva/execution_context.h\"\n+#include \"gandiva/function_holder.h\"\n+#include \"gandiva/node.h\"\n+#include \"gandiva/visibility.h\"\n+\n+namespace gandiva {\n+/// Function Holder for SQL 'to_char'\n+\n+class GANDIVA_EXPORT ToCharHolder : public FunctionHolder {\n+ public:\n+  ~ToCharHolder() override = default;\n+\n+  static Status Make(const FunctionNode& node, std::shared_ptr<ToCharHolder>* holder);\n+\n+  static Status Make(const std::string& java_pattern,\n+                     std::shared_ptr<ToCharHolder>* holder);\n+\n+  template <typename T>\n+  const char* Format(T number) {\n+    return \"\";\n+  }\n+\n+ private:\n+  explicit ToCharHolder(const char* pattern, int32_t pattern_size)\n+      : pattern_(pattern), pattern_size_(pattern_size) {\n+    maximumFractionDigits_ = Setup();\n+  }\n+\n+  // Sets the format's metadata, such as the maximum number of decimal digits and if\n+  // the patterns contains a dollar sign.\n+  int32_t Setup() {\n+    int32_t ret = 0;\n+    bool is_decimal_part = false;\n+    has_dollar_sign_ = false;\n+    for (size_t i = 0; i < pattern_size_; ++i) {\n+      if (pattern_[i] == '$') {\n+        has_dollar_sign_ = true;\n\nReview comment:\n       Add continue here\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:56:21.880+0000",
                    "updated": "2021-11-04T01:56:21.880+0000",
                    "started": "2021-11-04T01:56:21.880+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676069",
                    "issueId": "13366182"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 8400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@46a8fcfe[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5069d881[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4a0ced01[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@543f9911[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3daa37f6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@638a21a7[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4ec3bc32[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@661c43ea[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ae5cd58[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@38d052ba[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b214bbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6f265623[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 8400,
        "customfield_12312520": null,
        "customfield_12312521": "2021-03-18 20:55:20.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-12021/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-03-18T20:55:20.000+0000",
        "updated": "2021-11-04T01:56:22.000+0000",
        "timeoriginalestimate": null,
        "description": "Add function to transform numeric values to its equivalent in characters",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 8400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement to_char() function on Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0oy9s:",
        "customfield_12314139": null
    }
}