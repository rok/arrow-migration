{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13175993",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13175993",
    "key": "ARROW-2953",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332956",
                "id": "12332956",
                "name": "C++ - Plasma"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1800,
            "total": 1800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2953/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 3,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13175993/worklog/130005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pcmoritz opened a new pull request #2359: ARROW-2953: [Plasma] Reduce plasma memory usage\nURL: https://github.com/apache/arrow/pull/2359\n \n \n   Together with the previous PR, this already reduces the memory consumption by 40%.\r\n   \r\n   Some more reduction could be done by factoring out some common fields from the object table (int fd, int device_num, int64_t map_size, we only need one of offset and pointer).\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-01T22:42:21.016+0000",
                    "updated": "2018-08-01T22:42:21.016+0000",
                    "started": "2018-08-01T22:42:21.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130005",
                    "issueId": "13175993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13175993/worklog/130019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #2359: ARROW-2953: [Plasma] Reduce plasma memory usage\nURL: https://github.com/apache/arrow/pull/2359#issuecomment-409760661\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=h1) Report\n   > Merging [#2359](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/cf79192ebc2bf54c68b7b56dc938d91f72441b96?src=pr&el=desc) will **increase** coverage by `2.34%`.\n   > The diff coverage is `100%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/2359/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #2359      +/-   ##\n   ==========================================\n   + Coverage    84.5%   86.85%   +2.34%     \n   ==========================================\n     Files         293      237      -56     \n     Lines       45210    42459    -2751     \n   ==========================================\n   - Hits        38205    36876    -1329     \n   + Misses       6978     5583    -1395     \n   + Partials       27        0      -27\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/plasma/plasma.h](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvcGxhc21hLmg=) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/eviction\\_policy.cc](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvZXZpY3Rpb25fcG9saWN5LmNj) | `100% <100%> (\u00f8)` | :arrow_up: |\n   | [cpp/src/plasma/store.cc](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Y3BwL3NyYy9wbGFzbWEvc3RvcmUuY2M=) | `89.21% <100%> (+0.23%)` | :arrow_up: |\n   | [go/arrow/internal/testing/tools/bits.go](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvdGVzdGluZy90b29scy9iaXRzLmdv) | | |\n   | [rust/src/error.rs](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-cnVzdC9zcmMvZXJyb3IucnM=) | | |\n   | [rust/src/lib.rs](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGliLnJz) | | |\n   | [go/arrow/array/bufferbuilder.go](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Z28vYXJyb3cvYXJyYXkvYnVmZmVyYnVpbGRlci5nbw==) | | |\n   | [rust/src/list\\_builder.rs](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-cnVzdC9zcmMvbGlzdF9idWlsZGVyLnJz) | | |\n   | [go/arrow/math/int64\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWF0aC9pbnQ2NF9hbWQ2NC5nbw==) | | |\n   | [go/arrow/internal/cpu/cpu\\_x86.go](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaW50ZXJuYWwvY3B1L2NwdV94ODYuZ28=) | | |\n   | ... and [49 more](https://codecov.io/gh/apache/arrow/pull/2359/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=footer). Last update [cf79192...40f998e](https://codecov.io/gh/apache/arrow/pull/2359?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-01T23:47:07.135+0000",
                    "updated": "2018-08-01T23:47:07.135+0000",
                    "started": "2018-08-01T23:47:07.135+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130019",
                    "issueId": "13175993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13175993/worklog/130082",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "robertnishihara closed pull request #2359: ARROW-2953: [Plasma] Reduce plasma memory usage\nURL: https://github.com/apache/arrow/pull/2359\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/plasma/eviction_policy.cc b/cpp/src/plasma/eviction_policy.cc\nindex ebe4e1aed1..cace588d6d 100644\n--- a/cpp/src/plasma/eviction_policy.cc\n+++ b/cpp/src/plasma/eviction_policy.cc\n@@ -24,7 +24,7 @@ namespace plasma {\n void LRUCache::Add(const ObjectID& key, int64_t size) {\n   auto it = item_map_.find(key);\n   ARROW_CHECK(it == item_map_.end());\n-  /* Note that it is important to use a list so the iterators stay valid. */\n+  // Note that it is important to use a list so the iterators stay valid.\n   item_list_.emplace_front(key, size);\n   item_map_.emplace(key, item_list_.begin());\n }\n@@ -55,11 +55,11 @@ int64_t EvictionPolicy::ChooseObjectsToEvict(int64_t num_bytes_required,\n                                              std::vector<ObjectID>* objects_to_evict) {\n   int64_t bytes_evicted =\n       cache_.ChooseObjectsToEvict(num_bytes_required, objects_to_evict);\n-  /* Update the LRU cache. */\n+  // Update the LRU cache.\n   for (auto& object_id : *objects_to_evict) {\n     cache_.Remove(object_id);\n   }\n-  /* Update the number of bytes used. */\n+  // Update the number of bytes used.\n   memory_used_ -= bytes_evicted;\n   ARROW_CHECK(memory_used_ >= 0);\n   return bytes_evicted;\n@@ -67,20 +67,20 @@ int64_t EvictionPolicy::ChooseObjectsToEvict(int64_t num_bytes_required,\n \n void EvictionPolicy::ObjectCreated(const ObjectID& object_id) {\n   auto entry = store_info_->objects[object_id].get();\n-  cache_.Add(object_id, entry->info.data_size + entry->info.metadata_size);\n-  int64_t size = entry->info.data_size + entry->info.metadata_size;\n+  cache_.Add(object_id, entry->data_size + entry->metadata_size);\n+  int64_t size = entry->data_size + entry->metadata_size;\n   memory_used_ += size;\n   ARROW_CHECK(memory_used_ <= store_info_->memory_capacity);\n }\n \n bool EvictionPolicy::RequireSpace(int64_t size, std::vector<ObjectID>* objects_to_evict) {\n-  /* Check if there is enough space to create the object. */\n+  // Check if there is enough space to create the object.\n   int64_t required_space = memory_used_ + size - store_info_->memory_capacity;\n-  /* Try to free up at least as much space as we need right now but ideally\n-   * up to 20% of the total capacity. */\n+  // Try to free up at least as much space as we need right now but ideally\n+  // up to 20% of the total capacity.\n   int64_t space_to_free = std::max(required_space, store_info_->memory_capacity / 5);\n   ARROW_LOG(DEBUG) << \"not enough space to create this object, so evicting objects\";\n-  /* Choose some objects to evict, and update the return pointers. */\n+  // Choose some objects to evict, and update the return pointers.\n   int64_t num_bytes_evicted = ChooseObjectsToEvict(space_to_free, objects_to_evict);\n   ARROW_LOG(INFO) << \"There is not enough space to create this object, so evicting \"\n                   << objects_to_evict->size() << \" objects to free up \"\n@@ -90,23 +90,23 @@ bool EvictionPolicy::RequireSpace(int64_t size, std::vector<ObjectID>* objects_t\n \n void EvictionPolicy::BeginObjectAccess(const ObjectID& object_id,\n                                        std::vector<ObjectID>* objects_to_evict) {\n-  /* If the object is in the LRU cache, remove it. */\n+  // If the object is in the LRU cache, remove it.\n   cache_.Remove(object_id);\n }\n \n void EvictionPolicy::EndObjectAccess(const ObjectID& object_id,\n                                      std::vector<ObjectID>* objects_to_evict) {\n   auto entry = store_info_->objects[object_id].get();\n-  /* Add the object to the LRU cache.*/\n-  cache_.Add(object_id, entry->info.data_size + entry->info.metadata_size);\n+  // Add the object to the LRU cache.\n+  cache_.Add(object_id, entry->data_size + entry->metadata_size);\n }\n \n void EvictionPolicy::RemoveObject(const ObjectID& object_id) {\n-  /* If the object is in the LRU cache, remove it. */\n+  // If the object is in the LRU cache, remove it.\n   cache_.Remove(object_id);\n \n   auto entry = store_info_->objects[object_id].get();\n-  int64_t size = entry->info.data_size + entry->info.metadata_size;\n+  int64_t size = entry->data_size + entry->metadata_size;\n   ARROW_CHECK(memory_used_ >= size);\n   memory_used_ -= size;\n }\ndiff --git a/cpp/src/plasma/plasma.h b/cpp/src/plasma/plasma.h\nindex 11c2b2be62..57ba882d38 100644\n--- a/cpp/src/plasma/plasma.h\n+++ b/cpp/src/plasma/plasma.h\n@@ -116,8 +116,6 @@ struct ObjectTableEntry {\n \n   ~ObjectTableEntry();\n \n-  /// Object info like size, creation time and owner.\n-  flatbuf::ObjectInfoT info;\n   /// Memory mapped file containing the object.\n   int fd;\n   /// Device number.\n@@ -128,6 +126,10 @@ struct ObjectTableEntry {\n   ptrdiff_t offset;\n   /// Pointer to the object data. Needed to free the object.\n   uint8_t* pointer;\n+  /// Size of the object in bytes.\n+  int64_t data_size;\n+  /// Size of the object metadata in bytes.\n+  int64_t metadata_size;\n #ifdef PLASMA_GPU\n   /// IPC GPU handle to share with clients.\n   std::shared_ptr<CudaIpcMemHandle> ipc_handle;\ndiff --git a/cpp/src/plasma/store.cc b/cpp/src/plasma/store.cc\nindex d68f6e3a41..8cef3e3f79 100644\n--- a/cpp/src/plasma/store.cc\n+++ b/cpp/src/plasma/store.cc\n@@ -205,9 +205,8 @@ PlasmaError PlasmaStore::CreateObject(const ObjectID& object_id, int64_t data_si\n     assert(fd != -1);\n   }\n   auto entry = std::unique_ptr<ObjectTableEntry>(new ObjectTableEntry());\n-  entry->info.object_id = object_id.binary();\n-  entry->info.data_size = data_size;\n-  entry->info.metadata_size = metadata_size;\n+  entry->data_size = data_size;\n+  entry->metadata_size = metadata_size;\n   entry->pointer = pointer;\n   // TODO(pcm): Set the other fields.\n   entry->fd = fd;\n@@ -248,9 +247,9 @@ void PlasmaObject_init(PlasmaObject* object, ObjectTableEntry* entry) {\n #endif\n   object->store_fd = entry->fd;\n   object->data_offset = entry->offset;\n-  object->metadata_offset = entry->offset + entry->info.data_size;\n-  object->data_size = entry->info.data_size;\n-  object->metadata_size = entry->info.metadata_size;\n+  object->metadata_offset = entry->offset + entry->data_size;\n+  object->data_size = entry->data_size;\n+  object->metadata_size = entry->metadata_size;\n   object->device_num = entry->device_num;\n }\n \n@@ -445,9 +444,14 @@ void PlasmaStore::SealObject(const ObjectID& object_id, unsigned char digest[])\n   // Set the state of object to SEALED.\n   entry->state = ObjectState::PLASMA_SEALED;\n   // Set the object digest.\n-  entry->info.digest = std::string(reinterpret_cast<char*>(&digest[0]), kDigestSize);\n+  std::memcpy(&entry->digest[0], &digest[0], kDigestSize);\n   // Inform all subscribers that a new object has been sealed.\n-  PushNotification(&entry->info);\n+  ObjectInfoT info;\n+  info.object_id = object_id.binary();\n+  info.data_size = entry->data_size;\n+  info.metadata_size = entry->metadata_size;\n+  info.digest = std::string(reinterpret_cast<char*>(&digest[0]), kDigestSize);\n+  PushNotification(&info);\n \n   // Update all get requests that involve this object.\n   UpdateObjectGetRequests(object_id);\n@@ -701,7 +705,13 @@ void PlasmaStore::SubscribeToUpdates(Client* client) {\n   // Push notifications to the new subscriber about existing sealed objects.\n   for (const auto& entry : store_info_.objects) {\n     if (entry.second->state == ObjectState::PLASMA_SEALED) {\n-      PushNotification(&entry.second->info, fd);\n+      ObjectInfoT info;\n+      info.object_id = entry.first.binary();\n+      info.data_size = entry.second->data_size;\n+      info.metadata_size = entry.second->metadata_size;\n+      info.digest =\n+          std::string(reinterpret_cast<char*>(&entry.second->digest[0]), kDigestSize);\n+      PushNotification(&info, fd);\n     }\n   }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-08-02T03:45:59.846+0000",
                    "updated": "2018-08-02T03:45:59.846+0000",
                    "started": "2018-08-02T03:45:59.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "130082",
                    "issueId": "13175993"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 1800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@539c9cb9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@173619e9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ff6e70a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@28284e4c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@444132[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7eed4b07[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@469b3d67[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2cab51d6[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ec4d8a0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1a650f0c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@50a6922[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@73d9bdb4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 02 03:45:59 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-08-02T03:45:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2953/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-08-01T00:14:40.000+0000",
        "updated": "2019-06-03T12:34:50.000+0000",
        "timeoriginalestimate": null,
        "description": "While doing some memory profiling on the store, it became clear that at the moment the metadata of the objects takes up much more space than it should. In particular, for each object:\r\n * The object id (20 bytes) is stored three times\r\n * The object\u00a0checksum (8 bytes) is stored twice\r\n\r\nWe can therefore significantly reduce the metadata overhead with some refactoring.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "0.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Plasma] Store memory usage",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13175993/comment/16566314",
                    "id": "16566314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2359\n[https://github.com/apache/arrow/pull/2359]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=robertnishihara",
                        "name": "robertnishihara",
                        "key": "robertnishihara",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Robert Nishihara",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-08-02T03:45:59.976+0000",
                    "updated": "2018-08-02T03:45:59.976+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|i3wjrj:",
        "customfield_12314139": null
    }
}