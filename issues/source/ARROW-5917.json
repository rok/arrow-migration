{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13244549",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549",
    "key": "ARROW-5917",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345978",
                "id": "12345978",
                "description": "",
                "name": "0.15.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-10-05"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12567370",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12567370",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13249824",
                    "key": "ARROW-6184",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13249824",
                    "fields": {
                        "summary": "[Java] Provide hash table based dictionary encoder",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 44400,
            "total": 44400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5917/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 75,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/287579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994\n \n \n   The current dictionary encoder implementation (org.apache.arrow.vector.dictionary.DictionaryEncoder) has heavy performance overhead, which prevents it from being useful in practice:\r\n   \r\n   * There are repeated conversions between Java objects and bytes (e.g. vector.getObject).\r\n   * Unnecessary memory copy (the vector data must be copied to the hash table).\r\n   * The hash table cannot be reused for encoding multiple vectors (other data structure & results cannot be reused either).\r\n   * The output vector should not be created/managed by the encoder (just like in the out-of-place sorter)\r\n   * The hash table requires that the hashCode & equals methods be implemented appropriately, but this is not guaranteed.\r\n   We plan to implement a new one in the algorithm module, and gradually deprecate the current one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T09:55:33.534+0000",
                    "updated": "2019-08-02T09:55:33.534+0000",
                    "started": "2019-08-02T09:55:33.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287579",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/287901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-517686296\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@4f520a4`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4994/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4994   +/-   ##\n   =========================================\n     Coverage          ?   89.67%           \n   =========================================\n     Files             ?      668           \n     Lines             ?    98914           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    88698           \n     Misses            ?    10216           \n     Partials          ?        0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=footer). Last update [4f520a4...a916c15](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-02T12:45:21.218+0000",
                    "updated": "2019-08-02T12:45:21.218+0000",
                    "started": "2019-08-02T12:45:21.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "287901",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519773396\n \n \n   @liyafan82 I think this could be useful in practice but most of the points you made I don't think are true any longer (using getObject, the hash-table only stored indices and hash-code)  or are an easy fix to the existing encoder by migrating from static methods to object wrapper (and we could also pass in a custom hasher).\r\n   \r\n   Would you mind writing up your intended migration plans and sending to the ML, I think this is worth a discussion because it potentially affects code organization strategy going forward.\r\n   \r\n   Also, I believe the additional encoder has a few more unit tests, it would be nice to make use of those for this class.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T04:32:36.008+0000",
                    "updated": "2019-08-09T04:32:36.008+0000",
                    "started": "2019-08-09T04:32:36.008+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291798",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291848",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519797551\n \n \n   > @liyafan82 I think this could be useful in practice but most of the points you made I don't think are true any longer (using getObject, the hash-table only stored indices and hash-code) or are an easy fix to the existing encoder by migrating from static methods to object wrapper (and we could also pass in a custom hasher).\r\n   > \r\n   > Would you mind writing up your intended migration plans and sending to the ML, I think this is worth a discussion because it potentially affects code organization strategy going forward.\r\n   > \r\n   > Also, I believe the additional encoder has a few more unit tests, it would be nice to make use of those for this class.\r\n   \r\n   @emkornfield \r\n   Thanks for the comments. IMO, the new design of the dictionary encoder includes at least two types of encoders:\r\n   1. a search based encoder which encode each element in O(logn) time, but requires no extra memory space.\r\n   2. a hash table based encoder which encode each element in O(1) time, but requires extra memory space.\r\n   I think each of the above encoders has its own merit.\r\n   \r\n   In this PR, however, I only implement the search based encoder, because:\r\n   1. small changes are easier to review\r\n   2. the hash table based encoder was blocked by ARROW-6030.\r\n   \r\n   I will open a separate issue for the hash table based encoder. \r\n   When that is finished, we will have something to start with about the migration plan.\r\n   \r\n   What do you think?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T06:33:56.637+0000",
                    "updated": "2019-08-09T06:33:56.637+0000",
                    "started": "2019-08-09T06:33:56.637+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291848",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291851",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519800454\n \n \n   @liyafan82 I think what Micah mean is that the current encoder implementation is based on hash table the the questions #1 #2 #3 #5 mentioned above are no longer problems anymore :).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T06:45:42.560+0000",
                    "updated": "2019-08-09T06:45:42.560+0000",
                    "started": "2019-08-09T06:45:42.560+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291851",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519836302\n \n \n   > @liyafan82 I think what Micah mean is that the current encoder implementation is based on hash table the the questions #1 #2 #3 #5 mentioned above are no longer problems anymore :).\r\n   \r\n   @tianchen92 Maybe it is interesting to examine the above mentioned problems now.\r\n   \r\n   It seems problem 3) still exists. Since the encoder is based on a static method, for each vector to encode, we must create a new DictionaryHashTable and populate it with the dictionary vector. This is redundant work.\r\n   \r\n   In addition, there is another problem with this encoder: the hash algorithm is fixed, which cannot be adjusted according to the needs of specific scenarios. This may lead to substantial performance penalty, since the dictionary data distribution has great influence on the performance of the hash table.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T08:44:44.617+0000",
                    "updated": "2019-08-09T08:44:44.617+0000",
                    "started": "2019-08-09T08:44:44.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291910",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291947",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519836302\n \n \n   > @liyafan82 I think what Micah mean is that the current encoder implementation is based on hash table the the questions #1 #2 #3 #5 mentioned above are no longer problems anymore :).\r\n   \r\n   @tianchen92 Maybe it is interesting to examine the above mentioned problems now.\r\n   \r\n   It seems problems 3) and 4) still exists. \r\n   \r\n   To see problem 3), note that since the encoder is based on a static method, for each vector to encode, we must create a new DictionaryHashTable and populate it with the dictionary vector. This is redundant work.\r\n   \r\n   In addition, there is another problem with this encoder: the hash algorithm is fixed, which cannot be adjusted according to the needs of specific scenarios. This may lead to substantial performance penalty, since the dictionary data distribution has great influence on the performance of the hash table.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T09:34:15.000+0000",
                    "updated": "2019-08-09T09:34:15.000+0000",
                    "started": "2019-08-09T09:34:14.999+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291947",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519797551\n \n \n   > @liyafan82 I think this could be useful in practice but most of the points you made I don't think are true any longer (using getObject, the hash-table only stored indices and hash-code) or are an easy fix to the existing encoder by migrating from static methods to object wrapper (and we could also pass in a custom hasher).\r\n   > \r\n   > Would you mind writing up your intended migration plans and sending to the ML, I think this is worth a discussion because it potentially affects code organization strategy going forward.\r\n   > \r\n   > Also, I believe the additional encoder has a few more unit tests, it would be nice to make use of those for this class.\r\n   \r\n   @emkornfield \r\n   Thanks for the comments. I will use the tests for this class.\r\n   \r\n   IMO, the new design of the dictionary encoder includes at least two types of encoders:\r\n   1. a search based encoder which encode each element in O(logn) time, but requires no extra memory space.\r\n   2. a hash table based encoder which encode each element in O(1) time, but requires extra memory space.\r\n   I think each of the above encoders has its own merit.\r\n   \r\n   In this PR, however, I only implement the search based encoder, because:\r\n   1. small changes are easier to review\r\n   2. the hash table based encoder was blocked by ARROW-6030.\r\n   \r\n   I will open a separate issue for the hash table based encoder. \r\n   When that is finished, we will have something to start with about the migration plan.\r\n   \r\n   What do you think?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T09:34:58.778+0000",
                    "updated": "2019-08-09T09:34:58.778+0000",
                    "started": "2019-08-09T09:34:58.778+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291948",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/291962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "tianchen92 commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-519858118\n \n \n   > > @liyafan82 I think what Micah mean is that the current encoder implementation is based on hash table the the questions #1 #2 #3 #5 mentioned above are no longer problems anymore :).\r\n   > \r\n   > @tianchen92 Maybe it is interesting to examine the above mentioned problems now.\r\n   > \r\n   > It seems problems 3) and 4) still exists.\r\n   > \r\n   > To see problem 3), note that since the encoder is based on a static method, for each vector to encode, we must create a new DictionaryHashTable and populate it with the dictionary vector. This is redundant work.\r\n   > \r\n   > In addition, there is another problem with this encoder: the hash algorithm is fixed, which cannot be adjusted according to the needs of specific scenarios. This may lead to substantial performance penalty, since the dictionary data distribution has great influence on the performance of the hash table.\r\n   \r\n   Thanks for your clarify, you are right for the two points above.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T09:51:49.386+0000",
                    "updated": "2019-08-09T09:51:49.386+0000",
                    "started": "2019-08-09T09:51:49.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "291962",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-517686296\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@0d1c7ec`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4994/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff            @@\n   ##             master    #4994   +/-   ##\n   =========================================\n     Coverage          ?   89.67%           \n   =========================================\n     Files             ?      668           \n     Lines             ?    98914           \n     Branches          ?        0           \n   =========================================\n     Hits              ?    88698           \n     Misses            ?    10216           \n     Partials          ?        0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=footer). Last update [0d1c7ec...a91c811](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T15:41:03.322+0000",
                    "updated": "2019-08-09T15:41:03.322+0000",
                    "started": "2019-08-09T15:41:03.322+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292122",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-517686296\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=h1) Report\n   > :exclamation: No coverage uploaded for pull request base (`master@0d1c7ec`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n   > The diff coverage is `n/a`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4994/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff            @@\n   ##             master   #4994   +/-   ##\n   ========================================\n     Coverage          ?   89.7%           \n   ========================================\n     Files             ?     670           \n     Lines             ?   99387           \n     Branches          ?       0           \n   ========================================\n     Hits              ?   89151           \n     Misses            ?   10236           \n     Partials          ?       0\n   ```\n   \n   \n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=footer). Last update [0d1c7ec...a91c811](https://codecov.io/gh/apache/arrow/pull/4994?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-09T18:37:35.791+0000",
                    "updated": "2019-08-09T18:37:35.791+0000",
                    "started": "2019-08-09T18:37:35.790+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292215",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on issue #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#issuecomment-520112423\n \n \n   My point for issues 3, 4 and 5, I think they are easily addressable by migrating the static method to use an object based approach (and changing the APIs slightly).\r\n   \r\n   > I will open a separate issue for the hash table based encoder.\r\n   When that is finished, we will have something to start with about the migration plan.\r\n   \r\n   I think a separate PR is a good idea.  The state I'm trying to avoid is having duplicated/very similar functionality in two packages without clear guidance on which one to use.  If we do decide to intend to migrate away from the existing encoder embedded in the Vector module there should at least be some notice/discussion on the ML.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:01:07.404+0000",
                    "updated": "2019-08-10T03:01:07.404+0000",
                    "started": "2019-08-10T03:01:07.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292398",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312687925\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n \n Review comment:\n   private?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.351+0000",
                    "updated": "2019-08-10T03:13:18.351+0000",
                    "started": "2019-08-10T03:13:18.351+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292400",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312688138\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  /**\n+   * Encodes an input vector by binary search.\n+   * So the algorithm takes O(nlogm) time, where n is the length of the input vector,\n+   * and m is the length of the dictionary.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void encode(D input, E output) {\n+    for (int i = 0; i < input.getValueCount(); i++) {\n+      if (!encodeNull && input.isNull(i)) {\n+        BitVectorHelper.setValidityBit(output.getValidityBuffer(), i, 0);\n+        continue;\n+      }\n+\n+      int index = VectorSearcher.binarySearch(dictionary, comparator, input, i);\n+      if (index == -1) {\n+        throw new IllegalStateException(\"The data element is not found in the dictionary\");\n+      }\n+      output.setWithPossibleTruncate(i, index);\n+    }\n+    output.setValueCount(input.getValueCount());\n+  }\n+\n+  /**\n+   * Decodes an input vector. The algorithm takes O(n) time,\n+   * where n is the length of the input vector.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void decode(E input, D output) {\n \n Review comment:\n   is there a reason to not keep this as a static method on the existing VectorEncoderClass, if we want to have a separately allocated vector that seems like an easy change?  \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.380+0000",
                    "updated": "2019-08-10T03:13:18.380+0000",
                    "started": "2019-08-10T03:13:18.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292401",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292402",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312687956\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n \n Review comment:\n   this needs more clarification, what happens if it is true, what happens if it is false?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.384+0000",
                    "updated": "2019-08-10T03:13:18.384+0000",
                    "started": "2019-08-10T03:13:18.383+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292402",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312687970\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  /**\n+   * Encodes an input vector by binary search.\n+   * So the algorithm takes O(nlogm) time, where n is the length of the input vector,\n \n Review comment:\n   ```suggestion\r\n      * So the algorithm takes O(n*log(m)) time, where n is the length of the input vector,\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.405+0000",
                    "updated": "2019-08-10T03:13:18.405+0000",
                    "started": "2019-08-10T03:13:18.405+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292403",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312688222\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  /**\n+   * Encodes an input vector by binary search.\n+   * So the algorithm takes O(nlogm) time, where n is the length of the input vector,\n+   * and m is the length of the dictionary.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void encode(D input, E output) {\n+    for (int i = 0; i < input.getValueCount(); i++) {\n+      if (!encodeNull && input.isNull(i)) {\n+        BitVectorHelper.setValidityBit(output.getValidityBuffer(), i, 0);\n+        continue;\n+      }\n+\n+      int index = VectorSearcher.binarySearch(dictionary, comparator, input, i);\n+      if (index == -1) {\n+        throw new IllegalStateException(\"The data element is not found in the dictionary\");\n+      }\n+      output.setWithPossibleTruncate(i, index);\n+    }\n+    output.setValueCount(input.getValueCount());\n+  }\n+\n+  /**\n+   * Decodes an input vector. The algorithm takes O(n) time,\n+   * where n is the length of the input vector.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void decode(E input, D output) {\n+    for (int i = 0; i < input.getValueCount(); i++) {\n+      if (!encodeNull && input.isNull(i)) {\n+        BitVectorHelper.setValidityBit(output.getValidityBuffer(), i, 0);\n \n Review comment:\n   it seems like this relies on the array being preallocated to the correct size, is that intended behavior?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.534+0000",
                    "updated": "2019-08-10T03:13:18.534+0000",
                    "started": "2019-08-10T03:13:18.533+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292404",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292405",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "emkornfield commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312688263\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator, boolean encodeNull) {\n+    this.dictionary = dictionary;\n+    this.comparator = comparator;\n+    this.encodeNull = encodeNull;\n+  }\n+\n+  /**\n+   * Encodes an input vector by binary search.\n+   * So the algorithm takes O(nlogm) time, where n is the length of the input vector,\n+   * and m is the length of the dictionary.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void encode(D input, E output) {\n+    for (int i = 0; i < input.getValueCount(); i++) {\n+      if (!encodeNull && input.isNull(i)) {\n+        BitVectorHelper.setValidityBit(output.getValidityBuffer(), i, 0);\n+        continue;\n+      }\n+\n+      int index = VectorSearcher.binarySearch(dictionary, comparator, input, i);\n+      if (index == -1) {\n+        throw new IllegalStateException(\"The data element is not found in the dictionary\");\n+      }\n+      output.setWithPossibleTruncate(i, index);\n+    }\n+    output.setValueCount(input.getValueCount());\n+  }\n+\n+  /**\n+   * Decodes an input vector. The algorithm takes O(n) time,\n+   * where n is the length of the input vector.\n+   * @param input the input vector.\n+   * @param output the output vector.\n+   */\n+  public void decode(E input, D output) {\n+    for (int i = 0; i < input.getValueCount(); i++) {\n+      if (!encodeNull && input.isNull(i)) {\n \n Review comment:\n   should this be here?  it seems like always want to set null if the input happens to be null?  \r\n   \r\n   I wonder if it is quicker to copy the null buffer if there are any null values instead of doing this one by one.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-10T03:13:18.564+0000",
                    "updated": "2019-08-10T03:13:18.564+0000",
                    "started": "2019-08-10T03:13:18.563+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292405",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292635",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312725212\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n \n Review comment:\n   resolved. thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-11T06:43:23.430+0000",
                    "updated": "2019-08-11T06:43:23.430+0000",
                    "started": "2019-08-11T06:43:23.429+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292635",
                    "issueId": "13244549"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/worklog/292637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #4994: ARROW-5917: [Java] Redesign the dictionary encoder\nURL: https://github.com/apache/arrow/pull/4994#discussion_r312725339\n \n \n\n ##########\n File path: java/algorithm/src/main/java/org/apache/arrow/algorithm/dictionary/SearchDictionaryEncoder.java\n ##########\n @@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.algorithm.dictionary;\n+\n+import org.apache.arrow.algorithm.search.VectorSearcher;\n+import org.apache.arrow.algorithm.sort.VectorValueComparator;\n+import org.apache.arrow.vector.BaseIntVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n+import org.apache.arrow.vector.ValueVector;\n+\n+/**\n+ * Dictionary encoder based on searching.\n+ * @param <E> encoded vector type.\n+ * @param <D> decoded vector type, which is also the dictionary type.\n+ */\n+public class SearchDictionaryEncoder<E extends BaseIntVector, D extends ValueVector> {\n+\n+  /**\n+   * The dictionary for encoding/decoding.\n+   * It must be sorted.\n+   */\n+  protected final D dictionary;\n+\n+  /**\n+   * The criteria by which the dictionary is sorted.\n+   */\n+  protected final VectorValueComparator<D> comparator;\n+\n+  /**\n+   * A flag indicating if null should be encoded.\n+   */\n+  protected final boolean encodeNull;\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   */\n+  public SearchDictionaryEncoder(D dictionary, VectorValueComparator<D> comparator) {\n+    this(dictionary, comparator, false);\n+  }\n+\n+  /**\n+   * Constructs a dictionary encoder.\n+   * @param dictionary the dictionary. It must be in sorted order.\n+   * @param comparator the criteria for sorting.\n+   * @param encodeNull if null should be encoded.\n \n Review comment:\n   Good suggestion. Revised. Thanks.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-08-11T06:45:33.706+0000",
                    "updated": "2019-08-11T06:45:33.706+0000",
                    "started": "2019-08-11T06:45:33.705+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "292637",
                    "issueId": "13244549"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 44400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b13b088[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34004a60[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6523c7c2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5346d24c[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9ae7688[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@f7c01cd[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@741ada37[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@11aba24a[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6b4b9cc1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4568a0c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26bf23d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@6aca6cbc[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 44400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 18 04:45:09 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-09-18T04:45:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5917/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-07-12T08:25:22.000+0000",
        "updated": "2019-09-18T04:45:09.000+0000",
        "timeoriginalestimate": null,
        "description": "The current dictionary encoder implementation (org.apache.arrow.vector.dictionary.DictionaryEncoder) has heavy performance overhead, which prevents it from being useful in practice:\r\n # There are repeated conversions between Java objects and bytes (e.g. vector.getObject(i)).\r\n # Unnecessary memory copy (the vector data must be copied to the hash table).\r\n # The hash table cannot be reused for encoding multiple vectors (other data structure & results cannot be reused either).\r\n # The output vector should not be created/managed by the encoder (just like in the out-of-place sorter)\r\n # The hash table requires that the hashCode & equals methods be implemented appropriately, but this is not guaranteed.\r\n\r\nWe plan to implement a new one in the algorithm module, and gradually deprecate the current one.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "12h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 44400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] Redesign the dictionary encoder",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13244549/comment/16932054",
                    "id": "16932054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4994\n[https://github.com/apache/arrow/pull/4994]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=emkornfield%40gmail.com",
                        "name": "emkornfield@gmail.com",
                        "key": "emkornfield@gmail.com",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Micah Kornfield",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-09-18T04:45:09.771+0000",
                    "updated": "2019-09-18T04:45:09.771+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z04lsw:",
        "customfield_12314139": null
    }
}