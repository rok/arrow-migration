{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13390856",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856",
    "key": "ARROW-13403",
    "fields": {
        "parent": {
            "id": "13390911",
            "key": "ARROW-13407",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13390911",
            "fields": {
                "summary": "[Documentation] Documentation Improvements",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 16200,
            "total": 16200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13403/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 27,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/627723",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic opened a new pull request #10800:\nURL: https://github.com/apache/arrow/pull/10800\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-26T13:09:00.311+0000",
                    "updated": "2021-07-26T13:09:00.311+0000",
                    "started": "2021-07-26T13:09:00.311+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "627723",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/627724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10800:\nURL: https://github.com/apache/arrow/pull/10800#issuecomment-886688192\n\n\n   https://issues.apache.org/jira/browse/ARROW-13403\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-07-26T13:09:14.057+0000",
                    "updated": "2021-07-26T13:09:14.057+0000",
                    "started": "2021-07-26T13:09:14.057+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "627724",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/637774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic closed pull request #10800:\nURL: https://github.com/apache/arrow/pull/10800\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-13T12:20:41.371+0000",
                    "updated": "2021-08-13T12:20:41.371+0000",
                    "started": "2021-08-13T12:20:41.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "637774",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/637775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#issuecomment-898420969\n\n\n   https://issues.apache.org/jira/browse/ARROW-13403\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-13T12:21:24.998+0000",
                    "updated": "2021-08-13T12:21:24.998+0000",
                    "started": "2021-08-13T12:21:24.998+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "637775",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/638112",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#issuecomment-899431576\n\n\n   CI failure is due to wider CI issues around a new Debian release, rather than a problem with the docs.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-16T11:20:04.585+0000",
                    "updated": "2021-08-16T11:20:04.585+0000",
                    "started": "2021-08-16T11:20:04.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "638112",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/638184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#issuecomment-899552068\n\n\n   The main changes in this PR were:\r\n   * removing some redundant content to bring the vignette length down a bit\r\n   * re-ordering the content, and adding extra headings/subheadings to make it easier to find the relevant sections and signpost what content is where\r\n   * move some of the detail about the internals of the `configure` script and other installation scripts to `install.Rmd`\r\n   * renaming headings to make it easier to browse the vignette\r\n   * add in a warning about Windows development#\r\n   * change \"we\" to \"you\" where appropriate\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-16T14:22:02.160+0000",
                    "updated": "2021-08-16T14:22:02.160+0000",
                    "started": "2021-08-16T14:22:02.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "638184",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/640837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r694277148\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -1,21 +1,23 @@\n ---\n title: \"Arrow R Developer Guide\"\n-output: rmarkdown::html_vignette\n+output: \n+  html_document:\n+      toc: true\n+      toc_depth: 2\n vignette: >\n   %\\VignetteIndexEntry{Arrow R Developer Guide}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n+\n\nReview comment:\n       Super nit picky: is this new line needed?\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n\nReview comment:\n       ```suggestion\r\n   On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the compiled arrow binary files into it. \r\n   ```\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -101,37 +114,48 @@ brew install cmake openssl\n sudo apt install -y cmake libcurl4-openssl-dev libssl-dev\n ```\n \n-### Configure the Arrow build {.tabset}\n+#### Windows\n+\n+Currently, the R package cannot be made to work with a locally-built Arrow C++ library. This will be resolved in a future release.\n+\n+### Step 2 - Configure the Arrow build\n\nReview comment:\n       Same note about the `{.tabset}` here as well. If we do want to get rid of them completely, that's totally fine, but if we do get rid of the tabs, I think we should pick either user directory install or system install and only document one of those. Having both of these sections run one after the other on the the pkgdown site (which I assume is the place a large portion of people reading this read it from) is more confusing than it is helpful. Hiding one or the other with tabs makes it less distracting to document both cause one can totally ignore one/the other.\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -202,11 +226,12 @@ To enable optional features including: S3 support, an alternative memory allocat\n Other flags that may be useful:\n \n * `-DBoost_SOURCE=BUNDLED` and `-DThrift_SOURCE=bundled`, for example, or any other dependency `*_SOURCE`, if you have a system version of a C++ dependency that doesn't work correctly with Arrow. This tells the build to compile its own version of the dependency from source.\n\nReview comment:\n       ```suggestion\r\n   * `-DBoost_SOURCE=BUNDLED` and `-DThrift_SOURCE=BUNDLED`, for example, or any other dependency `*_SOURCE`, if you have a system version of a C++ dependency that doesn't work correctly with Arrow. This tells the build to compile its own version of the dependency from source.\r\n   ```\r\n   \r\n   I believe these are both not case sensitive (though we should probably check). This is something I noted when looking at this page a few days ago but didn't have a change to come and fix it separately.\n\n##########\nFile path: r/vignettes/install.Rmd\n##########\n@@ -123,6 +123,39 @@ you'll need to reinstall the package in order to enable S3 support.\n \n # How dependencies are resolved\n \n+There are a number of scripts that are triggered when `R CMD INSTALL .` is run. \n+For Arrow users, these should all just work without configuration and pull in \n+the most complete pieces (e.g. official binaries that we host).\n\nReview comment:\n       I wonder if it would be good to flag that most of this information is really only intended to help developers and not day-to-day installers of Arrow? I don't mind (and actually kind of like!) that it's in the install vignette as opposed to the developing vignette, but most of the information is still probably targets at (and most relevant to) developers and not standard installers of Arrow. \r\n   \r\n   There's also a reference at the end that says \"(If you're looking at this script, and you've gotten this far, it might look \r\n   incredibly familiar: it's basically the contents of this guide in script form \u2014 \r\n   with a few important changes)\" which we probably should link over to the developing vignette there.\r\n   \r\n   I don't think we want to take out some of the content just because it's not relevant to installers (since it's useful info and we don't want to have two different largely overlapping sections in both vignettes)\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n\nReview comment:\n       ```suggestion\r\n   If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get errors like the following when you install the R package:\r\n   ```\r\n   \r\n   I'm not totally sure this is what you intended, but I think it is?\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n\nReview comment:\n       This is a very minor point, so we might want to ignore it totally / gloss over it here, but technically \"the first four are relevant to all Arrow developers\" isn't _quite_ true. There are (small) differences in building the cpp code between the languages that use it (for example the flags recommended [for python development](https://arrow.apache.org/docs/developers/python.html#build-and-test) are slightly different \u2014 we could in principle recommend that folks use a union of the flags and then they would be able to do either, though compilation would be longer, so I'm not sure we want to do that). Additionally, other languages, like Rust, don't rely on the cpp code at all AFAIK, so for _those_ arrow developers this isn't super relevant.\r\n   \r\n   All of that said, it might be best to leave it as is, or say something like \"are similar to steps that Arrow developers working on other languages use\" and leave it be. The details above in this comment are definitely *not* relevant for someone building Arrow for R development for the first time\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -1,21 +1,23 @@\n ---\n title: \"Arrow R Developer Guide\"\n-output: rmarkdown::html_vignette\n+output: \n+  html_document:\n+      toc: true\n+      toc_depth: 2\n\nReview comment:\n       I'm curious if there's a general movement away from `rmarkdown::html_vignette`? I've always used `rmarkdown::html_vignette` because I thought it was streamlined for inclusion in the package (and pkgdown overrides this stuff anyway for the web docs).\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n\nReview comment:\n       ```suggestion\r\n   ```\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n \n-### Install dependencies {.tabset}\n+### Step 1 - Install dependencies\n\nReview comment:\n       Did you intend to get rid of `{.tabset}` here? It's a bit funky how it works (and is very much non-standard/hacked on to pkgdown), but it gives us a nice tabbed interface for interacting with the setup steps (e.g. https://arrow.apache.org/docs/r/articles/developing.html#install-dependencies). \n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n\nReview comment:\n       ```suggestion\r\n   This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), run styler on any changed R code, and commit the resulting updates to the branch.\r\n   ```\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n\nReview comment:\n       It does include some dependencies (and technically libarrow *is* a dependency of the R pacakge), but I think this is a clearer description of what we are doing here.\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: /usr/local/lib/libarrow.400.dylib\n+  Referenced from: /usr/local/lib/libparquet.400.dylib\n+  Reason: image not found\n ```\n+\n+You need to make sure that you don't let R link to your system library when building arrow. You can do this a number of different ways:\n+\n+* Setting the `MAKEFLAGS` environment variable to `\"LDFLAGS=\"` (see below for an example) this is the recommended way to accomplish this\n+* Using {withr}'s `with_makevars(list(LDFLAGS = \"\"), ...)`\n+* adding `LDFLAGS=` to your `~/.R/Makevars` file (the least recommended way, though it is a common debugging approach suggested online)\n+\n+```{bash, save=run & !sys_install & macos, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on macOS\n+brew install apache-arrow\n+```\n+\n+\n+```{bash, save=run & !sys_install & ubuntu, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on Ubuntu\n+sudo apt update\n+sudo apt install -y -V ca-certificates lsb-release wget\n+wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt update\n+sudo apt install -y -V libarrow-dev\n+```\n+\n+```{bash, save=run & !sys_install & macos}\n+MAKEFLAGS=\"LDFLAGS=\" R CMD INSTALL .\n+```\n+\n+\n+## `rpath` issues\n+\n+If the package fails to install/load with an error like this:\n+\n+```\n+  ** testing if installed package can be loaded from temporary location\n+  Error: package or namespace load failed for 'arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+  unable to load shared object '/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: @rpath/libarrow.14.dylib\n+```\n+\n+ensure that `-DARROW_INSTALL_NAME_RPATH=OFF` was passed (this is important on\n+macOS to prevent problems at link time and is a no-op on other platforms).\n+Alternatively, try setting the environment variable `R_LD_LIBRARY_PATH` to\n+wherever Arrow C++ was put in `make install`, e.g. `export\n+R_LD_LIBRARY_PATH=/usr/local/lib`, and retry installing the R package.\n+\n+When installing from source, if the R and C++ library versions do not\n+match, installation may fail. If you've previously installed the\n+libraries and want to upgrade the R package, you'll need to update the\n+Arrow C++ library first.\n+\n+For any other build/configuration challenges, see the [C++ developer\n+guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+\n+## Other installation issues\n+\n+There are a number of scripts that are triggered when the arrow R package is installed. For package users who are not interacting with the underlying code, these should all just work without configuration and pull in the most complete pieces (e.g. official binaries that we host). However, knowing about these scripts can help package developers troubleshoot if things go wrong in them or things go wrong in an install.  See [the installation vignette](./install.html) for more information.\n\nReview comment:\n       Could/should we link to the `How dependencies are resolved` section in the install vignette here?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-23T20:49:18.491+0000",
                    "updated": "2021-08-23T20:49:18.491+0000",
                    "started": "2021-08-23T20:49:18.490+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "640837",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641548",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695518610\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -1,21 +1,23 @@\n ---\n title: \"Arrow R Developer Guide\"\n-output: rmarkdown::html_vignette\n+output: \n+  html_document:\n+      toc: true\n+      toc_depth: 2\n vignette: >\n   %\\VignetteIndexEntry{Arrow R Developer Guide}\n   %\\VignetteEngine{knitr::rmarkdown}\n   %\\VignetteEncoding{UTF-8}\n+\n\nReview comment:\n       I'll remove\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -1,21 +1,23 @@\n ---\n title: \"Arrow R Developer Guide\"\n-output: rmarkdown::html_vignette\n+output: \n+  html_document:\n+      toc: true\n+      toc_depth: 2\n\nReview comment:\n       Oops, I chucked this in so it made it easier to preview the list of contents when I was rendering this as RMarkdown\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:22:03.698+0000",
                    "updated": "2021-08-25T08:22:03.698+0000",
                    "started": "2021-08-25T08:22:03.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641548",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695518930\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n\nReview comment:\n       Thanks!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:22:16.868+0000",
                    "updated": "2021-08-25T08:22:16.868+0000",
                    "started": "2021-08-25T08:22:16.867+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641549",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641550",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695519712\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n\nReview comment:\n       Thanks for highlighting this, I'll come up with a different way of phrasing this to be more accurate!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:23:10.444+0000",
                    "updated": "2021-08-25T08:23:10.444+0000",
                    "started": "2021-08-25T08:23:10.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641550",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641551",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695521887\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n \n-### Install dependencies {.tabset}\n+### Step 1 - Install dependencies\n\nReview comment:\n       Yeah, my intention was to make it really easy to navigate through the page, using the table of contents that appears at the side, and the heading levels, to signpost what bits applies to what.\r\n   \r\n   I could add it back in though - will see how including it affects the contents list.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:25:57.132+0000",
                    "updated": "2021-08-25T08:25:57.132+0000",
                    "started": "2021-08-25T08:25:57.132+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641551",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641552",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695523556\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n\nReview comment:\n       No idea, I think I just moved this section from elsewhere rather than rewriting it and had just skim-read it so didn't catch this. I'll rewrite the whole sentence to break it down a little.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:28:07.202+0000",
                    "updated": "2021-08-25T08:28:07.202+0000",
                    "started": "2021-08-25T08:28:07.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641552",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641553",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695523740\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: /usr/local/lib/libarrow.400.dylib\n+  Referenced from: /usr/local/lib/libparquet.400.dylib\n+  Reason: image not found\n ```\n+\n+You need to make sure that you don't let R link to your system library when building arrow. You can do this a number of different ways:\n+\n+* Setting the `MAKEFLAGS` environment variable to `\"LDFLAGS=\"` (see below for an example) this is the recommended way to accomplish this\n+* Using {withr}'s `with_makevars(list(LDFLAGS = \"\"), ...)`\n+* adding `LDFLAGS=` to your `~/.R/Makevars` file (the least recommended way, though it is a common debugging approach suggested online)\n+\n+```{bash, save=run & !sys_install & macos, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on macOS\n+brew install apache-arrow\n+```\n+\n+\n+```{bash, save=run & !sys_install & ubuntu, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on Ubuntu\n+sudo apt update\n+sudo apt install -y -V ca-certificates lsb-release wget\n+wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt update\n+sudo apt install -y -V libarrow-dev\n+```\n+\n+```{bash, save=run & !sys_install & macos}\n+MAKEFLAGS=\"LDFLAGS=\" R CMD INSTALL .\n+```\n+\n+\n+## `rpath` issues\n+\n+If the package fails to install/load with an error like this:\n+\n+```\n+  ** testing if installed package can be loaded from temporary location\n+  Error: package or namespace load failed for 'arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+  unable to load shared object '/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: @rpath/libarrow.14.dylib\n+```\n+\n+ensure that `-DARROW_INSTALL_NAME_RPATH=OFF` was passed (this is important on\n+macOS to prevent problems at link time and is a no-op on other platforms).\n+Alternatively, try setting the environment variable `R_LD_LIBRARY_PATH` to\n+wherever Arrow C++ was put in `make install`, e.g. `export\n+R_LD_LIBRARY_PATH=/usr/local/lib`, and retry installing the R package.\n+\n+When installing from source, if the R and C++ library versions do not\n+match, installation may fail. If you've previously installed the\n+libraries and want to upgrade the R package, you'll need to update the\n+Arrow C++ library first.\n+\n+For any other build/configuration challenges, see the [C++ developer\n+guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+\n+## Other installation issues\n+\n+There are a number of scripts that are triggered when the arrow R package is installed. For package users who are not interacting with the underlying code, these should all just work without configuration and pull in the most complete pieces (e.g. official binaries that we host). However, knowing about these scripts can help package developers troubleshoot if things go wrong in them or things go wrong in an install.  See [the installation vignette](./install.html) for more information.\n\nReview comment:\n       Sounds good\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:28:22.539+0000",
                    "updated": "2021-08-25T08:28:22.539+0000",
                    "started": "2021-08-25T08:28:22.539+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641553",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695524526\n\n\n\n##########\nFile path: r/vignettes/install.Rmd\n##########\n@@ -123,6 +123,39 @@ you'll need to reinstall the package in order to enable S3 support.\n \n # How dependencies are resolved\n \n+There are a number of scripts that are triggered when `R CMD INSTALL .` is run. \n+For Arrow users, these should all just work without configuration and pull in \n+the most complete pieces (e.g. official binaries that we host).\n\nReview comment:\n       Good point, will have a look at doing a better job of signposting who this is for and change up that later sentence!\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T08:29:18.257+0000",
                    "updated": "2021-08-25T08:29:18.257+0000",
                    "started": "2021-08-25T08:29:18.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641554",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#issuecomment-905346586\n\n\n   When changing the R package C++, I've again run into the issue that something needs editing to make sure that the lint script uses Python 3 (I think, can't remember the specific cause).  I'm going to add something to this PR which covers that (or open a ticket to do something to the script) as I won't be the only person to run into this.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T09:42:55.371+0000",
                    "updated": "2021-08-25T09:42:55.371+0000",
                    "started": "2021-08-25T09:42:55.370+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641592",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641793",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695917378\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n\nReview comment:\n       I've just deleted it as it doesn't really add anything.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T16:27:11.101+0000",
                    "updated": "2021-08-25T16:27:11.101+0000",
                    "started": "2021-08-25T16:27:11.101+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641793",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695924766\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n \n-### Install dependencies {.tabset}\n+### Step 1 - Install dependencies\n\nReview comment:\n       If the goal is to keep the tab titles in the table of contents, it's possible we could do that by changing some of the javascript that [we manipulate to make this whole thing work](https://github.com/apache/arrow/blob/master/r/pkgdown/extra.js). Something funny that we do there is that we load [the javascript for sticky tabs](https://cdn.jsdelivr.net/gh/rstudio/rmarkdown@47d837d3d9cd5e8e212b05767454f058db7d2789/inst/rmd/h/navigation-1.1/tabsets.js), and then alter some of the functions to do the things we need them to do in-place.\r\n   \r\n   \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T16:36:34.166+0000",
                    "updated": "2021-08-25T16:36:34.166+0000",
                    "started": "2021-08-25T16:36:34.166+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641803",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641830",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r695947178\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -60,36 +71,38 @@ brew install apache-arrow\n brew install apache-arrow --HEAD\n ```\n \n+### Windows and Linux\n+\n On Windows and Linux, you can download a .zip file with the arrow dependencies from the\n nightly repository.\n-Windows users then can set the `RWINLIB_LOCAL` environment variable to point to that\n-zip file before installing the `arrow` R package. On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip that file into it. Version numbers in that\n-repository correspond to dates, and you will likely want the most recent.\n \n To see what nightlies are available, you can use Arrow's (or any other S3 client's) S3 listing functionality to see what is in the bucket `s3://arrow-r-nightly/libarrow/bin`:\n \n ```\n nightly <- s3_bucket(\"arrow-r-nightly\")\n nightly$ls(\"libarrow/bin\")\n ```\n+Version numbers in that repository correspond to dates.\n \n-## Developer environment setup\n+#### Windows\n \n-If you need to alter both the Arrow C++ library and the R package code, or if you can\u2019t get a binary version of the latest C++ library elsewhere, you\u2019ll need to build it from source too. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer\n-guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+Windows users then can set the `RWINLIB_LOCAL` environment variable to point to the zip file containing the arrow dependencies before installing the arrow R package. \n+\n+#### Linux\n+\n+On Linux, you'll need to create a `libarrow` directory inside the R package directory and unzip the zip file containing the arrow dependencies into it. \n+\n+## R and C++\n \n-There are four major steps to the process \u2014 the first three are relevant to all Arrow developers, and the last one is specific to the R bindings:\n+If you need to alter both the Arrow C++ library and the R package code, or if you can't get a binary version of the latest C++ library elsewhere, you'll need to build it from source. This section discusses how to set up a C++ build configured to work with the R package. For more general resources, see the [Arrow C++ developer guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n \n-1. Configuring the Arrow library build (using `cmake`) \u2014 this specifies how you want the build to go, what features to include, etc.\n-2. Building the Arrow library \u2014 this actually compiles the Arrow library\n-3. Install the Arrow library \u2014 this organizes and moves the compiled Arrow library files into the location specified in the configuration\n-4. Building the R package \u2014 this builds the C++ code in the R package, and installs the R package for you\n+There are five major steps to the process \u2014 the first four are relevant to all Arrow developers, and the last one is specific to developers making changes to the R package.\n \n-### Install dependencies {.tabset}\n+### Step 1 - Install dependencies\n\nReview comment:\n       I had another think and actually, the tabset stuff is totally fine.  When I built the docs and previewed them, I realised it doesn't actually matter to have those bits in the tables of contents.  Good to know there are options there though \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T17:07:14.435+0000",
                    "updated": "2021-08-25T17:07:14.435+0000",
                    "started": "2021-08-25T17:07:14.434+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641830",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r696074580\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n\nReview comment:\n       Have now rephrased this section a little.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T20:05:32.637+0000",
                    "updated": "2021-08-25T20:05:32.637+0000",
                    "started": "2021-08-25T20:05:32.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641948",
                    "issueId": "13390856"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/worklog/641950",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #10930:\nURL: https://github.com/apache/arrow/pull/10930#discussion_r696079362\n\n\n\n##########\nFile path: r/vignettes/developing.Rmd\n##########\n@@ -483,60 +434,156 @@ variables or other settings:\n * All tests are skipped on Linux if the package builds without the C++ libarrow.\n   To make the build fail if libarrow is not available (as in, to test that\n   the C++ build was successful), set `TEST_R_WITH_ARROW=true`\n+  \n * Some tests are disabled unless `ARROW_R_DEV=true`\n+\n * Tests that require allocating >2GB of memory to test Large types are disabled\n   unless `ARROW_LARGE_MEMORY_TESTS=true`\n+  \n * Integration tests against a real S3 bucket are disabled unless credentials\n   are set in `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`; these are available\n   on request\n+  \n * S3 tests using [MinIO](https://min.io/) locally are enabled if the\n   `minio server` process is found running. If you're running MinIO with custom\n   settings, you can set `MINIO_ACCESS_KEY`, `MINIO_SECRET_KEY`, and\n   `MINIO_PORT` to override the defaults.\n \n-## Github workflows\n+## Running checks\n+\n+You can run package checks by using `devtools::check()` and check test coverage with `covr::package_coverage()`.\n+\n+```r\n+# All package checks\n+devtools::check()\n+\n+# See test coverage statistics\n+covr::report()\n+covr::package_coverage()\n+\n+```\n+\n+For full package validation, you can run the following commands from a terminal.\n+\n+```\n+R CMD build .\n+R CMD check arrow_*.tar.gz --as-cran\n+```\n+\n+\n+## Running additional CI checks\n \n On a pull request, there are some actions you can trigger by commenting on the PR. We have additional CI checks that run nightly and can be requested on demand using an internal tool called [crosssbow](https://arrow.apache.org/docs/developers/crossbow.html). A few important GitHub comment commands include:\n \n-* `@github-actions crossbow submit -g r` for all extended R CI tests\n-* `@github-actions crossbow submit {task-name}` for running a specific task. See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n-* `@github-actions autotune` will run and fix lint c++ linting errors + run R documentation (among other cleanup tasks) and commit them to the branch\n+#### Run all extended R CI tasks\n+`@github-actions crossbow submit -g r`\n \n+This runs each of the R-related CI tasks.\n \n-## Useful functions for Arrow developers\n+#### Run a specific task\n+`@github-actions crossbow submit {task-name}`\n \n-Within an R session, these can help with package development:\n+See the `r:` group definition near the beginning of the [crossbow configuration](https://github.com/apache/arrow/blob/master/dev/tasks/tasks.yml) for a list of glob expression patterns that match names of items in the `tasks:` list below it.\n \n-``` r\n-# Load the dev package\n-devtools::load_all()\n+#### Run linting and documentation building tasks\n \n-# Run the test suite, optionally filtering file names\n-devtools::test(filter=\"^regexp$\")\n-# or the Makefile alternative from the arrow/r directory in a shell:\n-make test file=regexp\n+`@github-actions autotune`\n \n-# Update roxygen documentation\n-devtools::document()\n+This will run and fix lint C++ linting errors, run R documentation (among other cleanup tasks), and commit the resulting updates to the branch.\n \n-# To preview the documentation website\n-pkgdown::build_site()\n+# Troubleshooting\n \n-# All package checks; see also below\n-devtools::check()\n+Note that after any change to the C++ library, you must reinstall it and\n+run `make clean` or `git clean -fdx .` to remove any cached object code\n+in the `r/src/` directory before reinstalling the R package. This is\n+only necessary if you make changes to the C++ library source; you do not\n+need to manually purge object files if you are only editing R or C++\n+code inside `r/`.\n \n-# See test coverage statistics\n-covr::report()\n-covr::package_coverage()\n+## Arrow library-R package mismatches\n+\n+If the Arrow library and the R package have diverged, you will see errors like:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Symbol not found: __ZN5arrow2io16RandomAccessFile9ReadAsyncERKNS0_9IOContextExx\n+  Referenced from: /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+  Expected in: flat namespace\n+ in /Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so\n+Error: loading failed\n+Execution halted\n+ERROR: loading failed\n ```\n \n-Any of those can be run from the command line by wrapping them in `R -e\n-'$COMMAND'`. There\u2019s also a `Makefile` to help with some common tasks\n-from the command line (`make test`, `make doc`, `make clean`, etc.)\n+To resolve this, try rebuilding the Arrow library from [Building Arrow above](#step-3-building-arrow).\n \n-### Full package validation\n+## Multiple versions of Arrow library\n \n-``` shell\n-R CMD build .\n-R CMD check arrow_*.tar.gz --as-cran\n+If rebuilding the Arrow library doesn't work and you are [installing from a user-level directory](#configure-for-installing-to-a-user-directory) and you already have a previous installation of libarrow in a system directory or you get you may get errors like the following when you install the R package:\n+\n+```\n+Error: package or namespace load failed for \u2018arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+ unable to load shared object '/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Library/Frameworks/R.framework/Versions/4.0/Resources/library/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: /usr/local/lib/libarrow.400.dylib\n+  Referenced from: /usr/local/lib/libparquet.400.dylib\n+  Reason: image not found\n ```\n+\n+You need to make sure that you don't let R link to your system library when building arrow. You can do this a number of different ways:\n+\n+* Setting the `MAKEFLAGS` environment variable to `\"LDFLAGS=\"` (see below for an example) this is the recommended way to accomplish this\n+* Using {withr}'s `with_makevars(list(LDFLAGS = \"\"), ...)`\n+* adding `LDFLAGS=` to your `~/.R/Makevars` file (the least recommended way, though it is a common debugging approach suggested online)\n+\n+```{bash, save=run & !sys_install & macos, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on macOS\n+brew install apache-arrow\n+```\n+\n+\n+```{bash, save=run & !sys_install & ubuntu, hide=TRUE}\n+# Setup troubleshooting section\n+# install a system-level arrow on Ubuntu\n+sudo apt update\n+sudo apt install -y -V ca-certificates lsb-release wget\n+wget https://apache.jfrog.io/artifactory/arrow/$(lsb_release --id --short | tr 'A-Z' 'a-z')/apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt install -y -V ./apache-arrow-apt-source-latest-$(lsb_release --codename --short).deb\n+sudo apt update\n+sudo apt install -y -V libarrow-dev\n+```\n+\n+```{bash, save=run & !sys_install & macos}\n+MAKEFLAGS=\"LDFLAGS=\" R CMD INSTALL .\n+```\n+\n+\n+## `rpath` issues\n+\n+If the package fails to install/load with an error like this:\n+\n+```\n+  ** testing if installed package can be loaded from temporary location\n+  Error: package or namespace load failed for 'arrow' in dyn.load(file, DLLpath = DLLpath, ...):\n+  unable to load shared object '/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so':\n+  dlopen(/Users/you/R/00LOCK-r/00new/arrow/libs/arrow.so, 6): Library not loaded: @rpath/libarrow.14.dylib\n+```\n+\n+ensure that `-DARROW_INSTALL_NAME_RPATH=OFF` was passed (this is important on\n+macOS to prevent problems at link time and is a no-op on other platforms).\n+Alternatively, try setting the environment variable `R_LD_LIBRARY_PATH` to\n+wherever Arrow C++ was put in `make install`, e.g. `export\n+R_LD_LIBRARY_PATH=/usr/local/lib`, and retry installing the R package.\n+\n+When installing from source, if the R and C++ library versions do not\n+match, installation may fail. If you've previously installed the\n+libraries and want to upgrade the R package, you'll need to update the\n+Arrow C++ library first.\n+\n+For any other build/configuration challenges, see the [C++ developer\n+guide](https://arrow.apache.org/docs/developers/cpp/building.html).\n+\n+## Other installation issues\n+\n+There are a number of scripts that are triggered when the arrow R package is installed. For package users who are not interacting with the underlying code, these should all just work without configuration and pull in the most complete pieces (e.g. official binaries that we host). However, knowing about these scripts can help package developers troubleshoot if things go wrong in them or things go wrong in an install.  See [the installation vignette](./install.html) for more information.\n\nReview comment:\n       Done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-25T20:12:55.184+0000",
                    "updated": "2021-08-25T20:12:55.184+0000",
                    "started": "2021-08-25T20:12:55.184+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "641950",
                    "issueId": "13390856"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 16200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@7068b55c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@17f34964[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@817f336[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5222339[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42739649[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7c31897f[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4b085b8c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5fa7823f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1b8865c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@71b28d65[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@786f6ce4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1b3aafac[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 16200,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Sep 06 20:41:26 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-06T20:41:26.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13403/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-07-20T07:36:50.000+0000",
        "updated": "2021-09-06T20:41:40.000+0000",
        "timeoriginalestimate": null,
        "description": "Proposed changes:\r\n * Make the subheadings in \"developer environment\" setup match the steps in the numbered bullets\r\n * \"at a specific ref\" -> clarify\r\n * include reference table of environment variables??\r\n * add flowchart to \" What happens when you R CMD INSTALL?\" section?\r\n * \"so the installation process is easy\" - rephrase from \"is easy\" to something that acknowledges it's only easy when it goes right!\r\n * \"it should look _incredibly_ familiar\" - rephase from \"should\" to \"might\" or similar\r\n * Add something about the fact that we use tidyverse style and recommend styling code with {{styler}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 16200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Update developing.Rmd vignette",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13390856/comment/17410811",
                    "id": "17410811",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 10930\n[https://github.com/apache/arrow/pull/10930]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-06T20:41:26.703+0000",
                    "updated": "2021-09-06T20:41:26.703+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0t5kw:",
        "customfield_12314139": null
    }
}