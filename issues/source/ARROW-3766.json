{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13197717",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717",
    "key": "ARROW-3766",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "parquet",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
            "name": "kszucs",
            "key": "kszucs",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Krisztian Szucs",
            "active": true,
            "timeZone": "Europe/Budapest"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cthi",
            "name": "cthi",
            "key": "cthi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Christian Thiel",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=cthi",
            "name": "cthi",
            "key": "cthi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Christian Thiel",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3766/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166648",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs opened a new pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T21:11:16.287+0000",
                    "updated": "2018-11-15T21:11:16.287+0000",
                    "started": "2018-11-15T21:11:16.286+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166648",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166649",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234010810\n \n \n\n ##########\n File path: python/pyarrow/tests/test_convert_pandas.py\n ##########\n @@ -2257,3 +2257,28 @@ def test_convert_unsupported_type_error_message():\n     expected_msg = 'Conversion failed for column diff with type timedelta64'\n     with pytest.raises(pa.ArrowNotImplementedError, match=expected_msg):\n         pa.Table.from_pandas(df)\n+\n+\n+def test_from_pandas_keeps_column_ordering():\n+    # ARROW-3766\n+    df = pd.DataFrame({\n+        'partition': [0, 0, 1, 1],\n+        'arrays': [[0, 1, 2], [3, 4], None, None],\n+        'strings': [None, None, 'a', 'b']\n+    })\n+\n+    schema = pa.schema([\n+        # ('DPRD_ID', pa.int64()),\n \n Review comment:\n   I'm a bit hesitant with this issue, because previously `schema` argument was only used to provide optional type information for columns (IMO incorrectly). With this PR this behavior changes.\r\n   For example if I uncomment this line the new implementation fails, but the previous passes. Users might rely on this \"wrong\" functionality (I suppose `Table.from_pandas` is widely used).\r\n   \r\n   What do You think @wesm ?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T21:16:36.468+0000",
                    "updated": "2018-11-15T21:16:36.468+0000",
                    "started": "2018-11-15T21:16:36.468+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166649",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166650",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234012215\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   IMO `columns` argument should be removed in favor of `schema`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T21:21:11.989+0000",
                    "updated": "2018-11-15T21:21:11.989+0000",
                    "started": "2018-11-15T21:21:11.988+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166650",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166651",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234012215\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   IMO `columns` argument of `Table.from_pandas` should be removed in favor of `schema`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T21:21:37.338+0000",
                    "updated": "2018-11-15T21:21:37.338+0000",
                    "started": "2018-11-15T21:21:37.337+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166651",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234023812\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   I think it's OK to have both. But they should be mutually exclusive. If you remove columns then you are getting into type inference / conversion issues writing down an exact schema\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-15T21:57:51.614+0000",
                    "updated": "2018-11-15T21:57:51.614+0000",
                    "started": "2018-11-15T21:57:51.614+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166664",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/166843",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234173465\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   Mutually exclusive sounds good to me. Should We worry about the backward compatibility? See my comment above.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-16T11:26:37.250+0000",
                    "updated": "2018-11-16T11:26:37.250+0000",
                    "started": "2018-11-16T11:26:37.249+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "166843",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167251",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234453422\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   @wesm it breaks backward compatibility here:\r\n   \r\n   https://github.com/apache/arrow/blob/d1185fe98ea74c8886c9d4a549e1684bfefb7e72/python/pyarrow/tests/test_convert_pandas.py#L2099-L2113\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T17:11:03.645+0000",
                    "updated": "2018-11-18T17:11:03.645+0000",
                    "started": "2018-11-18T17:11:03.644+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167251",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r234453422\n \n \n\n ##########\n File path: python/pyarrow/pandas_compat.py\n ##########\n @@ -318,8 +318,12 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n-        columns = df.columns\n+    cols = df.columns if schema is None else schema.names\n+    if columns is not None:\n \n Review comment:\n   @wesm it breaks backward compatibility here:\r\n   \r\n   https://github.com/apache/arrow/blob/d1185fe98ea74c8886c9d4a549e1684bfefb7e72/python/pyarrow/tests/test_convert_pandas.py#L2099-L2113\r\n   \r\n   After this PR the `expected_schema` would be equal with `partial_schema`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T17:12:53.538+0000",
                    "updated": "2018-11-18T17:12:53.538+0000",
                    "started": "2018-11-18T17:12:53.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167252",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167256",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#issuecomment-439711533\n \n \n   I will have a closer look, but this seems like a bug fix / good change to me\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T17:48:13.911+0000",
                    "updated": "2018-11-18T17:48:13.911+0000",
                    "started": "2018-11-18T17:48:13.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167256",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167261",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#issuecomment-439715774\n \n \n   I'll adjust the test case then.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T18:48:01.613+0000",
                    "updated": "2018-11-18T18:48:01.613+0000",
                    "started": "2018-11-18T18:48:01.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167261",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#issuecomment-439950775\n \n \n   This is failing on Python 2.7\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:18:34.168+0000",
                    "updated": "2018-11-19T16:18:34.168+0000",
                    "started": "2018-11-19T16:18:34.167+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167438",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/167439",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on issue #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#issuecomment-439951716\n \n \n   Ahh, bytes vs string, fixing it.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-19T16:20:58.606+0000",
                    "updated": "2018-11-19T16:20:58.606+0000",
                    "started": "2018-11-19T16:20:58.605+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167439",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/168331",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r235452622\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -1209,12 +1209,14 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         data_cols = df.columns.drop(partition_cols)\n         if len(data_cols) == 0:\n             raise ValueError('No data left to save outside partition columns')\n+\n         subschema = table.schema\n         # ARROW-2891: Ensure the output_schema is preserved when writing a\n         # partitioned dataset\n-        for partition_col in partition_cols:\n-            subschema = subschema.remove(\n-                subschema.get_field_index(partition_col))\n+        for col in table.schema.names:\n+            if (col.startswith('__index_level_') or col in partition_cols):\n \n Review comment:\n   Hm, this seems a bit hacky. Would it be preferred to not preserve the index here instead? I'll merge this and we can address later\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T16:16:56.138+0000",
                    "updated": "2018-11-21T16:16:56.138+0000",
                    "started": "2018-11-21T16:16:56.137+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168331",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/168332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#issuecomment-440724090\n \n \n   +1\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T16:17:13.613+0000",
                    "updated": "2018-11-21T16:17:13.613+0000",
                    "started": "2018-11-21T16:17:13.612+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168332",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/168333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm closed pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 6a43fe2fd5..9344e46eec 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -318,8 +318,18 @@ def _index_level_name(index, i, column_names):\n \n def dataframe_to_arrays(df, schema, preserve_index, nthreads=1, columns=None,\n                         safe=True):\n-    if columns is None:\n+    if schema is not None and columns is not None:\n+        raise ValueError('Schema and columns arguments are mutually '\n+                         'exclusive, pass only one of them')\n+    elif schema is not None:\n+        columns = schema.names\n+    elif columns is not None:\n+        # columns is only for filtering, the function must keep the column\n+        # ordering of either the dataframe or the passed schema\n+        columns = [c for c in df.columns if c in columns]\n+    else:\n         columns = df.columns\n+\n     column_names = []\n     index_columns = []\n     index_column_names = []\ndiff --git a/python/pyarrow/parquet.py b/python/pyarrow/parquet.py\nindex a9e498d3ff..e50acb4db4 100644\n--- a/python/pyarrow/parquet.py\n+++ b/python/pyarrow/parquet.py\n@@ -1209,12 +1209,14 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         data_cols = df.columns.drop(partition_cols)\n         if len(data_cols) == 0:\n             raise ValueError('No data left to save outside partition columns')\n+\n         subschema = table.schema\n         # ARROW-2891: Ensure the output_schema is preserved when writing a\n         # partitioned dataset\n-        for partition_col in partition_cols:\n-            subschema = subschema.remove(\n-                subschema.get_field_index(partition_col))\n+        for col in table.schema.names:\n+            if (col.startswith('__index_level_') or col in partition_cols):\n+                subschema = subschema.remove(subschema.get_field_index(col))\n+\n         for keys, subgroup in data_df.groupby(partition_keys):\n             if not isinstance(keys, tuple):\n                 keys = (keys,)\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 0a0a5246b7..c080ee4de1 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -70,13 +70,11 @@ def _check_pandas_roundtrip(df, expected=None, use_threads=True,\n \n     if expected_schema:\n         # all occurences of _check_pandas_roundtrip passes expected_schema\n-        # without the pandas generated key-value metadata, so we need to\n-        # add it before checking schema equality\n-        expected_schema = expected_schema.add_metadata(table.schema.metadata)\n-        assert table.schema.equals(expected_schema)\n+        # without the pandas generated key-value metadata\n+        assert table.schema.equals(expected_schema, check_metadata=False)\n \n     if expected is None:\n-        expected = df\n+        expected = df if schema is None else df[schema.names]\n \n     tm.assert_frame_equal(result, expected, check_dtype=check_dtype,\n                           check_index_type=('equiv' if preserve_index\n@@ -2101,18 +2099,12 @@ def test_partial_schema(self):\n         df = pd.DataFrame(data)\n \n         partial_schema = pa.schema([\n-            pa.field('a', pa.int64()),\n-            pa.field('b', pa.int32())\n-        ])\n-\n-        expected_schema = pa.schema([\n-            pa.field('a', pa.int64()),\n-            pa.field('b', pa.int32()),\n-            pa.field('c', pa.int64())\n+            pa.field('c', pa.int64()),\n+            pa.field('a', pa.int64())\n         ])\n \n         _check_pandas_roundtrip(df, schema=partial_schema,\n-                                expected_schema=expected_schema)\n+                                expected_schema=partial_schema)\n \n     def test_table_batch_empty_dataframe(self):\n         df = pd.DataFrame({})\n@@ -2257,3 +2249,97 @@ def test_convert_unsupported_type_error_message():\n     expected_msg = 'Conversion failed for column diff with type timedelta64'\n     with pytest.raises(pa.ArrowNotImplementedError, match=expected_msg):\n         pa.Table.from_pandas(df)\n+\n+\n+def test_table_from_pandas_keeps_column_order_of_dataframe():\n+    df1 = pd.DataFrame(OrderedDict([\n+        ('partition', [0, 0, 1, 1]),\n+        ('arrays', [[0, 1, 2], [3, 4], None, None]),\n+        ('floats', [None, None, 1.1, 3.3])\n+    ]))\n+    df2 = df1[['floats', 'partition', 'arrays']]\n+\n+    schema1 = pa.schema([\n+        ('partition', pa.int64()),\n+        ('arrays', pa.list_(pa.int64())),\n+        ('floats', pa.float64()),\n+    ])\n+    schema2 = pa.schema([\n+        ('floats', pa.float64()),\n+        ('partition', pa.int64()),\n+        ('arrays', pa.list_(pa.int64()))\n+    ])\n+\n+    table1 = pa.Table.from_pandas(df1, preserve_index=False)\n+    table2 = pa.Table.from_pandas(df2, preserve_index=False)\n+\n+    assert table1.schema.equals(schema1, check_metadata=False)\n+    assert table2.schema.equals(schema2, check_metadata=False)\n+\n+\n+def test_table_from_pandas_keeps_column_order_of_schema():\n+    # ARROW-3766\n+    df = pd.DataFrame(OrderedDict([\n+        ('partition', [0, 0, 1, 1]),\n+        ('arrays', [[0, 1, 2], [3, 4], None, None]),\n+        ('floats', [None, None, 1.1, 3.3])\n+    ]))\n+\n+    schema = pa.schema([\n+        ('floats', pa.float64()),\n+        ('arrays', pa.list_(pa.int32())),\n+        ('partition', pa.int32())\n+    ])\n+\n+    df1 = df[df.partition == 0]\n+    df2 = df[df.partition == 1][['floats', 'partition', 'arrays']]\n+\n+    table1 = pa.Table.from_pandas(df1, schema=schema, preserve_index=False)\n+    table2 = pa.Table.from_pandas(df2, schema=schema, preserve_index=False)\n+\n+    assert table1.schema.equals(schema, check_metadata=False)\n+    assert table1.schema.equals(table2.schema, check_metadata=False)\n+\n+\n+def test_table_from_pandas_columns_argument_only_does_filtering():\n+    df = pd.DataFrame(OrderedDict([\n+        ('partition', [0, 0, 1, 1]),\n+        ('arrays', [[0, 1, 2], [3, 4], None, None]),\n+        ('floats', [None, None, 1.1, 3.3])\n+    ]))\n+\n+    columns1 = ['arrays', 'floats', 'partition']\n+    schema1 = pa.schema([\n+        ('partition', pa.int64()),\n+        ('arrays', pa.list_(pa.int64())),\n+        ('floats', pa.float64()),\n+    ])\n+\n+    columns2 = ['floats', 'partition']\n+    schema2 = pa.schema([\n+        ('partition', pa.int64()),\n+        ('floats', pa.float64())\n+    ])\n+\n+    table1 = pa.Table.from_pandas(df, columns=columns1, preserve_index=False)\n+    table2 = pa.Table.from_pandas(df, columns=columns2, preserve_index=False)\n+\n+    assert table1.schema.equals(schema1, check_metadata=False)\n+    assert table2.schema.equals(schema2, check_metadata=False)\n+\n+\n+def test_table_from_pandas_columns_and_schema_are_mutually_exclusive():\n+    df = pd.DataFrame(OrderedDict([\n+        ('partition', [0, 0, 1, 1]),\n+        ('arrays', [[0, 1, 2], [3, 4], None, None]),\n+        ('floats', [None, None, 1.1, 3.3])\n+    ]))\n+    schema = pa.schema([\n+        ('partition', pa.int32()),\n+        ('arrays', pa.list_(pa.int32())),\n+        ('floats', pa.float64()),\n+    ])\n+    columns = ['arrays', 'floats']\n+\n+    with pytest.raises(ValueError):\n+        pa.Table.from_pandas(df, schema=schema, columns=columns)\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T16:18:41.172+0000",
                    "updated": "2018-11-21T16:18:41.172+0000",
                    "started": "2018-11-21T16:18:41.172+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168333",
                    "issueId": "13197717"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/worklog/168459",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on a change in pull request #2979: ARROW-3766: [Python] pa.Table.from_pandas doesn't use schema ordering\nURL: https://github.com/apache/arrow/pull/2979#discussion_r235499534\n \n \n\n ##########\n File path: python/pyarrow/parquet.py\n ##########\n @@ -1209,12 +1209,14 @@ def write_to_dataset(table, root_path, partition_cols=None,\n         data_cols = df.columns.drop(partition_cols)\n         if len(data_cols) == 0:\n             raise ValueError('No data left to save outside partition columns')\n+\n         subschema = table.schema\n         # ARROW-2891: Ensure the output_schema is preserved when writing a\n         # partitioned dataset\n-        for partition_col in partition_cols:\n-            subschema = subschema.remove(\n-                subschema.get_field_index(partition_col))\n+        for col in table.schema.names:\n+            if (col.startswith('__index_level_') or col in partition_cols):\n \n Review comment:\n   Yes it is, I don't like it either, but converting schemas back and forth is hacky too, once We handle fields by keys, the other time by index...\r\n   \r\n   I'd really like to decouple the implementation in pdcompat to have more straightforward and testable abstractions.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-21T18:35:57.233+0000",
                    "updated": "2018-11-21T18:35:57.233+0000",
                    "started": "2018-11-21T18:35:57.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "168459",
                    "issueId": "13197717"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e717e6f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a63ace[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9d093ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@3d14a841[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@111bae56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4528c1ff[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@48eaedce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@50a40232[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c816f6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1fa56238[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@be689f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@70fb4f28[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Nov 21 16:18:29 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-21T16:18:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3766/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2018-11-12T08:26:22.000+0000",
        "updated": "2018-11-21T18:35:57.000+0000",
        "timeoriginalestimate": null,
        "description": "Pyarrow is sensitive to the order of the columns upon load of partitioned Files.\r\nWith the function {{pa.Table.from_pandas(dataframe, schema=my_schema)}} we can apply a schema to a dataframe. I noticed that the returned {{pa.Table}} object does use the ordering of pandas columns rather than the schema columns. Furthermore it is possible to have columns in the schema but not in the DataFrame (and hence in the resulting pa.Table).\r\n\r\nThis behaviour requires a lot of fiddling with the pandas Frame in the first place if we like to write compatible partitioned files. Hence I argue that for {{pa.Table.from_pandas}}, and any other comparable function, the schema should be the principal source for the Table structure and not the columns and the ordering in the pandas DataFrame. If I specify a schema I simply expect that the resulting Table actually has this schema.\r\n\r\nHere is a little example. If you remove the reordering of df2 everything works fine:\r\n{code:python}\r\nimport pyarrow as pa\r\nimport pyarrow.parquet as pq\r\nimport pandas as pd\r\nimport os\r\nimport numpy as np\r\nimport shutil\r\n\r\nPATH_PYARROW_MANUAL = '/tmp/pyarrow_manual.pa/'\r\n\r\nif os.path.exists(PATH_PYARROW_MANUAL):\r\n    shutil.rmtree(PATH_PYARROW_MANUAL)\r\nos.mkdir(PATH_PYARROW_MANUAL)\r\n\r\narrays = np.array([np.array([0, 1, 2]), np.array([3, 4]), np.nan, np.nan])\r\nstrings = np.array([np.nan, np.nan, 'a', 'b'])\r\n\r\ndf = pd.DataFrame([0, 0, 1, 1], columns=['partition_column'])\r\ndf.index.name='DPRD_ID'\r\ndf['arrays'] = pd.Series(arrays)\r\ndf['strings'] = pd.Series(strings)\r\n\r\nmy_schema = pa.schema([('DPRD_ID', pa.int64()),\r\n                       ('partition_column', pa.int32()),\r\n                       ('arrays', pa.list_(pa.int32())),\r\n                       ('strings', pa.string()),\r\n                       ('new_column', pa.string())])\r\n\r\ndf1 = df[df.partition_column==0]\r\ndf2 = df[df.partition_column==1][['strings', 'partition_column', 'arrays']]\r\n\r\n\r\ntable1 = pa.Table.from_pandas(df1, schema=my_schema)\r\ntable2 = pa.Table.from_pandas(df2, schema=my_schema)\r\n\r\npq.write_table(table1, os.path.join(PATH_PYARROW_MANUAL, '1.pa'))\r\npq.write_table(table2, os.path.join(PATH_PYARROW_MANUAL, '2.pa'))\r\n\r\npd.read_parquet(PATH_PYARROW_MANUAL)\r\n{code}\r\n\r\nIf \r\n",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] pa.Table.from_pandas doesn't use schema ordering",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/comment/16683893",
                    "id": "16683893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Sounds buggy to me. If you pass a schema to {{Table.from_pandas}} it should be respected",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-12T14:50:31.590+0000",
                    "updated": "2018-11-12T14:50:31.590+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/comment/16688086",
                    "id": "16688086",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~wesmckinn] What's the purpose of the `columns` argument - becuse its behaviour is pretty mixed currently? I suppose the column order should match either df.columns or schema.names and the columns argument should just act like a filter.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2018-11-15T13:47:34.830+0000",
                    "updated": "2018-11-15T13:48:01.474+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/comment/16688094",
                    "id": "16688094",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "The {{columns}} argument in {{Table.from_pandas}} is just for column filtering",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-15T13:50:51.644+0000",
                    "updated": "2018-11-15T13:50:51.644+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13197717/comment/16694893",
                    "id": "16694893",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 2979\n[https://github.com/apache/arrow/pull/2979]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-11-21T16:18:29.256+0000",
                    "updated": "2018-11-21T16:18:29.256+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|s00dlc:",
        "customfield_12314139": null
    }
}