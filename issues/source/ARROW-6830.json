{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13261337",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337",
    "key": "ARROW-6830",
    "fields": {
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
            "description": "The issue is open and ready for the assignee to start work on it.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
            "name": "Open",
            "id": "1",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                "id": 2,
                "key": "new",
                "colorName": "blue-gray",
                "name": "To Do"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
            "name": "abbot",
            "key": "abbot",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Anthony Abate",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
            "name": "abbot",
            "key": "abbot",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Anthony Abate",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6830/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5a0e312e[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ab68a19[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19879cbe[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@473f2bd5[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5f99b627[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@37be8e2c[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@12798609[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2c267610[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e9cc53d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7d90e32c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@23877b59[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3c8e0fcf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Oct 10 17:00:35 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6830/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-10-09T14:13:51.000+0000",
        "updated": "2020-04-02T18:49:00.000+0000",
        "timeoriginalestimate": null,
        "description": "*Note:*\u00a0 Not sure if this is a limitation of the R library or the underlying C++ code:\r\n\r\nI have a ~30 gig arrow file with almost 1000 columns - it has 12,000 record batches of varying row sizes\r\n\r\n1. Is it possible at to use *read_arrow* to filter out columns?\u00a0 (similar to how *read_feather* has a (col_select =... )\r\n\r\n2. Or is it possible using *RecordBatchFileReader* to filter columns?\r\n\r\n\u00a0\r\n\r\nThe only thing I seem to be able to do (please confirm if this is my only option) is loop over all record batches, select a single column at a time, and construct the data I need to pull out manually.\u00a0 ie like the following:\r\n{code:java}\r\nfor(i in 0:data_rbfr$num_record_batches) {\r\n    rbn <- data_rbfr$get_batch(i)\r\n  \r\n  if (i == 0) \r\n  {\r\n    merged <- as.data.frame(rbn$column(5)$as_vector())\r\n  }\r\n  else \r\n  {\r\n    dfn <- as.data.frame(rbn$column(5)$as_vector())\r\n    merged <- rbind(merged,dfn)\r\n  }\r\n    \r\n  print(paste(i, nrow(merged)))\r\n} {code}\r\n\u00a0\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Add col_select argument to read_ipc_stream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16947927",
                    "id": "16947927",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Looking at\u00a0[https://github.com/apache/arrow/blob/master/r/R/read-table.R], {{read_arrow}} returns a data frame while {{read_table}} keeps the data in an Arrow Table. Tables have a {{$select()}} method (which is [how {{read_csv_arrow}} implements {{col_select}}|https://github.com/apache/arrow/blob/master/r/R/csv.R#L124]), and you can more naturally access that through the usual {{[}} method. So IIUC what you're trying to do,\u00a0\r\n{code:r}\r\ntab <- read_table(data_rbfr)\r\nas.data.frame(tab[, 6])\r\n{code}\r\nand of course you could reference that column by name instead of position.\r\n\r\nIf you wanted to add {{col_select}} to {{read_arrow()}}, I'd recommend following the model of {{read_csv_arrow}}, which sounds pretty straightforward. Happy to review a pull request if you submit it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-09T18:43:08.865+0000",
                    "updated": "2019-10-09T18:43:08.865+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16947997",
                    "id": "16947997",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jgm-ktg",
                        "name": "jgm-ktg",
                        "key": "jgm-ktg",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jgm-ktg&avatarId=38979",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jgm-ktg&avatarId=38979",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jgm-ktg&avatarId=38979",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jgm-ktg&avatarId=38979"
                        },
                        "displayName": "John Muehlhausen",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "body": "Not sure how the R integration works, but if the 30gigs are memory-mapped but you only access certain columns, the other columns won't actually consume any memory.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jgm-ktg",
                        "name": "jgm-ktg",
                        "key": "jgm-ktg",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jgm-ktg&avatarId=38979",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jgm-ktg&avatarId=38979",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jgm-ktg&avatarId=38979",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jgm-ktg&avatarId=38979"
                        },
                        "displayName": "John Muehlhausen",
                        "active": true,
                        "timeZone": "America/Chicago"
                    },
                    "created": "2019-10-09T21:00:36.676+0000",
                    "updated": "2019-10-09T21:00:36.676+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948016",
                    "id": "16948016",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "That's the intent, though in this example I don't know what {{data_rbfr}} is. If it's a file, you can use {{mmap_open()}} to memory map it.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-09T21:26:23.169+0000",
                    "updated": "2019-10-09T21:26:23.169+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948696",
                    "id": "16948696",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "whoops - forgot this line:\r\n{code:java}\r\ndata_rbfr <- arrow::RecordBatchFileReader(\"bigfile.arrow\") {code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-10T15:31:49.192+0000",
                    "updated": "2019-10-10T15:31:49.192+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948713",
                    "id": "16948713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "I was using *RecordBatchFileReader* since it seemed to be the only to limit memory usage (I thought *read_arrow* was my only alternative) \u00a0\u00a0 We are indexing our data by record batch so we could be more efficient in filtering by passing the batch ids into the RecordBatchFileReader to avoid a 'full table scan'\u00a0\r\n\r\nFYI - It was not clear to me from the name that *read_table* has anything to do with arrow files.\u00a0\r\n\r\nIs read_table aware of underlying record batches so rows can be filtered out more efficiently?\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-10T15:47:10.839+0000",
                    "updated": "2019-10-10T15:48:36.270+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948727",
                    "id": "16948727",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "[https://github.com/apache/arrow/blob/master/r/R/read-table.R]\u00a0is pretty simple (and note that if you give it a string file name, it will invoke RecordBatchFileReader). There are no additional arguments that would let you push computation down to record batches contained within the file (though I thought we were talking about selecting columns). We are working on a [C++ Datasets API|https://docs.google.com/document/d/1bVhzifD38qDypnSjtf8exvpP3sSB5x_Kw9m-n66FB2c/edit?pli=1#heading=h.22aikbvt54fv]\u00a0that will do that and much more.\u00a0\r\n\r\nIf you want to do some of that in R now,\u00a0RecordBatchFileReader sounds like a reasonable place to start. It memory maps by default, and as you've seen you can iterate over the batches. You can filter each record batch separately (using {{[}} methods or lower level if you prefer) and collect them all into a data.frame.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-10T16:03:53.443+0000",
                    "updated": "2019-10-10T16:03:53.443+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948744",
                    "id": "16948744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "from my initial testing of read_table - it seems to be no better than read_arrow when it comes to memory usage and appears to load the entire file...\u00a0\r\n{code:java}\r\ntab <- read_table(\"bigfile.arrow\")\r\nnrow(tab)  # uses 30 gigs!\r\n\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-10T16:24:47.288+0000",
                    "updated": "2019-10-10T16:24:47.288+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948748",
                    "id": "16948748",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes - my original question is about slicing the arrow file to reduce columns - whether it be via read_arrow, read_table, or RecordBatchFileReader\u00a0\r\n\r\n\u00a0\r\n\r\nso far the answer seems to be the following:\r\n\r\n|| method || status ||\r\n|read_arrow | unsupported|\r\n|read_table | supported, but uses lots of memory|\r\n|RecordBatchFileReader\u00a0 | manually possible via the code I provided, but slow|\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-10T16:28:38.228+0000",
                    "updated": "2019-10-10T16:44:28.499+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948751",
                    "id": "16948751",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "{quote}You can filter each record batch separately (using {{[}} methods or lower level if you prefer) and collect them all into a data.frame.\r\n{quote}\r\n\u00a0\r\n\r\nthis is what I am doing - is there a better way so I can do multiple columns in a single pass?\r\n{code:java}\r\nrbn <- data_rbfr$get_batch(i)\r\n  df <- data.frame(\r\n    rbn$column(5)$as_vector(),rbn$column(6)$as_vector(),rbn$column(100)$as_vector(),rbn$column(687)$as_vector(),\r\n    rbn$column(444)$as_vector(),rbn$column(36)$as_vector(),rbn$column(500)$as_vector(),rbn$column(897)$as_vector(),\r\n    rbn$column(24)$as_vector(),rbn$column(446)$as_vector(),rbn$column(777)$as_vector(),rbn$column(333)$as_vector(),\r\n    rbn$column(96)$as_vector(),rbn$column(555)$as_vector(),rbn$column(888)$as_vector(),rbn$column(222)$as_vector()\r\n    ) {code}\r\n\u00a0\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=abbot",
                        "name": "abbot",
                        "key": "abbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
                        },
                        "displayName": "Anthony Abate",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-10-10T16:33:23.965+0000",
                    "updated": "2019-10-10T16:33:23.965+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13261337/comment/16948779",
                    "id": "16948779",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "{{nrow(tab)}} doesn't necessarily have any relationship to memory usage. If you want to see what memory the C++ library is using, you can look at {{default_memory_pool()$bytes_allocated()}}.\r\n\r\nRe: \"a better way so I can do multiple columns in a single pass\", see the examples on [https://arrow.apache.org/docs/r/reference/RecordBatch.html]\u00a0for using {{[}}.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2019-10-10T17:00:35.980+0000",
                    "updated": "2019-10-10T17:00:35.980+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z07fgw:",
        "customfield_12314139": null
    }
}