{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13360145",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145",
    "key": "ARROW-11729",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pachamaltese",
            "name": "pachamaltese",
            "key": "pachamaltese",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pachamaltese&avatarId=45930",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pachamaltese&avatarId=45930",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pachamaltese&avatarId=45930",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pachamaltese&avatarId=45930"
            },
            "displayName": "Mauricio 'Pach\u00e1' Vargas Sep\u00falveda",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 15600,
            "total": 15600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11729/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/558803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese opened a new pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-26T22:44:05.169+0000",
                    "updated": "2021-02-26T22:44:05.169+0000",
                    "started": "2021-02-26T22:44:05.169+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558803",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/558804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#issuecomment-786934788\n\n\n   https://issues.apache.org/jira/browse/ARROW-11729\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-26T22:44:28.606+0000",
                    "updated": "2021-02-26T22:44:28.606+0000",
                    "started": "2021-02-26T22:44:28.606+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558804",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/558821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#discussion_r583975843\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,34 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' dout1 <- paste0(tempdir(), \"/direct\")\n+#' dout2 <- paste0(tempdir(), \"/group_by\")\n+#'\n+#' # partitioning ----\n+#' write_dataset(mtcars, dout1, \"feather\",\n+#'  partitioning = \"cyl\",\n+#'  basename_template = \"{i}.feather\",\n+#'  hive_style = F)\n\nReview comment:\n       I wonder if we should leave off the `basename_template` and `hive_style` arguments here for clarity \u2014 the main focus here is on how the partitioning is defined and those might be more of a distraction than a help.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,34 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' dout1 <- paste0(tempdir(), \"/direct\")\n\nReview comment:\n       I suspect we will want to wrap this in `\\donttest{}` since there is a possibility this might not fully function on some platforms. Ideally we wouldn't do that, but I suspect we might have to here.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,34 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' dout1 <- paste0(tempdir(), \"/direct\")\n+#' dout2 <- paste0(tempdir(), \"/group_by\")\n+#'\n+#' # partitioning ----\n+#' write_dataset(mtcars, dout1, \"feather\",\n+#'  partitioning = \"cyl\",\n+#'  basename_template = \"{i}.feather\",\n+#'  hive_style = F)\n+#'\n+#' # group_by (same result as above) ----\n+#' library(dplyr)\n+#'\n+#' mtcars %>%\n+#'  group_by(cyl) %>%\n+#'  write_dataset(dout2, \"feather\",\n+#'   basename_template = \"{i}.feather\",\n+#'   hive_style = F)\n+#'\n+#' # compare ----\n+#' finp1 <- list.files(dout1, full.names = T, recursive = T,\n+#'  pattern = \"feather\")\n+#'\n+#' finp2 <- list.files(dout2, full.names = T, recursive = T,\n+#'  pattern = \"feather\")\n+#'\n+#' finp1\n+#' finp2\n\nReview comment:\n       I think we can use comments to say the two are equivalent and we don't need to prove it with this code down here. That'll make the example a little tighter and clearer.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,34 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' dout1 <- paste0(tempdir(), \"/direct\")\n+#' dout2 <- paste0(tempdir(), \"/group_by\")\n+#'\n+#' # partitioning ----\n+#' write_dataset(mtcars, dout1, \"feather\",\n+#'  partitioning = \"cyl\",\n\nReview comment:\n       It might be nice to have a two-variable partitioning scheme here instead of just one, that way it shows off that this can be any number of column names / groups in group_by()\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-26T23:17:20.688+0000",
                    "updated": "2021-02-26T23:17:20.688+0000",
                    "started": "2021-02-26T23:17:20.688+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558821",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/558951",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#discussion_r584147300\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n\nReview comment:\n       ```suggestion\r\n   #' # We can partition by one more variables\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = \"cyl\"))\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # the latter example is the same as the following dplyr chained statement\n+#' # mtcars %>%\n+#' #  group_by(cyl, gear) %>%\n+#' #  write_dataset(dout2, \"feather\")\n+#' }\n\nReview comment:\n       I think it would be good to have one more example just like these but with `hive_style = FALSE` and print its directory contents so that the resulting difference between the two ways is clear.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = \"cyl\"))\n\nReview comment:\n       I know @jonkeane directed you otherwise, but I think it's useful to show the contents of the directory you wrote to in order to demonstrate what partitioning does, so I would define `one_part_dir <- tempfile()` (note `tempfile()` not `tempdir()` is what you want, see `?tempfile`) and `two_part_dir <- tempfile()` and then do `dir(., recursive = TRUE)` for each dir after.\r\n   \r\n   Also for simplicity, drop \"feather\", just take the default (parquet).\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = \"cyl\"))\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # the latter example is the same as the following dplyr chained statement\n+#' # mtcars %>%\n\nReview comment:\n       Don't leave this commented out, let it execute. You'll need to wrap in something that loads `dplyr` and doesn't error if the package is not present because it is a Suggested dependency, not a hard one.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-27T16:01:58.296+0000",
                    "updated": "2021-02-27T16:01:58.296+0000",
                    "started": "2021-02-27T16:01:58.295+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "558951",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/559411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese commented on a change in pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#discussion_r584784120\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = \"cyl\"))\n\nReview comment:\n       sure, I' m using \"parquet\", because if I leave it blank I see\r\n   ```\r\n   Error in if (format %in% c(\"csv\", \"text\") || any(opt_names %in% c(\"delim\",  : \r\n     missing value where TRUE/FALSE needed\r\n   ``` \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T15:03:09.010+0000",
                    "updated": "2021-03-01T15:03:09.010+0000",
                    "started": "2021-03-01T15:03:09.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559411",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/559416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#discussion_r584794792\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -53,6 +53,17 @@\n #' - `codec`: A [Codec] which will be used to compress body buffers of written\n #'   files. Default (NULL) will not compress body buffers.\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' \\donttest{\n+#' # we can group by cyl, cyl and gear or even more variables\n+#' write_dataset(mtcars, tempdir(), \"feather\", partitioning = \"cyl\"))\n\nReview comment:\n       https://issues.apache.org/jira/browse/ARROW-11582 is relevant here (we should make that error message nicer, and possibly default to parquet if we can without hurting anything else / needing to do a scan of the data / etc)\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T15:15:55.117+0000",
                    "updated": "2021-03-01T15:15:55.117+0000",
                    "started": "2021-03-01T15:15:55.117+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559416",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/559626",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#discussion_r585104212\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -71,25 +72,30 @@\n #'  d <- dplyr::group_by(mtcars, cyl, gear)\n #'\n #'  d %>%\n-#'   write_dataset(two_part_dir_2, \"parquet\")\n+#'   write_dataset(two_part_dir_2)\n #'\n #'  # Just passing an additional hive_style option to see the difference\n #'  # in the output\n #'\n #'  d %>%\n-#'   write_dataset(two_part_dir_2, \"parquet\", hive_style = FALSE)\n+#'   write_dataset(two_part_dir_2, hive_style = FALSE)\n #'\n #'  list.files(two_part_dir_2, pattern = \"parquet\", recursive = TRUE)\n #'  list.files(two_part_dir_3, pattern = \"parquet\", recursive = TRUE)\n #' }\n #' @export\n write_dataset <- function(dataset,\n                           path,\n-                          format = dataset$format,\n+                          format = \"parquet\",\n\nReview comment:\n       I don't think this is the right change. Please see the proposal in https://issues.apache.org/jira/browse/ARROW-11582?focusedCommentId=17292994&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#comment-17292994. I'd recommend reverting this change and doing the format argument change in a separate PR associated with that JIRA issue, rather than grow the scope of this one.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -71,25 +72,30 @@\n #'  d <- dplyr::group_by(mtcars, cyl, gear)\n #'\n #'  d %>%\n-#'   write_dataset(two_part_dir_2, \"parquet\")\n+#'   write_dataset(two_part_dir_2)\n #'\n #'  # Just passing an additional hive_style option to see the difference\n #'  # in the output\n #'\n #'  d %>%\n-#'   write_dataset(two_part_dir_2, \"parquet\", hive_style = FALSE)\n+#'   write_dataset(two_part_dir_2, hive_style = FALSE)\n #'\n #'  list.files(two_part_dir_2, pattern = \"parquet\", recursive = TRUE)\n #'  list.files(two_part_dir_3, pattern = \"parquet\", recursive = TRUE)\n #' }\n #' @export\n write_dataset <- function(dataset,\n                           path,\n-                          format = dataset$format,\n+                          format = \"parquet\",\n                           partitioning = dplyr::group_vars(dataset),\n                           basename_template = paste0(\"part-{i}.\", as.character(format)),\n                           hive_style = TRUE,\n                           ...) {\n+  if (inherits(dataset$format, \"ParquetFileFormat\")) {\n+    format <- dataset$format\n+    basename_template <- paste0(\"part-{i}.\", as.character(format))\n+  }\n+\n\nReview comment:\n       I don't think this helps anything.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T22:46:11.680+0000",
                    "updated": "2021-03-01T22:46:11.680+0000",
                    "started": "2021-03-01T22:46:11.680+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559626",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/559637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591#issuecomment-788385951\n\n\n   I still see the extra files. I literally meant to suggest `git revert`, not undo the changes manually. So I would now do:\r\n   \r\n   ```\r\n   git revert cd0ecff\r\n   git revert 389d793\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-01T23:17:34.415+0000",
                    "updated": "2021-03-01T23:17:34.415+0000",
                    "started": "2021-03-01T23:17:34.414+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "559637",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/560064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese closed pull request #9591:\nURL: https://github.com/apache/arrow/pull/9591\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-02T17:47:05.737+0000",
                    "updated": "2021-03-02T17:47:05.737+0000",
                    "started": "2021-03-02T17:47:05.736+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "560064",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/568326",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese opened a new pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-18T13:09:08.196+0000",
                    "updated": "2021-03-18T13:09:08.196+0000",
                    "started": "2021-03-18T13:09:08.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "568326",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/568338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r596864728\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n\nReview comment:\n       This is a personal preference, so you don't have to do it, but I think it's nice to have the comments just above each line of code explaining exactly what that code is doing in examples. So here start with `# We can write datasets partitioned by the values in a column (here: \"cyl\")` then have the first `write_dataset()` line. Then have another line `# We can also partition by the values in multiple columns.` and then have the second `write_dataset()`\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n\nReview comment:\n       ```suggestion\r\n   #' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\r\n   #' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\r\n   ```\r\n   \r\n   We don't need to (and shouldn't) specify the format argument here, we changed that so the default is parquet, so we don't need to specify it here.\r\n   \r\n   \n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'  d %>% write_dataset(two_part_dir_2, \"parquet\")\n+#'\n+#'  # Passing the additional hive_style option to see the difference in the\n+#'  # output\n\nReview comment:\n       ```suggestion\r\n   #'  # We can also turn off the Hive-style directory naming where the column name is included with the value for each directory with `hive_style = FALSE`.\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'  d %>% write_dataset(two_part_dir_2, \"parquet\")\n\nReview comment:\n       ```suggestion\r\n   #'  d %>% write_dataset(two_part_dir_2)\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n\nReview comment:\n       I think it would be nice to describe what people should be looking for in these lists and how the folder structure is different between the two calls\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n\nReview comment:\n       We should say explicitly that this is the same as the second call above. This has been a point of confusion for a few people and are hoping this example helps clear that up.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n\nReview comment:\n       I would move this tempfile creation down below to where it's needed so it doesn't confuse this block.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n\nReview comment:\n       ```suggestion\r\n   #'  list.files(one_part_dir, recursive = TRUE)\r\n   #'  list.files(two_part_dir, recursive = TRUE)\r\n   ```\r\n   \r\n   I think this can be even simpler and just be calls to `list.files()` that will print out the directory + file names which is what we want.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'  d %>% write_dataset(two_part_dir_2, \"parquet\")\n+#'\n+#'  # Passing the additional hive_style option to see the difference in the\n+#'  # output\n+#'  d %>% write_dataset(two_part_dir_3, \"parquet\", hive_style = FALSE)\n+#'\n+#'  list(\n+#'   hive_true = list.files(two_part_dir_2, pattern = \"parquet\",\n+#'    recursive = TRUE),\n+#'   hive_false = list.files(two_part_dir_3, pattern = \"parquet\",\n+#'    recursive = TRUE)\n+#'  )\n\nReview comment:\n       ```suggestion\r\n   #' list.files(two_part_dir_2, recursive = TRUE)\r\n   #' list.files(two_part_dir_3, recursive = TRUE)\r\n   ```\r\n   \r\n   More simplification, and it would be good to add a comment about what the person is looking for (that two_part_dir_2 is the same as two_part_dir above, and that two_part_dir_3 doesn't have `cyl=` etc.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'  d %>% write_dataset(two_part_dir_2, \"parquet\")\n+#'\n+#'  # Passing the additional hive_style option to see the difference in the\n+#'  # output\n+#'  d %>% write_dataset(two_part_dir_3, \"parquet\", hive_style = FALSE)\n\nReview comment:\n       ```suggestion\r\n   #'  d %>% write_dataset(two_part_dir_3, hive_style = FALSE)\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  two_part_dir_2 <- tempfile()\n+#'  two_part_dir_3 <- tempfile()\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'  d %>% write_dataset(two_part_dir_2, \"parquet\")\n+#'\n+#'  # Passing the additional hive_style option to see the difference in the\n+#'  # output\n\nReview comment:\n       This might be outside of the scope of this example (since it concentrates on writing) but it might be nice to add in an example of how one would need to call `read_dataset()` when one has specified `hive_style=FALSE` and how that differs from reading a dataset that does have Hive-style directories.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-18T13:35:03.021+0000",
                    "updated": "2021-03-18T13:35:03.021+0000",
                    "started": "2021-03-18T13:35:03.021+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "568338",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/568374",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r596909169\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,40 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We can partition by one more variables, say, cyl and gear in mtcars dataset\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' write_dataset(mtcars, one_part_dir, \"parquet\", partitioning = \"cyl\")\n+#' write_dataset(mtcars, two_part_dir, \"parquet\", partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # See the contents of the directory we wrote to in order to demonstrate\n+#' # what partitioning does\n+#' list(\n+#'  cyl_partioning = list.files(one_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE),\n+#'  cyl_gear_partitioning = list.files(two_part_dir, pattern = \"parquet\",\n+#'   recursive = TRUE)\n+#' )\n+#'\n+#' # We can do the same combining both arrow and dplyr\n\nReview comment:\n       **IMPORTANT**\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-18T14:12:44.367+0000",
                    "updated": "2021-03-18T14:12:44.367+0000",
                    "started": "2021-03-18T14:12:44.367+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "568374",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/568587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#issuecomment-802203261\n\n\n   https://issues.apache.org/jira/browse/ARROW-11729\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-03-18T18:49:47.467+0000",
                    "updated": "2021-03-18T18:49:47.467+0000",
                    "started": "2021-03-18T18:49:47.467+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "568587",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/585338",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r616122141\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved fragments, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n+#' list.files(two_part_dir, recursive = TRUE)\n+#'\n+#' # We can do the same as the previous call with two variables combining both\n+#' # arrow and dplyr, so the example is just a repetition with different steps.\n+#' # We shall do it exactly as above and then with a slight change to the\n+#' # output.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_part_dir_2 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_2)\n\nReview comment:\n       Does the comment on line 87 match the output here? I would think this `write_dataset()` call would use hive partition style (since that's the default)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-19T19:31:00.334+0000",
                    "updated": "2021-04-19T19:31:00.334+0000",
                    "started": "2021-04-19T19:31:00.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "585338",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/586859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r617839518\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved fragments, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n+#' list.files(two_part_dir, recursive = TRUE)\n+#'\n+#' # We can do the same as the previous call with two variables combining both\n+#' # arrow and dplyr, so the example is just a repetition with different steps.\n+#' # We shall do it exactly as above and then with a slight change to the\n+#' # output.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_part_dir_2 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_2)\n\nReview comment:\n       fixing this now since it's faster than what I've been doing today\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T20:02:07.836+0000",
                    "updated": "2021-04-21T20:02:07.836+0000",
                    "started": "2021-04-21T20:02:07.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586859",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/586868",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r617843983\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved fragments, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n+#' list.files(two_part_dir, recursive = TRUE)\n+#'\n+#' # We can do the same as the previous call with two variables combining both\n+#' # arrow and dplyr, so the example is just a repetition with different steps.\n+#' # We shall do it exactly as above and then with a slight change to the\n+#' # output.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_part_dir_2 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_2)\n\nReview comment:\n       thanks Jon, I've adapted accordingly\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-04-21T20:09:37.454+0000",
                    "updated": "2021-04-21T20:09:37.454+0000",
                    "started": "2021-04-21T20:09:37.454+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "586868",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/595596",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r631349759\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n\nReview comment:\n       Really minor point, but I feel like this could be clearer if we run through the one_part_dir example in its entirety (including list.files) first, and then move on to the two_part_dir example, as it's fewer lines of code before the reader has successfully run some code and gets insight into what's going on.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n+#' list.files(two_part_dir, recursive = TRUE)\n+#'\n+#' # We can do the same as the previous call with two variables combining both\n+#' # arrow and dplyr, so the example is just a repetition with different steps.\n+#' # We shall do it exactly as above and then with a slight change to the\n+#' # output.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure cyl=X/gear=Y/part-Z.parquet.\n+#'  two_part_dir_2 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_2)\n+#'  list.files(two_part_dir_2, recursive = TRUE)\n+#'\n+#'  # We can also turn off the Hive-style directory naming where the column name\n+#'  # is included with the value for each directory with `hive_style = FALSE`.\n+#'\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_part_dir_3 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_3, hive_style = FALSE)\n+#'  list.files(two_part_dir_3, recursive = TRUE)\n+#' }\n #' @export\n write_dataset <- function(dataset,\n                           path,\n\nReview comment:\n       The only other general comment I have to make is that I think this is some really good documentation as it covers a lot of ground and explains things in detail.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n+#' list.files(two_part_dir, recursive = TRUE)\n+#'\n+#' # We can do the same as the previous call with two variables combining both\n+#' # arrow and dplyr, so the example is just a repetition with different steps.\n+#' # We shall do it exactly as above and then with a slight change to the\n+#' # output.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure cyl=X/gear=Y/part-Z.parquet.\n+#'  two_part_dir_2 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_2)\n+#'  list.files(two_part_dir_2, recursive = TRUE)\n+#'\n+#'  # We can also turn off the Hive-style directory naming where the column name\n+#'  # is included with the value for each directory with `hive_style = FALSE`.\n+#'\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_part_dir_3 <- tempfile()\n+#'  d %>% write_dataset(two_part_dir_3, hive_style = FALSE)\n+#'  list.files(two_part_dir_3, recursive = TRUE)\n+#' }\n #' @export\n write_dataset <- function(dataset,\n                           path,\n\nReview comment:\n       Another general suggestion - could we consider using second person (\"you\") pronouns instead of first person plural (\"we\") pronouns?  It can help give documentation a conversational tone, and I've seen it being used as a convention in lots of style guides before.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' write_dataset(mtcars, one_part_dir, partitioning = \"cyl\")\n+#'\n+#' # We can also partition by the values in multiple columns.\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' write_dataset(mtcars, two_part_dir, partitioning = c(\"cyl\", \"gear\"))\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#' \n+#' # And we can check what we just saved.\n+#' list.files(one_part_dir, recursive = TRUE)\n\nReview comment:\n       I think this is a great way to help demonstrate what we've just done.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-12T20:06:29.491+0000",
                    "updated": "2021-05-12T20:06:29.491+0000",
                    "started": "2021-05-12T20:06:29.491+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "595596",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/600394",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachamaltese commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r636973879\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,49 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # We start by creating temporary directories.\n+#' one_part_dir <- tempfile()\n+#' two_part_dir <- tempfile()\n+#' \n+#' # We can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n\nReview comment:\n       thanks ! changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-05-21T14:39:42.851+0000",
                    "updated": "2021-05-21T14:39:42.851+0000",
                    "started": "2021-05-21T14:39:42.851+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "600394",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/642559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r696941059\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n\nReview comment:\n       Now that we are using it, we should upgrade this to be @examplesIf as in other places: https://github.com/apache/arrow/blob/master/r/R/dataset.R#L84\r\n   \r\n   ```suggestion\r\n   #' @examplesIf arrow_with_dataset() & arrow_with_parquet() & requireNamespace(\"dplyr\", quietly = TRUE)\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n+#' write_dataset(mtcars, one_level_tree, partitioning = \"cyl\")\n+#' list.files(one_level_tree, recursive = TRUE)\n+#'\n+#' # You can also partition by the values in multiple columns\n+#' # (here: \"cyl\" and \"gear\").\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' two_levels_tree <- tempdir()\n+#' write_dataset(mtcars, two_levels_tree, partitioning = c(\"cyl\", \"gear\"))\n+#' list.files(two_levels_tree, recursive = TRUE)\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#'\n+#' # You can obtain the same result as as the previous examples by combining\n+#' # both arrow and dplyr.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure cyl=X/gear=Y/part-Z.parquet.\n+#'  two_levels_tree_2 <- tempfile()\n+#'  d %>% write_dataset(two_levels_tree_2)\n+#'  list.files(two_levels_tree_2, recursive = TRUE)\n\nReview comment:\n       Should we add a note here that this will be the same (with the exception of the base temp-directory) as `two_levels_tree` above?\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n+#' write_dataset(mtcars, one_level_tree, partitioning = \"cyl\")\n+#' list.files(one_level_tree, recursive = TRUE)\n+#'\n+#' # You can also partition by the values in multiple columns\n+#' # (here: \"cyl\" and \"gear\").\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' two_levels_tree <- tempdir()\n+#' write_dataset(mtcars, two_levels_tree, partitioning = c(\"cyl\", \"gear\"))\n+#' list.files(two_levels_tree, recursive = TRUE)\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#'\n+#' # You can obtain the same result as as the previous examples by combining\n+#' # both arrow and dplyr.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n\nReview comment:\n       We should put this up in the @examplesIf, most people will have it installed so there's not much of a set of people who will be unable to run the examples and get output from the content before this but then not after this.\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n\nReview comment:\n       ```suggestion\r\n   #' one_level_tree <- tempdir()\r\n   ```\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n\nReview comment:\n       Also, should this be `tempfile()` like you use below, so that it's a new, unique path every time?\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n+#' write_dataset(mtcars, one_level_tree, partitioning = \"cyl\")\n+#' list.files(one_level_tree, recursive = TRUE)\n+#'\n+#' # You can also partition by the values in multiple columns\n+#' # (here: \"cyl\" and \"gear\").\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' two_levels_tree <- tempdir()\n+#' write_dataset(mtcars, two_levels_tree, partitioning = c(\"cyl\", \"gear\"))\n+#' list.files(two_levels_tree, recursive = TRUE)\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#'\n+#' # You can obtain the same result as as the previous examples by combining\n+#' # both arrow and dplyr.\n\nReview comment:\n       I would change \"by combining both arrow and dplyr\" to \"using arrow with a dplyr pipeline:\"\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n+#' write_dataset(mtcars, one_level_tree, partitioning = \"cyl\")\n+#' list.files(one_level_tree, recursive = TRUE)\n+#'\n+#' # You can also partition by the values in multiple columns\n+#' # (here: \"cyl\" and \"gear\").\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' two_levels_tree <- tempdir()\n+#' write_dataset(mtcars, two_levels_tree, partitioning = c(\"cyl\", \"gear\"))\n+#' list.files(two_levels_tree, recursive = TRUE)\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#'\n+#' # You can obtain the same result as as the previous examples by combining\n+#' # both arrow and dplyr.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure cyl=X/gear=Y/part-Z.parquet.\n+#'  two_levels_tree_2 <- tempfile()\n+#'  d %>% write_dataset(two_levels_tree_2)\n+#'  list.files(two_levels_tree_2, recursive = TRUE)\n+#' }\n+#'\n+#' # And you can also turn off the Hive-style directory naming where the column\n+#' # name is included with the values by using `hive_style = FALSE`.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n\nReview comment:\n       Again, remove this `if()` wrapping\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n+#' write_dataset(mtcars, one_level_tree, partitioning = \"cyl\")\n+#' list.files(one_level_tree, recursive = TRUE)\n+#'\n+#' # You can also partition by the values in multiple columns\n+#' # (here: \"cyl\" and \"gear\").\n+#' # This creates a structure of the form cyl=X/gear=Y/part-Z.parquet.\n+#' two_levels_tree <- tempdir()\n+#' write_dataset(mtcars, two_levels_tree, partitioning = c(\"cyl\", \"gear\"))\n+#' list.files(two_levels_tree, recursive = TRUE)\n+#'\n+#' # In the two previous examples we would have:\n+#' # X = \\{4,6,8\\}, the number of cylinders.\n+#' # Y = \\{3,4,5\\}, the number of forward gears.\n+#' # Z = \\{0,1,2\\}, the number of saved parts, starting from 0.\n+#'\n+#' # You can obtain the same result as as the previous examples by combining\n+#' # both arrow and dplyr.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  d <- mtcars %>% group_by(cyl, gear)\n+#'\n+#'  # Write a structure cyl=X/gear=Y/part-Z.parquet.\n+#'  two_levels_tree_2 <- tempfile()\n+#'  d %>% write_dataset(two_levels_tree_2)\n+#'  list.files(two_levels_tree_2, recursive = TRUE)\n+#' }\n+#'\n+#' # And you can also turn off the Hive-style directory naming where the column\n+#' # name is included with the values by using `hive_style = FALSE`.\n+#'\n+#' if(requireNamespace(\"dplyr\", quietly = TRUE)) {\n+#'  # Write a structure X/Y/part-Z.parquet.\n+#'  two_levels_tree_3 <- tempfile()\n\nReview comment:\n       This is minor, but maybe we should name this variable something like `two_levels_tree_no_hive` or something so that it's clear that we're not expecting it to be the same listing as we saw above when doing `partitioning = c(\"cyl\", \"gear\")` versus `group_by(...) %>% write_dataset(...)`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-26T20:14:35.648+0000",
                    "updated": "2021-08-26T20:14:35.648+0000",
                    "started": "2021-08-26T20:14:35.648+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642559",
                    "issueId": "13360145"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/worklog/642575",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pachadotdev commented on a change in pull request #9748:\nURL: https://github.com/apache/arrow/pull/9748#discussion_r696973330\n\n\n\n##########\nFile path: r/R/dataset-write.R\n##########\n@@ -54,6 +54,46 @@\n #' - `null_fallback`: character to be used in place of missing values (`NA` or\n #' `NULL`) when using Hive-style partitioning. See [hive_partition()].\n #' @return The input `dataset`, invisibly\n+#' @examples\n+#' # You can write datasets partitioned by the values in a column (here: \"cyl\").\n+#' # This creates a structure of the form cyl=X/part-Z.parquet.\n+#' one_level_tree<- tempdir()\n\nReview comment:\n       good catch !\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-26T20:58:17.374+0000",
                    "updated": "2021-08-26T20:58:17.374+0000",
                    "started": "2021-08-26T20:58:17.373+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "642575",
                    "issueId": "13360145"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 15600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@79669eba[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2da4ea4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c563f34[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5ca9ff74[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@622c79e7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@64f5d831[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59e7f404[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4aa6f213[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bc459e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ba24f8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@679ba71f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1ad0e795[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 15600,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 27 22:59:36 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-08-27T22:59:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11729/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-02-22T16:30:35.000+0000",
        "updated": "2021-08-27T22:59:49.000+0000",
        "timeoriginalestimate": null,
        "description": "There are currently very few examples in the documentation (we have some in vignettes, though those have a slightly different audience). \r\n\r\nOne specific addition would be to show how {{group_by(vars) %>% write_dataset(...)}} is the same as {{write_dataset(..., partitioning = c(vars))}}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 15600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Add examples to the datasets documentation",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/comment/17320512",
                    "id": "17320512",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Are you still waiting for review on this?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-04-13T20:03:19.693+0000",
                    "updated": "2021-04-13T20:03:19.693+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/comment/17322024",
                    "id": "17322024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pachamaltese",
                        "name": "pachamaltese",
                        "key": "pachamaltese",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pachamaltese&avatarId=45930",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pachamaltese&avatarId=45930",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pachamaltese&avatarId=45930",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pachamaltese&avatarId=45930"
                        },
                        "displayName": "Mauricio 'Pach\u00e1' Vargas Sep\u00falveda",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Hi. Yes please\n\n\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pachamaltese",
                        "name": "pachamaltese",
                        "key": "pachamaltese",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pachamaltese&avatarId=45930",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pachamaltese&avatarId=45930",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pachamaltese&avatarId=45930",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pachamaltese&avatarId=45930"
                        },
                        "displayName": "Mauricio 'Pach\u00e1' Vargas Sep\u00falveda",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-04-15T09:14:00.088+0000",
                    "updated": "2021-04-15T09:14:00.088+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13360145/comment/17406061",
                    "id": "17406061",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 9748\n[https://github.com/apache/arrow/pull/9748]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
                        "name": "jonkeane",
                        "key": "jonkeane",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
                        },
                        "displayName": "Jonathan Keane",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-08-27T22:59:36.014+0000",
                    "updated": "2021-08-27T22:59:36.014+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nxso:",
        "customfield_12314139": null
    }
}