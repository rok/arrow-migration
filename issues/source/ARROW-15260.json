{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13420906",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906",
    "key": "ARROW-15260",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12630626",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12630626",
                "type": {
                    "id": "10032",
                    "name": "Blocker",
                    "inward": "is blocked by",
                    "outward": "blocks",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10032"
                },
                "inwardIssue": {
                    "id": "13421315",
                    "key": "ARROW-15281",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13421315",
                    "fields": {
                        "summary": "[C++] Implement ability to retrieve fragment filename",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12637607",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637607",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13437697",
                    "key": "ARROW-16115",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13437697",
                    "fields": {
                        "summary": "[C++] ScannerBuilder::Filter returns an error when given an augmented field",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12637606",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12637606",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13438992",
                    "key": "ARROW-16164",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13438992",
                    "fields": {
                        "summary": "[C++] Pushdown filters on augmented columns like fragment filename",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12632850",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12632850",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13410297",
                    "key": "ARROW-14612",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13410297",
                    "fields": {
                        "summary": "[C++] Support for filename-based partitioning",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
            "name": "martindut",
            "key": "martindut",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin du Toit",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
            "name": "martindut",
            "key": "martindut",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Martin du Toit",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "aggregateprogress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 26400,
            "total": 26400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15260/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 44,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754118",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1091806599\n\n   https://issues.apache.org/jira/browse/ARROW-15260\n\n\n",
                    "created": "2022-04-07T14:26:39.121+0000",
                    "updated": "2022-04-07T14:26:39.121+0000",
                    "started": "2022-04-07T14:26:39.121+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754118",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754119",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1091806648\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-04-07T14:26:41.403+0000",
                    "updated": "2022-04-07T14:26:41.403+0000",
                    "started": "2022-04-07T14:26:41.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754119",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754124",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1091812413\n\n   Currently this fails with this error:\r\n   \r\n   ```\r\n   Error in `handle_csv_read_error()` at r/R/dplyr-collect.R:33:6:\r\n   ! Invalid: No match for FieldRef.Name(__filename) in int: int32\r\n   dbl: double\r\n   lgl: bool\r\n   chr: string\r\n   fct: dictionary<values=string, indices=int32, ordered=0>\r\n   ts: timestamp[us, tz=UTC]\r\n   group: int32\r\n   other: string\r\n   ```\r\n   I think it's something to do with the fact that the new column is not in the schema; if I try to print the `arrow_dplyr_query` object before I collect, I get:\r\n   \r\n   ```\r\n   Error in schm$GetFieldByName(name)$type$ToString() : \r\n     attempt to apply non-function\r\n   ```\r\n   \r\n   Which appears to come from here: https://github.com/apache/arrow/blob/dd4215573349d10f7af9a1d0f316bfcc51b991e0/r/R/dplyr.R#L97\n\n\n",
                    "created": "2022-04-07T14:33:11.997+0000",
                    "updated": "2022-04-07T14:33:11.997+0000",
                    "started": "2022-04-07T14:33:11.996+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754124",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754276",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1092052001\n\n   > Currently this fails with this error:\r\n   \r\n   If you haven't already, can you build arrow with `-DARROW_EXTRA_ERROR_CONTEXT=ON` and include the C++ traceback from the error? From the error message it sounds like it's coming from C++ not R.\r\n   \r\n   Re: the printing error, we'll have to handle that somehow. I wonder how many other places we assume that the schema contains all possible valid field refs; I also think that the C++ Dataset layer should have a way of handling this better than having us special case and sniff for these \"augmented columns\". \r\n   \r\n   (Side note: `Error in 'handle_csv_read_error()'` is misleading and should be solvable; we're catching errors and inspecting for a CSV read error message and we rethrow the error if it's not that, but then shows the error coming from the error handler and not the original function. Surely there is a way to handle this, in rlang or otherwise.)\n\n\n",
                    "created": "2022-04-07T18:06:44.103+0000",
                    "updated": "2022-04-07T18:06:44.103+0000",
                    "started": "2022-04-07T18:06:44.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754276",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1092826386\n\n   @nealrichardson I'd just trimmed it as I didn't realise it was relevant; here's the rest of it:\r\n   ```\r\n   /home/nic2/arrow/cpp/src/arrow/type.h:1717  CheckNonEmpty(matches, root)\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/expression.cc:397  ref->FindOne(in)\r\n   /home/nic2/arrow/cpp/src/arrow/compute/exec/expression.cc:410  BindImpl(std::move(argument), in, shape, exec_context)\r\n   ```\r\n   \r\n   > shows the error coming from the error handler \r\n   \r\n   Hmm, I wonder if this just needs `call = FALSE` in the call to `rlang::abort()`; will investigate.\n\n\n",
                    "created": "2022-04-08T12:50:53.360+0000",
                    "updated": "2022-04-08T12:50:53.360+0000",
                    "started": "2022-04-08T12:50:53.360+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754566",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1093032201\n\n   @nealrichardson Have submitted a PR which handles the issue described in your \"side note\" there in https://github.com/apache/arrow/pull/12839\n\n\n",
                    "created": "2022-04-08T15:54:07.240+0000",
                    "updated": "2022-04-08T15:54:07.240+0000",
                    "started": "2022-04-08T15:54:07.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754679",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/754937",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1093978643\n\n   > @nealrichardson I'd just trimmed it as I didn't realise it was relevant; here's the rest of it:\r\n   > \r\n   > ```\r\n   > /home/nic2/arrow/cpp/src/arrow/type.h:1717  CheckNonEmpty(matches, root)\r\n   > /home/nic2/arrow/cpp/src/arrow/compute/exec/expression.cc:397  ref->FindOne(in)\r\n   > /home/nic2/arrow/cpp/src/arrow/compute/exec/expression.cc:410  BindImpl(std::move(argument), in, shape, exec_context)\r\n   > ```\r\n   \r\n   Great. So that points to where in C++ the validation needs to change. Can you see if this is the same issue as Weston identified, or if it needs to be a separate one? (IIRC the issue he created was about Scanner and this is not using Scanner, but maybe it boils down to the same thing.)\n\n\n",
                    "created": "2022-04-09T12:28:01.977+0000",
                    "updated": "2022-04-09T12:28:01.977+0000",
                    "started": "2022-04-09T12:28:01.976+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "754937",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/787539",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1173634290\n\n   > Great. So that points to where in C++ the validation needs to change. Can you see if this is the same issue as Weston identified, or if it needs to be a separate one? (IIRC the issue he created was about Scanner and this is not using Scanner, but maybe it boils down to the same thing.)\r\n   \r\n   @nealrichardson Sorry, old ticket that I'm just picking up now, but how would I know if this is the same issue that Weston identified?  Had a skim through the C++ code that is causing the error but don't really understand it.  @westonpace - do you know if it'll likely be the same thing?\n\n\n",
                    "created": "2022-07-04T10:16:29.282+0000",
                    "updated": "2022-07-04T10:16:29.282+0000",
                    "started": "2022-07-04T10:16:29.281+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787539",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/788044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1175469687\n\n   I'm missing something here and I can't see what it is. I see that the ScanNode gets the \"augmented fields\" added to its schema: https://github.com/apache/arrow/blob/master/cpp/src/arrow/dataset/scanner.cc#L924-L932 So subsequent nodes should see them in the `output_schema` and be able to use them. \r\n   \r\n   If I comment out these lines and don't project them away: https://github.com/apache/arrow/blob/master/r/R/query-engine.R#L150-L151 and I just do `collect(ds)`, I see the augmented fields in the result. But with those lines in place, if I do `mutate(files = Expression$field_ref(\"__filename\"))` and then collect, I get the error that @thisisnic showed above. \r\n   \r\n   I can't rule out that there's an extra Project happening in R that I'm not seeing somewhere that is dropping the columns. I think I need to implement the ExecPlan::ToString bindings in order to help solve this. \n\n\n",
                    "created": "2022-07-05T20:29:51.099+0000",
                    "updated": "2022-07-05T20:29:51.099+0000",
                    "started": "2022-07-05T20:29:51.099+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788044",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/788104",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#issuecomment-1175708617\n\n   I don't think it is an extra project.  The failure is coming from the two calls to `Bind` in `ExecNode_Scan`.  The code there is binding both the projection and the filter to the dataset schema.  This schema does not include the augmented fields and thus the bind fails.  If I remove those two calls to bind then everything works.\r\n   \r\n   Inside the scanner, we check both expressions.  If they are not bound we bind them to the augmented dataset schema (which isn't exactly available to the caller and does include the augmented fields).\r\n   \r\n   So I think the right answer here is to just remove those calls to bind.  They don't exist on the python equivalent path.  Binding expressions seems like an implementation detail anyways and we can probably move away from anyone outside arrow-cpp having to know about the concept.\n\n\n",
                    "created": "2022-07-06T02:28:38.103+0000",
                    "updated": "2022-07-06T02:28:38.103+0000",
                    "started": "2022-07-06T02:28:38.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "788104",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791303",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r921929327\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n\nReview Comment:\n   I'm not sure this is right.  I got rid of this to remove the call to `Bind()` but it looks like this chunk of code has more purposes than just that?\r\n   \r\n   I was thinking it might just need the variable `filter` adding into `options`, but wasn't sure how to do that.  \r\n   \r\n   I tried `options->filter = ValueOrStop(filter);` but got an error about `ValueOrStop` not being defined.\r\n   I also tried `options->filter = filter;` but get `no viable overloaded '='`.\n\n\n\n",
                    "created": "2022-07-15T08:17:14.386+0000",
                    "updated": "2022-07-15T08:17:14.386+0000",
                    "started": "2022-07-15T08:17:14.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791303",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r921931920\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n-\n   // ScanNode needs to know which fields to materialize (and which are unnecessary)\n   std::vector<compute::Expression> exprs;\n   for (const auto& name : materialized_field_names) {\n     exprs.push_back(compute::field_ref(name));\n   }\n \n-  options->projection =\n-      ValueOrStop(call(\"make_struct\", std::move(exprs),\n-                       compute::MakeStructOptions{std::move(materialized_field_names)})\n-                      .Bind(*dataset->schema()));\n\nReview Comment:\n   Again, wasn't sure if this whole chunk should go, but tried removing `.Bind` at the end and then both `.Bind` and `ValueOrStop`, and getting compilation errors.\n\n\n\n",
                    "created": "2022-07-15T08:20:14.204+0000",
                    "updated": "2022-07-15T08:20:14.204+0000",
                    "started": "2022-07-15T08:20:14.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791305",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791369",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r922101737\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n\nReview Comment:\n   IIUC the ScanOptions needs the Expression but you have the shared_ptr so it should be this :\r\n   \r\n   ```\r\n   options->filter = filter.get();\r\n   ```\n\n\n\n",
                    "created": "2022-07-15T12:04:51.111+0000",
                    "updated": "2022-07-15T12:04:51.111+0000",
                    "started": "2022-07-15T12:04:51.111+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791369",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791438",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r922218735\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n\nReview Comment:\n   Perhaps:\r\n   ```\r\n   options->filter = *filter\r\n   ```\n\n\n\n",
                    "created": "2022-07-15T14:25:19.037+0000",
                    "updated": "2022-07-15T14:25:19.037+0000",
                    "started": "2022-07-15T14:25:19.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791438",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r922220233\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n-\n   // ScanNode needs to know which fields to materialize (and which are unnecessary)\n   std::vector<compute::Expression> exprs;\n   for (const auto& name : materialized_field_names) {\n     exprs.push_back(compute::field_ref(name));\n   }\n \n-  options->projection =\n-      ValueOrStop(call(\"make_struct\", std::move(exprs),\n-                       compute::MakeStructOptions{std::move(materialized_field_names)})\n-                      .Bind(*dataset->schema()));\n\nReview Comment:\n   ```\r\n   options->projection = call(\"make_struct\", std::move(exprs), compute::MakeStructOptions{std::move(materialized_field_names)});\r\n   ```\r\n   ?\n\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n-\n   // ScanNode needs to know which fields to materialize (and which are unnecessary)\n   std::vector<compute::Expression> exprs;\n   for (const auto& name : materialized_field_names) {\n     exprs.push_back(compute::field_ref(name));\n   }\n \n-  options->projection =\n-      ValueOrStop(call(\"make_struct\", std::move(exprs),\n-                       compute::MakeStructOptions{std::move(materialized_field_names)})\n-                      .Bind(*dataset->schema()));\n\nReview Comment:\n   ```\r\n   options->projection = call(\"make_struct\", std::move(exprs), compute::MakeStructOptions{std::move(materialized_field_names)});\r\n   ```\r\n   does the above work?\n\n\n\n",
                    "created": "2022-07-15T14:26:43.355+0000",
                    "updated": "2022-07-15T14:26:43.355+0000",
                    "started": "2022-07-15T14:26:43.353+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791440",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791933",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r923140799\n\n\n##########\nr/tests/testthat/test-dataset.R:\n##########\n@@ -1226,3 +1225,16 @@ test_that(\"FileSystemFactoryOptions input validation\", {\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"can add in augmented fields\", {\n+  ds <- open_dataset(hive_dir)\n+\n+  ds <- ds %>%\n+    mutate(file_name = add_filename()) %>%\n+    collect()\n+\n+  expect_named(\n+    ds,\n+    c(\"int\", \"dbl\", \"lgl\", \"chr\", \"fct\", \"ts\", \"group\", \"other\", \"file_name\")\n+  )\n+})\n\nReview Comment:\n   LGTM, just one question. Would it make sense to add here a test looking into the contents of the `file_name` column? Something along the lines of:\r\n   ```r\r\n   expect_equal(unique(ds$filename), list.files(hive_dir, full.names = TRUE))\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-07-18T09:30:36.195+0000",
                    "updated": "2022-07-18T09:30:36.195+0000",
                    "started": "2022-07-18T09:30:36.194+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791933",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791934",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "dragosmg commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r923140799\n\n\n##########\nr/tests/testthat/test-dataset.R:\n##########\n@@ -1226,3 +1225,16 @@ test_that(\"FileSystemFactoryOptions input validation\", {\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"can add in augmented fields\", {\n+  ds <- open_dataset(hive_dir)\n+\n+  ds <- ds %>%\n+    mutate(file_name = add_filename()) %>%\n+    collect()\n+\n+  expect_named(\n+    ds,\n+    c(\"int\", \"dbl\", \"lgl\", \"chr\", \"fct\", \"ts\", \"group\", \"other\", \"file_name\")\n+  )\n+})\n\nReview Comment:\n   Would it make sense to add here a test looking into the contents of the `file_name` column? Something along the lines of:\r\n   ```r\r\n   expect_equal(unique(ds$filename), list.files(hive_dir, full.names = TRUE))\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-07-18T09:30:56.261+0000",
                    "updated": "2022-07-18T09:30:56.261+0000",
                    "started": "2022-07-18T09:30:56.260+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791934",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/791940",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r923144894\n\n\n##########\nr/tests/testthat/test-dataset.R:\n##########\n@@ -1226,3 +1225,16 @@ test_that(\"FileSystemFactoryOptions input validation\", {\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"can add in augmented fields\", {\n+  ds <- open_dataset(hive_dir)\n+\n+  ds <- ds %>%\n+    mutate(file_name = add_filename()) %>%\n+    collect()\n+\n+  expect_named(\n+    ds,\n+    c(\"int\", \"dbl\", \"lgl\", \"chr\", \"fct\", \"ts\", \"group\", \"other\", \"file_name\")\n+  )\n+})\n\nReview Comment:\n   Good call, will add!\n\n\n\n",
                    "created": "2022-07-18T09:35:01.745+0000",
                    "updated": "2022-07-18T09:35:01.745+0000",
                    "started": "2022-07-18T09:35:01.745+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "791940",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/792005",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "thisisnic commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r923235545\n\n\n##########\nr/src/compute-exec.cpp:\n##########\n@@ -146,20 +146,12 @@ std::shared_ptr<compute::ExecNode> ExecNode_Scan(\n \n   options->dataset_schema = dataset->schema();\n \n-  // ScanNode needs the filter to do predicate pushdown and skip partitions\n-  options->filter = ValueOrStop(filter->Bind(*dataset->schema()));\n-\n   // ScanNode needs to know which fields to materialize (and which are unnecessary)\n   std::vector<compute::Expression> exprs;\n   for (const auto& name : materialized_field_names) {\n     exprs.push_back(compute::field_ref(name));\n   }\n \n-  options->projection =\n-      ValueOrStop(call(\"make_struct\", std::move(exprs),\n-                       compute::MakeStructOptions{std::move(materialized_field_names)})\n-                      .Bind(*dataset->schema()));\n\nReview Comment:\n   Thanks, appears to, yeah!\n\n\n\n",
                    "created": "2022-07-18T11:01:55.517+0000",
                    "updated": "2022-07-18T11:01:55.517+0000",
                    "started": "2022-07-18T11:01:55.516+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "792005",
                    "issueId": "13420906"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/worklog/792136",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #12826:\nURL: https://github.com/apache/arrow/pull/12826#discussion_r923415768\n\n\n##########\nr/tests/testthat/test-dataset.R:\n##########\n@@ -1226,3 +1225,21 @@ test_that(\"FileSystemFactoryOptions input validation\", {\n     fixed = TRUE\n   )\n })\n+\n+test_that(\"can add in augmented fields\", {\n\nReview Comment:\n   What happens if you have a Table as your data source and you do `add_filename()`?\n\n\n\n##########\nr/R/dataset.R:\n##########\n@@ -438,3 +438,20 @@ stop_if_no_datasets <- function() {\n     stop(\"This build of the arrow package does not support Datasets\", call. = FALSE)\n   }\n }\n+\n+#' Add filename as dataset column\n+#'\n\nReview Comment:\n   This probably should have more documentation, noting what it returns, what it does, how it (presumably) only does anything if you're doing a query on a Dataset, etc.\n\n\n\n##########\nr/R/dataset.R:\n##########\n@@ -438,3 +438,20 @@ stop_if_no_datasets <- function() {\n     stop(\"This build of the arrow package does not support Datasets\", call. = FALSE)\n   }\n }\n+\n+#' Add filename as dataset column\n+#'\n+#' @examplesIf requireNamespace(\"dplyr\", quietly = TRUE)\n+#' library(dplyr)\n+#' tf <- tempfile()\n+#' dir.create(tf)\n+#' write_dataset(mtcars, tf, partitioning = \"cyl\")\n+#'\n+#' open_dataset(tf) %>%\n+#'  mutate(filename = add_filename()) %>%\n+#'  collect()\n+#'\n+#' @export\n+add_filename <- function() {\n\nReview Comment:\n   Should this just go in nse_funcs? Or does it have value outside of it?\n\n\n\n",
                    "created": "2022-07-18T14:07:08.766+0000",
                    "updated": "2022-07-18T14:07:08.766+0000",
                    "started": "2022-07-18T14:07:08.766+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "792136",
                    "issueId": "13420906"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 26400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@60cfd13c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@42c1da6a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@edd5f93[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4283d6a8[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@55609fb6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6c889ede[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8cd751b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5427d43c[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56b7c21[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2d3d6c3c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e3ba12d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@24571ae2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 26400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Aug 10 00:19:44 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-08-10T00:19:44.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-15260/watchers",
            "watchCount": 6,
            "isWatching": false
        },
        "created": "2022-01-05T18:53:39.000+0000",
        "updated": "2022-08-29T22:17:20.000+0000",
        "timeoriginalestimate": null,
        "description": "Hi. Is it possible to add the file_name as a column to a dataset?\r\n\r\n{code:r}\r\nds <- open_dataset(.....)\r\nlist_of_files <- ds$files\r\n{code}\r\n\r\nThis works, but I need the file_name as a column.\r\nThanks\r\n\r\n\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 26400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] open_dataset - add file_name as column",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17469483",
                    "id": "17469483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "I already add the folders as partitions, but also need the file_name as a column, to group_by and add row_numbers",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2022-01-05T18:58:40.895+0000",
                    "updated": "2022-01-05T18:58:40.895+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17469823",
                    "id": "17469823",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "I'm don't think that that is possible, but could you give me a bit more information about the problem you're trying to solve, or why you need it, as perhaps there may be alternative ways of achieving your goals?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-06T10:27:15.716+0000",
                    "updated": "2022-01-06T10:27:15.716+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17469854",
                    "id": "17469854",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "The raw data that we receive from clients is structured into various folders. We partition the data based on the folders. The lowest level is a timestamp folder, but there are scenarios where we receive multiple files for a specific timestamp. In order to process the data, in bulk, we need to create a unique row level id for for each file, i.e. group_by various partitions and file_name to add a row_number . If we pickup any issues with the data, we need to be able to pinpoint the exact file where the issue occurred to revert back to the client.\r\n\r\nI hope this makes sense",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2022-01-06T11:13:08.861+0000",
                    "updated": "2022-01-06T11:13:08.861+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17469877",
                    "id": "17469877",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Yeah, that does make sense. As a short-term (and not particularly scalable) solution, I suppose you could do something like:\r\n{code:r}\r\nfiles <- list.files(directory, recursive = TRUE, full.names = TRUE)\r\n\r\nfor(file in files){\r\n  data <- read_csv_arrow(file)\r\n  data <- mutate(data, filename = file)\r\n  write_csv_arrow(data, file = file)\r\n}{code}\r\nI also wonder if the code required to solve ARROW-14612 might bring us closer to this being possible. Would be good to hear others' thoughts here.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-06T12:37:35.745+0000",
                    "updated": "2022-01-06T12:37:35.745+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17470024",
                    "id": "17470024",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "From a C++ perspective we've got many of the pieces needed already.  One challenge is that the datasets API is written to work with \"fragments\" and not \"files\".  For example, a dataset might be an in-memory table in which case we are working with InMemoryFragment and not FileFragment so there is no concept of \"filename\".\r\n\r\nThat being said, the low level ScanBatchesAsync method actually returns a generator of TaggedRecordBatch for this very purpose.  A TaggedRecordBatch is a struct with the record batch as well as the source fragment for that record batch.\r\n\r\nSo if you were to execute scan, you could inspect the fragment and, if it is a FileFragment, you could extract the filename.\r\n\r\nAnother challenge is that R is moving towards more and more access through an exec plan and not directly using a scanner.  In order for that to work we would need to augment the scan results with the filename in C++ before sending into the exec plan.  Luckily, we already do this a bit as well.  We currently augment the scan results with fragment index, batch index, and whether the batch is the last batch in the fragment.\r\n\r\nSince ExecBatch can work with constants efficiently I don't think there will be much performance cost in always including the filename.  So the work remaining is simply to add a new augmented field __fragment_source_name which is always attached if the underlying fragment is a filename.  Then users can get this field if they want by including \"__fragment_source_name\" in the list of columns they query for.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-01-06T16:26:56.409+0000",
                    "updated": "2022-01-06T16:26:56.409+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17470492",
                    "id": "17470492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Thanks for the feedback [~westonpace] , although I must admit, it is a little bit Greek to me. Will it be possible for someone to give me an example of how to do this FileFragment scan in R? [~thisisnic]\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=martindut",
                        "name": "martindut",
                        "key": "martindut",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Martin du Toit",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2022-01-07T10:04:30.349+0000",
                    "updated": "2022-01-07T10:04:30.349+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17470565",
                    "id": "17470565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Hi [~martindut] - I think this is C++ functionality which is not exposed directly in the R layer and that this wouldn't be possible.\u00a0 I will open a ticket for enabling the functionality that Weston mentions for extracting filenames though.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-01-07T12:14:20.692+0000",
                    "updated": "2022-01-07T12:14:20.692+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17516737",
                    "id": "17516737",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "This is now implemented in the C++ via ARROW-15281; however, it'll need some work to bring this functionality into the R code, and could be a bit tricky.  Here are my notes on what I think the tricky bits will be.\r\n\r\nIn Python, we can do something like {{scanner = dataset_reader.scanner(dataset, columns=['__filename'])}}\r\nIn the R code, the Scanner object looks like the likely analog.  We use {{Scanner$create()}} to create a Scanner object, and it uses the {{projection}} field to specify columns.  \r\n\r\nIn the body of {{Scanner$create()}}, we have this code: {{proj <- c(dataset$selected_columns, dataset$temp_columns)}} and then later {{stopifnot(\"attempting to project with unknown columns\" = all(projection %in% names(proj)))}}\r\n\r\nSo we'll need to make some sort of change so that we can select this \"metadata\" kind of column.  \r\n\r\nIt may be complicated further by the fact that this deviates a bit from the usual way of using {{dplyr::select()}}; i.e. if I set up a basic dataset based on the {{mtcars}} dataset and try to call {{select(mtcars_dataset, cyl, __filenames)}}, I get {{Error: unexpected input in \"select(my_dataset, cyl, _\"}} which is different from the usual {{Can't subset columns that don't exist.}} error message I might expect, so there may be something around the syntax here too.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-04-04T10:37:20.941+0000",
                    "updated": "2022-04-04T10:37:20.941+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17516796",
                    "id": "17516796",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "body": "(JIRA does wild things with italics here, so I'm sticking it in noformat...)\r\n\r\n{noformat}\r\n\r\nIt looks like we can access {{__filename}} from the {{Scanner}} too, \r\nalthough it's pretty limited what we do with it. Note that in R you will \r\nhave to use backticks in something like dplyr (e.g., {{`__filename`}}, \r\nbecause variables in R can't start with {{_}}. In the dplyr interface \r\nwe make a pretty strong assumption that the schema names are the\r\n available names in the dataset...maybe the best way would be to add\r\n a binding like {{dataset_filename()}} that inserts the correct field\r\n reference (although C++ gives us errors if we try to insert a field \r\nreference to {{__filename}} in an {{Expression}}).\r\n\r\n{noformat}\r\n\r\n{code:R}\r\nlibrary(arrow, warn.conflicts = FALSE)\r\nlibrary(dplyr, warn.conflicts = FALSE)\r\n\r\ntf <- tempfile()\r\nwrite_dataset(mtcars, tf, partitioning = \"cyl\")\r\nds <- open_dataset(tf)\r\n\r\n# works!\r\nscanner <- Scanner$create(\r\n  open_dataset(tf), \r\n  projection = c(\"__filename\", names(ds))\r\n)\r\n\r\nas_tibble(scanner$ToTable())\r\n#> # A tibble: 32 \u00d7 12\r\n#>    `__filename`        mpg  disp    hp  drat    wt  qsec    vs    am  gear  carb\r\n#>    <chr>             <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\r\n#>  1 /private/var/fol\u2026  22.8 108      93  3.85  2.32  18.6     1     1     4     1\r\n#>  2 /private/var/fol\u2026  24.4 147.     62  3.69  3.19  20       1     0     4     2\r\n#>  3 /private/var/fol\u2026  22.8 141.     95  3.92  3.15  22.9     1     0     4     2\r\n#>  4 /private/var/fol\u2026  32.4  78.7    66  4.08  2.2   19.5     1     1     4     1\r\n#>  5 /private/var/fol\u2026  30.4  75.7    52  4.93  1.62  18.5     1     1     4     2\r\n#>  6 /private/var/fol\u2026  33.9  71.1    65  4.22  1.84  19.9     1     1     4     1\r\n#>  7 /private/var/fol\u2026  21.5 120.     97  3.7   2.46  20.0     1     0     3     1\r\n#>  8 /private/var/fol\u2026  27.3  79      66  4.08  1.94  18.9     1     1     4     1\r\n#>  9 /private/var/fol\u2026  26   120.     91  4.43  2.14  16.7     0     1     5     2\r\n#> 10 /private/var/fol\u2026  30.4  95.1   113  3.77  1.51  16.9     1     1     5     2\r\n#> # \u2026 with 22 more rows, and 1 more variable: cyl <int>\r\n\r\n# seems that we still can't use __filename in a filter expr\r\nScanner$create(\r\n  open_dataset(tf),\r\n  projection = c(\"__filename\", names(ds)),\r\n  filter = Expression$create(\r\n    \"match_substring\",\r\n    Expression$field_ref(\"__filename\"),\r\n    options = list(pattern = \"cyl=8\")\r\n  )\r\n)\r\n#> Error: Invalid: No match for FieldRef.Name(__filename) in mpg: double\r\n#> disp: double\r\n#> hp: double\r\n#> drat: double\r\n#> wt: double\r\n#> qsec: double\r\n#> vs: double\r\n#> am: double\r\n#> gear: double\r\n#> carb: double\r\n#> cyl: int32\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/type.h:1717  CheckNonEmpty(matches, root)\r\n#> /Users/deweydunnington/Desktop/rscratch/arrow/cpp/src/arrow/dataset/scanner.cc:782  ref.FindOne(*scan_options_->dataset_schema)\r\n{code}\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=paleolimbot",
                        "name": "paleolimbot",
                        "key": "paleolimbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=paleolimbot&avatarId=47795",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=paleolimbot&avatarId=47795",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=paleolimbot&avatarId=47795",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=paleolimbot&avatarId=47795"
                        },
                        "displayName": "Dewey Dunnington",
                        "active": true,
                        "timeZone": "America/Halifax"
                    },
                    "created": "2022-04-04T12:47:50.237+0000",
                    "updated": "2022-04-04T12:50:32.858+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17516808",
                    "id": "17516808",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "body": "Oh sweet, at least we're closer than I'd thought we were, and works for the basic use-case here (i.e. find out which file this row belongs to).",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
                        "name": "thisisnic",
                        "key": "thisisnic",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
                        },
                        "displayName": "Nicola Crane",
                        "active": true,
                        "timeZone": "Africa/Casablanca"
                    },
                    "created": "2022-04-04T13:12:40.626+0000",
                    "updated": "2022-04-04T13:12:40.626+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17516837",
                    "id": "17516837",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "> although C++ gives us errors if we try to insert a field reference to {{__filename}} in an {{Expression}}\r\n\r\nThis is tricky because we (and apparently elsewhere in the C++ code) have logic to filter out secret internal columns like this: https://github.com/apache/arrow/blob/master/r/R/query-engine.R#L159-L163. Sounds like we need to find a safe way to loosen that, or otherwise rethink the implementation.\r\n\r\nIn terms of UX in R, a special helper like {{add_filenames <- function() Expression$field_ref(\"__filename\")}} that you could call like {{mutate(ds, file_col = add_filenames())}} might be a reasonable interface to this. ",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-04-04T13:54:50.795+0000",
                    "updated": "2022-04-04T13:54:50.795+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17517041",
                    "id": "17517041",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "> seems that we still can't use __filename in a filter expr\r\n\r\nThat's a C++ problem (just filed ARROW-16115)\r\n\r\n> This is tricky because we (and apparently elsewhere in the C++ code) have logic to filter out secret internal columns like this\r\n\r\nIn C++ if the user doesn't specify any projection we default to \"all columns but not augmented columns\".  I think that's the only time we filter out these special columns and I think we want to keep this interpretation.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-04-04T18:54:36.832+0000",
                    "updated": "2022-04-04T18:54:36.832+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17517044",
                    "id": "17517044",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Oh, also, one might think that this query would push the filter down:\r\n\r\n{noformat}\r\n  filter = Expression$create(\r\n    \"match_substring\",\r\n    Expression$field_ref(\"__filename\"),\r\n    options = list(pattern = \"cyl=8\")\r\n  )\r\n{noformat}\r\n\r\nIn other words, you might think we would get the hint and only read files matching that pattern.  This is not the case.  We will read the entire dataset and apply the \"cyl=8\" filter in memory.\r\n\r\nIf we want to pushdown filters on the filename column we will need to add some special logic.  Feel free to create a JIRA.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
                        "name": "westonpace",
                        "key": "westonpace",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Weston Pace",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-04-04T18:58:23.132+0000",
                    "updated": "2022-04-04T18:58:23.132+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13420906/comment/17577682",
                    "id": "17577682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 12826\n[https://github.com/apache/arrow/pull/12826]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-08-10T00:19:44.295+0000",
                    "updated": "2022-08-10T00:19:44.295+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ya8w:",
        "customfield_12314139": null
    }
}