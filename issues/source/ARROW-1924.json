{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13124836",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13124836",
    "key": "ARROW-1924",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=pcmoritz",
            "name": "pcmoritz",
            "key": "pcmoritz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Philipp Moritz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1924/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@15eae51c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@fb69309[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62d6812f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@59c378a7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7815a875[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@6a40d269[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c49f9f7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7e0da899[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2b8ee12d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4731adaf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@344462ff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@279e5d8e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Dec 18 05:35:11 UTC 2017",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2017-12-18T05:35:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1924/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-12-13T23:41:33.000+0000",
        "updated": "2019-06-03T12:42:38.000+0000",
        "timeoriginalestimate": null,
        "description": "We need to revert https://issues.apache.org/jira/browse/ARROW-1758\r\n\r\nThe reason is that the semantics for pickle=True is slightly different from just using (cloud-)pickle as the custom serializer:\r\n\r\nIf pickle=True is used, the object can be deserialized in any process, even if a deserializer for that type_id has not been registered in that process. On the other hand, if (cloud-)pickle is used as a custom serializer, the object can only be deserialized if pyarrow has the type_id registered and can call the deserializer.",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Bring back pickle=True option for serialization",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13124836/comment/16290106",
                    "id": "16290106",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz opened a new pull request #1420: ARROW-1924: [Python] Bring back pickle=True option for serialization\nURL: https://github.com/apache/arrow/pull/1420\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-13T23:53:11.888+0000",
                    "updated": "2017-12-13T23:53:11.888+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13124836/comment/16292068",
                    "id": "16292068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pcmoritz commented on issue #1420: ARROW-1924: [Python] Bring back pickle=True option for serialization\nURL: https://github.com/apache/arrow/pull/1420#issuecomment-351920239\n \n \n   +1, the windows test failure is unrelated I think\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-15T05:52:55.844+0000",
                    "updated": "2017-12-15T05:52:55.844+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13124836/comment/16294527",
                    "id": "16294527",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1420: ARROW-1924: [Python] Bring back pickle=True option for serialization\nURL: https://github.com/apache/arrow/pull/1420\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/python/pyarrow/serialization.pxi b/python/pyarrow/serialization.pxi\nindex cbc5e3b84..d95d582fe 100644\n--- a/python/pyarrow/serialization.pxi\n+++ b/python/pyarrow/serialization.pxi\n@@ -47,6 +47,7 @@ cdef class SerializationContext:\n     cdef:\n         object type_to_type_id\n         object whitelisted_types\n+        object types_to_pickle\n         object custom_serializers\n         object custom_deserializers\n \n@@ -54,6 +55,7 @@ cdef class SerializationContext:\n         # Types with special serialization handlers\n         self.type_to_type_id = dict()\n         self.whitelisted_types = dict()\n+        self.types_to_pickle = set()\n         self.custom_serializers = dict()\n         self.custom_deserializers = dict()\n \n@@ -73,7 +75,7 @@ cdef class SerializationContext:\n \n         return result\n \n-    def register_type(self, type_, type_id,\n+    def register_type(self, type_, type_id, pickle=False,\n                       custom_serializer=None, custom_deserializer=None):\n         \"\"\"EXPERIMENTAL: Add type to the list of types we can serialize.\n \n@@ -83,6 +85,9 @@ cdef class SerializationContext:\n             The type that we can serialize.\n         type_id : bytes\n             A string of bytes used to identify the type.\n+        pickle : bool\n+            True if the serialization should be done with pickle.\n+            False if it should be done efficiently with Arrow.\n         custom_serializer : callable\n             This argument is optional, but can be provided to\n             serialize objects of the class in a particular way.\n@@ -92,6 +97,8 @@ cdef class SerializationContext:\n         \"\"\"\n         self.type_to_type_id[type_] = type_id\n         self.whitelisted_types[type_id] = type_\n+        if pickle:\n+            self.types_to_pickle.add(type_id)\n         if custom_serializer is not None:\n             self.custom_serializers[type_id] = custom_serializer\n             self.custom_deserializers[type_id] = custom_deserializer\n@@ -111,7 +118,9 @@ cdef class SerializationContext:\n \n         # use the closest match to type(obj)\n         type_id = self.type_to_type_id[type_]\n-        if type_id in self.custom_serializers:\n+        if type_id in self.types_to_pickle:\n+            serialized_obj = {\"data\": pickle.dumps(obj), \"pickle\": True}\n+        elif type_id in self.custom_serializers:\n             serialized_obj = {\"data\": self.custom_serializers[type_id](obj)}\n         else:\n             if is_named_tuple(type_):\n@@ -132,6 +141,7 @@ cdef class SerializationContext:\n             # The object was pickled, so unpickle it.\n             obj = pickle.loads(serialized_obj[\"data\"])\n         else:\n+            assert type_id not in self.types_to_pickle\n             if type_id not in self.whitelisted_types:\n                 msg = \"Type ID \" + str(type_id) + \" not registered in \" \\\n                       \"deserialization callback\"\ndiff --git a/python/pyarrow/serialization.py b/python/pyarrow/serialization.py\nindex 3059dfc1b..689ec15d3 100644\n--- a/python/pyarrow/serialization.py\n+++ b/python/pyarrow/serialization.py\n@@ -104,12 +104,9 @@ def _deserialize_default_dict(data):\n \n     serialization_context.register_type(\n         type(lambda: 0), \"function\",\n-        custom_serializer=cloudpickle.dumps,\n-        custom_deserializer=cloudpickle.loads)\n+        pickle=True)\n \n-    serialization_context.register_type(type, \"type\",\n-                                        custom_serializer=cloudpickle.dumps,\n-                                        custom_deserializer=cloudpickle.loads)\n+    serialization_context.register_type(type, \"type\", pickle=True)\n \n     serialization_context.register_type(\n         np.ndarray, 'np.array',\ndiff --git a/python/pyarrow/tests/test_serialization.py b/python/pyarrow/tests/test_serialization.py\nindex 6d85621d4..f245dc299 100644\n--- a/python/pyarrow/tests/test_serialization.py\n+++ b/python/pyarrow/tests/test_serialization.py\n@@ -21,9 +21,9 @@\n \n from collections import namedtuple, OrderedDict, defaultdict\n import datetime\n+import os\n import string\n import sys\n-import pickle\n \n import pyarrow as pa\n import numpy as np\n@@ -198,9 +198,7 @@ def make_serialization_context():\n     context.register_type(Baz, \"Baz\")\n     context.register_type(Qux, \"Quz\")\n     context.register_type(SubQux, \"SubQux\")\n-    context.register_type(SubQuxPickle, \"SubQuxPickle\",\n-                          custom_serializer=pickle.dumps,\n-                          custom_deserializer=pickle.loads)\n+    context.register_type(SubQuxPickle, \"SubQuxPickle\", pickle=True)\n     context.register_type(Exception, \"Exception\")\n     context.register_type(CustomError, \"CustomError\")\n     context.register_type(Point, \"Point\")\n@@ -519,3 +517,27 @@ def test_serialize_to_components_invalid_cases():\n \n     with pytest.raises(pa.ArrowException):\n         pa.deserialize_components(components)\n+\n+\n+@pytest.mark.skipif(os.name == 'nt', reason=\"deserialize_regex not pickleable\")\n+def test_deserialize_in_different_process():\n+    from multiprocessing import Process, Queue\n+    import re\n+\n+    regex = re.compile(r\"\\d+\\.\\d*\")\n+\n+    serialization_context = pa.SerializationContext()\n+    serialization_context.register_type(type(regex), \"Regex\", pickle=True)\n+\n+    serialized = pa.serialize(regex, serialization_context)\n+    serialized_bytes = serialized.to_buffer().to_pybytes()\n+\n+    def deserialize_regex(serialized, q):\n+        import pyarrow as pa\n+        q.put(pa.deserialize(serialized))\n+\n+    q = Queue()\n+    p = Process(target=deserialize_regex, args=(serialized_bytes, q))\n+    p.start()\n+    assert q.get().pattern == regex.pattern\n+    p.join()\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2017-12-18T05:35:09.270+0000",
                    "updated": "2017-12-18T05:35:09.270+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13124836/comment/16294528",
                    "id": "16294528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1420\n[https://github.com/apache/arrow/pull/1420]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2017-12-18T05:35:11.656+0000",
                    "updated": "2017-12-18T05:35:11.656+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|i3nvvj:",
        "customfield_12314139": null
    }
}