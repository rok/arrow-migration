{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13140303",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303",
    "key": "ARROW-2199",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=siddteotia",
            "name": "siddteotia",
            "key": "siddteotia",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=siddteotia&avatarId=32343",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=siddteotia&avatarId=32343",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=siddteotia&avatarId=32343",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=siddteotia&avatarId=32343"
            },
            "displayName": "Siddharth Teotia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=siddteotia",
            "name": "siddteotia",
            "key": "siddteotia",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=siddteotia&avatarId=32343",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=siddteotia&avatarId=32343",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=siddteotia&avatarId=32343",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=siddteotia&avatarId=32343"
            },
            "displayName": "Siddharth Teotia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=siddteotia",
            "name": "siddteotia",
            "key": "siddteotia",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=siddteotia&avatarId=32343",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=siddteotia&avatarId=32343",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=siddteotia&avatarId=32343",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=siddteotia&avatarId=32343"
            },
            "displayName": "Siddharth Teotia",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2199/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@372e27f[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5fc38d4c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@683fc130[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2bd59896[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@106ac7d9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@39a7f44d[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2f878408[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@2891b846[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6e03e682[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@68006293[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7bb41c5f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5e42d8e7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Mar 05 23:01:21 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-05T23:22:27.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2199/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-02-22T19:29:20.000+0000",
        "updated": "2018-03-05T23:22:27.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JAVA] Follow up fixes for ARROW-2019. Ensure density driven capacity is never less than 1 and propagate density throughout the vector tree",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373391",
                    "id": "16373391",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia opened a new pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646\n \n \n   Use density based setInitialCapacity and propagate density down the vector\r\n   tree from complex vectors. Also ensure that density driven initial capacity\r\n   is never less than 1.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T20:31:48.356+0000",
                    "updated": "2018-02-22T20:31:48.356+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373409",
                    "id": "16373409",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-367814904\n \n \n   This has fixes and improvements we did in Dremio as follow-up changes to ARROW-2019 https://github.com/apache/arrow/pull/1497.\r\n   \r\n   cc @vkorukanti , @BryanCutler , @icexelloss , @jacques-n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T20:40:22.407+0000",
                    "updated": "2018-02-22T20:40:22.407+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373583",
                    "id": "16373583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-367814904\n \n \n   This has fixes and improvements we did in Dremio as follow-up changes to ARROW-2019 https://github.com/apache/arrow/pull/1497.\r\n   \r\n   cc @vkorukanti , @BryanCutler , @icexelloss , @jacques-n, @StevenMPhillips \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T22:31:24.741+0000",
                    "updated": "2018-02-22T22:31:24.741+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373597",
                    "id": "16373597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "vkorukanti commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170116190\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= 2_000_000_000) {\n+      throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n \n Review comment:\n   If possible can we add some context here like the current capacity control variables? Useful in debugging.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T22:39:13.515+0000",
                    "updated": "2018-02-22T22:39:13.515+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373598",
                    "id": "16373598",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "vkorukanti commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170115978\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= 2_000_000_000) {\n \n Review comment:\n   why are we using a different constant here than MAX_ALLOCATION_SIZE?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T22:39:13.517+0000",
                    "updated": "2018-02-22T22:39:13.517+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373662",
                    "id": "16373662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170124342\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= 2_000_000_000) {\n+      throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n \n Review comment:\n   Sure, I will file a JIRA for this since this sort of problem needs to be addressed throughout the code.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T23:19:21.490+0000",
                    "updated": "2018-02-22T23:19:21.490+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16373664",
                    "id": "16373664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170124436\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= 2_000_000_000) {\n \n Review comment:\n   Done to safeguard against truncation. We can use Integer.MAX_VALUE instead.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-22T23:19:50.803+0000",
                    "updated": "2018-02-22T23:19:50.803+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16375586",
                    "id": "16375586",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-368231906\n \n \n   @siddharthteotia I am on vacation this week. I will try to review this but please do not block on me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-24T14:27:20.264+0000",
                    "updated": "2018-02-24T14:27:20.264+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16375862",
                    "id": "16375862",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-368271923\n \n \n   Pinging for approval. Need to close out on 0.9.0 items.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-25T00:30:46.715+0000",
                    "updated": "2018-02-25T00:30:46.715+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377355",
                    "id": "16377355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170686874\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n \n Review comment:\n   Could you add some description for how the value of density affects allocation?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.476+0000",
                    "updated": "2018-02-26T18:43:12.476+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377356",
                    "id": "16377356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170692729\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   I may be missing something, but could you explain under what circumstances this would be `< 1`?  is it just possible to be 0?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.749+0000",
                    "updated": "2018-02-26T18:43:12.749+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377357",
                    "id": "16377357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170690365\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= Integer.MAX_VALUE) {\n+      throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n+    }\n     offsetAllocationSizeInBytes = (numRecords + 1) * OFFSET_WIDTH;\n-    final int innerValueCapacity = (int)(numRecords * density);\n-    if (innerValueCapacity < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential value capacity for the data vector is 0\");\n+    int innerValueCapacity = (int)(numRecords * density);\n+\n+    if(innerValueCapacity == 0) {\n+      innerValueCapacity = 1;\n+    }\n \n Review comment:\n   same as above using `Math.max` to make more compact\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.750+0000",
                    "updated": "2018-02-26T18:43:12.750+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377358",
                    "id": "16377358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170689981\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   nit: I think there should be a blank line before the comment\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.761+0000",
                    "updated": "2018-02-26T18:43:12.761+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377359",
                    "id": "16377359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170688920\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,16 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = (long) (valueCount * density);\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n+    if(size == 0) {\n \n Review comment:\n   I'm not sure if this is all that useful, but this means we can't have an initial capacity of 0?  Is that something that we should still consider?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.781+0000",
                    "updated": "2018-02-26T18:43:12.781+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377360",
                    "id": "16377360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170690111\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ */\n+public interface DensityAwareVector {\n+  /**\n+   * Set value with density\n+   * @param valueCount\n+   * @param density\n+   */\n+  void setInitialCapacity(int valueCount, double density);\n+\n \n Review comment:\n   and remove this line\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.782+0000",
                    "updated": "2018-02-26T18:43:12.782+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377361",
                    "id": "16377361",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170692410\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n ##########\n @@ -1933,15 +1933,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(4096, vector.getValueCapacity());\n       assertEquals(64, vector.getDataBuffer().capacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   same here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.787+0000",
                    "updated": "2018-02-26T18:43:12.787+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377362",
                    "id": "16377362",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170692344\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -810,15 +810,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   Is it still valid to keep this to check that the capactiy is 1 (iiuc) and only remove the exception handling?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.797+0000",
                    "updated": "2018-02-26T18:43:12.797+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16377363",
                    "id": "16377363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r170687628\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,16 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = (long) (valueCount * density);\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n+    if(size == 0) {\n+      size = 1;\n+    }\n \n Review comment:\n   can you combine this with above with `max` to make more compact like\r\n   ```\r\n   long size = Math.max((long) (valueCount * density), 1)\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-26T18:43:12.872+0000",
                    "updated": "2018-02-26T18:43:12.872+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385343",
                    "id": "16385343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172062884\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:19:29.489+0000",
                    "updated": "2018-03-04T20:19:29.489+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385344",
                    "id": "16385344",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172062968\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,16 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = (long) (valueCount * density);\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n+    if(size == 0) {\n \n Review comment:\n   Yes we cannot have an initial capacity of 0 because then our safe* functions runs into an infinite loop where they try to realloc and have the target buffer size as next power of 2 -- BaseAllocator.nextPowerOfTwo returns 0 for 0 and thus safe functions keep calling realloc.\r\n   \r\n   This happens if the initial capacity was 0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:21:51.026+0000",
                    "updated": "2018-03-04T20:21:51.026+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385345",
                    "id": "16385345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172062983\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:22:15.899+0000",
                    "updated": "2018-03-04T20:22:15.899+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385347",
                    "id": "16385347",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172062999\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,32 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ */\n+public interface DensityAwareVector {\n+  /**\n+   * Set value with density\n+   * @param valueCount\n+   * @param density\n+   */\n+  void setInitialCapacity(int valueCount, double density);\n+\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:22:38.551+0000",
                    "updated": "2018-03-04T20:22:38.551+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385349",
                    "id": "16385349",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172063122\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n ##########\n @@ -166,13 +168,23 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= Integer.MAX_VALUE) {\n+      throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n+    }\n     offsetAllocationSizeInBytes = (numRecords + 1) * OFFSET_WIDTH;\n-    final int innerValueCapacity = (int)(numRecords * density);\n-    if (innerValueCapacity < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential value capacity for the data vector is 0\");\n+    int innerValueCapacity = (int)(numRecords * density);\n+\n+    if(innerValueCapacity == 0) {\n+      innerValueCapacity = 1;\n+    }\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:25:41.848+0000",
                    "updated": "2018-03-04T20:25:41.848+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385352",
                    "id": "16385352",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172063146\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -810,15 +810,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   No earlier we were throwing IllegalStateException but that shouldn't be done. Now we take a max and set it to 1.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:26:27.874+0000",
                    "updated": "2018-03-04T20:26:27.874+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385354",
                    "id": "16385354",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172063162\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n ##########\n @@ -1933,15 +1933,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(4096, vector.getValueCapacity());\n       assertEquals(64, vector.getDataBuffer().capacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   We take a max and set it to 1 if needed. Exception handling is not needed.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:26:45.556+0000",
                    "updated": "2018-03-04T20:26:45.556+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385355",
                    "id": "16385355",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172063231\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Now that setInitialCapacity is safeguarded to not allow an initial capacity less than 1, we may not hit this case but I think it is better to do the check in realloc as well -- else we will run in infinite loop.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:28:45.529+0000",
                    "updated": "2018-03-04T20:28:45.529+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385356",
                    "id": "16385356",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172062968\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,16 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = (long) (valueCount * density);\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n+    if(size == 0) {\n \n Review comment:\n   Yes we cannot have an initial capacity of 0 because then our safe* functions run into an infinite loop where they try to realloc and have the target buffer size as next power of 2 -- BaseAllocator.nextPowerOfTwo returns 0 for 0 and thus safe functions keep calling realloc.\r\n   \r\n   This happens if the initial capacity was 0.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:29:03.326+0000",
                    "updated": "2018-03-04T20:29:03.326+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385363",
                    "id": "16385363",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172063380\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,16 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = (long) (valueCount * density);\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n+    if(size == 0) {\n+      size = 1;\n+    }\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:32:37.838+0000",
                    "updated": "2018-03-04T20:32:37.838+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16385368",
                    "id": "16385368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370262328\n \n \n   Addressed review comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-04T20:44:12.960+0000",
                    "updated": "2018-03-04T20:44:12.960+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386411",
                    "id": "16386411",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172268388\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -810,15 +810,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   Yes, that I what I mean.  Still call `vector.setInitialCapacity(5, 0.1);` and just assert that capacity is 1 instead of trying to catch the exception\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T17:38:44.980+0000",
                    "updated": "2018-03-05T17:38:44.980+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386416",
                    "id": "16386416",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172269530\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   I guess I mean is it possible to be negative?  If not then `newAllocationSize` is a long so the only other possibility is 0 and wouldn't `nextPowerOfTwo` change the 0 to a 1?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T17:42:52.798+0000",
                    "updated": "2018-03-05T17:42:52.798+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386450",
                    "id": "16386450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172277608\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   nextPowerOfTwo of 0 is returned as 0 by BaseAllocator.nextPowerOfTwo which is why we initially safeguarded the realloc function to be aware of 0 initial capacity. Now that setInitialCapacity prevents 0 initial capacity, doing a check in realloc may not be absolutely necessary but I suggest we should keep it -- no harm\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:10:01.120+0000",
                    "updated": "2018-03-05T18:10:01.120+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386461",
                    "id": "16386461",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172279395\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Sounds like we have the assumption that newAllocationSize should not be 0 because setInitializeCapacity prevents 0. I think it's better to use assert to validation the assumption. It feels more robust. WDYT?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:15:51.707+0000",
                    "updated": "2018-03-05T18:15:51.707+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386464",
                    "id": "16386464",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172279715\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,14 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = Math.max((long)(valueCount * density), 1L);\n \n Review comment:\n   I am not 100% sure about this. Why isn't this a illegal argument exception like before?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:17:05.884+0000",
                    "updated": "2018-03-05T18:17:05.884+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386472",
                    "id": "16386472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172280459\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Also, I think there are too many such statements. Can we put it in `nextPowerOfTwo` or maybe create a new method `nextPowerofTwoZeroSafe`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:19:33.735+0000",
                    "updated": "2018-03-05T18:19:33.735+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386474",
                    "id": "16386474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172280459\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Also, I think there are too many such statements. Can we put it in `nextPowerOfTwo` or maybe create a new method `nextPowerOfTwoZeroSafe`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:19:54.946+0000",
                    "updated": "2018-03-05T18:19:54.946+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386479",
                    "id": "16386479",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281168\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n \n Review comment:\n   What do you think of having all vectors implement\r\n   `setInitialCapacity(valueCount, density)` and delegate to `setInitialCapacity(valueCount)`\r\n   instead of case matching here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:22:01.000+0000",
                    "updated": "2018-03-05T18:22:01.000+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386480",
                    "id": "16386480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281168\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n \n Review comment:\n   What do you think of having non density aware vectors implement\r\n   `setInitialCapacity(valueCount, density)` and delegate to `setInitialCapacity(valueCount)`\r\n   instead of case matching here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:22:16.054+0000",
                    "updated": "2018-03-05T18:22:16.054+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386481",
                    "id": "16386481",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281369\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   The only thing we want to ensure is that if realloc is starting with existing capacity as 0, the caller should not run into an infinite loop and that's why we do max and set it to 1 if needed. Adding an assertion sounds fine but that implicitly asks for removing the setting to math.max (blah, 1). I am suggesting to keep the max setting but I don't have a strong opinion\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:22:46.670+0000",
                    "updated": "2018-03-05T18:22:46.670+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386483",
                    "id": "16386483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281445\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n ##########\n @@ -1933,15 +1933,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(4096, vector.getValueCapacity());\n       assertEquals(64, vector.getDataBuffer().capacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   added back the test with assertion\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:23:03.457+0000",
                    "updated": "2018-03-05T18:23:03.457+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386484",
                    "id": "16386484",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281516\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -810,15 +810,6 @@ public void testSetInitialCapacity() {\n       vector.allocateNew();\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n-\n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n \n Review comment:\n   you are right. added back the test with assertion.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:23:18.708+0000",
                    "updated": "2018-03-05T18:23:18.708+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386486",
                    "id": "16386486",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281889\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Sorry I don't understand this completely. Why is the 1 position that is not null has size == 1?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:24:38.733+0000",
                    "updated": "2018-03-05T18:24:38.733+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386487",
                    "id": "16386487",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172281991\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n \n Review comment:\n   I think that's unnecessary delegation and then there is no purpose of having a DensityAwareVector interface since typically everyone will implement the interface -- some will delegate and rest will implement.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:24:56.018+0000",
                    "updated": "2018-03-05T18:24:56.018+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386490",
                    "id": "16386490",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172282525\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   Should this be a sub interface of `ValueVector`? It feels a bit strange this interface is called `Vector` but only has one method.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:26:52.577+0000",
                    "updated": "2018-03-05T18:26:52.577+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386491",
                    "id": "16386491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172282525\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   Should this be a sub interface of `ValueVector`? It feels a bit strange this interface is called `Vector` but doesn't define any vector methods.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:27:19.673+0000",
                    "updated": "2018-03-05T18:27:19.673+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386492",
                    "id": "16386492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172282743\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,14 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = Math.max((long)(valueCount * density), 1L);\n \n Review comment:\n   Because it is better to internally set the initial capacity to 1 as opposed to throwing exception.\r\n   In our code, we invoke this in a loop dynamically adjusting the density value and stepping down the initial capacity because we are working with fix memory reservation and limits.\r\n   \r\n   So setInitialCapacity() followed by allocateNew() might fail in the second step if not enough memory. So we restart by adjusting the density and stepping down the value count. Throwing an exception doesn't help in any case.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:27:34.803+0000",
                    "updated": "2018-03-05T18:27:34.803+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386493",
                    "id": "16386493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370516083\n \n \n   I left some comments for the change. Sorry for the delay. (I forgot about this after I came back from vacation)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:29:00.345+0000",
                    "updated": "2018-03-05T18:29:00.345+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386494",
                    "id": "16386494",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172283361\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   10 * 0.1  is the initial capacity we will provision for the inner vector in the mentioned example. So only 1 value in the inner vector of the list for 10 outer positions in the list vector. Does that make sense? Think about a mix of null and non-null lists.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:29:38.877+0000",
                    "updated": "2018-03-05T18:29:38.877+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386495",
                    "id": "16386495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370516903\n \n \n   @BryanCutler , @icexelloss , I have addressed and responded to review comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:31:40.099+0000",
                    "updated": "2018-03-05T18:31:40.099+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386499",
                    "id": "16386499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172284444\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Well, technically given 0 the next power of 2 should be 1.  So I think that function needs the fix and then the extra check here should be safe to remove.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:33:32.125+0000",
                    "updated": "2018-03-05T18:33:32.125+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386504",
                    "id": "16386504",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172285488\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Yeah I think it makes sense that density of 0.1 means 10% of the value is non-null. What I am not sure about is why the size of the non-null value has size 1 ? It seems `valuecount * density` is used for  both (1) number of non-null sub lists in the parent list (2) (average) length of the non-null sub lists. What if these two values are different?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:37:04.923+0000",
                    "updated": "2018-03-05T18:37:04.923+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386511",
                    "id": "16386511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172286159\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   I agree with Bryan.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:39:29.279+0000",
                    "updated": "2018-03-05T18:39:29.279+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386515",
                    "id": "16386515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172286775\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n \n Review comment:\n   I agree, I think it's best to just check the class instance where needed instead of delegating\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:41:55.790+0000",
                    "updated": "2018-03-05T18:41:55.790+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386532",
                    "id": "16386532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172289379\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Should that function be fixed as part of this patch? I am not even sure what are the implications of that in other parts of Arrow and/or downstream consumers. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:50:54.820+0000",
                    "updated": "2018-03-05T18:50:54.820+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386547",
                    "id": "16386547",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172291183\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n ##########\n @@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n \n Review comment:\n   Ok, SGTM.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:56:36.229+0000",
                    "updated": "2018-03-05T18:56:36.229+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386549",
                    "id": "16386549",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172291035\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -811,14 +811,9 @@ public void testSetInitialCapacity() {\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n \n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n-      } catch (IllegalArgumentException e) {\n-        error = true;\n-      } finally {\n-        assertTrue(error);\n-      }\n+      vector.setInitialCapacity(5, 0.1);\n+      vector.allocateNew();\n+      assertEquals(7, vector.getValueCapacity());\n \n Review comment:\n   how about adding `assertEquals(1, vector.getDataVector().getValueCapacity())` and also maybe a brief explanation of the values?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T18:57:28.504+0000",
                    "updated": "2018-03-05T18:57:28.504+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386558",
                    "id": "16386558",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172293201\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   If we want to be safe, I think we can create `nextPowerOfTwoZeroSafe` to not affect the existing users of `nextPowerOfTwo`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:03:25.642+0000",
                    "updated": "2018-03-05T19:03:25.642+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386569",
                    "id": "16386569",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172295366\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   I just don't feel strong need for it. safeguarding realloc seems perfectly fine to me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:11:06.068+0000",
                    "updated": "2018-03-05T19:11:06.068+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386573",
                    "id": "16386573",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172295709\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n ##########\n @@ -174,14 +174,14 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = Math.max((long)(valueCount * density), 1L);\n \n Review comment:\n   Ok. I don't have strong opinion on the behavior for the case `valueCount * density < 1`, I guess what you are saying make sense. \r\n   \r\n   In that case, can we make that clear in the documentation (maybe at the interface level)? Also, this is consistent with `setInitialCapacity(valueCount)`? i.e Does `setInitialCapacity(0)` also adjust to 1 as well?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:12:11.766+0000",
                    "updated": "2018-03-05T19:12:11.766+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386581",
                    "id": "16386581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172297486\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   I think there are probably too many such checks `newAllocationSize = Math.max(newAllocationSize, 1);` across the code, safeguarding realloc is fine but the way it's currently implemented feels too scattered and error prone. (Some one could forget to add this check in some vectors in the future, for instance)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:17:53.965+0000",
                    "updated": "2018-03-05T19:17:53.965+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386592",
                    "id": "16386592",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172299311\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   valueCount * density is used for computing the value capacity of the inner vector. IF the List vector has a valuecount of 10, we use the density to compute the target value count for the inner vector and < 1 value of density helps in provisioning keeping NULL values into account.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:23:33.356+0000",
                    "updated": "2018-03-05T19:23:33.356+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386594",
                    "id": "16386594",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "BryanCutler commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172299493\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   It's just that this is really safeguarding a function that is returning incorrect results, and it's in quite a few places.  Maybe this PR is not the right place to fix it, so how about I open another JIRA, put a quick patch and then you can bring that in here?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:24:08.729+0000",
                    "updated": "2018-03-05T19:24:08.729+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386601",
                    "id": "16386601",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172299999\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n ##########\n @@ -811,14 +811,9 @@ public void testSetInitialCapacity() {\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n \n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n-      } catch (IllegalArgumentException e) {\n-        error = true;\n-      } finally {\n-        assertTrue(error);\n-      }\n+      vector.setInitialCapacity(5, 0.1);\n+      vector.allocateNew();\n+      assertEquals(7, vector.getValueCapacity());\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:25:52.891+0000",
                    "updated": "2018-03-05T19:25:52.891+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386605",
                    "id": "16386605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172300509\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Sounds like for a list of 10 values. These two have the same density == 1:\r\n   * 10 sub lists of size 1\r\n   * 1 sub list of size 10, 9 sub list of null\r\n   \r\n   Is that correct understanding? The doc seems to fix the two cases so it's not very clear to me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:27:35.442+0000",
                    "updated": "2018-03-05T19:27:35.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386614",
                    "id": "16386614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172300509\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Sounds like for a list of 10 values. These two have the same density == 1:\r\n   * 10 sub lists of size 1\r\n   * 1 sub list of size 10, 9 sub list of null\r\n   \r\n   Is that correct understanding? The doc seems to mix the two cases so it's not very clear to me.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:30:40.850+0000",
                    "updated": "2018-03-05T19:30:40.850+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386620",
                    "id": "16386620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172302307\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   The doc doesn't mix that. It clearly indicates the purpose of density:\r\n   \r\n   For example, a\r\n      *                density value of 10 implies each position in the list\r\n      *                vector has a list of 10 values.\r\n      *                A density value of 0.1 implies out of 10 positions in\r\n      *                the list vector, 1 position has a list of size 1 and\r\n      *                remaining positions are null (no lists) or empty lists.\r\n      *                This helps in tightly controlling the memory we provision\r\n      *                for inner data vector.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:33:44.190+0000",
                    "updated": "2018-03-05T19:33:44.190+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386632",
                    "id": "16386632",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172304189\n \n \n\n ##########\n File path: java/vector/src/main/codegen/templates/UnionVector.java\n ##########\n @@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    newAllocationSize = Math.max(newAllocationSize, 1);\n \n Review comment:\n   Done.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:39:34.299+0000",
                    "updated": "2018-03-05T19:39:34.299+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386634",
                    "id": "16386634",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172304362\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   What if I have a vector such that 1 out of 10 positions has a list of size 10 and remaining positions are null, what would the density be?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:40:12.327+0000",
                    "updated": "2018-03-05T19:40:12.327+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386647",
                    "id": "16386647",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172307303\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Density is the average size of list per position in the List vector as mentioned in the doc. For your example, density is 1. I don't think it is a good idea to generalize the purpose or usage of density. The main purpose of density was to be conservative about the value capacity provisioned for inner vectors. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T19:49:15.132+0000",
                    "updated": "2018-03-05T19:49:15.132+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386684",
                    "id": "16386684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370549664\n \n \n   @BryanCutler , @icexelloss , the latest commit addresses the comments w.r.t realloc and nextPowerOfTwo.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T20:15:15.601+0000",
                    "updated": "2018-03-05T20:15:15.601+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386694",
                    "id": "16386694",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172316594\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   I see. Thanks for the explanation.\r\n   \r\n   > Density is the average size of list per position in the List vector\r\n   \r\n   This is fine. \r\n   \r\n   >   density value of 10 implies each position in the list vector has a list of 10 values.\r\n   \r\n   If I understand correctly, a density value of 10 can be either:\r\n   * 10 sub list of 10 values\r\n   * 1 sub list 100 values, 9 null sublists\r\n   * ...\r\n   As long as the average size of sub lists equals density.\r\n   \r\n   Is that correct? If so, can we make it clear in the doc?\r\n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T20:21:34.035+0000",
                    "updated": "2018-03-05T20:21:34.035+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386712",
                    "id": "16386712",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172318347\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   I think you are trying to generalize the meaning of density whereas the list vector could be nested too. We propagate density down the tree. So here we just talk about the immediate inner vector. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T20:28:44.500+0000",
                    "updated": "2018-03-05T20:28:44.500+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386713",
                    "id": "16386713",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172318466\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Which is why saying average list size implies the right meaning.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T20:29:16.214+0000",
                    "updated": "2018-03-05T20:29:16.214+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386856",
                    "id": "16386856",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370588667\n \n \n   Can we get a closure on this one?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T22:22:47.236+0000",
                    "updated": "2018-03-05T22:22:47.236+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386875",
                    "id": "16386875",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172352552\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n \n Review comment:\n   Ok.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T22:34:46.814+0000",
                    "updated": "2018-03-05T22:34:46.814+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386882",
                    "id": "16386882",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on issue #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#issuecomment-370593461\n \n \n   @siddharthteotia WDYT on https://github.com/apache/arrow/pull/1646#discussion_r172282525\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T22:40:12.594+0000",
                    "updated": "2018-03-05T22:40:12.594+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386885",
                    "id": "16386885",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172354537\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   I would like to refrain from changing the vector hierarchy at this point for this small change. A standalone interface does the job. \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T22:42:43.797+0000",
                    "updated": "2018-03-05T22:42:43.797+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386900",
                    "id": "16386900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "icexelloss commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172356587\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   Ok. My feedback is while the current implementation is simple, the interface doesn't feel very well designed - if the interface is called \"DensityAwareVector\", I would expect it to have \"Vector\" like behavior, rather than just a single function.\r\n   \r\n   I prefer well designed interfaces, but I am ok with address this later as I don't see this being a blocker for this PR.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T22:51:51.020+0000",
                    "updated": "2018-03-05T22:51:51.020+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386913",
                    "id": "16386913",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia commented on a change in pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646#discussion_r172358637\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n ##########\n @@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n \n Review comment:\n   I agree. This is not the only interface implemented on its own (without subclassing ValueVector). We have NullableVectorDefinitionSetter that provides the method setIndexDefined(index)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T23:00:33.541+0000",
                    "updated": "2018-03-05T23:00:33.541+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13140303/comment/16386914",
                    "id": "16386914",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "siddharthteotia closed pull request #1646: ARROW-2199: [JAVA] Control the memory allocated for inner vectors in containers.\nURL: https://github.com/apache/arrow/pull/1646\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java\nindex 5411baf7b..2f70f7372 100644\n--- a/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java\n+++ b/java/memory/src/main/java/org/apache/arrow/memory/BaseAllocator.java\n@@ -134,6 +134,9 @@ private static String createErrorMsg(final BufferAllocator allocator, final int\n    * @return The closest power of two of that value.\n    */\n   public static int nextPowerOfTwo(int val) {\n+    if (val == 0 || val == 1) {\n+      return val + 1;\n+    }\n     int highestBit = Integer.highestOneBit(val);\n     if (highestBit == val) {\n       return val;\n@@ -149,6 +152,9 @@ public static int nextPowerOfTwo(int val) {\n    * @return The closest power of two of that value.\n    */\n   public static long nextPowerOfTwo(long val) {\n+    if (val == 0 || val == 1) {\n+      return val + 1;\n+    }\n     long highestBit = Long.highestOneBit(val);\n     if (highestBit == val) {\n       return val;\ndiff --git a/java/vector/src/main/codegen/templates/UnionVector.java b/java/vector/src/main/codegen/templates/UnionVector.java\nindex 84450bee5..1cfa0666a 100644\n--- a/java/vector/src/main/codegen/templates/UnionVector.java\n+++ b/java/vector/src/main/codegen/templates/UnionVector.java\n@@ -282,6 +282,7 @@ private void reallocTypeBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > BaseValueVector.MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\nindex cbc56fe3d..4b47df8a4 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseFixedWidthVector.java\n@@ -444,6 +444,7 @@ private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean dataBuffer)\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\nindex c32d20f18..ecb3c780e 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/BaseVariableWidthVector.java\n@@ -174,14 +174,14 @@ public void setInitialCapacity(int valueCount) {\n    * @param valueCount desired number of elements in the vector\n    * @param density average number of bytes per variable width element\n    */\n+  @Override\n   public void setInitialCapacity(int valueCount, double density) {\n-    final long size = (long) (valueCount * density);\n-    if (size < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential capacity of the data buffer is 0\");\n-    }\n+    long size = Math.max((long)(valueCount * density), 1L);\n+\n     if (size > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n     }\n+\n     valueAllocationSizeInBytes = (int) size;\n     validityAllocationSizeInBytes = getValidityBufferSizeFromCount(valueCount);\n     /* to track the end offset of last data element in vector, we need\n@@ -489,6 +489,7 @@ public void reallocDataBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\n@@ -541,6 +542,7 @@ private ArrowBuf reallocBufferHelper(ArrowBuf buffer, final boolean offsetBuffer\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java b/java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\nnew file mode 100644\nindex 000000000..2915661a4\n--- /dev/null\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/DensityAwareVector.java\n@@ -0,0 +1,57 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+/**\n+ * Vector that support density aware initial capacity settings.\n+ * We use this for ListVector and VarCharVector as of now to\n+ * control the memory allocated.\n+ *\n+ * For ListVector, we have been using a multiplier of 5\n+ * to compute the initial capacity of the inner data vector.\n+ * For deeply nested lists and lists with lots of NULL values,\n+ * this is over-allocation upfront. So density helps to be\n+ * conservative when computing the value capacity of the\n+ * inner vector.\n+ *\n+ * For example, a density value of 10 implies each position in the\n+ * list vector has a list of 10 values. So we will provision\n+ * an initial capacity of (valuecount * 10) for the inner vector.\n+ * A density value of 0.1 implies out of 10 positions in the list vector,\n+ * 1 position has a list of size 1 and remaining positions are\n+ * null (no lists) or empty lists. This helps in tightly controlling\n+ * the memory we provision for inner data vector.\n+ *\n+ * Similar analogy is applicable for VarCharVector where the capacity\n+ * of the data buffer can be controlled using density multiplier\n+ * instead of default multiplier of 8 (default size of average\n+ * varchar length).\n+ *\n+ * Also from container vectors, we propagate the density down\n+ * the the inner vectors so that they can use it appropriately.\n+ */\n+public interface DensityAwareVector {\n+\n+  /**\n+   * Set value with density\n+   * @param valueCount\n+   * @param density\n+   */\n+  void setInitialCapacity(int valueCount, double density);\n+}\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java b/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\nindex 593d4dcea..f91a5c8b5 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/VariableWidthVector.java\n@@ -18,7 +18,7 @@\n \n package org.apache.arrow.vector;\n \n-public interface VariableWidthVector extends ValueVector {\n+public interface VariableWidthVector extends ValueVector, DensityAwareVector {\n \n   /**\n    * Allocate a new memory space for this vector.  Must be called prior to using the ValueVector.\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java\nindex a99f3c8cd..d2a3c4a62 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/AbstractContainerVector.java\n@@ -20,6 +20,7 @@\n \n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.memory.OutOfMemoryException;\n+import org.apache.arrow.vector.DensityAwareVector;\n import org.apache.arrow.vector.FieldVector;\n import org.apache.arrow.vector.ValueVector;\n import org.apache.arrow.vector.types.Types.MinorType;\n@@ -33,7 +34,7 @@\n  *\n  * This class implements common functionality of composite vectors.\n  */\n-public abstract class AbstractContainerVector implements ValueVector {\n+public abstract class AbstractContainerVector implements ValueVector, DensityAwareVector {\n   static final org.slf4j.Logger logger = org.slf4j.LoggerFactory.getLogger(AbstractContainerVector.class);\n \n   protected final String name;\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\nindex 50ee3a757..2dd2894ff 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/BaseRepeatedValueVector.java\n@@ -25,6 +25,7 @@\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.vector.AddOrGetResult;\n import org.apache.arrow.vector.BaseValueVector;\n+import org.apache.arrow.vector.DensityAwareVector;\n import org.apache.arrow.vector.FieldVector;\n import org.apache.arrow.vector.UInt4Vector;\n import org.apache.arrow.vector.ValueVector;\n@@ -108,6 +109,7 @@ protected void reallocOffsetBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\n@@ -139,7 +141,7 @@ public void setInitialCapacity(int numRecords) {\n     if (vector instanceof BaseFixedWidthVector || vector instanceof BaseVariableWidthVector) {\n       vector.setInitialCapacity(numRecords * RepeatedValueVector.DEFAULT_REPEAT_PER_RECORD);\n     } else {\n-     vector.setInitialCapacity(numRecords);\n+      vector.setInitialCapacity(numRecords);\n     }\n   }\n \n@@ -166,13 +168,21 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n+    if ((numRecords * density) >= Integer.MAX_VALUE) {\n+      throw new OversizedAllocationException(\"Requested amount of memory is more than max allowed\");\n+    }\n+\n     offsetAllocationSizeInBytes = (numRecords + 1) * OFFSET_WIDTH;\n-    final int innerValueCapacity = (int)(numRecords * density);\n-    if (innerValueCapacity < 1) {\n-      throw new IllegalArgumentException(\"With the provided density and value count, potential value capacity for the data vector is 0\");\n+\n+    int innerValueCapacity = Math.max((int)(numRecords * density), 1);\n+\n+    if (vector instanceof DensityAwareVector) {\n+      ((DensityAwareVector)vector).setInitialCapacity(innerValueCapacity, density);\n+    } else {\n+      vector.setInitialCapacity(innerValueCapacity);\n     }\n-    vector.setInitialCapacity(innerValueCapacity);\n   }\n \n   @Override\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\nindex 9314a2566..eadbab436 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/FixedSizeListVector.java\n@@ -210,6 +210,7 @@ private void reallocValidityBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\nindex b472dae06..d3eeaf2f0 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/ListVector.java\n@@ -31,7 +31,12 @@\n import org.apache.arrow.memory.BaseAllocator;\n import org.apache.arrow.memory.BufferAllocator;\n import org.apache.arrow.memory.OutOfMemoryException;\n-import org.apache.arrow.vector.*;\n+import org.apache.arrow.vector.AddOrGetResult;\n+import org.apache.arrow.vector.BufferBacked;\n+import org.apache.arrow.vector.FieldVector;\n+import org.apache.arrow.vector.ValueVector;\n+import org.apache.arrow.vector.ZeroVector;\n+import org.apache.arrow.vector.BitVectorHelper;\n import org.apache.arrow.vector.complex.impl.ComplexCopier;\n import org.apache.arrow.vector.complex.impl.UnionListReader;\n import org.apache.arrow.vector.complex.impl.UnionListWriter;\n@@ -126,6 +131,7 @@ public void setInitialCapacity(int numRecords) {\n    *                This helps in tightly controlling the memory we provision\n    *                for inner data vector.\n    */\n+  @Override\n   public void setInitialCapacity(int numRecords, double density) {\n     validityAllocationSizeInBytes = getValidityBufferSizeFromCount(numRecords);\n     super.setInitialCapacity(numRecords, density);\n@@ -287,6 +293,7 @@ private void reallocValidityBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\nindex aec06b60c..c41cbf262 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/NonNullableStructVector.java\n@@ -99,6 +99,17 @@ public void setInitialCapacity(int numRecords) {\n     }\n   }\n \n+  @Override\n+  public void setInitialCapacity(int valueCount, double density) {\n+    for (final ValueVector vector : (Iterable<ValueVector>) this) {\n+      if (vector instanceof DensityAwareVector) {\n+        ((DensityAwareVector)vector).setInitialCapacity(valueCount, density);\n+      } else {\n+        vector.setInitialCapacity(valueCount);\n+      }\n+    }\n+  }\n+\n   @Override\n   public int getBufferSize() {\n     if (valueCount == 0 || size() == 0) {\ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\nindex 364011729..a7f6d4393 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/RepeatedValueVector.java\n@@ -18,6 +18,7 @@\n \n package org.apache.arrow.vector.complex;\n \n+import org.apache.arrow.vector.DensityAwareVector;\n import org.apache.arrow.vector.UInt4Vector;\n import org.apache.arrow.vector.ValueVector;\n \n@@ -28,7 +29,7 @@\n  * Current design maintains data and offsets vectors. Each cell is stored in the data vector. Repeated vector\n  * uses the offset vector to determine the sequence of cells pertaining to an individual value.\n  */\n-public interface RepeatedValueVector extends ValueVector {\n+public interface RepeatedValueVector extends ValueVector, DensityAwareVector {\n \n   final static int DEFAULT_REPEAT_PER_RECORD = 5;\n \ndiff --git a/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java b/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\nindex 26bb4bbfa..05571bbb9 100644\n--- a/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\n+++ b/java/vector/src/main/java/org/apache/arrow/vector/complex/StructVector.java\n@@ -355,6 +355,12 @@ public void setInitialCapacity(int numRecords) {\n     super.setInitialCapacity(numRecords);\n   }\n \n+  @Override\n+  public void setInitialCapacity(int numRecords, double density) {\n+    validityAllocationSizeInBytes = BitVectorHelper.getValidityBufferSize(numRecords);\n+    super.setInitialCapacity(numRecords, density);\n+  }\n+\n   @Override\n   public boolean allocateNewSafe() {\n     /* Boolean to keep track if all the memory allocations were successful\n@@ -401,6 +407,7 @@ private void reallocValidityBuffer() {\n \n     long newAllocationSize = baseSize * 2L;\n     newAllocationSize = BaseAllocator.nextPowerOfTwo(newAllocationSize);\n+    assert newAllocationSize >= 1;\n \n     if (newAllocationSize > BaseValueVector.MAX_ALLOCATION_SIZE) {\n       throw new OversizedAllocationException(\"Unable to expand the buffer\");\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\nindex d49a677f6..d12586ecc 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestListVector.java\n@@ -811,14 +811,21 @@ public void testSetInitialCapacity() {\n       assertEquals(512, vector.getValueCapacity());\n       assertEquals(8, vector.getDataVector().getValueCapacity());\n \n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n-      } catch (IllegalArgumentException e) {\n-        error = true;\n-      } finally {\n-        assertTrue(error);\n-      }\n+      /**\n+       * inner value capacity we pass to data vector is 5 * 0.1 => 0\n+       * which is then rounded off to 1. So we pass value count as 1\n+       * to the inner int vector.\n+       * the offset buffer of the list vector is allocated for 6 values\n+       * which is 24 bytes and then rounded off to 32 bytes (8 values)\n+       * the validity buffer of the list vector is allocated for 5\n+       * values which is 1 byte. This is why value capacity of the list\n+       * vector is 7 as we take the min of validity buffer value capacity\n+       * and offset buffer value capacity.\n+       */\n+      vector.setInitialCapacity(5, 0.1);\n+      vector.allocateNew();\n+      assertEquals(7, vector.getValueCapacity());\n+      assertEquals(1, vector.getDataVector().getValueCapacity());\n     }\n   }\n }\ndiff --git a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\nindex 992bb6264..5104962e9 100644\n--- a/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n+++ b/java/vector/src/test/java/org/apache/arrow/vector/TestValueVector.java\n@@ -1934,14 +1934,10 @@ public void testSetInitialCapacity() {\n       assertEquals(4096, vector.getValueCapacity());\n       assertEquals(64, vector.getDataBuffer().capacity());\n \n-      boolean error = false;\n-      try {\n-        vector.setInitialCapacity(5, 0.1);\n-      } catch (IllegalArgumentException e) {\n-        error = true;\n-      } finally {\n-        assertTrue(error);\n-      }\n+      vector.setInitialCapacity(5, 0.01);\n+      vector.allocateNew();\n+      assertEquals(7, vector.getValueCapacity());\n+      assertEquals(2, vector.getDataBuffer().capacity());\n     }\n   }\n }\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-05T23:01:21.533+0000",
                    "updated": "2018-03-05T23:01:21.533+0000"
                }
            ],
            "maxResults": 80,
            "total": 80,
            "startAt": 0
        },
        "customfield_12311820": "0|i3qhmn:",
        "customfield_12314139": null
    }
}