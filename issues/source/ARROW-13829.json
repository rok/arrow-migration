{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13398602",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602",
    "key": "ARROW-13829",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334626",
                "id": "12334626",
                "name": "C++ - Gandiva"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jpedroantunes",
            "name": "jpedroantunes",
            "key": "jpedroantunes",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34060",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34060",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34060",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34060"
            },
            "displayName": "Jo\u00e3o Pedro Antunes Ferreira",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9600,
            "total": 9600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13829/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/644802",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-910027516\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T07:45:32.397+0000",
                    "updated": "2021-09-01T07:45:32.397+0000",
                    "started": "2021-09-01T07:45:32.397+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644802",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/644988",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-910027516\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T09:24:08.920+0000",
                    "updated": "2021-09-01T09:24:08.920+0000",
                    "started": "2021-09-01T09:24:08.920+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644988",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/646982",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "projjal commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r702908855\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,6 +101,34 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestGreatestLeast) {\n+  // Comparable functions - Greatest and Least\n+  EXPECT_EQ(greatest_int32_int32(1, 2), 2);\n\nReview comment:\n       can you add some unit tests for other types too?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T13:40:44.697+0000",
                    "updated": "2021-09-06T13:40:44.697+0000",
                    "started": "2021-09-06T13:40:44.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646982",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/648935",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r705802067\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,6 +101,34 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestGreatestLeast) {\n+  // Comparable functions - Greatest and Least\n+  EXPECT_EQ(greatest_int32_int32(1, 2), 2);\n\nReview comment:\n       I added the types int64, float32 and float64 to the unit tests\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-10T00:06:18.961+0000",
                    "updated": "2021-09-10T00:06:18.961+0000",
                    "started": "2021-09-10T00:06:18.961+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "648935",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/672726",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r740294476\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n\nReview comment:\n       Is six maximum for a list?\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n+  FORCE_INLINE                                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(              \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5, \\\n+      gdv_##TYPE in6) {                                                               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                   \\\n\nReview comment:\n       won't the number of assignments reduce if a for loop is used where a reassignment happens only if it is lesser (than greater). Isn't this slightly less performing to use so many tertiary operators?\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,6 +101,121 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestGreatestLeast) {\n+  // Comparable functions - Greatest and Least\n+  EXPECT_EQ(greatest_int32_int32(1, 2), 2);\n+  EXPECT_EQ(greatest_int32_int32(2, 1), 2);\n+  EXPECT_EQ(greatest_int64_int64(1, 2), 2);\n+  EXPECT_EQ(greatest_int64_int64(2, 1), 2);\n+  EXPECT_EQ(greatest_float32_float32(1.0f, 2.0f), 2.0f);\n+  EXPECT_EQ(greatest_float32_float32(2.0f, 1.0f), 2.0f);\n+  EXPECT_EQ(greatest_float64_float64(1.0, 2.0), 2.0);\n+  EXPECT_EQ(greatest_float64_float64(2.0, 1.0), 2.0);\n+  EXPECT_EQ(least_int32_int32(1, 2), 1);\n+  EXPECT_EQ(least_int32_int32(2, 1), 1);\n+  EXPECT_EQ(least_int64_int64(1, 2), 1);\n+  EXPECT_EQ(least_int64_int64(2, 1), 1);\n+  EXPECT_EQ(least_float32_float32(1.0f, 2.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32(2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64(1.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64(2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int32_int32_int32(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_float32_float32_float32(1.0f, 2.0f, 3.0f), 3.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32(3.0f, 2.0f, 1.0f), 3.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64(1.0, 2.0, 3.0), 3.0);\n+  EXPECT_EQ(greatest_float64_float64_float64(3.0, 2.0, 1.0), 3.0);\n+  EXPECT_EQ(least_int32_int32_int32(1, 2, 3), 1);\n+  EXPECT_EQ(least_int32_int32_int32(2, 1, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(1, 2, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(2, 1, 3), 1);\n+  EXPECT_EQ(least_float32_float32_float32(1.0f, 2.0f, 3.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32(3.0f, 2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64(1.0, 2.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64(3.0, 2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 4.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 4.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 4.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 4.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int32_int32_int32_int32(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 5.0f, 4.0f),\n+      5.0f);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(2.0f, 4.0f, 5.0f, 3.0f, 1.0f),\n+      5.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(1.0, 2.0, 3.0, 5.0, 4.0),\n+            5.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(2.0, 4.0, 5.0, 3.0, 1.0),\n+            5.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32_int32(1, 2, 3, 4, -10), -10);\n\nReview comment:\n       maybe a test with INT_MAX and other min/max limits. what about limits for floats? Also, do we have to deal with infinity(), NaN etc for floats? Just a question, as I am not sure..\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T15:36:12.154+0000",
                    "updated": "2021-11-01T15:36:12.154+0000",
                    "started": "2021-11-01T15:36:12.154+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672726",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/673606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r740294476\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n\nReview comment:\n       Is six maximum for a list?\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n+  FORCE_INLINE                                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(              \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5, \\\n+      gdv_##TYPE in6) {                                                               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                   \\\n\nReview comment:\n       won't the number of assignments reduce if a for loop is used where a reassignment happens only if it is lesser (than greater). Isn't this slightly less performing to use so many tertiary operators?\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,6 +101,121 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestGreatestLeast) {\n+  // Comparable functions - Greatest and Least\n+  EXPECT_EQ(greatest_int32_int32(1, 2), 2);\n+  EXPECT_EQ(greatest_int32_int32(2, 1), 2);\n+  EXPECT_EQ(greatest_int64_int64(1, 2), 2);\n+  EXPECT_EQ(greatest_int64_int64(2, 1), 2);\n+  EXPECT_EQ(greatest_float32_float32(1.0f, 2.0f), 2.0f);\n+  EXPECT_EQ(greatest_float32_float32(2.0f, 1.0f), 2.0f);\n+  EXPECT_EQ(greatest_float64_float64(1.0, 2.0), 2.0);\n+  EXPECT_EQ(greatest_float64_float64(2.0, 1.0), 2.0);\n+  EXPECT_EQ(least_int32_int32(1, 2), 1);\n+  EXPECT_EQ(least_int32_int32(2, 1), 1);\n+  EXPECT_EQ(least_int64_int64(1, 2), 1);\n+  EXPECT_EQ(least_int64_int64(2, 1), 1);\n+  EXPECT_EQ(least_float32_float32(1.0f, 2.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32(2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64(1.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64(2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int32_int32_int32(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_float32_float32_float32(1.0f, 2.0f, 3.0f), 3.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32(3.0f, 2.0f, 1.0f), 3.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64(1.0, 2.0, 3.0), 3.0);\n+  EXPECT_EQ(greatest_float64_float64_float64(3.0, 2.0, 1.0), 3.0);\n+  EXPECT_EQ(least_int32_int32_int32(1, 2, 3), 1);\n+  EXPECT_EQ(least_int32_int32_int32(2, 1, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(1, 2, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(2, 1, 3), 1);\n+  EXPECT_EQ(least_float32_float32_float32(1.0f, 2.0f, 3.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32(3.0f, 2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64(1.0, 2.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64(3.0, 2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 4.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 4.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 4.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 4.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int32_int32_int32_int32(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 5.0f, 4.0f),\n+      5.0f);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(2.0f, 4.0f, 5.0f, 3.0f, 1.0f),\n+      5.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(1.0, 2.0, 3.0, 5.0, 4.0),\n+            5.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(2.0, 4.0, 5.0, 3.0, 1.0),\n+            5.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32_int32(1, 2, 3, 4, -10), -10);\n\nReview comment:\n       maybe a test with INT_MAX and other min/max limits. what about limits for floats? Also, do we have to deal with infinity(), NaN etc for floats? Just a question, as I am not sure..\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T18:16:49.201+0000",
                    "updated": "2021-11-02T18:16:49.201+0000",
                    "started": "2021-11-02T18:16:49.200+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673606",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/676870",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r740294476\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n\nReview comment:\n       Is six maximum for a list?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T03:36:15.549+0000",
                    "updated": "2021-11-05T03:36:15.549+0000",
                    "started": "2021-11-05T03:36:15.548+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "676870",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/677495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r740294476\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n\nReview comment:\n       Is six maximum for a list?\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n\nReview comment:\n       Is six maximum for a list?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T20:01:53.918+0000",
                    "updated": "2021-11-05T20:01:53.918+0000",
                    "started": "2021-11-05T20:01:53.917+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677495",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/680565",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r747913905\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n+  FORCE_INLINE                                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(              \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5, \\\n+      gdv_##TYPE in6) {                                                               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                   \\\n\nReview comment:\n       Yes it would be slight more performing but is only possible to loop through the parameters if it was a parameter pack from a variadic function, and I did not know a way to do that in the case above\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T01:09:47.570+0000",
                    "updated": "2021-11-12T01:09:47.570+0000",
                    "started": "2021-11-12T01:09:47.570+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680565",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/680566",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "augustoasilva commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r747916730\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops_test.cc\n##########\n@@ -101,6 +101,121 @@ TEST(TestArithmeticOps, TestDiv) {\n   context.Reset();\n }\n \n+TEST(TestArithmeticOps, TestGreatestLeast) {\n+  // Comparable functions - Greatest and Least\n+  EXPECT_EQ(greatest_int32_int32(1, 2), 2);\n+  EXPECT_EQ(greatest_int32_int32(2, 1), 2);\n+  EXPECT_EQ(greatest_int64_int64(1, 2), 2);\n+  EXPECT_EQ(greatest_int64_int64(2, 1), 2);\n+  EXPECT_EQ(greatest_float32_float32(1.0f, 2.0f), 2.0f);\n+  EXPECT_EQ(greatest_float32_float32(2.0f, 1.0f), 2.0f);\n+  EXPECT_EQ(greatest_float64_float64(1.0, 2.0), 2.0);\n+  EXPECT_EQ(greatest_float64_float64(2.0, 1.0), 2.0);\n+  EXPECT_EQ(least_int32_int32(1, 2), 1);\n+  EXPECT_EQ(least_int32_int32(2, 1), 1);\n+  EXPECT_EQ(least_int64_int64(1, 2), 1);\n+  EXPECT_EQ(least_int64_int64(2, 1), 1);\n+  EXPECT_EQ(least_float32_float32(1.0f, 2.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32(2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64(1.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64(2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int32_int32_int32(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(1, 2, 3), 3);\n+  EXPECT_EQ(greatest_int64_int64_int64(3, 2, 1), 3);\n+  EXPECT_EQ(greatest_float32_float32_float32(1.0f, 2.0f, 3.0f), 3.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32(3.0f, 2.0f, 1.0f), 3.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64(1.0, 2.0, 3.0), 3.0);\n+  EXPECT_EQ(greatest_float64_float64_float64(3.0, 2.0, 1.0), 3.0);\n+  EXPECT_EQ(least_int32_int32_int32(1, 2, 3), 1);\n+  EXPECT_EQ(least_int32_int32_int32(2, 1, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(1, 2, 3), 1);\n+  EXPECT_EQ(least_int64_int64_int64(2, 1, 3), 1);\n+  EXPECT_EQ(least_float32_float32_float32(1.0f, 2.0f, 3.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32(3.0f, 2.0f, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64(1.0, 2.0, 2.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64(3.0, 2.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(1, 2, 3, 4), 4);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64(2, 4, 3, 1), 4);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 4.0f);\n+  EXPECT_EQ(greatest_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 4.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 4.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 4.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int32_int32_int32_int32(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(1, 2, 3, 4), 1);\n+  EXPECT_EQ(least_int64_int64_int64_int64(2, 4, 3, 1), 1);\n+  EXPECT_EQ(least_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 4.0f), 1.0f);\n+  EXPECT_EQ(least_float32_float32_float32_float32(2.0f, 4.0f, 3, 1.0f), 1.0f);\n+  EXPECT_EQ(least_float64_float64_float64_float64(1.0, 2.0, 3.0, 4.0), 1.0);\n+  EXPECT_EQ(least_float64_float64_float64_float64(2.0, 4.0, 3.0, 1.0), 1.0);\n+\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int32_int32_int32_int32_int32(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(1, 2, 3, 5, 4), 5);\n+  EXPECT_EQ(greatest_int64_int64_int64_int64_int64(2, 4, 5, 3, 1), 5);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(1.0f, 2.0f, 3.0f, 5.0f, 4.0f),\n+      5.0f);\n+  EXPECT_EQ(\n+      greatest_float32_float32_float32_float32_float32(2.0f, 4.0f, 5.0f, 3.0f, 1.0f),\n+      5.0f);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(1.0, 2.0, 3.0, 5.0, 4.0),\n+            5.0);\n+  EXPECT_EQ(greatest_float64_float64_float64_float64_float64(2.0, 4.0, 5.0, 3.0, 1.0),\n+            5.0);\n+  EXPECT_EQ(least_int32_int32_int32_int32_int32(1, 2, 3, 4, -10), -10);\n\nReview comment:\n       Added tests for the max and min for each type and for infinity scenarios, regarding NaN I will check that\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-12T01:19:05.630+0000",
                    "updated": "2021-11-12T01:19:05.630+0000",
                    "started": "2021-11-12T01:19:05.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "680566",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/681472",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rkavanap commented on a change in pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#discussion_r749315960\n\n\n\n##########\nFile path: cpp/src/gandiva/precompiled/arithmetic_ops.cc\n##########\n@@ -104,6 +104,69 @@ NUMERIC_DATE_TYPES(BINARY_RELATIONAL, greater_than_or_equal_to, >=)\n \n #undef BINARY_RELATIONAL\n \n+// Returns the greatest or least value from a list of values\n+#define COMPARE_TWO_VALUES(NAME, TYPE, OP)                            \\\n+  FORCE_INLINE                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2) { \\\n+    return (in1 OP in2 ? in1 : in2);                                  \\\n+  }\n+\n+#define COMPARE_THREE_VALUES(NAME, TYPE, OP)                                 \\\n+  FORCE_INLINE                                                               \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2, \\\n+                                             gdv_##TYPE in3) {               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                          \\\n+    return (compared OP in3 ? compared : in3);                               \\\n+  }\n+\n+#define COMPARE_FOUR_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE(gdv_##TYPE in1, gdv_##TYPE in2,   \\\n+                                                      gdv_##TYPE in3, gdv_##TYPE in4) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    return (compared OP in4 ? compared : in4);                                          \\\n+  }\n+\n+#define COMPARE_FIVE_VALUES(NAME, TYPE, OP)                                             \\\n+  FORCE_INLINE                                                                          \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(                         \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5) { \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                     \\\n+    compared = (compared OP in3 ? compared : in3);                                      \\\n+    compared = (compared OP in4 ? compared : in4);                                      \\\n+    return (compared OP in5 ? compared : in5);                                          \\\n+  }\n+\n+#define COMPARE_SIX_VALUES(NAME, TYPE, OP)                                            \\\n+  FORCE_INLINE                                                                        \\\n+  gdv_##TYPE NAME##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE##_##TYPE(              \\\n+      gdv_##TYPE in1, gdv_##TYPE in2, gdv_##TYPE in3, gdv_##TYPE in4, gdv_##TYPE in5, \\\n+      gdv_##TYPE in6) {                                                               \\\n+    gdv_##TYPE compared = (in1 OP in2 ? in1 : in2);                                   \\\n\nReview comment:\n       ok\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-15T13:14:57.925+0000",
                    "updated": "2021-11-15T13:14:57.925+0000",
                    "started": "2021-11-15T13:14:57.924+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "681472",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/689063",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pravindra closed pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T07:05:55.538+0000",
                    "updated": "2021-12-02T07:05:55.538+0000",
                    "started": "2021-12-02T07:05:55.538+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689063",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/689064",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot commented on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-984348465\n\n\n   Benchmark runs are scheduled for baseline = f36451f8e019c152f55a5bb8538d2285d2b7b25d and contender = 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924. 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Scheduled] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7313c6335dee4fe284fb340ec9596f2d...9ea0d27f359141269547f78811fdc597/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f096d54632614727907ede0305e8816e...4dfd9045708d4be1a9a667037875ba97/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/a92829274ad24e6490804f026017525a...caad965ae0fd4d43ab23298e9e76de86/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T07:06:38.640+0000",
                    "updated": "2021-12-02T07:06:38.640+0000",
                    "started": "2021-12-02T07:06:38.640+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689064",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/689065",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-984348465\n\n\n   Benchmark runs are scheduled for baseline = f36451f8e019c152f55a5bb8538d2285d2b7b25d and contender = 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924. 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7313c6335dee4fe284fb340ec9596f2d...9ea0d27f359141269547f78811fdc597/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f096d54632614727907ede0305e8816e...4dfd9045708d4be1a9a667037875ba97/)\n   [Scheduled] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/a92829274ad24e6490804f026017525a...caad965ae0fd4d43ab23298e9e76de86/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T07:16:25.459+0000",
                    "updated": "2021-12-02T07:16:25.459+0000",
                    "started": "2021-12-02T07:16:25.459+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689065",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/689559",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-984348465\n\n\n   Benchmark runs are scheduled for baseline = f36451f8e019c152f55a5bb8538d2285d2b7b25d and contender = 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924. 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7313c6335dee4fe284fb340ec9596f2d...9ea0d27f359141269547f78811fdc597/)\n   [Scheduled] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f096d54632614727907ede0305e8816e...4dfd9045708d4be1a9a667037875ba97/)\n   [Finished :arrow_down:0.22% :arrow_up:0.09%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/a92829274ad24e6490804f026017525a...caad965ae0fd4d43ab23298e9e76de86/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T19:15:36.810+0000",
                    "updated": "2021-12-02T19:15:36.810+0000",
                    "started": "2021-12-02T19:15:36.810+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689559",
                    "issueId": "13398602"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/worklog/689597",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ursabot edited a comment on pull request #11053:\nURL: https://github.com/apache/arrow/pull/11053#issuecomment-984348465\n\n\n   Benchmark runs are scheduled for baseline = f36451f8e019c152f55a5bb8538d2285d2b7b25d and contender = 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924. 6d3fb1a4b90c55ebf7db2446a49c7c30ee3a8924 is a master commit associated with this PR. Results will be available as each benchmark for each run completes.\n   Conbench compare runs links:\n   [Finished :arrow_down:0.0% :arrow_up:0.0%] [ec2-t3-xlarge-us-east-2](https://conbench.ursa.dev/compare/runs/7313c6335dee4fe284fb340ec9596f2d...9ea0d27f359141269547f78811fdc597/)\n   [Finished :arrow_down:0.45% :arrow_up:0.0%] [ursa-i9-9960x](https://conbench.ursa.dev/compare/runs/f096d54632614727907ede0305e8816e...4dfd9045708d4be1a9a667037875ba97/)\n   [Finished :arrow_down:0.22% :arrow_up:0.09%] [ursa-thinkcentre-m75q](https://conbench.ursa.dev/compare/runs/a92829274ad24e6490804f026017525a...caad965ae0fd4d43ab23298e9e76de86/)\n   Supported benchmarks:\n   ursa-i9-9960x: langs = Python, R, JavaScript\n   ursa-thinkcentre-m75q: langs = C++, Java\n   ec2-t3-xlarge-us-east-2: cloud = True\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-12-02T20:39:25.866+0000",
                    "updated": "2021-12-02T20:39:25.866+0000",
                    "started": "2021-12-02T20:39:25.866+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "689597",
                    "issueId": "13398602"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/3",
            "id": "3",
            "description": "A task that needs to be done.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21148&avatarType=issuetype",
            "name": "Task",
            "subtask": false,
            "avatarId": 21148
        },
        "timespent": 9600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@61b36ac0[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5329539c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c79609b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2555613b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@58eda897[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@29c57568[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e4fb573[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@501d4b38[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6501e8bc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@676dbf41[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@442a7af2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7e54adc4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9600,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Dec 02 07:05:47 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-12-02T07:05:47.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13829/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2021-09-01T07:43:43.000+0000",
        "updated": "2021-12-02T20:39:26.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Gandiva] Implement GREATEST and LEAST Hive function on Gandiva",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13398602/comment/17452208",
                    "id": "17452208",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "body": "Issue resolved by pull request 11053\n[https://github.com/apache/arrow/pull/11053]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=pravindra",
                        "name": "pravindra",
                        "key": "pravindra",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34055",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34055",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34055",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34055"
                        },
                        "displayName": "Pindikura Ravindra",
                        "active": true,
                        "timeZone": "Asia/Kolkata"
                    },
                    "created": "2021-12-02T07:05:47.332+0000",
                    "updated": "2021-12-02T07:05:47.332+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0uhdc:",
        "customfield_12314139": null
    }
}