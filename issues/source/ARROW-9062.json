{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13310039",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039",
    "key": "ARROW-9062",
    "fields": {
        "parent": {
            "id": "13215112",
            "key": "ARROW-4534",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13215112",
            "fields": {
                "summary": "[Rust] Build JSON reader for reading record batches from line-delimited JSON files",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sven.wagner-boysen",
            "name": "sven.wagner-boysen",
            "key": "sven.wagner-boysen",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sven Wagner-Boysen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=sven.wagner-boysen",
            "name": "sven.wagner-boysen",
            "key": "sven.wagner-boysen",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Sven Wagner-Boysen",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 4200,
            "total": 4200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9062/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 7,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/442688",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379#issuecomment-640885205\n\n\n   https://issues.apache.org/jira/browse/ARROW-9062\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T15:48:09.562+0000",
                    "updated": "2020-06-09T15:48:09.562+0000",
                    "started": "2020-06-09T15:48:09.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "442688",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/443068",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vertexclique commented on a change in pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379#discussion_r437210110\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -448,42 +453,55 @@ impl<R: Read> Reader<R> {\n                             let mut builder = ListBuilder::new(values_builder);\n                             for row in rows {\n                                 if let Some(value) = row.get(field.name()) {\n-                                        // value can be an array or a scalar\n-                                        let vals: Vec<Option<String>> = if let Value::String(v) = value {\n-                                            vec![Some(v.to_string())]\n-                                        } else if let Value::Array(n) = value {\n-                                            n.iter().map(|v: &Value| {\n-                                                if v.is_string() {\n-                                                    Some(v.as_str().unwrap().to_string())\n-                                                } else if v.is_array() || v.is_object() {\n-                                                    // implicitly drop nested values\n-                                                    // TODO support deep-nesting\n-                                                    None\n-                                                } else {\n-                                                    Some(v.to_string())\n-                                                }\n-                                            }).collect()\n-                                        } else if let Value::Null = value {\n-                                            vec![None]\n-                                        } else if !value.is_object() {\n-                                            vec![Some(value.to_string())]\n+                                    // value can be an array or a scalar\n+                                    let vals: Vec<Option<String>> = if let Value::String(v) = value {\n+                                        vec![Some(v.to_string())]\n+                                    } else if let Value::Array(n) = value {\n+                                        n.iter().map(|v: &Value| {\n+                                            if v.is_string() {\n+                                                Some(v.as_str().unwrap().to_string())\n+                                            } else if v.is_array() || v.is_object() {\n+                                                // implicitly drop nested values\n+                                                // TODO support deep-nesting\n+                                                None\n+                                            } else {\n+                                                Some(v.to_string())\n+                                            }\n+                                        }).collect()\n+                                    } else if let Value::Null = value {\n+                                        vec![None]\n+                                    } else if !value.is_object() {\n+                                        vec![Some(value.to_string())]\n+                                    } else {\n+                                        return Err(ArrowError::JsonError(\"Only scalars are currently supported in JSON arrays\".to_string()));\n+                                    };\n\nReview comment:\n       Better to write a match statements to make it readable.\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -621,6 +639,32 @@ impl<R: Read> Reader<R> {\n         }\n         Ok(Arc::new(builder.finish()))\n     }\n+\n+    fn build_dictionary_array<T: ArrowPrimitiveType>(\n+        &self,\n+        rows: &[Value],\n+        col_name: &str,\n+    ) -> Result<ArrayRef>\n+    where\n+        T::Native: num::NumCast,\n+        T: ArrowDictionaryKeyType,\n+    {\n+        let key_builder = PrimitiveBuilder::<T>::new(rows.len());\n+        let value_builder = StringBuilder::new(100);\n+        let mut builder = StringDictionaryBuilder::new(key_builder, value_builder);\n+        for row in rows {\n+            if let Some(value) = row.get(&col_name) {\n+                if let Some(str_v) = value.as_str() {\n+                    builder.append(str_v).map(|_| ())?\n+                } else {\n+                    builder.append_null()?\n+                }\n\nReview comment:\n       map_or_else\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -621,6 +639,32 @@ impl<R: Read> Reader<R> {\n         }\n         Ok(Arc::new(builder.finish()))\n     }\n+\n+    fn build_dictionary_array<T: ArrowPrimitiveType>(\n+        &self,\n+        rows: &[Value],\n+        col_name: &str,\n+    ) -> Result<ArrayRef>\n+    where\n+        T::Native: num::NumCast,\n+        T: ArrowDictionaryKeyType,\n+    {\n+        let key_builder = PrimitiveBuilder::<T>::new(rows.len());\n+        let value_builder = StringBuilder::new(100);\n+        let mut builder = StringDictionaryBuilder::new(key_builder, value_builder);\n+        for row in rows {\n+            if let Some(value) = row.get(&col_name) {\n+                if let Some(str_v) = value.as_str() {\n+                    builder.append(str_v).map(|_| ())?\n+                } else {\n+                    builder.append_null()?\n+                }\n+            } else {\n+                builder.append_null()?\n+            }\n\nReview comment:\n       map_or_else can be here too.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T16:28:29.921+0000",
                    "updated": "2020-06-09T16:28:29.921+0000",
                    "started": "2020-06-09T16:28:29.921+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443068",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/443071",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "svenwb opened a new pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379\n\n\n   Changes in this PR allow the JSON Reader to read into Arrow arrays of type dictionary.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-09T16:28:55.121+0000",
                    "updated": "2020-06-09T16:28:55.121+0000",
                    "started": "2020-06-09T16:28:55.120+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443071",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/443629",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "svenwb commented on a change in pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379#discussion_r437992880\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -448,42 +453,55 @@ impl<R: Read> Reader<R> {\n                             let mut builder = ListBuilder::new(values_builder);\n                             for row in rows {\n                                 if let Some(value) = row.get(field.name()) {\n-                                        // value can be an array or a scalar\n-                                        let vals: Vec<Option<String>> = if let Value::String(v) = value {\n-                                            vec![Some(v.to_string())]\n-                                        } else if let Value::Array(n) = value {\n-                                            n.iter().map(|v: &Value| {\n-                                                if v.is_string() {\n-                                                    Some(v.as_str().unwrap().to_string())\n-                                                } else if v.is_array() || v.is_object() {\n-                                                    // implicitly drop nested values\n-                                                    // TODO support deep-nesting\n-                                                    None\n-                                                } else {\n-                                                    Some(v.to_string())\n-                                                }\n-                                            }).collect()\n-                                        } else if let Value::Null = value {\n-                                            vec![None]\n-                                        } else if !value.is_object() {\n-                                            vec![Some(value.to_string())]\n+                                    // value can be an array or a scalar\n\nReview comment:\n       This was only changed by the formatter\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T09:36:24.218+0000",
                    "updated": "2020-06-10T09:36:24.218+0000",
                    "started": "2020-06-10T09:36:24.218+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443629",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/443630",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "svenwb commented on a change in pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379#discussion_r437995071\n\n\n\n##########\nFile path: rust/arrow/src/json/reader.rs\n##########\n@@ -448,42 +453,55 @@ impl<R: Read> Reader<R> {\n                             let mut builder = ListBuilder::new(values_builder);\n                             for row in rows {\n                                 if let Some(value) = row.get(field.name()) {\n-                                        // value can be an array or a scalar\n-                                        let vals: Vec<Option<String>> = if let Value::String(v) = value {\n-                                            vec![Some(v.to_string())]\n-                                        } else if let Value::Array(n) = value {\n-                                            n.iter().map(|v: &Value| {\n-                                                if v.is_string() {\n-                                                    Some(v.as_str().unwrap().to_string())\n-                                                } else if v.is_array() || v.is_object() {\n-                                                    // implicitly drop nested values\n-                                                    // TODO support deep-nesting\n-                                                    None\n-                                                } else {\n-                                                    Some(v.to_string())\n-                                                }\n-                                            }).collect()\n-                                        } else if let Value::Null = value {\n-                                            vec![None]\n-                                        } else if !value.is_object() {\n-                                            vec![Some(value.to_string())]\n+                                    // value can be an array or a scalar\n+                                    let vals: Vec<Option<String>> = if let Value::String(v) = value {\n+                                        vec![Some(v.to_string())]\n+                                    } else if let Value::Array(n) = value {\n+                                        n.iter().map(|v: &Value| {\n+                                            if v.is_string() {\n+                                                Some(v.as_str().unwrap().to_string())\n+                                            } else if v.is_array() || v.is_object() {\n+                                                // implicitly drop nested values\n+                                                // TODO support deep-nesting\n+                                                None\n+                                            } else {\n+                                                Some(v.to_string())\n+                                            }\n+                                        }).collect()\n+                                    } else if let Value::Null = value {\n+                                        vec![None]\n+                                    } else if !value.is_object() {\n+                                        vec![Some(value.to_string())]\n+                                    } else {\n+                                        return Err(ArrowError::JsonError(\"Only scalars are currently supported in JSON arrays\".to_string()));\n+                                    };\n\nReview comment:\n       As this code was only changed by the formatter I would suggest to make this refactoring in different PR.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-10T09:40:14.347+0000",
                    "updated": "2020-06-10T09:40:14.347+0000",
                    "started": "2020-06-10T09:40:14.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "443630",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/444764",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "svenwb commented on pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379#issuecomment-643149155\n\n\n   Hey @nevi-me as @vertexclique approved as well, can you merge this? Or how shall we proceed? Thanks, Sven\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-12T08:36:24.788+0000",
                    "updated": "2020-06-12T08:36:24.788+0000",
                    "started": "2020-06-12T08:36:24.788+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "444764",
                    "issueId": "13310039"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/worklog/444825",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #7379:\nURL: https://github.com/apache/arrow/pull/7379\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-06-12T12:07:52.352+0000",
                    "updated": "2020-06-12T12:07:52.352+0000",
                    "started": "2020-06-12T12:07:52.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "444825",
                    "issueId": "13310039"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 4200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5d752437[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5924c886[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4e241c4a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@313b8df0[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7470c90d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@68f595f9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@65d02e1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6be44bd7[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@19aedf07[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@5db0db96[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@339490cb[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a67df9d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 4200,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Jun 12 12:07:46 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-06-12T12:07:46.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9062/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-06-08T07:15:34.000+0000",
        "updated": "2020-06-12T12:07:53.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently a JSON reader build from a schema using the type dictionary for one of the fields in the schema will fail with\u00a0JsonError(\"struct types are not yet supported\")\r\n{code:java}\r\nlet builder = ReaderBuilder::new().with_schema(..)\r\nlet mut reader: Reader<File> = builder.build::<File>(File::open(path).unwrap()).unwrap();\r\nlet rb = reader.next().unwrap()\r\n\r\n{code}\r\n\u00a0\r\n\r\nSuggested solution:\r\n\r\nSupport reading into a dictionary in Json Reader:\u00a0[https://github.com/apache/arrow/blob/master/rust/arrow/src/json/reader.rs#L368]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 4200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Support to read JSON into dictionary type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13310039/comment/17134162",
                    "id": "17134162",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 7379\n[https://github.com/apache/arrow/pull/7379]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-06-12T12:07:46.862+0000",
                    "updated": "2020-06-12T12:07:46.862+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0fm00:",
        "customfield_12314139": null
    }
}