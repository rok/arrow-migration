{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13199120",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199120",
    "key": "ARROW-3830",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343858",
                "id": "12343858",
                "description": "",
                "name": "0.12.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-01-20"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332430",
                "id": "12332430",
                "name": "GLib"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
            "name": "kou",
            "key": "kou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
            },
            "displayName": "Kouhei Sutou",
            "active": true,
            "timeZone": "Asia/Tokyo"
        },
        "aggregateprogress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 1200,
            "total": 1200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3830/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 2,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199120/worklog/167212",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou opened a new pull request #2987: ARROW-3830: [GLib] Add GArrowCodec\nURL: https://github.com/apache/arrow/pull/2987\n \n \n   \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-17T22:42:56.494+0000",
                    "updated": "2018-11-17T22:42:56.494+0000",
                    "started": "2018-11-17T22:42:56.493+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167212",
                    "issueId": "13199120"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199120/worklog/167229",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "shiro615 closed pull request #2987: ARROW-3830: [GLib] Add GArrowCodec\nURL: https://github.com/apache/arrow/pull/2987\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/c_glib/arrow-glib/Makefile.am b/c_glib/arrow-glib/Makefile.am\nindex bc9fceec07..bf97168eb8 100644\n--- a/c_glib/arrow-glib/Makefile.am\n+++ b/c_glib/arrow-glib/Makefile.am\n@@ -54,6 +54,7 @@ libarrow_glib_la_headers =\t\t\t\\\n \tbasic-data-type.h\t\t\t\\\n \tbuffer.h\t\t\t\t\\\n \tchunked-array.h\t\t\t\t\\\n+\tcodec.h\t\t\t\t\t\\\n \tcolumn.h\t\t\t\t\\\n \tcomposite-array.h\t\t\t\\\n \tcomposite-data-type.h\t\t\t\\\n@@ -105,6 +106,7 @@ libarrow_glib_la_sources =\t\t\t\\\n \tbasic-data-type.cpp\t\t\t\\\n \tbuffer.cpp\t\t\t\t\\\n \tchunked-array.cpp\t\t\t\\\n+\tcodec.cpp\t\t\t\t\\\n \tcolumn.cpp\t\t\t\t\\\n \tcomposite-array.cpp\t\t\t\\\n \tcomposite-data-type.cpp\t\t\t\\\n@@ -150,6 +152,7 @@ libarrow_glib_la_cpp_headers =\t\t\t\\\n \tbasic-data-type.hpp\t\t\t\\\n \tbuffer.hpp\t\t\t\t\\\n \tchunked-array.hpp\t\t\t\\\n+\tcodec.hpp\t\t\t\t\\\n \tcolumn.hpp\t\t\t\t\\\n \tdata-type.hpp\t\t\t\t\\\n \tdecimal.hpp\t\t\t\t\\\ndiff --git a/c_glib/arrow-glib/arrow-glib.h b/c_glib/arrow-glib/arrow-glib.h\nindex 492193961c..2a4de13f2d 100644\n--- a/c_glib/arrow-glib/arrow-glib.h\n+++ b/c_glib/arrow-glib/arrow-glib.h\n@@ -25,6 +25,7 @@\n #include <arrow-glib/array.h>\n #include <arrow-glib/array-builder.h>\n #include <arrow-glib/chunked-array.h>\n+#include <arrow-glib/codec.h>\n #include <arrow-glib/column.h>\n #include <arrow-glib/compute.h>\n #include <arrow-glib/data-type.h>\ndiff --git a/c_glib/arrow-glib/arrow-glib.hpp b/c_glib/arrow-glib/arrow-glib.hpp\nindex 18e992597c..ac8563cb54 100644\n--- a/c_glib/arrow-glib/arrow-glib.hpp\n+++ b/c_glib/arrow-glib/arrow-glib.hpp\n@@ -25,6 +25,7 @@\n #include <arrow-glib/array-builder.hpp>\n #include <arrow-glib/buffer.hpp>\n #include <arrow-glib/chunked-array.hpp>\n+#include <arrow-glib/codec.hpp>\n #include <arrow-glib/column.hpp>\n #include <arrow-glib/data-type.hpp>\n #include <arrow-glib/error.hpp>\ndiff --git a/c_glib/arrow-glib/codec.cpp b/c_glib/arrow-glib/codec.cpp\nnew file mode 100644\nindex 0000000000..205ae89a3c\n--- /dev/null\n+++ b/c_glib/arrow-glib/codec.cpp\n@@ -0,0 +1,224 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#ifdef HAVE_CONFIG_H\n+#  include <config.h>\n+#endif\n+\n+#include <arrow-glib/codec.hpp>\n+#include <arrow-glib/error.hpp>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * SECTION: codec\n+ * @title: Codec related type and class\n+ * @include: arrow-glib/arrow-glib.h\n+ *\n+ * #GArrowCompressionType provides compression types corresponding to\n+ * `arrow::Compression::type`.\n+ *\n+ * #GArrowCocec is a class for compressing and decompressing data.\n+ */\n+\n+typedef struct GArrowCodecPrivate_ {\n+  arrow::util::Codec *codec;\n+} GArrowCodecPrivate;\n+\n+enum {\n+  PROP_CODEC = 1\n+};\n+\n+G_DEFINE_TYPE_WITH_PRIVATE(GArrowCodec, garrow_codec, G_TYPE_OBJECT)\n+\n+#define GARROW_CODEC_GET_PRIVATE(object)        \\\n+  static_cast<GArrowCodecPrivate *>(            \\\n+    garrow_codec_get_instance_private(          \\\n+      GARROW_CODEC(object)))\n+\n+static void\n+garrow_codec_finalize(GObject *object)\n+{\n+  auto priv = GARROW_CODEC_GET_PRIVATE(object);\n+\n+  delete priv->codec;\n+\n+  G_OBJECT_CLASS(garrow_codec_parent_class)->finalize(object);\n+}\n+\n+static void\n+garrow_codec_set_property(GObject *object,\n+                          guint prop_id,\n+                          const GValue *value,\n+                          GParamSpec *pspec)\n+{\n+  auto priv = GARROW_CODEC_GET_PRIVATE(object);\n+\n+  switch (prop_id) {\n+  case PROP_CODEC:\n+    priv->codec = static_cast<arrow::util::Codec *>(g_value_get_pointer(value));\n+    break;\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_codec_get_property(GObject *object,\n+                          guint prop_id,\n+                          GValue *value,\n+                          GParamSpec *pspec)\n+{\n+  switch (prop_id) {\n+  default:\n+    G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);\n+    break;\n+  }\n+}\n+\n+static void\n+garrow_codec_init(GArrowCodec *object)\n+{\n+}\n+\n+static void\n+garrow_codec_class_init(GArrowCodecClass *klass)\n+{\n+  GParamSpec *spec;\n+\n+  auto gobject_class = G_OBJECT_CLASS(klass);\n+\n+  gobject_class->finalize     = garrow_codec_finalize;\n+  gobject_class->set_property = garrow_codec_set_property;\n+  gobject_class->get_property = garrow_codec_get_property;\n+\n+  spec = g_param_spec_pointer(\"codec\",\n+                              \"Codec\",\n+                              \"The raw arrow::util::Codec *\",\n+                              static_cast<GParamFlags>(G_PARAM_WRITABLE |\n+                                                       G_PARAM_CONSTRUCT_ONLY));\n+  g_object_class_install_property(gobject_class, PROP_CODEC, spec);\n+}\n+\n+/**\n+ * garrow_codec_new:\n+ * @type: A #GArrowCodompressionType.\n+ * @error: (nullable): Return location for a #GError or %NULL.\n+ *\n+ * Returns: A newly created #GArrowCodec on success, %NULL on error.\n+ *\n+ * Since: 0.12.0\n+ */\n+GArrowCodec *\n+garrow_codec_new(GArrowCompressionType type,\n+                 GError **error)\n+{\n+  auto arrow_type = garrow_compression_type_to_raw(type);\n+  std::unique_ptr<arrow::util::Codec> arrow_codec;\n+  auto status = arrow::util::Codec::Create(arrow_type, &arrow_codec);\n+  if (garrow_error_check(error, status, \"[codec][new]\")) {\n+    return garrow_codec_new_raw(arrow_codec.release());\n+  } else {\n+    return NULL;\n+  }\n+}\n+\n+/**\n+ * garrow_codec_get_name:\n+ * @codec: A #GArrowCodec.\n+ *\n+ * Returns: The name of the codec.\n+ *\n+ * Since: 0.12.0\n+ */\n+const gchar *\n+garrow_codec_get_name(GArrowCodec *codec)\n+{\n+  auto arrow_codec = garrow_codec_get_raw(codec);\n+  return arrow_codec->name();\n+}\n+\n+G_END_DECLS\n+\n+GArrowCompressionType\n+garrow_compression_type_from_raw(arrow::Compression::type arrow_type)\n+{\n+  switch (arrow_type) {\n+  case arrow::Compression::type::UNCOMPRESSED:\n+    return GARROW_COMPRESSION_TYPE_UNCOMPRESSED;\n+  case arrow::Compression::type::SNAPPY:\n+    return GARROW_COMPRESSION_TYPE_SNAPPY;\n+  case arrow::Compression::type::GZIP:\n+    return GARROW_COMPRESSION_TYPE_GZIP;\n+  case arrow::Compression::type::BROTLI:\n+    return GARROW_COMPRESSION_TYPE_BROTLI;\n+  case arrow::Compression::type::ZSTD:\n+    return GARROW_COMPRESSION_TYPE_ZSTD;\n+  case arrow::Compression::type::LZ4:\n+    return GARROW_COMPRESSION_TYPE_LZ4;\n+  case arrow::Compression::type::LZO:\n+    return GARROW_COMPRESSION_TYPE_LZO;\n+  case arrow::Compression::type::BZ2:\n+    return GARROW_COMPRESSION_TYPE_BZ2;\n+  default:\n+    return GARROW_COMPRESSION_TYPE_UNCOMPRESSED;\n+  }\n+}\n+\n+arrow::Compression::type\n+garrow_compression_type_to_raw(GArrowCompressionType type)\n+{\n+  switch (type) {\n+  case GARROW_COMPRESSION_TYPE_UNCOMPRESSED:\n+    return arrow::Compression::type::UNCOMPRESSED;\n+  case GARROW_COMPRESSION_TYPE_SNAPPY:\n+    return arrow::Compression::type::SNAPPY;\n+  case GARROW_COMPRESSION_TYPE_GZIP:\n+    return arrow::Compression::type::GZIP;\n+  case GARROW_COMPRESSION_TYPE_BROTLI:\n+    return arrow::Compression::type::BROTLI;\n+  case GARROW_COMPRESSION_TYPE_ZSTD:\n+    return arrow::Compression::type::ZSTD;\n+  case GARROW_COMPRESSION_TYPE_LZ4:\n+    return arrow::Compression::type::LZ4;\n+  case GARROW_COMPRESSION_TYPE_LZO:\n+    return arrow::Compression::type::LZO;\n+  case GARROW_COMPRESSION_TYPE_BZ2:\n+    return arrow::Compression::type::BZ2;\n+  default:\n+    return arrow::Compression::type::UNCOMPRESSED;\n+  }\n+}\n+\n+GArrowCodec *\n+garrow_codec_new_raw(arrow::util::Codec *arrow_codec)\n+{\n+  auto codec = GARROW_CODEC(g_object_new(GARROW_TYPE_CODEC,\n+                                         \"codec\", arrow_codec,\n+                                         NULL));\n+  return codec;\n+}\n+\n+arrow::util::Codec *\n+garrow_codec_get_raw(GArrowCodec *codec)\n+{\n+  auto priv = GARROW_CODEC_GET_PRIVATE(codec);\n+  return priv->codec;\n+}\ndiff --git a/c_glib/arrow-glib/codec.h b/c_glib/arrow-glib/codec.h\nnew file mode 100644\nindex 0000000000..5feab2b7d4\n--- /dev/null\n+++ b/c_glib/arrow-glib/codec.h\n@@ -0,0 +1,67 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#pragma once\n+\n+#include <arrow-glib/gobject-type.h>\n+\n+G_BEGIN_DECLS\n+\n+/**\n+ * GArrowCompressionType:\n+ * @GARROW_COMPRESSION_TYPE_UNCOMPRESSED: Not compressed.\n+ * @GARROW_COMPRESSION_TYPE_SNAPPY: Snappy compression.\n+ * @GARROW_COMPRESSION_TYPE_GZIP: gzip compression.\n+ * @GARROW_COMPRESSION_TYPE_BROTLI: Brotli compression.\n+ * @GARROW_COMPRESSION_TYPE_ZSTD: Zstandard compression.\n+ * @GARROW_COMPRESSION_TYPE_LZ4: LZ4 compression.\n+ * @GARROW_COMPRESSION_TYPE_LZO: LZO compression.\n+ * @GARROW_COMPRESSION_TYPE_BZ2: bzip2 compression.\n+ *\n+ * They are corresponding to `arrow::Compression::type` values.\n+ */\n+typedef enum {\n+  GARROW_COMPRESSION_TYPE_UNCOMPRESSED,\n+  GARROW_COMPRESSION_TYPE_SNAPPY,\n+  GARROW_COMPRESSION_TYPE_GZIP,\n+  GARROW_COMPRESSION_TYPE_BROTLI,\n+  GARROW_COMPRESSION_TYPE_ZSTD,\n+  GARROW_COMPRESSION_TYPE_LZ4,\n+  GARROW_COMPRESSION_TYPE_LZO,\n+  GARROW_COMPRESSION_TYPE_BZ2\n+} GArrowCompressionType;\n+\n+\n+#define GARROW_TYPE_CODEC (garrow_codec_get_type())\n+G_DECLARE_DERIVABLE_TYPE(GArrowCodec,\n+                         garrow_codec,\n+                         GARROW,\n+                         CODEC,\n+                         GObject)\n+struct _GArrowCodecClass\n+{\n+  GObjectClass parent_class;\n+};\n+\n+GArrowCodec *garrow_codec_new(GArrowCompressionType type,\n+                              GError **error);\n+\n+const gchar *garrow_codec_get_name(GArrowCodec *codec);\n+\n+G_END_DECLS\ndiff --git a/c_glib/arrow-glib/codec.hpp b/c_glib/arrow-glib/codec.hpp\nnew file mode 100644\nindex 0000000000..14c3ad77cc\n--- /dev/null\n+++ b/c_glib/arrow-glib/codec.hpp\n@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+#pragma once\n+\n+#include <arrow/util/compression.h>\n+\n+#include <arrow-glib/codec.h>\n+\n+GArrowCompressionType\n+garrow_compression_type_from_raw(arrow::Compression::type arrow_type);\n+arrow::Compression::type\n+garrow_compression_type_to_raw(GArrowCompressionType type);\n+\n+GArrowCodec *\n+garrow_codec_new_raw(arrow::util::Codec *arrow_codec);\n+arrow::util::Codec *\n+garrow_codec_get_raw(GArrowCodec *codec);\ndiff --git a/c_glib/arrow-glib/meson.build b/c_glib/arrow-glib/meson.build\nindex b290039d1e..d962ec1031 100644\n--- a/c_glib/arrow-glib/meson.build\n+++ b/c_glib/arrow-glib/meson.build\n@@ -23,6 +23,7 @@ sources = files(\n   'basic-data-type.cpp',\n   'buffer.cpp',\n   'chunked-array.cpp',\n+  'codec.cpp',\n   'column.cpp',\n   'composite-array.cpp',\n   'composite-data-type.cpp',\n@@ -71,6 +72,7 @@ c_headers = files(\n   'basic-data-type.h',\n   'buffer.h',\n   'chunked-array.h',\n+  'codec.h',\n   'column.h',\n   'composite-array.h',\n   'composite-data-type.h',\n@@ -123,6 +125,7 @@ cpp_headers = files(\n   'basic-data-type.hpp',\n   'buffer.hpp',\n   'chunked-array.hpp',\n+  'codec.hpp',\n   'column.hpp',\n   'data-type.hpp',\n   'decimal.hpp',\ndiff --git a/c_glib/doc/arrow-glib/arrow-glib-docs.xml b/c_glib/doc/arrow-glib/arrow-glib-docs.xml\nindex 948a321a17..17b75005ff 100644\n--- a/c_glib/doc/arrow-glib/arrow-glib-docs.xml\n+++ b/c_glib/doc/arrow-glib/arrow-glib-docs.xml\n@@ -85,6 +85,10 @@\n       <title>Buffer</title>\n       <xi:include href=\"xml/buffer.xml\"/>\n     </chapter>\n+    <chapter id=\"codec\">\n+      <title>Codec</title>\n+      <xi:include href=\"xml/codec.xml\"/>\n+    </chapter>\n     <chapter id=\"error\">\n       <title>Error</title>\n       <xi:include href=\"xml/error.xml\"/>\ndiff --git a/c_glib/test/test-codec.rb b/c_glib/test/test-codec.rb\nnew file mode 100644\nindex 0000000000..6617815df9\n--- /dev/null\n+++ b/c_glib/test/test-codec.rb\n@@ -0,0 +1,23 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+class TestCodec < Test::Unit::TestCase\n+  def test_name\n+    codec = Arrow::Codec.new(:gzip)\n+    assert_equal(\"gzip\", codec.name)\n+  end\n+end\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-11-18T11:31:59.043+0000",
                    "updated": "2018-11-18T11:31:59.043+0000",
                    "started": "2018-11-18T11:31:59.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "167229",
                    "issueId": "13199120"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 1200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@40acaf42[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7dadc923[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3ace92e0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@2939a04b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21a0a48[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7210d8d9[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3c070de9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@58d8d9da[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@a42d0c3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7ee00742[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7a0c3532[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@648425a0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 1200,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Nov 18 11:32:33 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-11-18T11:32:33.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-3830/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2018-11-17T22:39:07.000+0000",
        "updated": "2018-11-18T11:32:33.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 1200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[GLib] Add GArrowCodec",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13199120/comment/16690869",
                    "id": "16690869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 2987\n[https://github.com/apache/arrow/pull/2987]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=shiro615",
                        "name": "shiro615",
                        "key": "shiro615",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34043",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34043",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34043",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34043"
                        },
                        "displayName": "Yosuke Shiro",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-11-18T11:32:33.604+0000",
                    "updated": "2018-11-18T11:32:33.604+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|s00m88:",
        "customfield_12314139": null
    }
}