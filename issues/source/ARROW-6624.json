{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13257764",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764",
    "key": "ARROW-6624",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12340948",
                "id": "12340948",
                "description": "",
                "name": "0.16.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-02-07"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/4",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/minor.svg",
            "name": "Minor",
            "id": "4"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=rokm",
            "name": "rokm",
            "key": "rokm",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Rok Mihevc",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6624/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 28,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/320092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5539: [WIP] ARROW-6624: [C++] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539\n \n \n   This is to solve [ARROW-6624](https://issues.apache.org/jira/browse/ARROW-6624).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-09-29T00:59:25.011+0000",
                    "updated": "2019-09-29T00:59:25.011+0000",
                    "started": "2019-09-29T00:59:25.010+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "320092",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/326638",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on issue #5539: ARROW-6624: [C++] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-540842946\n \n \n   https://issues.apache.org/jira/browse/ARROW-6624\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-10T23:45:48.783+0000",
                    "updated": "2019-10-10T23:45:48.783+0000",
                    "started": "2019-10-10T23:45:48.782+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "326638",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/326643",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #5539: ARROW-6624: [C++] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-540844220\n \n \n   @mrkn we discussed this earlier (https://github.com/apache/arrow/pull/4446#issuecomment-503792308). Can you please review if this proposal makes sense?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-10T23:52:14.562+0000",
                    "updated": "2019-10-10T23:52:14.562+0000",
                    "started": "2019-10-10T23:52:14.562+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "326643",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/327370",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #5539: ARROW-6624: [C++] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-541345833\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=h1) Report\n   > Merging [#5539](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/8621a5c489cc5af066150e900b21c709161d6cbf?src=pr&el=desc) will **increase** coverage by `6.28%`.\n   > The diff coverage is `98.98%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/5539/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #5539      +/-   ##\n   ==========================================\n   + Coverage    83.2%   89.48%   +6.28%     \n   ==========================================\n     Files         251      796     +545     \n     Lines       20072   118810   +98738     \n     Branches     1501        0    -1501     \n   ==========================================\n   + Hits        16700   106315   +89615     \n   - Misses       3007    12495    +9488     \n   + Partials      365        0     -365\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [cpp/src/arrow/sparse\\_tensor.h](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmg=) | `100% <\u00f8> (\u00f8)` | |\n   | [cpp/src/arrow/python/numpy\\_convert.cc](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9weXRob24vbnVtcHlfY29udmVydC5jYw==) | `95.02% <\u00f8> (\u00f8)` | |\n   | [python/pyarrow/tensor.pxi](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVuc29yLnB4aQ==) | `79.25% <100%> (\u00f8)` | |\n   | [python/pyarrow/tests/test\\_sparse\\_tensor.py](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-cHl0aG9uL3B5YXJyb3cvdGVzdHMvdGVzdF9zcGFyc2VfdGVuc29yLnB5) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/sparse\\_tensor\\_test.cc](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yX3Rlc3QuY2M=) | `100% <100%> (\u00f8)` | |\n   | [cpp/src/arrow/sparse\\_tensor.cc](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Y3BwL3NyYy9hcnJvdy9zcGFyc2VfdGVuc29yLmNj) | `99.07% <98.46%> (\u00f8)` | |\n   | [go/arrow/ipc/writer.go](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL3dyaXRlci5nbw==) | | |\n   | [js/src/util/fn.ts](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvZm4udHM=) | | |\n   | [go/arrow/memory/memory\\_avx2\\_amd64.go](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Z28vYXJyb3cvbWVtb3J5L21lbW9yeV9hdngyX2FtZDY0Lmdv) | | |\n   | [go/arrow/ipc/file\\_reader.go](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree#diff-Z28vYXJyb3cvaXBjL2ZpbGVfcmVhZGVyLmdv) | | |\n   | ... and [925 more](https://codecov.io/gh/apache/arrow/pull/5539/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=footer). Last update [8621a5c...8c01cac](https://codecov.io/gh/apache/arrow/pull/5539?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-12T17:35:16.993+0000",
                    "updated": "2019-10-12T17:35:16.993+0000",
                    "started": "2019-10-12T17:35:16.992+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "327370",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on issue #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-542703858\n \n \n   @mrkn Would you have time to review this? You are more acquainted with the sparse formats than I am.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-16T13:35:30.610+0000",
                    "updated": "2019-10-16T13:35:30.610+0000",
                    "started": "2019-10-16T13:35:30.610+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329171",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329469",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on issue #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-542924136\n \n \n   @rok @pitrou I\u2019ll review this today.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-16T22:54:33.710+0000",
                    "updated": "2019-10-16T22:54:33.710+0000",
                    "started": "2019-10-16T22:54:33.709+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329469",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329513",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r335770464\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -204,6 +204,9 @@ class ARROW_EXPORT SparseTensor {\n   /// \\brief Return whether sparse tensors are equal\n   bool Equals(const SparseTensor& other) const;\n \n+  /// \\brief Return dense representation of sparse tensor as tensor\n+  std::shared_ptr<Tensor> ToTensor() const;\n \n Review comment:\n   Related to [ARROW-6503](https://issues.apache.org/jira/browse/ARROW-6503), we should provide a variant, that takes a MemoryPool argument, for features that allocate buffers.\r\n   \r\n   Could you add a variant of `ToTensor` with a MemoryPool argument?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T01:02:48.257+0000",
                    "updated": "2019-10-17T01:02:48.257+0000",
                    "started": "2019-10-17T01:02:48.256+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329513",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329514",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r335770948\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -204,6 +204,9 @@ class ARROW_EXPORT SparseTensor {\n   /// \\brief Return whether sparse tensors are equal\n   bool Equals(const SparseTensor& other) const;\n \n+  /// \\brief Return dense representation of sparse tensor as tensor\n+  std::shared_ptr<Tensor> ToTensor() const;\n \n Review comment:\n   And, `ToTensor` should return `Status`:\r\n   \r\n   ```cpp\r\n   Status ToTensor(std::shraed_ptr<Tensor>* out) const;\r\n   ```\r\n   \r\n   When `ToTensor` can return a `Status`, we can use `RETURN_NOT_OK` instead of `ARROW_CHECK_OK` for the return value of `AllocateBuffer` above.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T01:02:48.386+0000",
                    "updated": "2019-10-17T01:02:48.386+0000",
                    "started": "2019-10-17T01:02:48.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329514",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329515",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r335771556\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,132 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+void MakeTensorFromSparseTensor(const SparseTensor* sparse_tensor,\n+                                std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  ARROW_CHECK_OK(\n \n Review comment:\n   If `ToTensor` can return a `Status`, we can use `RETURN_NOT_OK` here.  See the below comment at `ToTensor` declaration.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T01:02:48.752+0000",
                    "updated": "2019-10-17T01:02:48.752+0000",
                    "started": "2019-10-17T01:02:48.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329515",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/329516",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r335765993\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,132 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+void MakeTensorFromSparseTensor(const SparseTensor* sparse_tensor,\n+                                std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  ARROW_CHECK_OK(\n+      AllocateBuffer(sizeof(value_type) * sparse_tensor->size(), &values_buffer));\n+  auto values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+  for (int64_t i = 0; i < sparse_tensor->size(); ++i) {\n+    values[i] = 0;\n+  }\n \n Review comment:\n   We can use `std::fill_n` here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T01:02:48.755+0000",
                    "updated": "2019-10-17T01:02:48.755+0000",
                    "started": "2019-10-17T01:02:48.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "329516",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330184",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336265523\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,132 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+void MakeTensorFromSparseTensor(const SparseTensor* sparse_tensor,\n+                                std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  ARROW_CHECK_OK(\n+      AllocateBuffer(sizeof(value_type) * sparse_tensor->size(), &values_buffer));\n+  auto values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+  for (int64_t i = 0; i < sparse_tensor->size(); ++i) {\n+    values[i] = 0;\n+  }\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T23:15:47.923+0000",
                    "updated": "2019-10-17T23:15:47.923+0000",
                    "started": "2019-10-17T23:15:47.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330184",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330185",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336265749\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -204,6 +204,9 @@ class ARROW_EXPORT SparseTensor {\n   /// \\brief Return whether sparse tensors are equal\n   bool Equals(const SparseTensor& other) const;\n \n+  /// \\brief Return dense representation of sparse tensor as tensor\n+  std::shared_ptr<Tensor> ToTensor() const;\n \n Review comment:\n   Added another `ToTensor` variant with MemoryPool argument.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T23:16:54.542+0000",
                    "updated": "2019-10-17T23:16:54.542+0000",
                    "started": "2019-10-17T23:16:54.541+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330185",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330186",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336265832\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,132 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+void MakeTensorFromSparseTensor(const SparseTensor* sparse_tensor,\n+                                std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  ARROW_CHECK_OK(\n \n Review comment:\n   Done.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T23:17:15.858+0000",
                    "updated": "2019-10-17T23:17:15.858+0000",
                    "started": "2019-10-17T23:17:15.858+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330186",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on issue #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#issuecomment-543404327\n \n \n   Thanks for the review @mrkn :).\r\n   I've implemented your suggestions and also rebased on master to get the new tensor names (#5605).\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-17T23:20:04.260+0000",
                    "updated": "2019-10-17T23:20:04.260+0000",
                    "started": "2019-10-17T23:20:04.259+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330187",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336332488\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor_test.cc\n ##########\n @@ -469,4 +484,18 @@ TEST_F(TestSparseCSRMatrix, TensorEquality) {\n   ASSERT_FALSE(st1.Equals(st2));\n }\n \n+TEST_F(TestSparseCSRMatrix, TestToTensor) {\n+  std::vector<int64_t> values = {1, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 1,\n+                                 0, 2, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1};\n+  std::vector<int64_t> shape({6, 4});\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, {}, this->dim_names_);\n+  SparseTensorImpl<SparseCSRIndex> sparse_tensor(tensor);\n+\n+  ASSERT_EQ(7, sparse_tensor.non_zero_length());\n+  ASSERT_TRUE(sparse_tensor.is_mutable());\n+  std::shared_ptr<Tensor> dense_tensor;\n+  ARROW_CHECK_OK(sparse_tensor.ToTensor(&dense_tensor));\n \n Review comment:\n   Use `ASSERT_OK`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.592+0000",
                    "updated": "2019-10-18T06:35:33.592+0000",
                    "started": "2019-10-18T06:35:33.591+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330316",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336333183\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.h\n ##########\n @@ -204,6 +204,10 @@ class ARROW_EXPORT SparseTensor {\n   /// \\brief Return whether sparse tensors are equal\n   bool Equals(const SparseTensor& other) const;\n \n+  /// \\brief Return dense representation of sparse tensor as tensor\n+  Status ToTensor(MemoryPool* pool, std::shared_ptr<Tensor>* out) const;\n+  Status ToTensor(std::shared_ptr<Tensor>* out) const;\n \n Review comment:\n   The definition of this can be written here like below.\r\n   \r\n   ```c++\r\n   Status ToTensor(std::shared_ptr<Tensor>* out) const {\r\n     return ToTensor(default_memory_pool(), out);\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.721+0000",
                    "updated": "2019-10-18T06:35:33.721+0000",
                    "started": "2019-10-18T06:35:33.721+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330317",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336334361\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,131 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  RETURN_NOT_OK(\n+      AllocateBuffer(pool, sizeof(value_type) * sparse_tensor->size(), &values_buffer));\n+  auto values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+  std::fill_n(values, sparse_tensor->size(), static_cast<value_type>(0));\n+\n+  switch (sparse_tensor->format_id()) {\n+    case SparseTensorFormat::COO: {\n+      const SparseCOOIndex sparse_index =\n+          internal::checked_cast<const SparseCOOIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> coords = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+      std::vector<int64_t> strides(sparse_tensor->ndim(), 1);\n+\n+      for (int i = sparse_tensor->ndim() - 1; i > 0; --i) {\n+        strides[i - 1] *= strides[i] * sparse_tensor->shape()[i];\n+      }\n+      for (int64_t i = 0; i < sparse_tensor->non_zero_length(); ++i) {\n+        std::vector<c_index_value_type> coord(sparse_tensor->ndim());\n+        int64_t offset = 0;\n+        for (int64_t j = 0; j < static_cast<int>(coord.size()); ++j) {\n+          coord[j] = coords->Value<IndexValueType>({i, j});\n+          offset += coord[j] * strides[j];\n+        }\n+        values[offset] = raw_data[i];\n+      }\n+      *tensor = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                         sparse_tensor->shape());\n+      return Status::OK();\n+    }\n+\n+    case SparseTensorFormat::CSR: {\n+      const SparseCSRIndex sparse_index =\n+          internal::checked_cast<const SparseCSRIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indptr = sparse_index.indptr();\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+\n+      int64_t offset;\n+      for (int64_t i = 0; i < indptr->size() - 1; ++i) {\n+        const int64_t start = indptr->Value<IndexValueType>({i});\n+        const int64_t stop = indptr->Value<IndexValueType>({i + 1});\n+        for (int64_t j = start; j < stop; ++j) {\n+          offset = indices->Value<IndexValueType>({j}) + i * sparse_tensor->shape()[1];\n+          values[offset] = raw_data[j];\n+        }\n+      }\n+      *tensor = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                         sparse_tensor->shape());\n+      return Status::OK();\n+    }\n+  }\n+  return Status::NotImplemented(\"Unsupported SparseIndex format type\");\n+}\n+\n+#define MAKE_TENSOR_FROM_SPARSE_TENSOR_INDEX_TYPE(IndexValueType)                      \\\n+  case IndexValueType##Type::type_id:                                                  \\\n+    return MakeTensorFromSparseTensor<TYPE, IndexValueType##Type>(pool, sparse_tensor, \\\n+                                                                  tensor);             \\\n+    break;\n+\n+template <typename TYPE>\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n+  std::shared_ptr<DataType> type;\n+  switch (sparse_tensor->format_id()) {\n+    case SparseTensorFormat::COO: {\n+      const SparseCOOIndex sparse_index =\n \n Review comment:\n   The type of this variable should be `const SparseCOOIndex&`.\r\n   I prefer to use `auto` here like below:\r\n   \r\n   ```c++\r\n   const auto& sparse_index = internal::checked_cast<const SparseCOOIndex&>(*sparse_tensor->sparse_index());\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.725+0000",
                    "updated": "2019-10-18T06:35:33.725+0000",
                    "started": "2019-10-18T06:35:33.725+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330318",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336333592\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,131 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n \n Review comment:\n   `out_tensor` or `out` is better for the last argument name.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.731+0000",
                    "updated": "2019-10-18T06:35:33.731+0000",
                    "started": "2019-10-18T06:35:33.730+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330319",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336333779\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor.cc\n ##########\n @@ -364,6 +364,131 @@ void MakeSparseTensorFromTensor(const Tensor& tensor,\n   }\n }\n \n+template <typename TYPE, typename IndexValueType>\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n+  using c_index_value_type = typename IndexValueType::c_type;\n+  using NumericTensorType = NumericTensor<TYPE>;\n+  using value_type = typename NumericTensorType::value_type;\n+\n+  std::shared_ptr<Buffer> values_buffer;\n+  RETURN_NOT_OK(\n+      AllocateBuffer(pool, sizeof(value_type) * sparse_tensor->size(), &values_buffer));\n+  auto values = reinterpret_cast<value_type*>(values_buffer->mutable_data());\n+\n+  std::fill_n(values, sparse_tensor->size(), static_cast<value_type>(0));\n+\n+  switch (sparse_tensor->format_id()) {\n+    case SparseTensorFormat::COO: {\n+      const SparseCOOIndex sparse_index =\n+          internal::checked_cast<const SparseCOOIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> coords = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+      std::vector<int64_t> strides(sparse_tensor->ndim(), 1);\n+\n+      for (int i = sparse_tensor->ndim() - 1; i > 0; --i) {\n+        strides[i - 1] *= strides[i] * sparse_tensor->shape()[i];\n+      }\n+      for (int64_t i = 0; i < sparse_tensor->non_zero_length(); ++i) {\n+        std::vector<c_index_value_type> coord(sparse_tensor->ndim());\n+        int64_t offset = 0;\n+        for (int64_t j = 0; j < static_cast<int>(coord.size()); ++j) {\n+          coord[j] = coords->Value<IndexValueType>({i, j});\n+          offset += coord[j] * strides[j];\n+        }\n+        values[offset] = raw_data[i];\n+      }\n+      *tensor = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                         sparse_tensor->shape());\n+      return Status::OK();\n+    }\n+\n+    case SparseTensorFormat::CSR: {\n+      const SparseCSRIndex sparse_index =\n+          internal::checked_cast<const SparseCSRIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indptr = sparse_index.indptr();\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      const auto raw_data =\n+          reinterpret_cast<const value_type*>(sparse_tensor->raw_data());\n+\n+      int64_t offset;\n+      for (int64_t i = 0; i < indptr->size() - 1; ++i) {\n+        const int64_t start = indptr->Value<IndexValueType>({i});\n+        const int64_t stop = indptr->Value<IndexValueType>({i + 1});\n+        for (int64_t j = start; j < stop; ++j) {\n+          offset = indices->Value<IndexValueType>({j}) + i * sparse_tensor->shape()[1];\n+          values[offset] = raw_data[j];\n+        }\n+      }\n+      *tensor = std::make_shared<Tensor>(sparse_tensor->type(), values_buffer,\n+                                         sparse_tensor->shape());\n+      return Status::OK();\n+    }\n+  }\n+  return Status::NotImplemented(\"Unsupported SparseIndex format type\");\n+}\n+\n+#define MAKE_TENSOR_FROM_SPARSE_TENSOR_INDEX_TYPE(IndexValueType)                      \\\n+  case IndexValueType##Type::type_id:                                                  \\\n+    return MakeTensorFromSparseTensor<TYPE, IndexValueType##Type>(pool, sparse_tensor, \\\n+                                                                  tensor);             \\\n+    break;\n+\n+template <typename TYPE>\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n+  std::shared_ptr<DataType> type;\n+  switch (sparse_tensor->format_id()) {\n+    case SparseTensorFormat::COO: {\n+      const SparseCOOIndex sparse_index =\n+          internal::checked_cast<const SparseCOOIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      type = indices->type();\n+      break;\n+    }\n+    case SparseTensorFormat::CSR: {\n+      const SparseCSRIndex sparse_index =\n+          internal::checked_cast<const SparseCSRIndex&>(*sparse_tensor->sparse_index());\n+      const std::shared_ptr<const Tensor> indices = sparse_index.indices();\n+      type = indices->type();\n+      break;\n+    }\n+      // LCOV_EXCL_START: ignore program failure\n+    default:\n+      ARROW_LOG(FATAL) << \"Unsupported SparseIndex format\";\n+      break;\n+      // LCOV_EXCL_STOP\n+  }\n+\n+  switch (type->id()) {\n+    ARROW_GENERATE_FOR_ALL_INTEGER_TYPES(MAKE_TENSOR_FROM_SPARSE_TENSOR_INDEX_TYPE);\n+      // LCOV_EXCL_START: ignore program failure\n+    default:\n+      ARROW_LOG(FATAL) << \"Unsupported SparseIndex value type\";\n+      return Status::NotImplemented(\"Unsupported SparseIndex value type\");\n+      // LCOV_EXCL_STOP\n+  }\n+}\n+#undef MAKE_TENSOR_FROM_SPARSE_TENSOR_INDEX_TYPE\n+\n+#define MAKE_TENSOR_FROM_SPARSE_TENSOR_VALUE_TYPE(TYPE) \\\n+  case TYPE##Type::type_id:                             \\\n+    return MakeTensorFromSparseTensor<TYPE##Type>(pool, sparse_tensor, tensor);\n+\n+Status MakeTensorFromSparseTensor(MemoryPool* pool, const SparseTensor* sparse_tensor,\n+                                  std::shared_ptr<Tensor>* tensor) {\n \n Review comment:\n   `out_tensor` or `out` is better for the last argument name.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.786+0000",
                    "updated": "2019-10-18T06:35:33.786+0000",
                    "started": "2019-10-18T06:35:33.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330322",
                    "issueId": "13257764"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/worklog/330320",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "mrkn commented on pull request #5539: ARROW-6624: [C++][Python] Add SparseTensor.ToTensor() method\nURL: https://github.com/apache/arrow/pull/5539#discussion_r336332516\n \n \n\n ##########\n File path: cpp/src/arrow/sparse_tensor_test.cc\n ##########\n @@ -202,6 +202,21 @@ TEST_F(TestSparseCOOTensor, TensorEquality) {\n   ASSERT_FALSE(st1.Equals(st2));\n }\n \n+TEST_F(TestSparseCOOTensor, TestToTensor) {\n+  std::vector<int64_t> values = {1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n+                                 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4};\n+  std::vector<int64_t> shape({4, 3, 2});\n+  std::shared_ptr<Buffer> buffer = Buffer::Wrap(values);\n+  Tensor tensor(int64(), buffer, shape, {}, this->dim_names_);\n+  SparseTensorImpl<SparseCOOIndex> sparse_tensor(tensor);\n+\n+  ASSERT_EQ(5, sparse_tensor.non_zero_length());\n+  ASSERT_TRUE(sparse_tensor.is_mutable());\n+  std::shared_ptr<Tensor> dense_tensor;\n+  ARROW_CHECK_OK(sparse_tensor.ToTensor(&dense_tensor));\n \n Review comment:\n   Use `ASSERT_OK`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-10-18T06:35:33.786+0000",
                    "updated": "2019-10-18T06:35:33.786+0000",
                    "started": "2019-10-18T06:35:33.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "330320",
                    "issueId": "13257764"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@2afb0be3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@13a2bd50[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@760e9aa6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@70c0f10a[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@101b749e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@55680505[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@57316ea4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@200e8de9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6bfab2f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@7e2fd2a5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@22b7c78a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@768267f0[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Sun Oct 20 05:33:40 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-10-20T05:33:40.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-6624/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-09-19T19:33:43.000+0000",
        "updated": "2019-10-20T11:53:21.000+0000",
        "timeoriginalestimate": null,
        "description": "We have functionality to convert (dense) tensors to sparse tensors, but not the other way around. Also [see discussion|https://github.com/apache/arrow/pull/4446#issuecomment-503792308].",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add SparseTensor.ToTensor() method",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13257764/comment/16955398",
                    "id": "16955398",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 5539\n[https://github.com/apache/arrow/pull/5539]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=mrkn",
                        "name": "mrkn",
                        "key": "mrkn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Kenta Murata",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-10-20T05:33:40.209+0000",
                    "updated": "2019-10-20T05:33:40.209+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z06tts:",
        "customfield_12314139": null
    }
}