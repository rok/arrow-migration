{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13327225",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225",
    "key": "ARROW-9980",
    "fields": {
        "parent": {
            "id": "13327222",
            "key": "ARROW-9978",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13327222",
            "fields": {
                "summary": "[Rust] Umbrella issue for clippy integration",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/6",
                    "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
                    "name": "Closed",
                    "id": "6",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12347769",
                "id": "12347769",
                "description": "",
                "name": "1.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-07-24"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
            "name": "nevi_me",
            "key": "nevi_me",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
            },
            "displayName": "Neville Dipale",
            "active": true,
            "timeZone": "Africa/Johannesburg"
        },
        "aggregateprogress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 10800,
            "total": 10800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9980/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 18,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173\n\n\n   This is a followup of https://issues.apache.org/jira/browse/ARROW-9979\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T15:24:05.257+0000",
                    "updated": "2020-09-12T15:24:05.257+0000",
                    "started": "2020-09-12T15:24:05.257+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482492",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482493",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#issuecomment-691506541\n\n\n   https://issues.apache.org/jira/browse/ARROW-9980\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T15:32:01.827+0000",
                    "updated": "2020-09-12T15:32:01.827+0000",
                    "started": "2020-09-12T15:32:01.827+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482493",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482524",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487429355\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T17:12:55.985+0000",
                    "updated": "2020-09-12T17:12:55.985+0000",
                    "started": "2020-09-12T17:12:55.985+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482524",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482536",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487436938\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T18:43:58.518+0000",
                    "updated": "2020-09-12T18:43:58.518+0000",
                    "started": "2020-09-12T18:43:58.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482536",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487438276\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T18:59:15.740+0000",
                    "updated": "2020-09-12T18:59:15.740+0000",
                    "started": "2020-09-12T18:59:15.740+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482540",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482640",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173\n\n\n   This is a followup of https://issues.apache.org/jira/browse/ARROW-9979\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:09:02.344+0000",
                    "updated": "2020-09-12T20:09:02.344+0000",
                    "started": "2020-09-12T20:09:02.344+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482640",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482708",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#issuecomment-691506541\n\n\n   https://issues.apache.org/jira/browse/ARROW-9980\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:14:07.264+0000",
                    "updated": "2020-09-12T20:14:07.264+0000",
                    "started": "2020-09-12T20:14:07.264+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482708",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482910",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487429355\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:31:59.524+0000",
                    "updated": "2020-09-12T20:31:59.524+0000",
                    "started": "2020-09-12T20:31:59.523+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482910",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/482926",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487436938\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:33:52.051+0000",
                    "updated": "2020-09-12T20:33:52.051+0000",
                    "started": "2020-09-12T20:33:52.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "482926",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483099",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T20:56:35.255+0000",
                    "updated": "2020-09-12T20:56:35.255+0000",
                    "started": "2020-09-12T20:56:35.255+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483099",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#issuecomment-691506541\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:14:37.111+0000",
                    "updated": "2020-09-12T21:14:37.111+0000",
                    "started": "2020-09-12T21:14:37.111+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483122",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jhorstmann commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487429355\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I had a bit of a disagreement with a coworker about this clippy warning before and would like to hear your opinion. IMO in most of those tests (especially casts, or when the inputs don't have a fractional part) we are expecting an exact value, not something close to that value. Writing the assertion like that makes the tests harder to read and also would make me wonder in which circumstances the kernel would do some rounding.\r\n   \r\n   Some tests like this could also be rewritten such that all input number can be exactly represented in floating point, following a pattern like x/(2^y), for example 1.125 or 2.25.\r\n   \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       Readability in the sense of understanding the intent of a test. Reading a test should help understand the specified behaviour of some code. So when I'm reading a test that asserts with an epsilon while the ieee 754 standard promises an exact result for those inputs, I'm wondering why the implementation is allowed to have such imprecision. That applies especially to the cast kernels, `3 as f64` should be exactly `3.0`, an implementation returning `2.999999...` should fail that testcase.\r\n   \r\n   Note I'm talking about unit tests of simple operations with small known inputs and outputs. For more complex (nested, or trigonometric) operations assertions with some epsilon are totally fine, but then the epsilon also depends on the scale of the inputs and `f64::EPSILON` is a bit of an arbitrary choice.\r\n   \r\n   Instead of replacing all floating point assertions with a macro I would propose to look through those tests and decide whether the result is expected to be an exact match, and then either use `#[allow(clippy::float_cmp)]` or two different assert macros for exact/with epsilon.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:45:34.613+0000",
                    "updated": "2020-09-12T21:45:34.613+0000",
                    "started": "2020-09-12T21:45:34.613+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483310",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483322",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487436938\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       If it is about readability, perhaps we can define a macro like `assert_float_eq` and wrap this logic inside? \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:46:29.806+0000",
                    "updated": "2020-09-12T21:46:29.806+0000",
                    "started": "2020-09-12T21:46:29.806+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483322",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483360",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "andygrove commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487438276\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       The results could vary depending on the hardware we are running on. For now, we are assuming that everything is running on CPU but there is no reason why we couldn't have GPU versions of these kernels in the future, and there could be differences in precision in this case.\r\n   \r\n   https://docs.nvidia.com/cuda/floating-point/index.html\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:49:34.389+0000",
                    "updated": "2020-09-12T21:49:34.389+0000",
                    "started": "2020-09-12T21:49:34.389+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483360",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483463",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me opened a new pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T21:57:56.990+0000",
                    "updated": "2020-09-12T21:57:56.990+0000",
                    "started": "2020-09-12T21:57:56.989+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483463",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483511",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me closed pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T22:01:29.202+0000",
                    "updated": "2020-09-12T22:01:29.202+0000",
                    "started": "2020-09-12T22:01:29.201+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483511",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#issuecomment-691506541\n\n\n   https://issues.apache.org/jira/browse/ARROW-9980\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T22:02:44.074+0000",
                    "updated": "2020-09-12T22:02:44.074+0000",
                    "started": "2020-09-12T22:02:44.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483528",
                    "issueId": "13327225"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/worklog/483542",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nevi-me commented on a change in pull request #8173:\nURL: https://github.com/apache/arrow/pull/8173#discussion_r487447527\n\n\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I like the approach of a macro, we can add it in a follow-up\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I like the approach of a macro, we can add it in a follow-up\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I like the approach of a macro, we can add it in a follow-up\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I like the approach of a macro, we can add it in a follow-up\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I can do this in the coming 2 weeks. I would agree with the approach of turning off the lint where it matters, which I think would be almost all cases.\r\n   \r\n   I had to merge this PR to bank the time (spent much of the Saturday working on this instead of a lot of other work)\n\n##########\nFile path: rust/arrow/src/compute/kernels/aggregate.rs\n##########\n@@ -121,7 +121,7 @@ mod tests {\n     #[test]\n     fn test_primitive_array_float_sum() {\n         let a = Float64Array::from(vec![1.1, 2.2, 3.3, 4.4, 5.5]);\n-        assert_eq!(16.5, sum(&a).unwrap());\n+        assert!(16.5 - sum(&a).unwrap() < f64::EPSILON);\n\nReview comment:\n       I can do this in the coming 2 weeks. I would agree with the approach of turning off the lint where it matters, which I think would be almost all cases.\r\n   \r\n   I had to merge this PR to bank the time (spent much of the Saturday working on this instead of a lot of other work) and because I already have 2 other PRs that I decided to prepare on top of the clippy lints\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-09-12T22:03:44.845+0000",
                    "updated": "2020-09-12T22:03:44.845+0000",
                    "started": "2020-09-12T22:03:44.845+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "483542",
                    "issueId": "13327225"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 10800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@142b66cd[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@37b3a86c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a465ec8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@701c7d24[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78418d53[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@4f1ffc65[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27475b50[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3421e7c1[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@40fedf03[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@70b2efad[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6db2a730[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@56964aa8[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 10800,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Sep 12 20:52:35 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-09-12T20:52:35.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9980/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-09-12T15:21:34.000+0000",
        "updated": "2020-09-12T22:03:45.000+0000",
        "timeoriginalestimate": null,
        "description": "This addresses most clippy lints on the parquet crate. Other remaining lints can be addressed as part of future PRs",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 10800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Fix parquet crate clippy lints",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13327225/comment/17194859",
                    "id": "17194859",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "body": "Issue resolved by pull request 8173\n[https://github.com/apache/arrow/pull/8173]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=nevi_me",
                        "name": "nevi_me",
                        "key": "nevi_me",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=nevi_me&avatarId=24271",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=nevi_me&avatarId=24271",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=nevi_me&avatarId=24271",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=nevi_me&avatarId=24271"
                        },
                        "displayName": "Neville Dipale",
                        "active": true,
                        "timeZone": "Africa/Johannesburg"
                    },
                    "created": "2020-09-12T20:52:35.158+0000",
                    "updated": "2020-09-12T20:52:35.158+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0ijm0:",
        "customfield_12314139": null
    }
}