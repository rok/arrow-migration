{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13340914",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914",
    "key": "ARROW-10623",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348823",
                "id": "12348823",
                "description": "",
                "name": "3.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-01-25"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12348647",
                "id": "12348647",
                "name": "1.0.1",
                "archived": false,
                "released": true,
                "releaseDate": "2020-08-21"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jonkeane",
            "name": "jonkeane",
            "key": "jonkeane",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34057",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34057",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34057",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34057"
            },
            "displayName": "Jonathan Keane",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fdlk",
            "name": "fdlk",
            "key": "fdlk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Fleur Kelpin",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fdlk",
            "name": "fdlk",
            "key": "fdlk",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34058",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34058",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34058",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34058"
            },
            "displayName": "Fleur Kelpin",
            "active": true,
            "timeZone": "Europe/Amsterdam"
        },
        "aggregateprogress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 9000,
            "total": 9000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10623/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 15,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/531488",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane opened a new pull request #9107:\nURL: https://github.com/apache/arrow/pull/9107\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T21:05:34.196+0000",
                    "updated": "2021-01-05T21:05:34.196+0000",
                    "started": "2021-01-05T21:05:34.196+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531488",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/531489",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #9107:\nURL: https://github.com/apache/arrow/pull/9107#issuecomment-754899512\n\n\n   @github-actions crossbow submit test-r-rstudio-r-arrow-1.0.1-compatibility\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T21:07:17.836+0000",
                    "updated": "2021-01-05T21:07:17.836+0000",
                    "started": "2021-01-05T21:07:17.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531489",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/531499",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9107:\nURL: https://github.com/apache/arrow/pull/9107#issuecomment-754902084\n\n\n   https://issues.apache.org/jira/browse/ARROW-10623\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T21:12:31.456+0000",
                    "updated": "2021-01-05T21:12:31.456+0000",
                    "started": "2021-01-05T21:12:31.456+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531499",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/531508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #9107:\nURL: https://github.com/apache/arrow/pull/9107#issuecomment-754910336\n\n\n   In case it helps, you don't need to run this through docker-compose. I might just create a new GHA yaml (like there is for as-cran testing) that does what I want. And what I want is something that: installs from commit, runs R script to write out a parquet or feather file (or multiple), bundle the files and stash them as a build artifact, and then a matrix job that depends on that one, matrix of R versions, downloads the artifact, remotes::install_version, run test script that reads the file(s) and asserts about them.\r\n   \r\n   Also, feel free to put the writing and reading/testing scripts somewhere else that is is .Rbuildignored, they don't have to be part of the regular test suite.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-05T21:29:34.262+0000",
                    "updated": "2021-01-05T21:29:34.262+0000",
                    "started": "2021-01-05T21:29:34.262+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531508",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/531609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane closed pull request #9107:\nURL: https://github.com/apache/arrow/pull/9107\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-06T00:55:08.244+0000",
                    "updated": "2021-01-06T00:55:08.244+0000",
                    "started": "2021-01-06T00:55:08.244+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "531609",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#discussion_r555074292\n\n\n\n##########\nFile path: r/tests/testthat/test-backwards-compatibility.R\n##########\n@@ -0,0 +1,159 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To write a new version of a test file for a current version:\n+# write_parquet(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0.parquet\"))\n+\n+# To write a new version of a test file for an old version, use docker(-compose)\n+# to setup a linux distribution and use RStudio's public package manager binary\n+# repo to install the old version. The following commands should be run at the\n+# root of the arrow repo directory and might need slight adjusments.\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose build --no-cache r\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose run r /bin/bash\n+# R\n+# options(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n+# remotes::install_version(\"arrow\", version = \"1.0.1\")\n+# # get example data into the global env\n+# write_parquet(example_with_metadata, \"arrow/r/tests/testthat/golden-files/data-arrow_1.0.1.parquet\")\n+# quit()/exit\n+\n+test_that(\"reading a known Parquet file to dataframe with 2.0.0\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_2.0.0.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_equal(df, example_with_metadata)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(field_one = 12, field_two = \"more stuff\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+test_that(\"reading a known Parquet file to dataframe with 1.0.1\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_1.0.1.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+  example_with_metadata_sans_toplevel <- example_with_metadata\n+  attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+  expect_equal(df, example_with_metadata_sans_toplevel)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+for (comp in c(\"lz4\", \"uncompressed\", \"zstd\")) {\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_lz4.feather\"), compression = \"lz4\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_uncompressed.feather\"), compression = \"uncompressed\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_zstd.feather\"), compression = \"zstd\")\n+  test_that(\"reading a known Feather file to dataframe with 2.0.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_2.0.0_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    expect_equal(df, example_with_metadata)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        top_level = list(field_one = 12, field_two = \"more stuff\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 1.0.1\", {\n\nReview comment:\n       Indeed, AFAIK, the bug only occurs for files written with 0.17, and when reading with 2.0.0. \r\n   In Arrow 0.17, we had experimental compression support specifically for feather (using some metadata string), while starting from Arrow 1.0, compression is part of the official format spec. So it's only those older pre-1.0.0 files that are the problem. And it only started failing to read them in Arrow 2.0, because we simply changed how the compressions are coded internally from lower case (as it was stored in the feather file) to upper case, in an unrelated commit (https://github.com/apache/arrow/commit/3694794bdfd0677b95b8c95681e392512f1c9237#r43851633), forgetting the compatibility issue with older feather files.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T14:14:36.659+0000",
                    "updated": "2021-01-11T14:14:36.659+0000",
                    "started": "2021-01-11T14:14:36.659+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534252",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorisvandenbossche commented on a change in pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#discussion_r555074943\n\n\n\n##########\nFile path: r/tests/testthat/test-backwards-compatibility.R\n##########\n@@ -0,0 +1,171 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To write a new version of a test file for a current version:\n+# write_parquet(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0.parquet\"))\n+\n+# To write a new version of a test file for an old version, use docker(-compose)\n+# to setup a linux distribution and use RStudio's public package manager binary\n+# repo to install the old version. The following commands should be run at the\n+# root of the arrow repo directory and might need slight adjusments.\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose build --no-cache r\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose run r /bin/bash\n+# R\n+# options(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n+# remotes::install_version(\"arrow\", version = \"1.0.1\")\n+# # get example data into the global env\n+# write_parquet(example_with_metadata, \"arrow/r/tests/testthat/golden-files/data-arrow_1.0.1.parquet\")\n+# quit()/exit\n+\n+test_that(\"reading a known Parquet file to dataframe with 2.0.0\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_2.0.0.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_equal(df, example_with_metadata)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(field_one = 12, field_two = \"more stuff\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+test_that(\"reading a known Parquet file to dataframe with 1.0.1\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_1.0.1.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+  example_with_metadata_sans_toplevel <- example_with_metadata\n+  attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+  expect_equal(df, example_with_metadata_sans_toplevel)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+for (comp in c(\"lz4\", \"uncompressed\", \"zstd\")) {\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_lz4.feather\"), compression = \"lz4\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_uncompressed.feather\"), compression = \"uncompressed\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_zstd.feather\"), compression = \"zstd\")\n+  test_that(\"reading a known Feather file to dataframe with 2.0.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_2.0.0_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    expect_equal(df, example_with_metadata)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        top_level = list(field_one = 12, field_two = \"more stuff\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 1.0.1\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_1.0.1_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+    example_with_metadata_sans_toplevel <- example_with_metadata\n+    attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+    expect_equal(df, example_with_metadata_sans_toplevel)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 0.17.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_0.17.0_\", comp,\".feather\"))\n+\n+    if (comp %in% c(\"lz4\", \"zstd\")) {\n+      # there is a case mis-match with versions 0.17.0 and before for the codec names\n+      expect_error(df <- read_feather(feather_file), \"Unrecognized compression type:\")\n\nReview comment:\n       So once https://github.com/apache/arrow/pull/9128 is merged, this should be fixed\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T14:15:29.721+0000",
                    "updated": "2021-01-11T14:15:29.721+0000",
                    "started": "2021-01-11T14:15:29.721+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534253",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534277",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#issuecomment-758010060\n\n\n   https://issues.apache.org/jira/browse/ARROW-10623\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T15:07:04.111+0000",
                    "updated": "2021-01-11T15:07:04.111+0000",
                    "started": "2021-01-11T15:07:04.111+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534277",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#discussion_r555125913\n\n\n\n##########\nFile path: r/tests/testthat/test-backwards-compatibility.R\n##########\n@@ -0,0 +1,171 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To write a new version of a test file for a current version:\n+# write_parquet(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0.parquet\"))\n+\n+# To write a new version of a test file for an old version, use docker(-compose)\n+# to setup a linux distribution and use RStudio's public package manager binary\n+# repo to install the old version. The following commands should be run at the\n+# root of the arrow repo directory and might need slight adjusments.\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose build --no-cache r\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose run r /bin/bash\n+# R\n+# options(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n+# remotes::install_version(\"arrow\", version = \"1.0.1\")\n+# # get example data into the global env\n+# write_parquet(example_with_metadata, \"arrow/r/tests/testthat/golden-files/data-arrow_1.0.1.parquet\")\n+# quit()/exit\n+\n+test_that(\"reading a known Parquet file to dataframe with 2.0.0\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_2.0.0.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_equal(df, example_with_metadata)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(field_one = 12, field_two = \"more stuff\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+test_that(\"reading a known Parquet file to dataframe with 1.0.1\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_1.0.1.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+  example_with_metadata_sans_toplevel <- example_with_metadata\n+  attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+  expect_equal(df, example_with_metadata_sans_toplevel)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+for (comp in c(\"lz4\", \"uncompressed\", \"zstd\")) {\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_lz4.feather\"), compression = \"lz4\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_uncompressed.feather\"), compression = \"uncompressed\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_zstd.feather\"), compression = \"zstd\")\n+  test_that(\"reading a known Feather file to dataframe with 2.0.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_2.0.0_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    expect_equal(df, example_with_metadata)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        top_level = list(field_one = 12, field_two = \"more stuff\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 1.0.1\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_1.0.1_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+    example_with_metadata_sans_toplevel <- example_with_metadata\n+    attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+    expect_equal(df, example_with_metadata_sans_toplevel)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 0.17.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_0.17.0_\", comp,\".feather\"))\n+\n+    if (comp %in% c(\"lz4\", \"zstd\")) {\n+      # there is a case mis-match with versions 0.17.0 and before for the codec names\n+      expect_error(df <- read_feather(feather_file), \"Unrecognized compression type:\")\n\nReview comment:\n       Great, I'll change these to skips and than add the Jira to the message then.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T15:27:22.879+0000",
                    "updated": "2021-01-11T15:27:22.879+0000",
                    "started": "2021-01-11T15:27:22.878+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534284",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534285",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on a change in pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#discussion_r555126207\n\n\n\n##########\nFile path: r/tests/testthat/test-backwards-compatibility.R\n##########\n@@ -0,0 +1,159 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To write a new version of a test file for a current version:\n+# write_parquet(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0.parquet\"))\n+\n+# To write a new version of a test file for an old version, use docker(-compose)\n+# to setup a linux distribution and use RStudio's public package manager binary\n+# repo to install the old version. The following commands should be run at the\n+# root of the arrow repo directory and might need slight adjusments.\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose build --no-cache r\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose run r /bin/bash\n+# R\n+# options(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n+# remotes::install_version(\"arrow\", version = \"1.0.1\")\n+# # get example data into the global env\n+# write_parquet(example_with_metadata, \"arrow/r/tests/testthat/golden-files/data-arrow_1.0.1.parquet\")\n+# quit()/exit\n+\n+test_that(\"reading a known Parquet file to dataframe with 2.0.0\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_2.0.0.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_equal(df, example_with_metadata)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(field_one = 12, field_two = \"more stuff\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+test_that(\"reading a known Parquet file to dataframe with 1.0.1\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_1.0.1.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+  example_with_metadata_sans_toplevel <- example_with_metadata\n+  attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+  expect_equal(df, example_with_metadata_sans_toplevel)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+for (comp in c(\"lz4\", \"uncompressed\", \"zstd\")) {\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_lz4.feather\"), compression = \"lz4\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_uncompressed.feather\"), compression = \"uncompressed\")\n+  # write_feather(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0_zstd.feather\"), compression = \"zstd\")\n+  test_that(\"reading a known Feather file to dataframe with 2.0.0\", {\n+    skip_if_not_available(comp)\n+    feather_file <- test_path(paste0(\"golden-files/data-arrow_2.0.0_\", comp,\".feather\"))\n+\n+    df <- read_feather(feather_file)\n+    expect_equal(df, example_with_metadata)\n+    expect_identical(dim(df), c(1L, 4L))\n+\n+    expect_equal(\n+      attributes(df),\n+      list(\n+        names = letters[1:4],\n+        row.names = 1L,\n+        top_level = list(field_one = 12, field_two = \"more stuff\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+    )\n+    expect_equal(attributes(df$a), list(class = \"special_string\"))\n+    expect_null(attributes(df$b))\n+    expect_equal(\n+      attributes(df$c),\n+      list(\n+        row.names = 1L,\n+        names = c(\"c1\", \"c2\", \"c3\"),\n+        class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+      )\n+    )\n+    expect_null(attributes(df$d))\n+  })\n+\n+  test_that(\"reading a known Feather file to dataframe with 1.0.1\", {\n\nReview comment:\n       Thanks for confirming this. I went searching on Friday and hadn't yet fully reconstructed that time log from git history :) \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T15:27:54.321+0000",
                    "updated": "2021-01-11T15:27:54.321+0000",
                    "started": "2021-01-11T15:27:54.321+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534285",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#issuecomment-758040710\n\n\n   @github-actions crossbow submit test-r-version-compatibility\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T15:56:16.003+0000",
                    "updated": "2021-01-11T15:56:16.003+0000",
                    "started": "2021-01-11T15:56:16.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534296",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on a change in pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#discussion_r555174313\n\n\n\n##########\nFile path: r/tests/testthat/test-backwards-compatibility.R\n##########\n@@ -0,0 +1,166 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+# To write a new version of a test file for a current version:\n+# write_parquet(example_with_metadata, test_path(\"golden-files/data-arrow_2.0.0.parquet\"))\n+\n+# To write a new version of a test file for an old version, use docker(-compose)\n+# to setup a linux distribution and use RStudio's public package manager binary\n+# repo to install the old version. The following commands should be run at the\n+# root of the arrow repo directory and might need slight adjusments.\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose build --no-cache r\n+# R_ORG=rstudio R_IMAGE=r-base R_TAG=4.0-focal docker-compose run r /bin/bash\n+# R\n+# options(repos = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\")\n+# remotes::install_version(\"arrow\", version = \"1.0.1\")\n+# # get example data into the global env\n+# write_parquet(example_with_metadata, \"arrow/r/tests/testthat/golden-files/data-arrow_1.0.1.parquet\")\n+# quit()/exit\n+\n+test_that(\"reading a known Parquet file to dataframe with 2.0.0\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_2.0.0.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_equal(df, example_with_metadata)\n+  expect_identical(dim(df), c(1L, 4L))\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(field_one = 12, field_two = \"more stuff\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\"))\n+  )\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_null(attributes(df$b))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+  expect_null(attributes(df$d))\n+})\n+\n+test_that(\"reading a known Parquet file to dataframe with 1.0.1\", {\n+  skip_if_not_available(\"snappy\")\n+  pq_file <- test_path(\"golden-files/data-arrow_1.0.1.parquet\")\n+\n+  df <- read_parquet(pq_file)\n+  # 1.0.1 didn't save top-level metadata, so we need to remove it.\n+  example_with_metadata_sans_toplevel <- example_with_metadata\n+  attributes(example_with_metadata_sans_toplevel)$top_level <- NULL\n+  expect_equal(df, example_with_metadata_sans_toplevel)\n\nReview comment:\n       why not just `expect_identical` and skip the rest of the assertions?\n\n##########\nFile path: r/extra-tests/test-read-files.R\n##########\n@@ -0,0 +1,165 @@\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#   http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing,\n+# software distributed under the License is distributed on an\n+# \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+# KIND, either express or implied.  See the License for the\n+# specific language governing permissions and limitations\n+# under the License.\n+\n+library(arrow)\n+library(testthat)\n+\n+pq_file <- \"files/ex_data.parquet\"\n+\n+test_that(\"Can read the file (parquet)\", {\n+  # We can read with no error, we assert metadata below\n+  expect_error(\n+    df <- read_parquet(pq_file),\n+    NA\n+  )\n+})\n+\n+### Parquet\n+test_that(\"Can see the metadata (parquet)\", {\n+  skip_if_version_less_than(\"2.0.0\", \"Version 1.0.1 can't read new version metadata.\")\n+\n+  df <- read_parquet(pq_file)\n+  expect_s3_class(df, \"tbl\")\n+\n+  expect_equal(\n+    attributes(df),\n+    list(\n+      names = letters[1:4],\n+      row.names = 1L,\n+      top_level = list(\n+        field_one = 12,\n+        field_two = \"more stuff\"\n+      ),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+\n+  # column-level attributes\n+  expect_equal(attributes(df$a), list(class = \"special_string\"))\n+  expect_equal(\n+    attributes(df$c),\n+    list(\n+      row.names = 1L,\n+      names = c(\"c1\", \"c2\", \"c3\"),\n+      class = c(\"tbl_df\", \"tbl\", \"data.frame\")\n+    )\n+  )\n+})\n\nReview comment:\n       What do you think about factoring this out to an `expect_something()` helper in this file, such that your tests here are just `expect_something(df)`?\r\n   \r\n   Of course, the simplest one would be `expect_identical(df, example_with_metadata)`, right? Though there are tradeoffs with that.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:27:01.596+0000",
                    "updated": "2021-01-11T16:27:01.596+0000",
                    "started": "2021-01-11T16:27:01.595+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534314",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534343",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jonkeane commented on pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#issuecomment-758082292\n\n\n   I'll consolidate those tests some more like you mentioned. The only thing left to do (if we want to) would be to add backwards compatibility tests for stream-to-filesystem. I can add them if they add substantially more coverage than we have with feather files themselves.\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T16:52:25.553+0000",
                    "updated": "2021-01-11T16:52:25.553+0000",
                    "started": "2021-01-11T16:52:25.553+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534343",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534380",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118#issuecomment-758120287\n\n\n   Revision: 5c9fe3fefe69cc5f5af1179897ad64027274762c\n   \n   Submitted crossbow builds: [ursa-labs/crossbow @ actions-870](https://github.com/ursa-labs/crossbow/branches/all?query=actions-870)\n   \n   |Task|Status|\n   |----|------|\n   |test-r-version-compatibility|[![Github Actions](https://github.com/ursa-labs/crossbow/workflows/Crossbow/badge.svg?branch=actions-870-github-test-r-version-compatibility)](https://github.com/ursa-labs/crossbow/actions?query=branch:actions-870-github-test-r-version-compatibility)|\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T17:57:25.543+0000",
                    "updated": "2021-01-11T17:57:25.543+0000",
                    "started": "2021-01-11T17:57:25.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534380",
                    "issueId": "13340914"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/worklog/534480",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson closed pull request #9118:\nURL: https://github.com/apache/arrow/pull/9118\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-11T19:32:25.310+0000",
                    "updated": "2021-01-11T19:32:25.310+0000",
                    "started": "2021-01-11T19:32:25.310+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "534480",
                    "issueId": "13340914"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 9000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4aea4efa[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@379d4310[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d5a137c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@20825a04[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@21d6489c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3c716201[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@111d5700[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@237d6d5d[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30fc4306[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@72a5e72[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7cf4acc0[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@34ab3186[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 9000,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jan 11 19:32:18 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-01-11T19:32:18.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-10623/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2020-11-16T20:40:27.000+0000",
        "updated": "2021-03-10T16:40:37.000+0000",
        "timeoriginalestimate": null,
        "description": "h4. How to reproduce\r\n * Create a data frame:\r\n{noformat}\r\ndf <- data.frame(col1 = 1:100){noformat}\r\n\r\n * Write it to parquet file using apache 2.0.0. The demo uses R 3.6 but same happens if you use R 4.0\r\n * Read the parquet file using apache 1.0.1. I only tried that in R 3.6\r\n\r\nh4. Expected\r\n\r\nThe data frame is the same as it was before:\r\n{noformat}\r\nstructure(list(col1 = 1:100), row.names = c(NA, 100L), class = \"data.frame\"){noformat}\r\nh4. Actual\r\n\r\nThe data frame has lost some information:\r\n{noformat}\r\nstructure(list(1:100), class = \"data.frame\"){noformat}\r\nh4. Demo\r\n\r\nI'm not sure what the easiest way is to put up a demo project for this, since you need to switch between arrow installations. But I've created this docker based demo:\r\n\r\n[https://github.com/fdlk/arrow2/]",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "2.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 9000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Version 1.0.1 breaks data.frame attributes when reading file written by 2.0.0",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/comment/17233724",
                    "id": "17233724",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "The problem is that arrow 2.0 knows how to preserve data.frame attributes in Arrow schema metadata but arrow 1.0 did not--it only preserved column attributes. Unfortunately the code in arrow 1.0 is seeing the new metadata written by 2.0 and erases the existing data.frame attributes but doesn't know how to restore correctly the new ones.\r\n\r\nA workaround for now would be to drop the metadata before converting to a data.frame, like:\r\n\r\n{code:r}\r\n# Using arrow 1.0.x\r\ntab <- read_parquet(\"file-written-by-arrow-2-0-0.parquet\", as_data_frame = FALSE)\r\ntab$metadata$r <- NULL\r\ndf <- as.data.frame(tab)\r\n{code}",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2020-11-17T16:43:17.642+0000",
                    "updated": "2020-11-17T16:43:17.642+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13340914/comment/17262895",
                    "id": "17262895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 9118\n[https://github.com/apache/arrow/pull/9118]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
                        "name": "npr",
                        "key": "npr",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
                        },
                        "displayName": "Neal Richardson",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2021-01-11T19:32:18.988+0000",
                    "updated": "2021-01-11T19:32:18.988+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0kn20:",
        "customfield_12314139": null
    }
}