{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13393204",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204",
    "key": "ARROW-13532",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available",
            "query-engine"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12620403",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12620403",
                "type": {
                    "id": "12310460",
                    "name": "Child-Issue",
                    "inward": "is a child of",
                    "outward": "is a parent of",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310460"
                },
                "inwardIssue": {
                    "id": "13376404",
                    "key": "ARROW-12633",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13376404",
                    "fields": {
                        "summary": "[C++] Query engine umbrella issue",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                            "description": "The issue is open and ready for the assignee to start work on it.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                            "name": "Open",
                            "id": "1",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                                "id": 2,
                                "key": "new",
                                "colorName": "blue-gray",
                                "name": "To Do"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                            "id": "2",
                            "description": "A new feature of the product, which has yet to be developed.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                            "name": "New Feature",
                            "subtask": false,
                            "avatarId": 21141
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=michalno",
            "name": "michalno",
            "key": "michalno",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Michal Nowakiewicz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=michalno",
            "name": "michalno",
            "key": "michalno",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Michal Nowakiewicz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=michalno",
            "name": "michalno",
            "key": "michalno",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Michal Nowakiewicz",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 6600,
            "total": 6600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13532/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 11,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/632728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "michalursa opened a new pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858\n\n\n   This change contains some refactoring of the code of the core hash table implementation used in grouper.\r\n   The goal of this change is to separate read-only operations on the hash table from operations modifying it.\r\n   \r\n   Originally the only provided operation for hash table access was the map operation, that would return ids of matching keys found in the hash table or automatically insert new keys if they are not found assigning them new ids.\r\n   \r\n   The change splits the map operation into a pipeline consisting of three stages:\r\n   - early filter\r\n   - find\r\n   - map_new_keys\r\n   The three of them called one after another provide the functionality of the map. The output of each of them is used as the input to the next one. Each next stage in the pipeline can potentially process a smaller subset of rows than the previous stage, because of filtering of the rows done at each stage. \r\n   \r\n   Early filter corresponds to the part that can be seen as an equivalent of Bloom filter. It quickly, based on hash values only and without executing any key comparison, marks the keys that definitely do not have a match in the hash table. False positives are possible, but as with the Bloom filter, their probability should be small. \r\n   \r\n   The next stage in the pipeline, find method, correspond to the full processing of all of the input rows with keys that are already present in the hash table. It is a read-only operation on the hash table. It finishes filtering from early filter getting rid of any potential false positives. It also outputs corresponding group ids for all keys found in the hash table. The caller may ignore group ids if only the filtering part is important, but there is no meaningful performance overhead in outputting them, since they are needed anyway for executing key comparisons. \r\n   \r\n   The final stage of the pipeline is completing the pre-existing map functionality, processing all new keys from the last batch. The set of new keys is identified by the result of the previous stage - filter operation. The last stage takes care of inserting new keys, assigning them new group ids, resizing the hash table when it gets too full. The number of inserted keys may be smaller than the number of keys passed to this stage, since there may be duplicates among them.\r\n   \r\n   The restructuring of the code should not only be useful for the implementation of join exec node, but it should also help in the future in implementation of shared multi-threaded access. Only the last stage of the pipeline can modify the hash table, so it is the only one that requires thread synchronization. At the same time it only processes the keys that were not present in the hash table when the processing of the exec batch started, so it can be expected in many cases to be a small fraction of all the inputs.\r\n   \r\n   This change is not tested yet.  \r\n   \r\n    \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-03T06:59:49.403+0000",
                    "updated": "2021-08-03T06:59:49.403+0000",
                    "started": "2021-08-03T06:59:49.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "632728",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/632729",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-891588454\n\n\n   https://issues.apache.org/jira/browse/ARROW-13532\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-03T07:00:13.457+0000",
                    "updated": "2021-08-03T07:00:13.457+0000",
                    "started": "2021-08-03T07:00:13.457+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "632729",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/639533",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#discussion_r691462649\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_map.cc\n##########\n@@ -91,100 +94,197 @@ inline void SwissTable::search_block(uint64_t block, int stamp, int start_slot,\n   *out_slot = static_cast<int>(CountLeadingZeros(matches | block_high_bits) >> 3);\n }\n \n-// This call follows the call to search_block.\n-// The input slot index is the output returned by it, which is a value from 0 to 8,\n-// with 8 indicating that both: no match was found and there were no empty slots.\n-//\n-// If the slot corresponds to a non-empty slot return a group id associated with it.\n-// Otherwise return any group id from any of the slots or\n-// zero, which is the default value stored in empty slots.\n-//\n inline uint64_t SwissTable::extract_group_id(const uint8_t* block_ptr, int slot,\n-                                             uint64_t group_id_mask) {\n-  // Input slot can be equal to 8, in which case we need to output any valid group id\n-  // value, so we take the one from slot 0 in the block.\n-  int clamped_slot = slot & 7;\n-\n+                                             uint64_t group_id_mask) const {\n   // Group id values for all 8 slots in the block are bit-packed and follow the status\n   // bytes. We assume here that the number of bits is rounded up to 8, 16, 32 or 64. In\n   // that case we can extract group id using aligned 64-bit word access.\n-  int num_groupid_bits = static_cast<int>(ARROW_POPCOUNT64(group_id_mask));\n-  ARROW_DCHECK(num_groupid_bits == 8 || num_groupid_bits == 16 ||\n-               num_groupid_bits == 32 || num_groupid_bits == 64);\n+  int num_group_id_bits = static_cast<int>(ARROW_POPCOUNT64(group_id_mask));\n+  ARROW_DCHECK(num_group_id_bits == 8 || num_group_id_bits == 16 ||\n+               num_group_id_bits == 32 || num_group_id_bits == 64);\n \n-  int bit_offset = clamped_slot * num_groupid_bits;\n+  int bit_offset = slot * num_group_id_bits;\n   const uint64_t* group_id_bytes =\n       reinterpret_cast<const uint64_t*>(block_ptr) + 1 + (bit_offset >> 6);\n   uint64_t group_id = (*group_id_bytes >> (bit_offset & 63)) & group_id_mask;\n \n   return group_id;\n }\n \n-// Return global slot id (the index including the information about the block)\n-// where the search should continue if the first comparison fails.\n-// This function always follows search_block and receives the slot id returned by it.\n-//\n-inline uint64_t SwissTable::next_slot_to_visit(uint64_t block_index, int slot,\n-                                               int match_found) {\n-  // The result should be taken modulo the number of all slots in all blocks,\n-  // but here we allow it to take a value one above the last slot index.\n-  // Modulo operation is postponed to later.\n-  return block_index * 8 + slot + match_found;\n+template <typename T, bool use_selection>\n+void SwissTable::extract_group_ids_imp(const int num_keys, const uint16_t* selection,\n+                                       const uint32_t* hashes, const uint8_t* local_slots,\n+                                       uint32_t* out_group_ids, int element_offset,\n+                                       int element_multiplier) const {\n+  const T* elements = reinterpret_cast<const T*>(blocks_) + element_offset;\n+  if (log_blocks_ == 0) {\n+    ARROW_DCHECK(sizeof(T) == sizeof(uint8_t));\n+    for (int i = 0; i < num_keys; ++i) {\n+      uint32_t id = use_selection ? selection[i] : i;\n+      uint32_t group_id = blocks_[8 + local_slots[id]];\n+      out_group_ids[id] = group_id;\n+    }\n+  } else {\n+    for (int i = 0; i < num_keys; ++i) {\n+      uint32_t id = use_selection ? selection[i] : i;\n+      uint32_t hash = hashes[id];\n+      int64_t pos =\n+          (hash >> (bits_hash_ - log_blocks_)) * element_multiplier + local_slots[id];\n+      uint32_t group_id = static_cast<uint32_t>(elements[pos]);\n+      ARROW_DCHECK(group_id < num_inserted_ || num_inserted_ == 0);\n+      out_group_ids[id] = group_id;\n+    }\n+  }\n }\n \n-// Implements first (fast-path, optimistic) lookup.\n-// Searches for a match only within the start block and\n-// trying only the first slot with a matching stamp.\n-//\n-// Comparison callback needed for match verification is done outside of this function.\n-// Match bit vector filled by it only indicates finding a matching stamp in a slot.\n+void SwissTable::extract_group_ids(const int num_keys, const uint16_t* optional_selection,\n+                                   const uint32_t* hashes, const uint8_t* local_slots,\n+                                   uint32_t* out_group_ids) const {\n+  // Group id values for all 8 slots in the block are bit-packed and follow the status\n+  // bytes. We assume here that the number of bits is rounded up to 8, 16, 32 or 64. In\n+  // that case we can extract group id using aligned 64-bit word access.\n+  int num_group_id_bits = num_groupid_bits_from_log_blocks(log_blocks_);\n+  ARROW_DCHECK(num_group_id_bits == 8 || num_group_id_bits == 16 ||\n+               num_group_id_bits == 32);\n+\n+  // Optimistically use simplified lookup involving only a start block to find\n+  // a single group id candidate for every input.\n+#if defined(ARROW_HAVE_AVX2)\n+  int num_group_id_bytes = num_group_id_bits / 8;\n+  if ((hardware_flags_ & arrow::internal::CpuInfo::AVX2) && !optional_selection) {\n+    extract_group_ids_avx2(num_keys, hashes, local_slots, out_group_ids, sizeof(uint64_t),\n+                           8 + 8 * num_group_id_bytes, num_group_id_bytes);\n+  } else {\n\nReview comment:\n       Nit: I think it's best to keep macro guarded blocks contained\r\n   ```suggestion\r\n       return;\r\n     }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_encode.cc\n##########\n@@ -864,6 +864,17 @@ void KeyEncoder::EncoderBinaryPair::Encode(uint32_t offset_within_row, KeyRowArr\n     EncodeImp_fn[dispatch_const](num_processed, offset_within_row, rows, col_prep[0],\n                                  col_prep[1]);\n   }\n+\n+  DCHECK(temp1->metadata().is_fixed_length);\n+  DCHECK(temp1->length() * temp1->metadata().fixed_length >=\n\nReview comment:\n       Please use the more specific macros for DCHECK and ARROW_CHECK statements\r\n   ```suggestion\r\n     DCHECK_GE(temp1->length() * temp1->metadata().fixed_length,\r\n   ```\r\n   There is a lint check against this, but it occasionally fails to parse in the presence of `operator->`\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_encode.cc\n##########\n@@ -1366,8 +1377,8 @@ void KeyEncoder::KeyRowMetadata::FromColumnMetadataVector(\n   // a) Boolean column, marked with fixed-length 0, is considered to have fixed-length\n   // part of 1 byte. b) Columns with fixed-length part being power of 2 or multiple of row\n   // alignment precede other columns. They are sorted among themselves based on size of\n-  // fixed-length part. c) Fixed-length columns precede varying-length columns when both\n-  // have the same size fixed-length part.\n+  // fixed-length part decreasing. c) Fixed-length columns precede varying-length columns\n\nReview comment:\n       \"They are sorted in decreasing order of the size of their fixed-length part\"\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-18T17:40:44.074+0000",
                    "updated": "2021-08-18T17:40:44.074+0000",
                    "started": "2021-08-18T17:40:44.074+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "639533",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/640970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "michalursa commented on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-904386317\n\n\n   > The other thing I'd expect to see here is a new method on `Grouper` for looking up IDs from an ExecBatch, something like `Result<Datum> Grouper::Find(const ExecBatch&) const;`. If you'd prefer to do that in a follow up, please open a JIRA for adding that method\r\n   \r\n   I created ARROW-13706. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-24T07:16:49.832+0000",
                    "updated": "2021-08-24T07:16:49.832+0000",
                    "started": "2021-08-24T07:16:49.832+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "640970",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/640971",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "michalursa commented on a change in pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#discussion_r694567806\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_map.cc\n##########\n@@ -91,100 +94,197 @@ inline void SwissTable::search_block(uint64_t block, int stamp, int start_slot,\n   *out_slot = static_cast<int>(CountLeadingZeros(matches | block_high_bits) >> 3);\n }\n \n-// This call follows the call to search_block.\n-// The input slot index is the output returned by it, which is a value from 0 to 8,\n-// with 8 indicating that both: no match was found and there were no empty slots.\n-//\n-// If the slot corresponds to a non-empty slot return a group id associated with it.\n-// Otherwise return any group id from any of the slots or\n-// zero, which is the default value stored in empty slots.\n-//\n inline uint64_t SwissTable::extract_group_id(const uint8_t* block_ptr, int slot,\n-                                             uint64_t group_id_mask) {\n-  // Input slot can be equal to 8, in which case we need to output any valid group id\n-  // value, so we take the one from slot 0 in the block.\n-  int clamped_slot = slot & 7;\n-\n+                                             uint64_t group_id_mask) const {\n   // Group id values for all 8 slots in the block are bit-packed and follow the status\n   // bytes. We assume here that the number of bits is rounded up to 8, 16, 32 or 64. In\n   // that case we can extract group id using aligned 64-bit word access.\n-  int num_groupid_bits = static_cast<int>(ARROW_POPCOUNT64(group_id_mask));\n-  ARROW_DCHECK(num_groupid_bits == 8 || num_groupid_bits == 16 ||\n-               num_groupid_bits == 32 || num_groupid_bits == 64);\n+  int num_group_id_bits = static_cast<int>(ARROW_POPCOUNT64(group_id_mask));\n+  ARROW_DCHECK(num_group_id_bits == 8 || num_group_id_bits == 16 ||\n+               num_group_id_bits == 32 || num_group_id_bits == 64);\n \n-  int bit_offset = clamped_slot * num_groupid_bits;\n+  int bit_offset = slot * num_group_id_bits;\n   const uint64_t* group_id_bytes =\n       reinterpret_cast<const uint64_t*>(block_ptr) + 1 + (bit_offset >> 6);\n   uint64_t group_id = (*group_id_bytes >> (bit_offset & 63)) & group_id_mask;\n \n   return group_id;\n }\n \n-// Return global slot id (the index including the information about the block)\n-// where the search should continue if the first comparison fails.\n-// This function always follows search_block and receives the slot id returned by it.\n-//\n-inline uint64_t SwissTable::next_slot_to_visit(uint64_t block_index, int slot,\n-                                               int match_found) {\n-  // The result should be taken modulo the number of all slots in all blocks,\n-  // but here we allow it to take a value one above the last slot index.\n-  // Modulo operation is postponed to later.\n-  return block_index * 8 + slot + match_found;\n+template <typename T, bool use_selection>\n+void SwissTable::extract_group_ids_imp(const int num_keys, const uint16_t* selection,\n+                                       const uint32_t* hashes, const uint8_t* local_slots,\n+                                       uint32_t* out_group_ids, int element_offset,\n+                                       int element_multiplier) const {\n+  const T* elements = reinterpret_cast<const T*>(blocks_) + element_offset;\n+  if (log_blocks_ == 0) {\n+    ARROW_DCHECK(sizeof(T) == sizeof(uint8_t));\n+    for (int i = 0; i < num_keys; ++i) {\n+      uint32_t id = use_selection ? selection[i] : i;\n+      uint32_t group_id = blocks_[8 + local_slots[id]];\n+      out_group_ids[id] = group_id;\n+    }\n+  } else {\n+    for (int i = 0; i < num_keys; ++i) {\n+      uint32_t id = use_selection ? selection[i] : i;\n+      uint32_t hash = hashes[id];\n+      int64_t pos =\n+          (hash >> (bits_hash_ - log_blocks_)) * element_multiplier + local_slots[id];\n+      uint32_t group_id = static_cast<uint32_t>(elements[pos]);\n+      ARROW_DCHECK(group_id < num_inserted_ || num_inserted_ == 0);\n+      out_group_ids[id] = group_id;\n+    }\n+  }\n }\n \n-// Implements first (fast-path, optimistic) lookup.\n-// Searches for a match only within the start block and\n-// trying only the first slot with a matching stamp.\n-//\n-// Comparison callback needed for match verification is done outside of this function.\n-// Match bit vector filled by it only indicates finding a matching stamp in a slot.\n+void SwissTable::extract_group_ids(const int num_keys, const uint16_t* optional_selection,\n+                                   const uint32_t* hashes, const uint8_t* local_slots,\n+                                   uint32_t* out_group_ids) const {\n+  // Group id values for all 8 slots in the block are bit-packed and follow the status\n+  // bytes. We assume here that the number of bits is rounded up to 8, 16, 32 or 64. In\n+  // that case we can extract group id using aligned 64-bit word access.\n+  int num_group_id_bits = num_groupid_bits_from_log_blocks(log_blocks_);\n+  ARROW_DCHECK(num_group_id_bits == 8 || num_group_id_bits == 16 ||\n+               num_group_id_bits == 32);\n+\n+  // Optimistically use simplified lookup involving only a start block to find\n+  // a single group id candidate for every input.\n+#if defined(ARROW_HAVE_AVX2)\n+  int num_group_id_bytes = num_group_id_bits / 8;\n+  if ((hardware_flags_ & arrow::internal::CpuInfo::AVX2) && !optional_selection) {\n+    extract_group_ids_avx2(num_keys, hashes, local_slots, out_group_ids, sizeof(uint64_t),\n+                           8 + 8 * num_group_id_bytes, num_group_id_bytes);\n+  } else {\n\nReview comment:\n       changed\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-24T07:17:03.028+0000",
                    "updated": "2021-08-24T07:17:03.028+0000",
                    "started": "2021-08-24T07:17:03.028+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "640971",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/640972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "michalursa commented on a change in pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#discussion_r694567945\n\n\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_encode.cc\n##########\n@@ -1366,8 +1377,8 @@ void KeyEncoder::KeyRowMetadata::FromColumnMetadataVector(\n   // a) Boolean column, marked with fixed-length 0, is considered to have fixed-length\n   // part of 1 byte. b) Columns with fixed-length part being power of 2 or multiple of row\n   // alignment precede other columns. They are sorted among themselves based on size of\n-  // fixed-length part. c) Fixed-length columns precede varying-length columns when both\n-  // have the same size fixed-length part.\n+  // fixed-length part decreasing. c) Fixed-length columns precede varying-length columns\n\nReview comment:\n       changed\n\n##########\nFile path: cpp/src/arrow/compute/exec/key_encode.cc\n##########\n@@ -864,6 +864,17 @@ void KeyEncoder::EncoderBinaryPair::Encode(uint32_t offset_within_row, KeyRowArr\n     EncodeImp_fn[dispatch_const](num_processed, offset_within_row, rows, col_prep[0],\n                                  col_prep[1]);\n   }\n+\n+  DCHECK(temp1->metadata().is_fixed_length);\n+  DCHECK(temp1->length() * temp1->metadata().fixed_length >=\n\nReview comment:\n       done\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-24T07:17:19.893+0000",
                    "updated": "2021-08-24T07:17:19.893+0000",
                    "started": "2021-08-24T07:17:19.893+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "640972",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/643617",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-908550532\n\n\n   @michalursa needs a rebase\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-30T17:44:08.755+0000",
                    "updated": "2021-08-30T17:44:08.755+0000",
                    "started": "2021-08-30T17:44:08.755+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "643617",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/644087",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-908550532\n\n\n   @michalursa needs a rebase\r\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-08-31T14:46:23.372+0000",
                    "updated": "2021-08-31T14:46:23.372+0000",
                    "started": "2021-08-31T14:46:23.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "644087",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/645357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera commented on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-910443669\n\n\n   @michalursa is there an update on this? #10845 depends on this. \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T16:20:37.081+0000",
                    "updated": "2021-09-01T16:20:37.081+0000",
                    "started": "2021-09-01T16:20:37.081+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645357",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/645358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nirandaperera edited a comment on pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858#issuecomment-910443669\n\n\n   @michalursa is there an update on this? #10845 depends on this and it will be great if this can be merged soon :slightly_smiling_face: \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-01T16:21:04.423+0000",
                    "updated": "2021-09-01T16:21:04.423+0000",
                    "started": "2021-09-01T16:21:04.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "645358",
                    "issueId": "13393204"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/worklog/654089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz closed pull request #10858:\nURL: https://github.com/apache/arrow/pull/10858\n\n\n   \n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-22T14:27:46.234+0000",
                    "updated": "2021-09-22T14:27:46.234+0000",
                    "started": "2021-09-22T14:27:46.234+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "654089",
                    "issueId": "13393204"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 6600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@5a459e3a[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3274297c[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@44ec5e6b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5740a043[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@59a19a14[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1e5a4f88[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3863452e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6af3a8d9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3fd7eea9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@73bdc0d4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5155b1b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@26177e2b[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 6600,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Sep 22 14:27:36 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-22T14:27:36.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13532/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-08-03T06:33:48.000+0000",
        "updated": "2021-09-22T14:27:47.000+0000",
        "timeoriginalestimate": null,
        "description": "Hash table used in group by provides one main method: map.\u00a0\r\nThis method will find an existing matching key in the hash table and output the corresponding group id, it the key already has been inserted in the hash table. Otherwise it will insert a new key and assign a new group id value to it.\r\n\r\nThis interface is tailored for the group by. In order to reuse the same hash table implementation in join, there must be a way to skip insertion of new keys into the hash table when looking up existing keys. When join processes probe side it needs to filter input rows based on finding a match in the hash table, but keeping hash table immutable and not automatically adding missing keys to it.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "1h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 6600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++][Compute] Join: add set membership test method to the grouper",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13393204/comment/17418628",
                    "id": "17418628",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 10858\n[https://github.com/apache/arrow/pull/10858]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bkietz",
                        "name": "bkietz",
                        "key": "bkietz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bkietz&avatarId=37277",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bkietz&avatarId=37277",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bkietz&avatarId=37277",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bkietz&avatarId=37277"
                        },
                        "displayName": "Ben Kietzman",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-22T14:27:36.547+0000",
                    "updated": "2021-09-22T14:27:36.547+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0tgd8:",
        "customfield_12314139": null
    }
}