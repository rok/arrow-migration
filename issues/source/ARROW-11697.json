{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13359588",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588",
    "key": "ARROW-11697",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/6",
            "id": "6",
            "description": "The problem isn't valid and it can't be fixed.",
            "name": "Invalid"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": null,
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333773",
                "id": "12333773",
                "name": "Rust"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wqc200",
            "name": "wqc200",
            "key": "wqc200",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "qingcheng wu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wqc200",
            "name": "wqc200",
            "key": "wqc200",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "qingcheng wu",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "aggregateprogress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 12600,
            "total": 12600,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11697/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 21,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/554753",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 opened a new pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531\n\n\n   select database();\r\n   we want to get database name in function database(), so add a provider for user defined function.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-19T13:46:44.910+0000",
                    "updated": "2021-02-19T13:46:44.910+0000",
                    "started": "2021-02-19T13:46:44.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554753",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/554767",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782093871\n\n\n   https://issues.apache.org/jira/browse/ARROW-11697\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-19T14:02:04.753+0000",
                    "updated": "2021-02-19T14:02:04.753+0000",
                    "started": "2021-02-19T14:02:04.752+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554767",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/554806",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782182509\n\n\n   FYI the integration test failures are likely not due to the changes in this PR. The Dev/Lint failures probably need to be looked at. \r\n   \r\n   I will review this PR more carefully tomorrow\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-19T16:25:23.969+0000",
                    "updated": "2021-02-19T16:25:23.969+0000",
                    "started": "2021-02-19T16:25:23.969+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554806",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/554807",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782182509\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-19T16:25:36.958+0000",
                    "updated": "2021-02-19T16:25:36.958+0000",
                    "started": "2021-02-19T16:25:36.958+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554807",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/554989",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782465926\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=h1) Report\n   > Merging [#9531](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=desc) (62090ff) into [master](https://codecov.io/gh/apache/arrow/commit/c100a5cca357f83d5bad21e9ba2d7fb9eb15a0d1?el=desc) (c100a5c) will **increase** coverage by `0.00%`.\n   > The diff coverage is `91.66%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9531/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #9531   +/-   ##\n   =======================================\n     Coverage   82.27%   82.27%           \n   =======================================\n     Files         244      245    +1     \n     Lines       55371    55395   +24     \n   =======================================\n   + Hits        45554    45579   +25     \n   + Misses       9817     9816    -1     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/arrow.flight.protocol.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL2Fycm93LmZsaWdodC5wcm90b2NvbC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `80.75% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udf.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkZi5ycw==) | `78.26% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `83.23% <50.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `90.84% <75.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `76.38% <80.00%> (+0.08%)` | :arrow_up: |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `90.13% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/func\\_provider.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2Z1bmNfcHJvdmlkZXIucnM=) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.92% <100.00%> (\u00f8)` | |\n   | ... and [2 more](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=footer). Last update [5647e90...62090ff](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T00:03:15.357+0000",
                    "updated": "2021-02-20T00:03:15.357+0000",
                    "started": "2021-02-20T00:03:15.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "554989",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555181",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782465926\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=h1) Report\n   > Merging [#9531](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=desc) (d407368) into [master](https://codecov.io/gh/apache/arrow/commit/c100a5cca357f83d5bad21e9ba2d7fb9eb15a0d1?el=desc) (c100a5c) will **increase** coverage by `0.00%`.\n   > The diff coverage is `77.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9531/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree)\n   \n   ```diff\n   @@           Coverage Diff           @@\n   ##           master    #9531   +/-   ##\n   =======================================\n     Coverage   82.27%   82.27%           \n   =======================================\n     Files         244      245    +1     \n     Lines       55371    55398   +27     \n   =======================================\n   + Hits        45554    45580   +26     \n   - Misses       9817     9818    +1     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/arrow.flight.protocol.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL2Fycm93LmZsaWdodC5wcm90b2NvbC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/json/reader.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvanNvbi9yZWFkZXIucnM=) | `83.57% <0.00%> (-0.06%)` | :arrow_down: |\n   | [rust/arrow/src/json/writer.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvanNvbi93cml0ZXIucnM=) | `86.17% <0.00%> (\u00f8)` | |\n   | [rust/arrow/src/util/test\\_util.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvdXRpbC90ZXN0X3V0aWwucnM=) | `90.90% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `80.75% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udf.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkZi5ycw==) | `78.26% <\u00f8> (\u00f8)` | |\n   | [...ion-testing/src/bin/arrow-json-integration-test.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9pbnRlZ3JhdGlvbi10ZXN0aW5nL3NyYy9iaW4vYXJyb3ctanNvbi1pbnRlZ3JhdGlvbi10ZXN0LnJz) | `0.00% <0.00%> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `83.23% <50.00%> (\u00f8)` | |\n   | [rust/arrow/src/record\\_batch.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvcmVjb3JkX2JhdGNoLnJz) | `83.70% <75.00%> (-0.63%)` | :arrow_down: |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `90.84% <75.00%> (\u00f8)` | |\n   | ... and [8 more](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=footer). Last update [dbe0b2a...d407368](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T13:12:41.852+0000",
                    "updated": "2021-02-20T13:12:41.852+0000",
                    "started": "2021-02-20T13:12:41.852+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555181",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555187",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on a change in pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#discussion_r579654223\n\n\n\n##########\nFile path: rust/arrow-flight/src/arrow.flight.protocol.rs\n##########\n@@ -499,8 +499,9 @@ pub mod flight_service_server {\n     #[async_trait]\n     pub trait FlightService: Send + Sync + 'static {\n         #[doc = \"Server streaming response type for the Handshake method.\"]\n-        type HandshakeStream: Stream<Item = Result<super::HandshakeResponse, tonic::Status>>\n\nReview comment:\n       I wonder if you meant to make this change in this PR?\r\n   \r\n   This sometimes happens to me (I think it is something about using nightly vs stable `rustfmt`)\n\n##########\nFile path: rust/datafusion/tests/func_provider.rs\n##########\n@@ -0,0 +1,84 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use std::sync::Arc;\n+\n+use arrow::datatypes::DataType;\n+use arrow::util::display::array_value_to_string;\n+\n+use datafusion::error::Result;\n+use datafusion::execution::context::ExecutionContext;\n+use datafusion::physical_plan::functions::{ActualFunction, FuncProvider};\n+use datafusion::physical_plan::functions::{ReturnTypeFunction, Signature};\n+use datafusion::physical_plan::udf::ScalarUDF;\n+\n+use datafusion::physical_plan::ColumnarValue;\n+use datafusion::scalar::ScalarValue;\n+\n+#[derive(Debug, Clone)]\n+pub struct DatabaseExec {\n+    db_name: String,\n+}\n+\n+impl DatabaseExec {\n+    pub fn try_new(db_name: &str) -> Result<Self> {\n+        Ok(Self {\n+            db_name: db_name.to_string(),\n+        })\n+    }\n+}\n+\n+impl FuncProvider for DatabaseExec {\n+    fn evaluate(&self, inputs: &[ColumnarValue]) -> Result<ColumnarValue> {\n+        Ok(ColumnarValue::Scalar(ScalarValue::Utf8(Some(\n+            self.db_name.to_string(),\n+        ))))\n+    }\n+}\n+\n+async fn assert_provider_row_count(expected_count: String) -> Result<()> {\n\nReview comment:\n       the `expected_count` name here is confusing to me -- as it is a string. Perhaps `expected_name`?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T13:36:45.037+0000",
                    "updated": "2021-02-20T13:36:45.037+0000",
                    "started": "2021-02-20T13:36:45.037+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555187",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555222",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782465926\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=h1) Report\n   > Merging [#9531](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=desc) (c882ef2) into [master](https://codecov.io/gh/apache/arrow/commit/dbe0b2a8f8a332b3e45aef380493525160fcea7b?el=desc) (dbe0b2a) will **increase** coverage by `0.01%`.\n   > The diff coverage is `94.11%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9531/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9531      +/-   ##\n   ==========================================\n   + Coverage   82.26%   82.28%   +0.01%     \n   ==========================================\n     Files         244      245       +1     \n     Lines       55373    55418      +45     \n   ==========================================\n   + Hits        45554    45599      +45     \n     Misses       9819     9819              \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/arrow.flight.protocol.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL2Fycm93LmZsaWdodC5wcm90b2NvbC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `80.75% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udf.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkZi5ycw==) | `78.26% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `83.23% <50.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `76.38% <80.00%> (+0.08%)` | :arrow_up: |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `90.84% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `90.13% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/func\\_provider.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2Z1bmNfcHJvdmlkZXIucnM=) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.92% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/transform/fixed\\_binary.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2ZpeGVkX2JpbmFyeS5ycw==) | `78.94% <0.00%> (-5.27%)` | :arrow_down: |\n   | ... and [5 more](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=footer). Last update [dbe0b2a...c882ef2](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T14:56:55.170+0000",
                    "updated": "2021-02-20T14:56:55.170+0000",
                    "started": "2021-02-20T14:56:55.170+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555222",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555225",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782699720\n\n\n   @alamb \r\n   \r\n   I'm using it in struct\r\n   \r\n   ```\r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::ActualFunction;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   #[derive(Debug, Clone)]\r\n   pub struct TestProvider {\r\n       db_name: String,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n           })\r\n       }\r\n   \r\n       pub async fn test(&self, expected_name: String) -> Result<()> {\r\n           let mut ctx = ExecutionContext::new();\r\n   \r\n           // implementation of `database()` function that returns expected_name\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let res = StringArray::from(vec![Some(self.db_name.as_str())]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n           );\r\n   \r\n           let sql_results = ctx.sql(&format!(\"select database()\"))?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n           assert_eq!(sql_result_col, expected_name);\r\n   \r\n           Ok(())\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let p = TestProvider::try_new(\"test\")?;\r\n       p.test(\"test\".to_string());\r\n       Ok(())\r\n   }\r\n   ```\r\n   \r\n   but there's an error\r\n   \r\n   > error[E0759]: `self` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\r\n   >   --> datafusion/tests/func_provider.rs:43:23\r\n   >    |\r\n   > 43 |     pub async fn test(&self, expected_name: String) -> Result<()> {\r\n   >    |                       ^^^^^\r\n   >    |                       |\r\n   >    |                       this data with an anonymous lifetime `'_`...\r\n   >    |                       ...is captured here...\r\n   > ...\r\n   > 56 |             ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n   >    |                                      -------------------- ...and is required to live as long as `'static` here\r\n   \r\n   So i want to add a provider.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T15:35:08.418+0000",
                    "updated": "2021-02-20T15:35:08.418+0000",
                    "started": "2021-02-20T15:35:08.418+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555225",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782699720\n\n\n   @alamb \r\n   \r\n   I'm using it in struct\r\n   \r\n   ```\r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::ActualFunction;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   #[derive(Debug, Clone)]\r\n   pub struct TestProvider {\r\n       db_name: String,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n           })\r\n       }\r\n   \r\n       pub async fn test(&self, expected_name: String) -> Result<()> {\r\n           let mut ctx = ExecutionContext::new();\r\n   \r\n           // implementation of `database()` function that returns expected_name\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let res = StringArray::from(vec![Some(self.db_name.as_str())]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n           );\r\n   \r\n           let sql_results = ctx.sql(&format!(\"select database()\"))?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n           assert_eq!(sql_result_col, expected_name);\r\n   \r\n           Ok(())\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let p = TestProvider::try_new(\"test\")?;\r\n       p.test(\"test\".to_string());\r\n       Ok(())\r\n   }\r\n   ```\r\n   \r\n   but there's an error\r\n   \r\n   > error[E0759]: `self` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\r\n   >   --> datafusion/tests/func_provider.rs:43:23\r\n   >    |\r\n   > 43 |     pub async fn test(&self, expected_name: String) -> Result<()> {\r\n   >    |                       ^^^^^\r\n   >    |                       |\r\n   >    |                       this data with an anonymous lifetime `'_`...\r\n   >    |                       ...is captured here...\r\n   > ...\r\n   > 56 |             ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n   >    |                                      -------------------- ...and is required to live as long as `'static` here\r\n   \r\n   I think the function pointer doesn't support this syntactic sugar, so i want to add a provider.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T15:39:03.584+0000",
                    "updated": "2021-02-20T15:39:03.584+0000",
                    "started": "2021-02-20T15:39:03.583+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555226",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782699720\n\n\n   @alamb \r\n   \r\n   I'm using it in struct\r\n   \r\n   ```\r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::ActualFunction;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   #[derive(Debug, Clone)]\r\n   pub struct TestProvider {\r\n       db_name: String,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n           })\r\n       }\r\n   \r\n       pub async fn test(&self, expected_name: String) -> Result<()> {\r\n           let mut ctx = ExecutionContext::new();\r\n   \r\n           // implementation of `database()` function that returns expected_name\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let res = StringArray::from(vec![Some(self.db_name.as_str())]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n           );\r\n   \r\n           let sql_results = ctx.sql(&format!(\"select database()\"))?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n           assert_eq!(sql_result_col, expected_name);\r\n   \r\n           Ok(())\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let p = TestProvider::try_new(\"test\")?;\r\n       p.test(\"test\".to_string());\r\n       Ok(())\r\n   }\r\n   ```\r\n   \r\n   but there's an error\r\n   \r\n   > error[E0759]: `self` has an anonymous lifetime `'_` but it needs to satisfy a `'static` lifetime requirement\r\n   >   --> datafusion/tests/func_provider.rs:43:23\r\n   >    |\r\n   > 43 |     pub async fn test(&self, expected_name: String) -> Result<()> {\r\n   >    |                       ^^^^^\r\n   >    |                       |\r\n   >    |                       this data with an anonymous lifetime `'_`...\r\n   >    |                       ...is captured here...\r\n   > ...\r\n   > 56 |             ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n   >    |                                      -------------------- ...and is required to live as long as `'static` here\r\n   \r\n   I think the function pointer doesn't support this syntactic sugar, so i want to add a provider that supports context variables.\r\n   \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T15:40:26.550+0000",
                    "updated": "2021-02-20T15:40:26.550+0000",
                    "started": "2021-02-20T15:40:26.549+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555227",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555236",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 commented on a change in pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#discussion_r579682293\n\n\n\n##########\nFile path: rust/arrow-flight/src/arrow.flight.protocol.rs\n##########\n@@ -499,8 +499,9 @@ pub mod flight_service_server {\n     #[async_trait]\n     pub trait FlightService: Send + Sync + 'static {\n         #[doc = \"Server streaming response type for the Handshake method.\"]\n-        type HandshakeStream: Stream<Item = Result<super::HandshakeResponse, tonic::Status>>\n\nReview comment:\n       SELECT @@variable and SELECT DATABASE () are two different syntaxes.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T17:12:40.711+0000",
                    "updated": "2021-02-20T17:12:40.711+0000",
                    "started": "2021-02-20T17:12:40.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555236",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555237",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 commented on a change in pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#discussion_r579682356\n\n\n\n##########\nFile path: rust/datafusion/tests/func_provider.rs\n##########\n@@ -0,0 +1,84 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+use std::sync::Arc;\n+\n+use arrow::datatypes::DataType;\n+use arrow::util::display::array_value_to_string;\n+\n+use datafusion::error::Result;\n+use datafusion::execution::context::ExecutionContext;\n+use datafusion::physical_plan::functions::{ActualFunction, FuncProvider};\n+use datafusion::physical_plan::functions::{ReturnTypeFunction, Signature};\n+use datafusion::physical_plan::udf::ScalarUDF;\n+\n+use datafusion::physical_plan::ColumnarValue;\n+use datafusion::scalar::ScalarValue;\n+\n+#[derive(Debug, Clone)]\n+pub struct DatabaseExec {\n+    db_name: String,\n+}\n+\n+impl DatabaseExec {\n+    pub fn try_new(db_name: &str) -> Result<Self> {\n+        Ok(Self {\n+            db_name: db_name.to_string(),\n+        })\n+    }\n+}\n+\n+impl FuncProvider for DatabaseExec {\n+    fn evaluate(&self, inputs: &[ColumnarValue]) -> Result<ColumnarValue> {\n+        Ok(ColumnarValue::Scalar(ScalarValue::Utf8(Some(\n+            self.db_name.to_string(),\n+        ))))\n+    }\n+}\n+\n+async fn assert_provider_row_count(expected_count: String) -> Result<()> {\n\nReview comment:\n       yes, expected_name is right\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T17:13:23.639+0000",
                    "updated": "2021-02-20T17:13:23.639+0000",
                    "started": "2021-02-20T17:13:23.638+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555237",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555238",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 commented on a change in pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#discussion_r579683039\n\n\n\n##########\nFile path: rust/arrow-flight/src/arrow.flight.protocol.rs\n##########\n@@ -499,8 +499,9 @@ pub mod flight_service_server {\n     #[async_trait]\n     pub trait FlightService: Send + Sync + 'static {\n         #[doc = \"Server streaming response type for the Handshake method.\"]\n-        type HandshakeStream: Stream<Item = Result<super::HandshakeResponse, tonic::Status>>\n\nReview comment:\n       SELECT @@variable and SELECT DATABASE () are two different syntaxes.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-20T17:18:40.817+0000",
                    "updated": "2021-02-20T17:18:40.817+0000",
                    "started": "2021-02-20T17:18:40.816+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555238",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555329",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782465926\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=h1) Report\n   > Merging [#9531](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=desc) (64a03c5) into [master](https://codecov.io/gh/apache/arrow/commit/5fc0e5e2c4e70163d003e06cadb1176264df3e6a?el=desc) (5fc0e5e) will **increase** coverage by `0.01%`.\n   > The diff coverage is `94.11%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9531/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9531      +/-   ##\n   ==========================================\n   + Coverage   82.27%   82.28%   +0.01%     \n   ==========================================\n     Files         244      245       +1     \n     Lines       55393    55418      +25     \n   ==========================================\n   + Hits        45573    45600      +27     \n   + Misses       9820     9818       -2     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow-flight/src/arrow.flight.protocol.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy1mbGlnaHQvc3JjL2Fycm93LmZsaWdodC5wcm90b2NvbC5ycw==) | `0.00% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/logical\\_plan/expr.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9sb2dpY2FsX3BsYW4vZXhwci5ycw==) | `80.75% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/udf.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL3VkZi5ycw==) | `78.26% <\u00f8> (\u00f8)` | |\n   | [rust/datafusion/src/sql/planner.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9zcWwvcGxhbm5lci5ycw==) | `83.23% <50.00%> (\u00f8)` | |\n   | [rust/datafusion/src/physical\\_plan/functions.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9waHlzaWNhbF9wbGFuL2Z1bmN0aW9ucy5ycw==) | `76.38% <80.00%> (+0.08%)` | :arrow_up: |\n   | [rust/datafusion/src/execution/context.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vY29udGV4dC5ycw==) | `90.84% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/src/execution/dataframe\\_impl.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3NyYy9leGVjdXRpb24vZGF0YWZyYW1lX2ltcGwucnM=) | `90.13% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/func\\_provider.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL2Z1bmNfcHJvdmlkZXIucnM=) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/datafusion/tests/sql.rs](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree#diff-cnVzdC9kYXRhZnVzaW9uL3Rlc3RzL3NxbC5ycw==) | `99.92% <100.00%> (\u00f8)` | |\n   | ... and [3 more](https://codecov.io/gh/apache/arrow/pull/9531/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=footer). Last update [5fc0e5e...64a03c5](https://codecov.io/gh/apache/arrow/pull/9531?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-21T02:00:25.822+0000",
                    "updated": "2021-02-21T02:00:25.822+0000",
                    "started": "2021-02-21T02:00:25.821+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555329",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/555384",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-782837158\n\n\n   Hi @wqc200  -- I think the compiler issue in your example is due to the reference of `self` in the wrapped closure.\r\n   \r\n   If you pass in a `clone` of the string, then the example compiles and passes:\r\n   \r\n   \r\n   ```rust\r\n   \r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::ActualFunction;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   #[derive(Debug, Clone)]\r\n   pub struct TestProvider {\r\n       db_name: String,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n           })\r\n       }\r\n   \r\n       pub async fn test(&self, expected_name: String) -> Result<()> {\r\n           let mut ctx = ExecutionContext::new();\r\n   \r\n           // implementation of `database()` function that returns expected_name\r\n           let captured_name = self.db_name.clone();\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let res = StringArray::from(vec![Some(captured_name.as_str())]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               ActualFunction::FuncImpl(make_scalar_function(database_function))), // function implementation\r\n           );\r\n   \r\n           let sql_results = ctx.sql(&format!(\"select database()\"))?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n           assert_eq!(sql_result_col, expected_name);\r\n   \r\n           Ok(())\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let p = TestProvider::try_new(\"test\")?;\r\n       p.test(\"test\".to_string());\r\n       Ok(())\r\n   }\r\n   \r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-21T10:51:10.071+0000",
                    "updated": "2021-02-21T10:51:10.071+0000",
                    "started": "2021-02-21T10:51:10.071+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "555384",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/556318",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-784181262\n\n\n   @alamb I want to change the db name, but database() get old db name.\r\n   \r\n   ```\r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   pub struct TestProvider {\r\n       db_name: String,\r\n       ctx: ExecutionContext,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           let ctx = ExecutionContext::new();\r\n   \r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n               ctx,\r\n           })\r\n       }\r\n   \r\n       pub fn change_db_name(&mut self, db_name: &str) {\r\n           self.db_name = db_name.to_string();\r\n       }\r\n   \r\n       pub fn register_udf(&mut self) {\r\n           // implementation of `database()` function that returns expected_name\r\n           let captured_name = self.db_name.clone();\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let db_name = captured_name.as_str();\r\n               let res = StringArray::from(vec![Some(db_name)]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           self.ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               make_scalar_function(database_function)), // function implementation\r\n           );\r\n       }\r\n   \r\n       pub async fn get_db_name(&mut self) -> Result<String> {\r\n           let sql_results = self.ctx.sql(\"select database()\")?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n   \r\n           Ok(sql_result_col)\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let mut p = TestProvider::try_new(\"test1\")?;\r\n       p.register_udf();\r\n       p.change_db_name(\"test\");\r\n   \r\n       let db_name = p.get_db_name().await?;\r\n       let expected_db_name = \"test\";\r\n   \r\n       assert_eq!(db_name, expected_db_name);\r\n   \r\n       Ok(())\r\n   }\r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T12:55:18.904+0000",
                    "updated": "2021-02-23T12:55:18.904+0000",
                    "started": "2021-02-23T12:55:18.903+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556318",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/556319",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wqc200 edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-784181262\n\n\n   @alamb I want to change the db name, but database() get old db name.\r\n   \r\n   ```\r\n   use std::sync::Arc;\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   pub struct TestProvider {\r\n       db_name: String,\r\n       ctx: ExecutionContext,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           let ctx = ExecutionContext::new();\r\n   \r\n           Ok(Self {\r\n               db_name: db_name.to_string(),\r\n               ctx,\r\n           })\r\n       }\r\n   \r\n       pub fn change_db_name(&mut self, db_name: &str) {\r\n           self.db_name = db_name.to_string();\r\n       }\r\n   \r\n       pub fn register_udf(&mut self) {\r\n           // implementation of `database()` function that returns expected_name\r\n           let captured_name = self.db_name.clone();\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               let db_name = captured_name.as_str();\r\n               let res = StringArray::from(vec![Some(db_name)]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           self.ctx.register_udf(create_udf(\r\n               \"database\", // fuenction name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               make_scalar_function(database_function)), // function implementation\r\n           );\r\n       }\r\n   \r\n       pub async fn get_db_name(&mut self) -> Result<String> {\r\n           let sql_results = self.ctx.sql(\"select database()\")?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n   \r\n           Ok(sql_result_col)\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let mut p = TestProvider::try_new(\"test1\")?;\r\n       p.register_udf();\r\n       p.change_db_name(\"test\");\r\n   \r\n       let db_name = p.get_db_name().await?;\r\n       let expected_db_name = \"test\";\r\n   \r\n       assert_eq!(db_name, expected_db_name);\r\n   \r\n       Ok(())\r\n   }\r\n   ```\r\n   \r\n   there's an error\r\n   \r\n   > thread 'test_func_provider_results' panicked at 'assertion failed: `(left == right)`\r\n   >   left: `\"test1\"`,\r\n   >  right: `\"test\"`', datafusion/tests/func_provider.rs:67:5\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T12:56:32.991+0000",
                    "updated": "2021-02-23T12:56:32.991+0000",
                    "started": "2021-02-23T12:56:32.991+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556319",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/556637",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb commented on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-784596915\n\n\n   @wqc200  here is a way to use `std::sync::Mutex` to accomplish changing database name:\r\n   \r\n   ```\r\n   use std::sync::{Arc, Mutex};\r\n   \r\n   use arrow::array::ArrayRef;\r\n   use arrow::array::StringArray;\r\n   use arrow::datatypes::DataType;\r\n   use arrow::util::display::array_value_to_string;\r\n   \r\n   use datafusion::error::Result;\r\n   use datafusion::execution::context::ExecutionContext;\r\n   use datafusion::logical_plan::create_udf;\r\n   use datafusion::physical_plan::functions::make_scalar_function;\r\n   \r\n   pub struct TestProvider {\r\n       // Wrap the db_name in a mutex so it can be changed after registration\r\n       db_name: Arc<Mutex<String>>,\r\n       ctx: ExecutionContext,\r\n   }\r\n   \r\n   impl TestProvider {\r\n       pub fn try_new(db_name: &str) -> Result<Self> {\r\n           let ctx = ExecutionContext::new();\r\n   \r\n           Ok(Self {\r\n               db_name: Arc::new(Mutex::new(db_name.to_string())),\r\n               ctx,\r\n           })\r\n       }\r\n   \r\n       pub fn change_db_name(&mut self, db_name: &str) {\r\n           *self.db_name.lock().expect(\"mutex poisoned\") = db_name.to_string();\r\n       }\r\n   \r\n       pub fn register_udf(&mut self) {\r\n           // implementation of `database()` function that returns the\r\n           // current value of `self.db_name`\r\n           let captured_name = self.db_name.clone();\r\n           let database_function = move |_args: &[ArrayRef]| {\r\n               // Lock the mutex, and read current db_name\r\n               let captured_name = captured_name.lock().expect(\"mutex posioned\");\r\n               let db_name = captured_name.as_str();\r\n               let res = StringArray::from(vec![Some(db_name)]);\r\n               Ok(Arc::new(res) as ArrayRef)\r\n           };\r\n   \r\n           self.ctx.register_udf(create_udf(\r\n               \"database\", // function name\r\n               vec![], // input argument types\r\n               Arc::new(DataType::Utf8), // output type\r\n               make_scalar_function(database_function)), // function implementation\r\n           );\r\n       }\r\n   \r\n       pub async fn get_db_name(&mut self) -> Result<String> {\r\n           let sql_results = self.ctx.sql(\"select database()\")?.collect().await?;\r\n   \r\n           let sql_result_col = array_value_to_string(sql_results[0].column(0), 0).unwrap();\r\n   \r\n           Ok(sql_result_col)\r\n       }\r\n   }\r\n   \r\n   #[tokio::test]\r\n   async fn test_func_provider_results() -> Result<()> {\r\n       let mut p = TestProvider::try_new(\"test1\")?;\r\n       p.register_udf();\r\n       p.change_db_name(\"test\");\r\n   \r\n       let db_name = p.get_db_name().await?;\r\n       let expected_db_name = \"test\";\r\n   \r\n       assert_eq!(db_name, expected_db_name);\r\n   \r\n       Ok(())\r\n   }\r\n   \r\n   ```\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T23:26:43.211+0000",
                    "updated": "2021-02-23T23:26:43.211+0000",
                    "started": "2021-02-23T23:26:43.211+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556637",
                    "issueId": "13359588"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/worklog/556639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alamb edited a comment on pull request #9531:\nURL: https://github.com/apache/arrow/pull/9531#issuecomment-784596915\n\n\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-02-23T23:27:09.793+0000",
                    "updated": "2021-02-23T23:27:09.793+0000",
                    "started": "2021-02-23T23:27:09.792+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "556639",
                    "issueId": "13359588"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 12600,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4f10754c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5e65724d[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@c2455d3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@79a6b900[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@96e5a41[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5eff6f8e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@705b334f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3c79fafd[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@47be0361[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@62188707[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4bf01140[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@382db4d1[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 12600,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Apr 26 12:48:18 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-04-26T12:48:20.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11697/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2021-02-19T13:41:32.000+0000",
        "updated": "2021-04-26T12:48:20.000+0000",
        "timeoriginalestimate": null,
        "description": "select database();\r\n\r\nwe want to get database name in function database(), so add a provider for user defined function.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3.5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 12600
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Add provider for user defined function",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/comment/17331207",
                    "id": "17331207",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "this is a test",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-24T11:08:18.274+0000",
                    "updated": "2021-04-24T11:08:18.274+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13359588/comment/17332221",
                    "id": "17332221",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Migrated to github: https://github.com/apache/arrow-rs/issues/190",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alamb",
                        "name": "alamb",
                        "key": "alamb",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=alamb&avatarId=43364",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=alamb&avatarId=43364",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=alamb&avatarId=43364",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=alamb&avatarId=43364"
                        },
                        "displayName": "Andrew Lamb",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-04-26T12:48:18.506+0000",
                    "updated": "2021-04-26T12:48:18.506+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z0nudc:",
        "customfield_12314139": null
    }
}