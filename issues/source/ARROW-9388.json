{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13315947",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947",
    "key": "ARROW-9388",
    "fields": {
        "parent": {
            "id": "13117652",
            "key": "ARROW-1797",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13117652",
            "fields": {
                "summary": "[C++] Implement binary arithmetic kernels for numeric arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12345977",
                "id": "12345977",
                "description": "",
                "name": "2.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2020-10-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "compute",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12597247",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12597247",
                "type": {
                    "id": "10030",
                    "name": "Reference",
                    "inward": "is related to",
                    "outward": "relates to",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10030"
                },
                "outwardIssue": {
                    "id": "13323719",
                    "key": "ARROW-9811",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13323719",
                    "fields": {
                        "summary": "[C++] Unchecked floating point division by 0 should succeed",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
                            "id": "5",
                            "description": "General wishlist item.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Wish",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            },
            {
                "id": "12593091",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12593091",
                "type": {
                    "id": "10001",
                    "name": "dependent",
                    "inward": "is depended upon by",
                    "outward": "depends upon",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/10001"
                },
                "inwardIssue": {
                    "id": "13312511",
                    "key": "ARROW-9187",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13312511",
                    "fields": {
                        "summary": "[R] Add bindings for arithmetic kernels",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=fan_li_ya",
            "name": "fan_li_ya",
            "key": "fan_li_ya",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Liya Fan",
            "active": true,
            "timeZone": "Asia/Shanghai"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 25200,
            "total": 25200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9388/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 42,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458496",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 opened a new pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748\n\n\n   See https://issues.apache.org/jira/browse/ARROW-9388\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T07:14:20.781+0000",
                    "updated": "2020-07-14T07:14:20.781+0000",
                    "started": "2020-07-14T07:14:20.780+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458496",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658017491\n\n\n   https://issues.apache.org/jira/browse/ARROW-9388\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T07:25:21.676+0000",
                    "updated": "2020-07-14T07:25:21.676+0000",
                    "started": "2020-07-14T07:25:21.676+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458501",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458639",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454386790\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -74,6 +74,18 @@ class TestBinaryArithmetic : public TestBase {\n     ValidateAndAssertApproxEqual(actual.make_array(), expected);\n   }\n \n+  // (Array, Scalar)\n+  void AssertBinop(BinaryFunction func, const std::string& lhs, CType rhs,\n+                   const std::string& expected) {\n+    auto left = ArrayFromJSON(type_singleton(), lhs);\n+    ASSERT_OK_AND_ASSIGN(auto right, MakeScalar(type_singleton(), rhs));\n+\n+    auto exp = ArrayFromJSON(type_singleton(), expected);\n+\n+    ASSERT_OK_AND_ASSIGN(auto actual, func(left, right, options_, nullptr));\n+    ValidateAndAssertApproxEqual(actual.make_array(), expected);\n+  }\n\nReview comment:\n       Need to check slices also\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -219,48 +219,89 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_integer<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+};\n+\n+struct DivideChecked {\n+  template <typename T>\n+  static enable_if_integer<T> Call(KernelContext* ctx, T left, T right) {\n+    if (right == 0) {\n+      ctx->SetStatus(Status::Invalid(\"divide by 0\"));\n+      return right;\n+    }\n+    return Divide::Call(ctx, left, right);\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left * right;\n+  }\n+};\n+\n using applicator::ScalarBinaryEqualTypes;\n+using applicator::ScalarBinaryNotNullEqualTypes;\n \n // Generate a kernel given an arithmetic functor\n //\n // To avoid undefined behaviour of signed integer overflow treat the signed\n // input argument values as unsigned then cast them to signed making them wrap\n // around.\n template <typename Op>\n-ArrayKernelExec NumericEqualTypesBinary(detail::GetTypeId get_id) {\n+ArrayKernelExec NumericEqualTypesBinary(detail::GetTypeId get_id,\n+                                        bool skip_null = false) {\n   switch (get_id.id) {\n     case Type::INT8:\n-      return ScalarBinaryEqualTypes<Int8Type, Int8Type, Op>::Exec;\n+      return skip_null ? ScalarBinaryNotNullEqualTypes<Int8Type, Int8Type, Op>::Exec\n\nReview comment:\n       I think this will cause both templates to always be instantiated, which is not what we want\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -169,7 +169,6 @@ class TestCast : public TestBase {\n     ASSERT_EQ(in_values.size(), out_values.size());\n     std::shared_ptr<Array> input, expected;\n     if (is_valid.size() > 0) {\n-      ASSERT_EQ(is_valid.size(), out_values.size());\n\nReview comment:\n       This change is out of place?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T14:13:54.333+0000",
                    "updated": "2020-07-14T14:13:54.333+0000",
                    "started": "2020-07-14T14:13:54.333+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458639",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458716",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658245887\n\n\n   This can't be merged yet. Divide by zero in the unchecked case causes SIGFPE process crash. \r\n   \r\n   We should probably return null when dividing by zero, this is what Impala does\r\n   \r\n   https://github.com/apache/impala/blob/b5805de3e65fd1c7154e4169b323bb38ddc54f4f/be/src/exprs/operators-ir.cc#L60\r\n   \r\n   I'm curious what other database-type systems do\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T15:26:48.698+0000",
                    "updated": "2020-07-14T15:26:48.698+0000",
                    "started": "2020-07-14T15:26:48.697+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458716",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458719",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658246270\n\n\n   cc @pitrou \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T15:27:37.324+0000",
                    "updated": "2020-07-14T15:27:37.324+0000",
                    "started": "2020-07-14T15:27:37.324+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458719",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458720",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658246588\n\n\n   This will wait for 2.0.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T15:28:10.360+0000",
                    "updated": "2020-07-14T15:28:10.360+0000",
                    "started": "2020-07-14T15:28:10.359+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458720",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458722",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658246865\n\n\n   But, yes, I'll take a look later.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T15:28:46.408+0000",
                    "updated": "2020-07-14T15:28:46.408+0000",
                    "started": "2020-07-14T15:28:46.408+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458722",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458803",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658304924\n\n\n   We have this implemented with [SIMD](https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/arithmetic.rs#L162) (which was tricky) on the Rust side.  We currently return a `Result` for division by zero.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T17:17:13.191+0000",
                    "updated": "2020-07-14T17:17:13.191+0000",
                    "started": "2020-07-14T17:17:13.190+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458803",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458804",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "paddyhoran edited a comment on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658304924\n\n\n   We have this [implemented](https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/arithmetic.rs#L289) with [SIMD](https://github.com/apache/arrow/blob/master/rust/arrow/src/compute/kernels/arithmetic.rs#L162) (which was tricky) on the Rust side.  We currently return a `Result` for division by zero.\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T17:17:49.155+0000",
                    "updated": "2020-07-14T17:17:49.155+0000",
                    "started": "2020-07-14T17:17:49.155+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458804",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/458911",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454610972\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -675,11 +704,80 @@ struct ScalarBinary {\n   }\n };\n \n+// An alternative to ScalarBinary that Applies a scalar operation on only the\n+// not-null values of arrays.\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n+struct ScalarBinaryNotNull {\n+  using OUT = typename GetOutputType<OutType>::T;\n+\n+  static void ArrayArray(KernelContext* ctx, const ArrayData& arg0, const ArrayData& arg1,\n+                         Datum* out) {\n+    ArrayIterator<Arg0Type> arg0_it(arg0);\n+    ArrayIterator<Arg1Type> arg1_it(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_it(), arg1_it()); },\n+        [&]() {\n+          ARROW_UNUSED(arg0_it());\n+          ARROW_UNUSED(arg1_it());\n+        });\n+  }\n+\n+  static void ArrayScalar(KernelContext* ctx, const ArrayData& arg0, const Scalar& arg1,\n+                          Datum* out) {\n+    ArrayIterator<Arg0Type> arg0_it(arg0);\n+    auto arg1_val = UnboxScalar<Arg1Type>::Unbox(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_it(), arg1_val); },\n+        [&]() { ARROW_UNUSED(arg0_it()); });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const Scalar& arg0, const ArrayData& arg1,\n+                          Datum* out) {\n+    auto arg0_val = UnboxScalar<Arg0Type>::Unbox(arg0);\n+    ArrayIterator<Arg1Type> arg1_it(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_val, arg1_it()); },\n+        [&]() { ARROW_UNUSED(arg1_it()); });\n+  }\n+\n+  static void ScalarScalar(KernelContext* ctx, const Scalar& arg0, const Scalar& arg1,\n+                           Datum* out) {\n+    if (out->scalar()->is_valid) {\n+      auto arg0_val = UnboxScalar<Arg0Type>::Unbox(arg0);\n+      auto arg1_val = UnboxScalar<Arg1Type>::Unbox(arg1);\n+      BoxScalar<OutType>::Box(Op::template Call(ctx, arg0_val, arg1_val),\n+                              out->scalar().get());\n+    }\n+  }\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    if (batch[0].kind() == Datum::ARRAY) {\n+      if (batch[1].kind() == Datum::ARRAY) {\n+        return ArrayArray(ctx, *batch[0].array(), *batch[1].array(), out);\n+      } else {\n+        return ArrayScalar(ctx, *batch[0].array(), *batch[1].scalar(), out);\n+      }\n+    } else {\n+      if (batch[1].kind() == Datum::ARRAY) {\n+        // e.g. if we were doing scalar < array, we flip and do array >= scalar\n\nReview comment:\n       I think this comment is not applicable\r\n   ```suggestion\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -130,6 +130,19 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n\nReview comment:\n       Please describe division-by-zero behavior\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -219,48 +219,77 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_integer<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+};\n+\n+struct DivideChecked {\n+  template <typename T>\n+  static enable_if_integer<T> Call(KernelContext* ctx, T left, T right) {\n+    if (right == 0) {\n+      ctx->SetStatus(Status::Invalid(\"divide by 0\"));\n+      return right;\n+    }\n+    return Divide::Call(ctx, left, right);\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left * right;\n\nReview comment:\n       ```suggestion\r\n       return left / right;\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -130,6 +130,19 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n+///\n+/// \\param[in] left the dividend\n+/// \\param[in] right the divisor\n+/// \\param[in] options arithmetic options (overflow handling), optional\n\nReview comment:\n       Division does not overflow unless the dividend is INT_MIN and the divisor is -1; IIUC `overflow_handling` is being used to indicate whether divide-by-zero should raise an error. If so please amend the comment\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-14T20:10:17.404+0000",
                    "updated": "2020-07-14T20:10:17.404+0000",
                    "started": "2020-07-14T20:10:17.403+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "458911",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459163",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658655201\n\n\n   > Thanks for starting this. I'm going to pull this down and make some changes per my comments\r\n   \r\n   @wesm Thanks a lot for your effort. Your changes look much more reasonable than mine. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T09:24:07.125+0000",
                    "updated": "2020-07-15T09:24:07.125+0000",
                    "started": "2020-07-15T09:24:07.125+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459163",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459167",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-658658261\n\n\n   > This can't be merged yet. Divide by zero in the unchecked case causes SIGFPE process crash.\r\n   > \r\n   > We should probably return null when dividing by zero, this is what Impala does\r\n   > \r\n   > https://github.com/apache/impala/blob/b5805de3e65fd1c7154e4169b323bb38ddc54f4f/be/src/exprs/operators-ir.cc#L60\r\n   > \r\n   > I'm curious what other database-type systems do\r\n   \r\n   I made some initial investigations, and it shows that some systems return null upon divide by zero (e.g. Impala and Hive (https://stackoverflow.com/questions/41165708/hive-dividing-numbers-from-the-same-column)), while others returns an error (like MySQL (https://www.got-it.ai/solutions/sqlquerychat/sql-help/data-manipulation/mysql-divide-by-zero-error-querychat/) and SQL Server (https://stackoverflow.com/questions/23230041/how-to-protect-sql-statement-from-divide-by-zero-error/23230084))\r\n   \r\n   Anyway, we should handle it, instead of letting the process crash. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T09:29:49.985+0000",
                    "updated": "2020-07-15T09:29:49.985+0000",
                    "started": "2020-07-15T09:29:49.984+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459167",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459227",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454955654\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -130,6 +130,19 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n\nReview comment:\n       Description added. Thank you.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T10:36:10.247+0000",
                    "updated": "2020-07-15T10:36:10.247+0000",
                    "started": "2020-07-15T10:36:10.247+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459227",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454956210\n\n\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -130,6 +130,19 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n+///\n+/// \\param[in] left the dividend\n+/// \\param[in] right the divisor\n+/// \\param[in] options arithmetic options (overflow handling), optional\n\nReview comment:\n       Comment revised. Please check. \r\n   Also, I have revised the kernel to check the overflow condition described above. Thank you.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T10:37:09.777+0000",
                    "updated": "2020-07-15T10:37:09.777+0000",
                    "started": "2020-07-15T10:37:09.777+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459228",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459230",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454957895\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/codegen_internal.h\n##########\n@@ -675,11 +704,80 @@ struct ScalarBinary {\n   }\n };\n \n+// An alternative to ScalarBinary that Applies a scalar operation on only the\n+// not-null values of arrays.\n+template <typename OutType, typename Arg0Type, typename Arg1Type, typename Op>\n+struct ScalarBinaryNotNull {\n+  using OUT = typename GetOutputType<OutType>::T;\n+\n+  static void ArrayArray(KernelContext* ctx, const ArrayData& arg0, const ArrayData& arg1,\n+                         Datum* out) {\n+    ArrayIterator<Arg0Type> arg0_it(arg0);\n+    ArrayIterator<Arg1Type> arg1_it(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_it(), arg1_it()); },\n+        [&]() {\n+          ARROW_UNUSED(arg0_it());\n+          ARROW_UNUSED(arg1_it());\n+        });\n+  }\n+\n+  static void ArrayScalar(KernelContext* ctx, const ArrayData& arg0, const Scalar& arg1,\n+                          Datum* out) {\n+    ArrayIterator<Arg0Type> arg0_it(arg0);\n+    auto arg1_val = UnboxScalar<Arg1Type>::Unbox(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_it(), arg1_val); },\n+        [&]() { ARROW_UNUSED(arg0_it()); });\n+  }\n+\n+  static void ScalarArray(KernelContext* ctx, const Scalar& arg0, const ArrayData& arg1,\n+                          Datum* out) {\n+    auto arg0_val = UnboxScalar<Arg0Type>::Unbox(arg0);\n+    ArrayIterator<Arg1Type> arg1_it(arg1);\n+    OutputAdapter<OutType>::WriteOnlyValid(\n+        ctx, out, [&]() -> OUT { return Op::template Call(ctx, arg0_val, arg1_it()); },\n+        [&]() { ARROW_UNUSED(arg1_it()); });\n+  }\n+\n+  static void ScalarScalar(KernelContext* ctx, const Scalar& arg0, const Scalar& arg1,\n+                           Datum* out) {\n+    if (out->scalar()->is_valid) {\n+      auto arg0_val = UnboxScalar<Arg0Type>::Unbox(arg0);\n+      auto arg1_val = UnboxScalar<Arg1Type>::Unbox(arg1);\n+      BoxScalar<OutType>::Box(Op::template Call(ctx, arg0_val, arg1_val),\n+                              out->scalar().get());\n+    }\n+  }\n+\n+  static void Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\n+    if (batch[0].kind() == Datum::ARRAY) {\n+      if (batch[1].kind() == Datum::ARRAY) {\n+        return ArrayArray(ctx, *batch[0].array(), *batch[1].array(), out);\n+      } else {\n+        return ArrayScalar(ctx, *batch[0].array(), *batch[1].scalar(), out);\n+      }\n+    } else {\n+      if (batch[1].kind() == Datum::ARRAY) {\n+        // e.g. if we were doing scalar < array, we flip and do array >= scalar\n\nReview comment:\n       Nice catch. Both occurences of this comment have been removed. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T10:40:24.221+0000",
                    "updated": "2020-07-15T10:40:24.221+0000",
                    "started": "2020-07-15T10:40:24.221+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459230",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459231",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454958337\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -219,48 +219,77 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_integer<T> Call(KernelContext*, T left, T right) {\n+    return left / right;\n+  }\n+};\n+\n+struct DivideChecked {\n+  template <typename T>\n+  static enable_if_integer<T> Call(KernelContext* ctx, T left, T right) {\n+    if (right == 0) {\n+      ctx->SetStatus(Status::Invalid(\"divide by 0\"));\n+      return right;\n+    }\n+    return Divide::Call(ctx, left, right);\n+  }\n+\n+  template <typename T>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, T left, T right) {\n+    return left * right;\n\nReview comment:\n       Sorry for my mistake, and thank you for the careful review.\r\n   I have revised it, and added test case to cover it. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T10:41:17.323+0000",
                    "updated": "2020-07-15T10:41:17.323+0000",
                    "started": "2020-07-15T10:41:17.323+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459231",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459232",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r454959287\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_cast_test.cc\n##########\n@@ -169,7 +169,6 @@ class TestCast : public TestBase {\n     ASSERT_EQ(in_values.size(), out_values.size());\n     std::shared_ptr<Array> input, expected;\n     if (is_valid.size() > 0) {\n-      ASSERT_EQ(is_valid.size(), out_values.size());\n\nReview comment:\n       I happen to find this check duplicate. Admittedly, this is not related to the current issue. \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-15T10:43:12.841+0000",
                    "updated": "2020-07-15T10:43:12.841+0000",
                    "started": "2020-07-15T10:43:12.841+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459232",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/459763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "liyafan82 commented on pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#issuecomment-659333289\n\n\n   > Thanks for doing this. Could you please be sure to add this function to https://github.com/apache/arrow/blob/master/docs/source/cpp/compute.rst?\r\n   \r\n   Done. Thanks for your kind reminder. \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-07-16T10:51:08.269+0000",
                    "updated": "2020-07-16T10:51:08.269+0000",
                    "started": "2020-07-16T10:51:08.268+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "459763",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/470228",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bkietz commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r469934580\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -186,6 +187,42 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, Arg0 left,\n+                                                    Arg1 right) {\n+    return left / right;\n+  }\n+\n+  template <typename T, typename Arg0, typename Arg1>\n+  static enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    if (ARROW_PREDICT_FALSE(right == 0)) {\n+      ctx->SetStatus(Status::Invalid(\"overflow\"));\n\nReview comment:\n       ```suggestion\r\n         ctx->SetStatus(Status::Invalid(\"divide by zero\"));\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -129,6 +129,20 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n\nReview comment:\n       ```suggestion\r\n   /// \\brief Divide two values. Array values must be the same length. If either\r\n   /// argument is null the result will be null.\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -186,6 +187,42 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, Arg0 left,\n+                                                    Arg1 right) {\n+    return left / right;\n+  }\n+\n+  template <typename T, typename Arg0, typename Arg1>\n+  static enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    if (ARROW_PREDICT_FALSE(right == 0)) {\n+      ctx->SetStatus(Status::Invalid(\"overflow\"));\n+      return 0;\n+    }\n+    return left / right;\n+  }\n+};\n+\n+struct DivideChecked {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n+    T result;\n+    if (ARROW_PREDICT_FALSE(DivideWithOverflow(left, right, &result))) {\n+      ctx->SetStatus(Status::Invalid(\"overflow\"));\n\nReview comment:\n       ```suggestion\r\n         if (right == 0) {\r\n           ctx->SetStatus(Status::Invalid(\"divide by zero\"));\r\n         } else {\r\n           ctx->SetStatus(Status::Invalid(\"overflow\"));\r\n         }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -186,6 +187,42 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, Arg0 left,\n+                                                    Arg1 right) {\n+    return left / right;\n+  }\n+\n+  template <typename T, typename Arg0, typename Arg1>\n+  static enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    if (ARROW_PREDICT_FALSE(right == 0)) {\n+      ctx->SetStatus(Status::Invalid(\"overflow\"));\n+      return 0;\n+    }\n+    return left / right;\n+  }\n+};\n+\n+struct DivideChecked {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static enable_if_integer<T> Call(KernelContext* ctx, Arg0 left, Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n+    T result;\n+    if (ARROW_PREDICT_FALSE(DivideWithOverflow(left, right, &result))) {\n+      ctx->SetStatus(Status::Invalid(\"overflow\"));\n+    }\n+    return result;\n+  }\n+\n+  template <typename T, typename Arg0, typename Arg1>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, Arg0 left,\n+                                                    Arg1 right) {\n+    static_assert(std::is_same<T, Arg0>::value && std::is_same<T, Arg1>::value, \"\");\n+    return left / right;\n\nReview comment:\n       ```suggestion\r\n       if (ARROW_PREDICT_FALSE(right == 0)) {\r\n         ctx->SetStatus(Status::Invalid(\"divide by zero\"));\r\n         return 0;\r\n       }\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic.cc\n##########\n@@ -186,6 +187,42 @@ struct MultiplyChecked {\n   }\n };\n \n+struct Divide {\n+  template <typename T, typename Arg0, typename Arg1>\n+  static constexpr enable_if_floating_point<T> Call(KernelContext*, Arg0 left,\n+                                                    Arg1 right) {\n+    return left / right;\n\nReview comment:\n       ```suggestion\r\n       if (ARROW_PREDICT_FALSE(right == 0)) {\r\n         ctx->SetStatus(Status::Invalid(\"divide by zero\"));\r\n         return 0;\r\n       }\r\n       return left / right;\r\n   ```\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T13:26:30.953+0000",
                    "updated": "2020-08-13T13:26:30.953+0000",
                    "started": "2020-08-13T13:26:30.953+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470228",
                    "issueId": "13315947"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/worklog/470258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #7748:\nURL: https://github.com/apache/arrow/pull/7748#discussion_r469995900\n\n\n\n##########\nFile path: docs/source/cpp/compute.rst\n##########\n@@ -197,6 +197,10 @@ an ``Invalid`` :class:`Status` when overflow is detected.\n +--------------------------+------------+--------------------+---------------------+\n | subtract_checked         | Binary     | Numeric            | Numeric             |\n +--------------------------+------------+--------------------+---------------------+\n+| divide                   | Binary     | Numeric            | Numeric             |\n\nReview comment:\n       Please keep this table in alphabetical order.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -139,13 +139,7 @@ class TestBinaryArithmetic : public TestBase {\n     ValidateAndAssertApproxEqual(actual.make_array(), expected);\n \n     // Also check (Scalar, Scalar) operations\n-    const int64_t length = expected->length();\n-    for (int64_t i = 0; i < length; ++i) {\n-      const auto expected_scalar = *expected->GetScalar(i);\n-      ASSERT_OK_AND_ASSIGN(\n-          actual, func(*left->GetScalar(i), *right->GetScalar(i), options_, nullptr));\n-      AssertScalarsEqual(*expected_scalar, *actual.scalar(), /*verbose=*/true);\n-    }\n+    // TODO: support scalar approx equal\n\nReview comment:\n       Please don't remove these checks, instead write the tests so that they don't require approximate equality checks.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -492,6 +486,81 @@ TYPED_TEST(TestBinaryArithmeticFloating, Add) {\n   this->AssertBinop(Add, \"[null, 2.0]\", this->MakeNullScalar(), \"[null, null]\");\n }\n \n+TYPED_TEST(TestBinaryArithmeticFloating, Div) {\n+  for (auto check_overflow : {false, true}) {\n+    this->SetOverflowCheck(check_overflow);\n+    this->AssertBinop(Divide, \"[]\", \"[]\", \"[]\");\n+\n+    this->AssertBinop(Divide, \"[3.4, 2.6, 6.3]\", \"[1, 2, 2]\", \"[3.4, 1.3, 3.15]\");\n+\n+    this->AssertBinop(Divide, \"[1.1, 2.4, 3.5, 4.3, 5.1, 6.8, 7.3]\",\n+                      \"[1.0, 2.0, 0.7, 0.5, 1.7, 2.0, 5.0]\",\n+                      \"[1.1, 1.2, 5.0, 8.6, 3.0, 3.4, 1.46]\");\n\nReview comment:\n       It's not useful to test so many values. We know the CPU handles division properly. Instead, focus on test cases that may trigger specific behaviour:\r\n   * empty array\r\n   * nulls\r\n   * zeros\r\n   * for floating-point: infinities, perhaps not-a-number\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_arithmetic_test.cc\n##########\n@@ -492,6 +486,81 @@ TYPED_TEST(TestBinaryArithmeticFloating, Add) {\n   this->AssertBinop(Add, \"[null, 2.0]\", this->MakeNullScalar(), \"[null, null]\");\n }\n \n+TYPED_TEST(TestBinaryArithmeticFloating, Div) {\n+  for (auto check_overflow : {false, true}) {\n+    this->SetOverflowCheck(check_overflow);\n+    this->AssertBinop(Divide, \"[]\", \"[]\", \"[]\");\n+\n+    this->AssertBinop(Divide, \"[3.4, 2.6, 6.3]\", \"[1, 2, 2]\", \"[3.4, 1.3, 3.15]\");\n+\n+    this->AssertBinop(Divide, \"[1.1, 2.4, 3.5, 4.3, 5.1, 6.8, 7.3]\",\n+                      \"[1.0, 2.0, 0.7, 0.5, 1.7, 2.0, 5.0]\",\n+                      \"[1.1, 1.2, 5.0, 8.6, 3.0, 3.4, 1.46]\");\n+\n+    this->AssertBinop(Divide, \"[10.4, 12, 4.2, 50, 50.5, 32, 11]\",\n+                      \"[2.0, 1.0, 6, 1, 5, 8, 2]\", \"[5.2, 12, 0.7, 50, 10.1, 4, 5.5]\");\n+\n+    this->AssertBinop(Divide, \"[null, 1, 3.3, null, 2, 5.1]\", \"[1, 4, 2, 5, 0.1, 3]\",\n+                      \"[null, 0.25, 1.65, null, 20, 1.7]\");\n+\n+    this->AssertBinop(Divide, 10.0F, \"[null, 1, 2.5, null, 2, 5]\",\n+                      \"[null, 10, 4, null, 5, 2]\");\n+\n+    this->AssertBinop(Divide, \"[null, 1, 2.5, null, 2, 5]\", 10.0F,\n+                      \"[null, 0.1, 0.25, null, 0.2, 0.5]\");\n+\n+    this->AssertBinop(Divide, 21.0F, 3.0F, 7.0F);\n+  }\n+}\n+\n+TYPED_TEST(TestBinaryArithmeticIntegral, Div) {\n+  for (auto check_overflow : {false, true}) {\n+    this->SetOverflowCheck(check_overflow);\n+\n+    this->AssertBinop(Divide, \"[]\", \"[]\", \"[]\");\n+    this->AssertBinop(Divide, \"[null]\", \"[null]\", \"[null]\");\n+    this->AssertBinop(Divide, \"[3, 2, 6]\", \"[1, 1, 2]\", \"[3, 2, 3]\");\n+    this->AssertBinop(Divide, \"[10, 20, 30, 40, 50, 60, 70]\", \"[10, 5, 2, 1, 25, 30, 35]\",\n+                      \"[1, 4, 15, 40, 2, 2, 2]\");\n+    this->AssertBinop(Divide, \"[70, 60, 50, 40, 30, 20, 10]\", \"[7, 15, 5, 2, 6, 4, 5]\",\n+                      \"[10, 4, 10, 20, 5, 5, 2]\");\n+    this->AssertBinop(Divide, \"[null, 10, 30, null, 20, 50]\", \"[1, 4, 2, 5, 10, 3]\",\n+                      \"[null, 2, 15, null, 2, 16]\");\n+    this->AssertBinop(Divide, 33, \"[null, 1, 3, null, 2, 5]\",\n+                      \"[null, 33, 11, null, 16, 6]\");\n+    this->AssertBinop(Divide, 16, 7, 2);\n+  }\n+}\n+\n+TYPED_TEST(TestBinaryArithmeticSigned, Div) {\n+  this->AssertBinop(Divide, \"[-3, 2, -6]\", \"[1, 1, 2]\", \"[-3, 2, -3]\");\n+  this->AssertBinop(Divide, \"[10, 20, -30, 40, -50, 60, 70]\", \"[10, 5, 2, 1, 25, 30, 35]\",\n+                    \"[1, 4, -15, 40, -2, 2, 2]\");\n+  this->AssertBinop(Divide, \"[70, 60, 50, 40, 30, 20, 10]\", \"[7, -15, 5, 2, 6, 4, -5]\",\n+                    \"[10, -4, 10, 20, 5, 5, -2]\");\n+  this->AssertBinop(Divide, \"[null, 10, 30, null, -20, 50]\", \"[1, 4, 2, 5, 10, 3]\",\n+                    \"[null, 2, 15, null, -2, 16]\");\n+  this->AssertBinop(Divide, 33, \"[null, -1, -3, null, 2, 5]\",\n+                    \"[null, -33, -11, null, 16, 6]\");\n+  this->AssertBinop(Divide, -16, -8, 2);\n+}\n+\n+TYPED_TEST(TestBinaryArithmeticIntegral, DivideByZero) {\n+  for (auto check_overflow : {false, true}) {\n+    this->SetOverflowCheck(check_overflow);\n+    this->AssertBinopRaises(Divide, \"[3, 2, 6]\", \"[1, 1, 0]\", \"overflow\");\n+  }\n+}\n+\n+TYPED_TEST(TestBinaryArithmeticSigned, DivideOverflowRaises) {\n+  using CType = typename TestFixture::CType;\n+\n+  auto min = std::numeric_limits<CType>::lowest();\n+  this->SetOverflowCheck(true);\n+\n+  this->AssertBinopRaises(Divide, MakeArray(min), MakeArray(-1), \"overflow\");\n\nReview comment:\n       Should also check what happens when the overflow checks are disabled?\n\n##########\nFile path: cpp/src/arrow/compute/api_scalar.h\n##########\n@@ -129,6 +129,20 @@ Result<Datum> Multiply(const Datum& left, const Datum& right,\n                        ArithmeticOptions options = ArithmeticOptions(),\n                        ExecContext* ctx = NULLPTR);\n \n+/// \\brief Divide two values. Array values must be the same length. If either\n+/// factor is null the result will be null.\n+///\n+/// \\param[in] left the dividend\n+/// \\param[in] right the divisor\n+/// \\param[in] options arithmetic options (enable/disable overflow checking), optional\n+/// \\param[in] ctx the function execution context, optional\n+/// \\return the elementwise quotient, if there is a zero divisor,\n+///         an error will be raised\n\nReview comment:\n       Can you move the zero divisor mention to the body of the docstring (together with \"If either argument is null...\")?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-08-13T14:37:39.926+0000",
                    "updated": "2020-08-13T14:37:39.926+0000",
                    "started": "2020-08-13T14:37:39.926+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "470258",
                    "issueId": "13315947"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 25200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@23a8c73d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3cafde52[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3272e28b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@706de7d9[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c9e5f6e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@794e671a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c0da402[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@43c1c375[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2dca814c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@27364558[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@16aac808[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5b3d7bc3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 25200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Aug 20 11:37:09 UTC 2020",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2020-08-20T11:37:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-9388/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-07-09T16:58:11.000+0000",
        "updated": "2020-08-20T12:03:25.000+0000",
        "timeoriginalestimate": null,
        "description": "We now have add, subtract, multiply, but no division",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "7h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 25200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Division kernels",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13315947/comment/17181126",
                    "id": "17181126",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 7748\n[https://github.com/apache/arrow/pull/7748]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2020-08-20T11:37:09.130+0000",
                    "updated": "2020-08-20T11:37:09.130+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z0gm74:",
        "customfield_12314139": null
    }
}