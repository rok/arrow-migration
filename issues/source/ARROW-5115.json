{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13226021",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021",
    "key": "ARROW-5115",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12343937",
                "id": "12343937",
                "description": "",
                "name": "0.13.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-04-01"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12332552",
                "id": "12332552",
                "name": "JavaScript"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=paul.e.taylor",
            "name": "paul.e.taylor",
            "key": "paul.e.taylor",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Paul Taylor",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 18000,
            "total": 18000,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5115/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 31,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/254188",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476\n \n \n   This PR adds Vector Builder implementations for each DataType, as well as high-level stream primitives for Iterables/AsyncIterables, node streams, and DOM streams.\r\n   \r\n   #### Builder API\r\n   \r\n   The new `Builder` class exposes an API for sequentially appending (or setting into slots that have already been allocated) arbitrary JavaScript values that will be flushed to the same underlying Data chunk. The `Builder` class also supports specifying a list of null-value sentinels, or values that will be interpreted to indicate \"null\" should be written to the null bitmap instead of being written as a valid element.\r\n   \r\n   Similar to the existing `Vector` API, `Builder` has a static `Builder.new()` method that will return the correct `Builder` subclass instance for the supplied DataType. Since the `Builder` constructor takes an options Object, this method also takes an Object:\r\n   \r\n   ```typescript\r\n   import { Builder, Utf8 } from 'apache-arrow';\r\n   \r\n   const utf8Builder = Builder.new({\r\n       type: new Utf8(),\r\n       nullValues: [null, 'n/a']\r\n   });\r\n   \r\n   utf8Builder\r\n       .append('hello')\r\n       .append('n/a') // will be interpreted to mean `null`\r\n       .append('world')\r\n       .append(null);\r\n   \r\n   const utf8Vector = utf8Builder.finish().toVector();\r\n   \r\n   console.log(utf8Vector.toJSON());\r\n   // > [\"hello\", null, \"world\", null]\r\n   ```\r\n   \r\n   The `Builder` class has two methods for flushing the pending values to their underlying ArrayBuffer representations: `flush(): Data<T>` and `toVector(): Vector<T>` (`toVector()` calls `flush()` and creates a `Vector` instance from the returned Data instance).\r\n   \r\n   Calling `Builder.prototype.finish()` will finalize a `Builder` instance. After this, no more values should be written to the Builder instance. This is a no-op on for most types, except the `DictionaryBuilder`, which flushes its internal dictionary and writes the values to the `Dictionary` type's `dictionaryVector` field.\r\n   \r\n   #### Iterable and stream APIs\r\n   \r\n   Creating and using Builders directly is a bit cumbersome, so we provide some high-level streaming APIs for automatically creating builders, appending values, and flushing chunks of a certain size:\r\n   \r\n   ```typescript\r\n   Builder.throughIterable(options: IterableBuilderOptions<T, TNull>)\r\n   Builder.throughAsyncIterable(options: IterableBuilderOptions<T, TNull>)\r\n   Builder.throughDOM(options: BuilderTransformOptions<T, TNull>)\r\n   Builder.throughNode(options: BuilderDuplexOptions<T, TNull>)\r\n   ```\r\n   \r\n   #### Iterables and AsyncIterables\r\n   The static `throughIterable` and `throughAsyncIterable` methods take an `options` argument that indicates the Builder's type and null-value sentinels, and returns a function which accepts an Iterable or AsyncIterable, respectively, of values to transform:\r\n   \r\n   ```typescript\r\n   import { Chunked, Builder, Utf8 } from 'apache-arrow';\r\n   const options = { type: new Utf8(), nullValues: [null, 'n/a'] };\r\n   const buildUtf8 = Builder.throughIterable(options);\r\n   const utf8Vector = Chunked.concat(...buildUtf8(['hello', 'n/a', 'world', null]));\r\n   ```\r\n   \r\n   The `options` argument can also specify a `queueingStrategy` and `highWaterMark` that control the chunking semantics:\r\n   * If the `queueingStrategy` is `\"count\"` (or is omitted), then the returned generator function will flush the `Builder` and yield a chunk once the number of values that have been written to the Builder reaches the value supplied for `highWaterMark`, regardless of how much memory the `Builder` has allocated.\r\n   * If the `queueingStrategy` is `\"bytes\"`, then the returned generator function will flush the `Builder` and yield a new chunk once the Builder's `byteLength` field reaches or exceeds the value supplied for `highWaterMark`, regardless of how many elements the `Builder` contains.\r\n   \r\n   #### Node and DOM Streams\r\n   \r\n   In addition to the Iterable transform APIs, we can also create node and DOM transform streams with similar options:\r\n   ```typescript\r\n   import { Readable } from 'stream';\r\n   import { toArray } from 'ix/asynciterable/toarray';\r\n   import { Chunked, Builder, Utf8 } from 'apache-arrow';\r\n   const options = {\r\n     type: new Utf8(),\r\n     nullValues: [undefined, 'n/a'],\r\n     queueingStrategy: 'bytes',\r\n     highWaterMark: 64, // flush each chunk once 64 bytes have been written\r\n   };\r\n   \r\n   const utf8Vector = Chunked.concat(await toArray(\r\n     Readable\r\n       .from(['hello', 'n/a', 'world', undefined])\r\n       .pipe(Builder.throughNode(options))\r\n   ));\r\n   ```\r\n   \r\n   #### Miscellaneous\r\n   * Updates most dependencies, updates TypeScript to v3.5.1 (and resolves #4452)\r\n   * Updates the BigInt compatibility type to use `Object.setPrototypeOf()`, yielding a 4x speedup\r\n   * Updates Int64 and Uint64 set routines to accept native `bigint` types if available\r\n   * Adds a docstring to the `_InternalEmptyPlaceholderRecordBatch` class added in #4373\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T04:43:18.077+0000",
                    "updated": "2019-06-05T04:43:18.077+0000",
                    "started": "2019-06-05T04:43:18.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254188",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/254474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/a4dad3277f32b79e7da2488846f68e1987400786?src=pr&el=desc) will **increase** coverage by `2.17%`.\n   > The diff coverage is `88.6%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.26%   90.44%   +2.17%     \n   ==========================================\n     Files         846      100     -746     \n     Lines      103360     6352   -97008     \n     Branches     1253     1388     +135     \n   ==========================================\n   - Hits        91233     5745   -85488     \n   + Misses      11880      596   -11284     \n   + Partials      247       11     -236\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/vector/dictionary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kaWN0aW9uYXJ5LnRz) | `94.44% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/whatwg/iterable.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL3doYXR3Zy9pdGVyYWJsZS50cw==) | `97.67% <\u00f8> (\u00f8)` | |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/utf8.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci91dGY4LnRz) | `85.71% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/bool.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9ib29sLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [884 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [a4dad32...cbd6961](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T16:38:45.352+0000",
                    "updated": "2019-06-05T16:38:45.352+0000",
                    "started": "2019-06-05T16:38:45.352+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254474",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/254590",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/a4dad3277f32b79e7da2488846f68e1987400786?src=pr&el=desc) will **increase** coverage by `2.22%`.\n   > The diff coverage is `88.85%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.26%   90.48%   +2.22%     \n   ==========================================\n     Files         846      100     -746     \n     Lines      103360     6351   -97009     \n     Branches     1253     1389     +136     \n   ==========================================\n   - Hits        91233     5747   -85486     \n   + Misses      11880      594   -11286     \n   + Partials      247       10     -237\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/vector/dictionary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kaWN0aW9uYXJ5LnRz) | `94.44% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/whatwg/iterable.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL3doYXR3Zy9pdGVyYWJsZS50cw==) | `97.67% <\u00f8> (\u00f8)` | |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/utf8.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci91dGY4LnRz) | `85.71% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/bool.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9ib29sLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [884 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [a4dad32...91bc603](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T19:48:27.347+0000",
                    "updated": "2019-06-05T19:48:27.347+0000",
                    "started": "2019-06-05T19:48:27.346+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254590",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/255392",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d235f69bc7ebfbbd03f031b2191c69244861cf4f?src=pr&el=desc) will **increase** coverage by `1.74%`.\n   > The diff coverage is `86.55%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.29%   90.03%   +1.74%     \n   ==========================================\n     Files         846      101     -745     \n     Lines      103563     6403   -97160     \n     Branches     1253     1418     +165     \n   ==========================================\n   - Hits        91436     5765   -85671     \n   + Misses      11880      628   -11252     \n   + Partials      247       10     -237\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/whatwg/iterable.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL3doYXR3Zy9pdGVyYWJsZS50cw==) | `97.67% <\u00f8> (\u00f8)` | |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/typecomparator.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdHlwZWNvbXBhcmF0b3IudHM=) | `53.78% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/compute/dataframe.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2NvbXB1dGUvZGF0YWZyYW1lLnRz) | `92.15% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci50cw==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [891 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [d235f69...5297ccc](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T20:11:09.348+0000",
                    "updated": "2019-06-06T20:11:09.348+0000",
                    "started": "2019-06-06T20:11:09.347+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255392",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/255554",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d235f69bc7ebfbbd03f031b2191c69244861cf4f?src=pr&el=desc) will **increase** coverage by `1.75%`.\n   > The diff coverage is `86.59%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.29%   90.04%   +1.75%     \n   ==========================================\n     Files         846      101     -745     \n     Lines      103563     6407   -97156     \n     Branches     1253     1418     +165     \n   ==========================================\n   - Hits        91436     5769   -85667     \n   + Misses      11880      628   -11252     \n   + Partials      247       10     -237\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/whatwg/iterable.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL3doYXR3Zy9pdGVyYWJsZS50cw==) | `97.67% <\u00f8> (\u00f8)` | |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/node/writer.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL25vZGUvd3JpdGVyLnRz) | `100% <\u00f8> (\u00f8)` | |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/typecomparator.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdHlwZWNvbXBhcmF0b3IudHM=) | `53.78% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/compute/dataframe.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2NvbXB1dGUvZGF0YWZyYW1lLnRz) | `92.15% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [891 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [d235f69...cde620b](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T23:55:51.461+0000",
                    "updated": "2019-06-06T23:55:51.461+0000",
                    "started": "2019-06-06T23:55:51.460+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255554",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/255587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d235f69bc7ebfbbd03f031b2191c69244861cf4f?src=pr&el=desc) will **increase** coverage by `1.73%`.\n   > The diff coverage is `86.5%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.29%   90.02%   +1.73%     \n   ==========================================\n     Files         846      101     -745     \n     Lines      103563     6408   -97155     \n     Branches     1253     1417     +164     \n   ==========================================\n   - Hits        91436     5769   -85667     \n   + Misses      11880      629   -11251     \n   + Partials      247       10     -237\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/node/writer.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL25vZGUvd3JpdGVyLnRz) | `100% <\u00f8> (\u00f8)` | |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/typecomparator.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdHlwZWNvbXBhcmF0b3IudHM=) | `53.78% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/compute/dataframe.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2NvbXB1dGUvZGF0YWZyYW1lLnRz) | `92.15% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci50cw==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [891 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [d235f69...7eb446b](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-07T01:22:31.714+0000",
                    "updated": "2019-06-07T01:22:31.714+0000",
                    "started": "2019-06-07T01:22:31.713+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255587",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256200",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-500029997\n \n \n   This is a pretty epic piece of work, @TheNeuralBit @domoritz I assume this is on your radar to review?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-07T20:35:58.631+0000",
                    "updated": "2019-06-07T20:35:58.631+0000",
                    "started": "2019-06-07T20:35:58.631+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256200",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256220",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "domoritz commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291754377\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n \n Review comment:\n   At some pint, we should replace tslint with slint since the former is being deprecated. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-07T21:18:48.711+0000",
                    "updated": "2019-06-07T21:18:48.711+0000",
                    "started": "2019-06-07T21:18:48.710+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256220",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256226",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291758923\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n \n Review comment:\n   yes I imagine at some point we should switch over.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-07T21:22:20.898+0000",
                    "updated": "2019-06-07T21:22:20.898+0000",
                    "started": "2019-06-07T21:22:20.896+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256226",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256257",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-499161518\n \n \n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=h1) Report\n   > Merging [#4476](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=desc) into [master](https://codecov.io/gh/apache/arrow/commit/d235f69bc7ebfbbd03f031b2191c69244861cf4f?src=pr&el=desc) will **increase** coverage by `1.74%`.\n   > The diff coverage is `86.6%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/4476/graphs/tree.svg?width=650&token=LpTCFbqVT1&height=150&src=pr)](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #4476      +/-   ##\n   ==========================================\n   + Coverage   88.29%   90.03%   +1.74%     \n   ==========================================\n     Files         846      101     -745     \n     Lines      103563     6412   -97151     \n     Branches     1253     1418     +165     \n   ==========================================\n   - Hits        91436     5773   -85663     \n   + Misses      11880      629   -11251     \n   + Partials      247       10     -237\n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [js/src/visitor/vectorloader.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9ybG9hZGVyLnRz) | `98.75% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/decimal.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9kZWNpbWFsLnRz) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector/binary.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9iaW5hcnkudHM=) | `66.66% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/io/node/writer.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2lvL25vZGUvd3JpdGVyLnRz) | `100% <\u00f8> (\u00f8)` | |\n   | [js/src/util/compat.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3V0aWwvY29tcGF0LnRz) | `65.78% <\u00f8> (-0.88%)` | :arrow_down: |\n   | [js/src/visitor/vectorctor.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdmVjdG9yY3Rvci50cw==) | `100% <\u00f8> (+10.93%)` | :arrow_up: |\n   | [js/src/vector/map.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci9tYXAudHM=) | `77.77% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/visitor/typecomparator.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3Zpc2l0b3IvdHlwZWNvbXBhcmF0b3IudHM=) | `53.78% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/compute/dataframe.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL2NvbXB1dGUvZGF0YWZyYW1lLnRz) | `92.15% <\u00f8> (\u00f8)` | :arrow_up: |\n   | [js/src/vector.ts](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree#diff-anMvc3JjL3ZlY3Rvci50cw==) | `100% <\u00f8> (\u00f8)` | :arrow_up: |\n   | ... and [892 more](https://codecov.io/gh/apache/arrow/pull/4476/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=footer). Last update [d235f69...a32df3e](https://codecov.io/gh/apache/arrow/pull/4476?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-07T22:17:21.059+0000",
                    "updated": "2019-06-07T22:17:21.059+0000",
                    "started": "2019-06-07T22:17:21.058+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256257",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256308",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291787763\n \n \n\n ##########\n File path: js/src/builder/dictionary.ts\n ##########\n @@ -0,0 +1,93 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Vector } from '../vector';\n+import { IntBuilder } from './int';\n+import { Dictionary, DataType } from '../type';\n+import { Builder, BuilderOptions } from '../builder';\n+\n+type DictionaryHashFunction = (x: any) => string | number;\n+\n+export interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n+    dictionaryHashFunction?: DictionaryHashFunction;\n+}\n+\n+/** @ignore */\n+export class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n+\n+    protected _codes = Object.create(null);\n+    public readonly indices: IntBuilder<T['indices']>;\n+    public readonly dictionary: Builder<T['dictionary']>;\n+\n+    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n+        super({ type });\n+        this._nulls = <any> null;\n+        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n+        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n+        if (typeof hashFn === 'function') {\n+            this.valueToKey = hashFn;\n+        }\n+    }\n+\n+    public get values() { return this.indices.values; }\n+    public get nullCount() { return this.indices.nullCount; }\n+    public get nullBitmap() { return this.indices.nullBitmap; }\n+    public get byteLength() { return this.indices.byteLength; }\n+    public get reservedLength() { return this.indices.reservedLength; }\n+    public get reservedByteLength() { return this.indices.reservedByteLength; }\n+    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n+    public setValid(index: number, valid: boolean) {\n+        const indices = this.indices;\n+        valid = indices.setValid(index, valid);\n+        this.length = indices.length;\n+        return valid;\n+    }\n+    public setValue(index: number, value: T['TValue']) {\n+        let keysToCodesMap = this._codes;\n+        let key = this.valueToKey(value);\n+        let idx = keysToCodesMap[key];\n+        if (idx === undefined) {\n+            keysToCodesMap[key] = idx = this.dictionary.append(value).length - 1;\n+        }\n+        return this.indices.setValue(index, idx);\n+    }\n+    public flush() {\n+        const chunk = this.indices.flush().clone(this.type);\n+        this.clear();\n+        return chunk;\n+    }\n+    public finish() {\n+        this.type.dictionaryVector = Vector.new(this.dictionary.finish().flush());\n+        return super.finish();\n+    }\n+    public clear() {\n+        this.indices.clear();\n+        return super.clear();\n+    }\n+    public valueToKey(val: any) {\n+        let str = typeof val === 'string' ? val : `${val}`;\n+        let h1 = 0xdeadbeef ^ 0, h2 = 0x41c6ce57 ^ 0;\n+        for (let i = -1, n = str.length, ch; ++i < n;) {\n+            ch = str.charCodeAt(i);\n+            h1 = Math.imul(h1 ^ ch, 2654435761);\n+            h2 = Math.imul(h2 ^ ch, 1597334677);\n+        }\n+        h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n+        h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n+        return 4294967296 * (2097151 & h2) + (h1 >>> 0) as any;\n+    }\n \n Review comment:\n   This seems pretty intense for an inlined default hash function. Is it implementing some well-known hash? Would be nice to annotate that here.\r\n   \r\n   I think the names are confusing, could the function be renamed `hashFn` and `keysToCodesMap` be `hashToDictionaryIndex`?\r\n   \r\n   If there's a collision couldn't we end up with two entries with the same value in the dictionary? I wonder if our \"hashFn\" should just be an identity by default, with the option to supply one if you're ok with the (slight) risk of multiple entries with the same value.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T01:03:03.080+0000",
                    "updated": "2019-06-08T01:03:03.080+0000",
                    "started": "2019-06-08T01:03:03.080+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256308",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256309",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291786629\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n-    \"typedoc\": \"0.14.2\",\n-    \"typescript\": \"3.2.4\",\n+    \"typedoc\": \"TypeStrong/typedoc\",\n \n Review comment:\n   Is this just tying us to master? Is there something we need that hasn't been released?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T01:03:03.090+0000",
                    "updated": "2019-06-08T01:03:03.090+0000",
                    "started": "2019-06-08T01:03:03.089+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256309",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256310",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291788092\n \n \n\n ##########\n File path: js/test/unit/builders/builder-tests.ts\n ##########\n @@ -0,0 +1,269 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import '../../jest-extensions';\n+import { AsyncIterable } from 'ix';\n+import { validateVector } from './utils';\n+import * as generate from '../../generate-test-data';\n+import { Type, DataType, Chunked, util, Builder, UnionVector } from '../../Arrow';\n+\n+const testDOMStreams = process.env.TEST_DOM_STREAMS === 'true';\n+const testNodeStreams = process.env.TEST_NODE_STREAMS === 'true';\n+\n+describe('Generated Test Data', () => {\n+    describe('NullBuilder',                 () => { validateBuilder(generate.null_); });\n+    describe('BoolBuilder',                 () => { validateBuilder(generate.bool); });\n+    describe('Int8Builder',                 () => { validateBuilder(generate.int8); });\n+    describe('Int16Builder',                () => { validateBuilder(generate.int16); });\n+    describe('Int32Builder',                () => { validateBuilder(generate.int32); });\n+    describe('Int64Builder',                () => { validateBuilder(generate.int64); });\n+    describe('Uint8Builder',                () => { validateBuilder(generate.uint8); });\n+    describe('Uint16Builder',               () => { validateBuilder(generate.uint16); });\n+    describe('Uint32Builder',               () => { validateBuilder(generate.uint32); });\n+    describe('Uint64Builder',               () => { validateBuilder(generate.uint64); });\n+    describe('Float16Builder',              () => { validateBuilder(generate.float16); });\n+    describe('Float32Builder',              () => { validateBuilder(generate.float32); });\n+    describe('Float64Builder',              () => { validateBuilder(generate.float64); });\n+    describe('Utf8Builder',                 () => { validateBuilder(generate.utf8); });\n+    describe('BinaryBuilder',               () => { validateBuilder(generate.binary); });\n+    describe('FixedSizeBinaryBuilder',      () => { validateBuilder(generate.fixedSizeBinary); });\n+    describe('DateDayBuilder',              () => { validateBuilder(generate.dateDay); });\n+    describe('DateMillisecondBuilder',      () => { validateBuilder(generate.dateMillisecond); });\n+    describe('TimestampSecondBuilder',      () => { validateBuilder(generate.timestampSecond); });\n+    describe('TimestampMillisecondBuilder', () => { validateBuilder(generate.timestampMillisecond); });\n+    describe('TimestampMicrosecondBuilder', () => { validateBuilder(generate.timestampMicrosecond); });\n+    describe('TimestampNanosecondBuilder',  () => { validateBuilder(generate.timestampNanosecond); });\n+    describe('TimeSecondBuilder',           () => { validateBuilder(generate.timeSecond); });\n+    describe('TimeMillisecondBuilder',      () => { validateBuilder(generate.timeMillisecond); });\n+    describe('TimeMicrosecondBuilder',      () => { validateBuilder(generate.timeMicrosecond); });\n+    describe('TimeNanosecondBuilder',       () => { validateBuilder(generate.timeNanosecond); });\n+    describe('DecimalBuilder',              () => { validateBuilder(generate.decimal); });\n+    describe('ListBuilder',                 () => { validateBuilder(generate.list); });\n+    describe('StructBuilder',               () => { validateBuilder(generate.struct); });\n+    describe('DenseUnionBuilder',           () => { validateBuilder(generate.denseUnion); });\n+    describe('SparseUnionBuilder',          () => { validateBuilder(generate.sparseUnion); });\n+    describe('DictionaryBuilder',           () => { validateBuilder(generate.dictionary); });\n+    describe('IntervalDayTimeBuilder',      () => { validateBuilder(generate.intervalDayTime); });\n+    describe('IntervalYearMonthBuilder',    () => { validateBuilder(generate.intervalYearMonth); });\n+    describe('FixedSizeListBuilder',        () => { validateBuilder(generate.fixedSizeList); });\n+    describe('MapBuilder',                  () => { validateBuilder(generate.map); });\n+});\n+\n+function validateBuilder(generate: (length?: number, nullCount?: number, ...args: any[]) => generate.GeneratedVector) {\n+\n+    const type = generate(0, 0).vector.type;\n+\n+    for (let i = -1; ++i < 1;) {\n \n Review comment:\n   Isn't this a no-op?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T01:03:03.103+0000",
                    "updated": "2019-06-08T01:03:03.103+0000",
                    "started": "2019-06-08T01:03:03.102+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256310",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256311",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "TheNeuralBit commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291788216\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n-    \"typedoc\": \"0.14.2\",\n-    \"typescript\": \"3.2.4\",\n+    \"typedoc\": \"TypeStrong/typedoc\",\n+    \"typescript\": \"3.5.1\",\n \n Review comment:\n   It would be nice if changes like this TS upgrade were on a separate branch/PR in the future. 10k added lines is a lot to review and the changes that were necessary for this upgrade (as opposed to the Builders) will be lost in the noise.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T01:03:03.200+0000",
                    "updated": "2019-06-08T01:03:03.200+0000",
                    "started": "2019-06-08T01:03:03.199+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256311",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256433",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291815478\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n-    \"typedoc\": \"0.14.2\",\n-    \"typescript\": \"3.2.4\",\n+    \"typedoc\": \"TypeStrong/typedoc\",\n \n Review comment:\n   Yes unfortunately :/. Each TypeDoc release is pinned to a specific version of the TypeScript compiler, and as of this commit, the latest public release on npm is on TS 3.2.4, but master is on 3.4.5. We should update this dependency when TypeDoc publishes master to npm.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T18:27:47.088+0000",
                    "updated": "2019-06-08T18:27:47.088+0000",
                    "started": "2019-06-08T18:27:47.088+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256433",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291815531\n \n \n\n ##########\n File path: js/test/unit/builders/builder-tests.ts\n ##########\n @@ -0,0 +1,269 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import '../../jest-extensions';\n+import { AsyncIterable } from 'ix';\n+import { validateVector } from './utils';\n+import * as generate from '../../generate-test-data';\n+import { Type, DataType, Chunked, util, Builder, UnionVector } from '../../Arrow';\n+\n+const testDOMStreams = process.env.TEST_DOM_STREAMS === 'true';\n+const testNodeStreams = process.env.TEST_NODE_STREAMS === 'true';\n+\n+describe('Generated Test Data', () => {\n+    describe('NullBuilder',                 () => { validateBuilder(generate.null_); });\n+    describe('BoolBuilder',                 () => { validateBuilder(generate.bool); });\n+    describe('Int8Builder',                 () => { validateBuilder(generate.int8); });\n+    describe('Int16Builder',                () => { validateBuilder(generate.int16); });\n+    describe('Int32Builder',                () => { validateBuilder(generate.int32); });\n+    describe('Int64Builder',                () => { validateBuilder(generate.int64); });\n+    describe('Uint8Builder',                () => { validateBuilder(generate.uint8); });\n+    describe('Uint16Builder',               () => { validateBuilder(generate.uint16); });\n+    describe('Uint32Builder',               () => { validateBuilder(generate.uint32); });\n+    describe('Uint64Builder',               () => { validateBuilder(generate.uint64); });\n+    describe('Float16Builder',              () => { validateBuilder(generate.float16); });\n+    describe('Float32Builder',              () => { validateBuilder(generate.float32); });\n+    describe('Float64Builder',              () => { validateBuilder(generate.float64); });\n+    describe('Utf8Builder',                 () => { validateBuilder(generate.utf8); });\n+    describe('BinaryBuilder',               () => { validateBuilder(generate.binary); });\n+    describe('FixedSizeBinaryBuilder',      () => { validateBuilder(generate.fixedSizeBinary); });\n+    describe('DateDayBuilder',              () => { validateBuilder(generate.dateDay); });\n+    describe('DateMillisecondBuilder',      () => { validateBuilder(generate.dateMillisecond); });\n+    describe('TimestampSecondBuilder',      () => { validateBuilder(generate.timestampSecond); });\n+    describe('TimestampMillisecondBuilder', () => { validateBuilder(generate.timestampMillisecond); });\n+    describe('TimestampMicrosecondBuilder', () => { validateBuilder(generate.timestampMicrosecond); });\n+    describe('TimestampNanosecondBuilder',  () => { validateBuilder(generate.timestampNanosecond); });\n+    describe('TimeSecondBuilder',           () => { validateBuilder(generate.timeSecond); });\n+    describe('TimeMillisecondBuilder',      () => { validateBuilder(generate.timeMillisecond); });\n+    describe('TimeMicrosecondBuilder',      () => { validateBuilder(generate.timeMicrosecond); });\n+    describe('TimeNanosecondBuilder',       () => { validateBuilder(generate.timeNanosecond); });\n+    describe('DecimalBuilder',              () => { validateBuilder(generate.decimal); });\n+    describe('ListBuilder',                 () => { validateBuilder(generate.list); });\n+    describe('StructBuilder',               () => { validateBuilder(generate.struct); });\n+    describe('DenseUnionBuilder',           () => { validateBuilder(generate.denseUnion); });\n+    describe('SparseUnionBuilder',          () => { validateBuilder(generate.sparseUnion); });\n+    describe('DictionaryBuilder',           () => { validateBuilder(generate.dictionary); });\n+    describe('IntervalDayTimeBuilder',      () => { validateBuilder(generate.intervalDayTime); });\n+    describe('IntervalYearMonthBuilder',    () => { validateBuilder(generate.intervalYearMonth); });\n+    describe('FixedSizeListBuilder',        () => { validateBuilder(generate.fixedSizeList); });\n+    describe('MapBuilder',                  () => { validateBuilder(generate.map); });\n+});\n+\n+function validateBuilder(generate: (length?: number, nullCount?: number, ...args: any[]) => generate.GeneratedVector) {\n+\n+    const type = generate(0, 0).vector.type;\n+\n+    for (let i = -1; ++i < 1;) {\n \n Review comment:\n   Ah yes it is. I had this loop in while I was debugging an edge case and forgot to remove it once it was solved.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T18:29:20.601+0000",
                    "updated": "2019-06-08T18:29:20.601+0000",
                    "started": "2019-06-08T18:29:20.600+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256434",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291815907\n \n \n\n ##########\n File path: js/package.json\n ##########\n @@ -101,12 +100,13 @@\n     \"source-map-loader\": \"0.2.4\",\n     \"terser-webpack-plugin\": \"1.2.1\",\n     \"trash\": \"4.3.0\",\n-    \"ts-jest\": \"23.10.5\",\n-    \"ts-node\": \"8.0.2\",\n+    \"ts-jest\": \"24.0.2\",\n+    \"ts-node\": \"8.2.0\",\n     \"tslint\": \"5.12.1\",\n-    \"typedoc\": \"0.14.2\",\n-    \"typescript\": \"3.2.4\",\n+    \"typedoc\": \"TypeStrong/typedoc\",\n+    \"typescript\": \"3.5.1\",\n \n Review comment:\n   The changes to update to TS@3.5.1 were relatively minor changes to the type mapping interfaces, and are all in this commit: https://github.com/trxcllnt/arrow/commit/492d1f111bb78b75ca79790beb4654119af93d51#diff-3cc15e0c860bac3718152b2c143638ad\r\n   \r\n   I don't disagree on preferring this to be split out and handled separately, but practically speaking I was working under a number of constraints that made it more difficult. First, TypeScript released v3.3+ with breaking changes to type resolution halfway through the process of working on these features (leading to [this issue]( https://github.com/apache/arrow/issues/4452)).\r\n   \r\n   Second, I was using the new Builders in app code as they were being developed. The apps needed TS 3.5, but wouldn't compile without these fixes, so I had to update Arrow. But the Builders branch was sufficiently different and would have been difficult to track and constantly rebase with that change (and wasn't even done yet), it was easier to do it here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T18:43:21.536+0000",
                    "updated": "2019-06-08T18:43:21.536+0000",
                    "started": "2019-06-08T18:43:21.535+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256435",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256440",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on pull request #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#discussion_r291816801\n \n \n\n ##########\n File path: js/src/builder/dictionary.ts\n ##########\n @@ -0,0 +1,93 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+//   http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing,\n+// software distributed under the License is distributed on an\n+// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+// KIND, either express or implied.  See the License for the\n+// specific language governing permissions and limitations\n+// under the License.\n+\n+import { Vector } from '../vector';\n+import { IntBuilder } from './int';\n+import { Dictionary, DataType } from '../type';\n+import { Builder, BuilderOptions } from '../builder';\n+\n+type DictionaryHashFunction = (x: any) => string | number;\n+\n+export interface DictionaryBuilderOptions<T extends DataType = any, TNull = any> extends BuilderOptions<T, TNull> {\n+    dictionaryHashFunction?: DictionaryHashFunction;\n+}\n+\n+/** @ignore */\n+export class DictionaryBuilder<T extends Dictionary, TNull = any> extends Builder<T, TNull> {\n+\n+    protected _codes = Object.create(null);\n+    public readonly indices: IntBuilder<T['indices']>;\n+    public readonly dictionary: Builder<T['dictionary']>;\n+\n+    constructor({ 'type': type, 'nullValues': nulls, 'dictionaryHashFunction': hashFn }: DictionaryBuilderOptions<T, TNull>) {\n+        super({ type });\n+        this._nulls = <any> null;\n+        this.indices = Builder.new({ 'type': this.type.indices, 'nullValues': nulls }) as IntBuilder<T['indices']>;\n+        this.dictionary = Builder.new({ 'type': this.type.dictionary, 'nullValues': null }) as Builder<T['dictionary']>;\n+        if (typeof hashFn === 'function') {\n+            this.valueToKey = hashFn;\n+        }\n+    }\n+\n+    public get values() { return this.indices.values; }\n+    public get nullCount() { return this.indices.nullCount; }\n+    public get nullBitmap() { return this.indices.nullBitmap; }\n+    public get byteLength() { return this.indices.byteLength; }\n+    public get reservedLength() { return this.indices.reservedLength; }\n+    public get reservedByteLength() { return this.indices.reservedByteLength; }\n+    public isValid(value: T['TValue'] | TNull) { return this.indices.isValid(value); }\n+    public setValid(index: number, valid: boolean) {\n+        const indices = this.indices;\n+        valid = indices.setValid(index, valid);\n+        this.length = indices.length;\n+        return valid;\n+    }\n+    public setValue(index: number, value: T['TValue']) {\n+        let keysToCodesMap = this._codes;\n+        let key = this.valueToKey(value);\n+        let idx = keysToCodesMap[key];\n+        if (idx === undefined) {\n+            keysToCodesMap[key] = idx = this.dictionary.append(value).length - 1;\n+        }\n+        return this.indices.setValue(index, idx);\n+    }\n+    public flush() {\n+        const chunk = this.indices.flush().clone(this.type);\n+        this.clear();\n+        return chunk;\n+    }\n+    public finish() {\n+        this.type.dictionaryVector = Vector.new(this.dictionary.finish().flush());\n+        return super.finish();\n+    }\n+    public clear() {\n+        this.indices.clear();\n+        return super.clear();\n+    }\n+    public valueToKey(val: any) {\n+        let str = typeof val === 'string' ? val : `${val}`;\n+        let h1 = 0xdeadbeef ^ 0, h2 = 0x41c6ce57 ^ 0;\n+        for (let i = -1, n = str.length, ch; ++i < n;) {\n+            ch = str.charCodeAt(i);\n+            h1 = Math.imul(h1 ^ ch, 2654435761);\n+            h2 = Math.imul(h2 ^ ch, 1597334677);\n+        }\n+        h1 = Math.imul(h1 ^ h1 >>> 16, 2246822507) ^ Math.imul(h2 ^ h2 >>> 13, 3266489909);\n+        h2 = Math.imul(h2 ^ h2 >>> 16, 2246822507) ^ Math.imul(h1 ^ h1 >>> 13, 3266489909);\n+        return 4294967296 * (2097151 & h2) + (h1 >>> 0) as any;\n+    }\n \n Review comment:\n   Ha yeah, this is an interesting bit of code. I pulled it from a collection of neat hash functions I've seen over the years, which I realize now might not be a good idea. I'd initially tried to use DJB2 which is fast and simple 32-bit hash, and as you point out, is subject to collisions. So this one, while not as fast, is a 53-bit hash and should have a lower likelihood of collisions.\r\n   \r\n   Re: terminology, I've been doing a bunch of python lately, and I think I used the same names as pandas' Categorical dtype :sweat_smile:.\r\n   \r\n   As to why I'm hashing at all, JS strings take up an enormous amount of memory. That memory is allocated on the heap, is subject to the v8 memory limits, and can easily grow to be the majority of VM-allocated memory in an app. But when those strings are encoded to Uint8Arrays (and the string is GC'd), the Uint8Arrays _aren't_ subject to the same v8 memory limits. So by hashing each string to a number, we reduce the likelihood of OOM'ing the JS VM accidentally.\r\n   \r\n   In node I've been using the [`node-metrohash`](https://github.com/robertklep/node-metrohash/) native module for fast hashing, but the browser doesn't have any similar fast hashing APIs (there's a cryptography API, but it's promise based and cryptographically secure, so not great for hashing). I wanted a reasonable default if someone wants to dictionary-encode some data but doesn't provide their own hash function.\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T19:15:36.855+0000",
                    "updated": "2019-06-08T19:15:36.855+0000",
                    "started": "2019-06-08T19:15:36.854+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256440",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256444",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-500156750\n \n \n   @TheNeuralBit that sounds good to me, I'm happy to schedule some time to do a walk through whenever you're free.\r\n   \r\n   I tried to model the Builders similar to the Vectors, both organizationally and in their public API. Most of the additions live in the [`src/builders`](https://github.com/trxcllnt/arrow/tree/js/data-builders/js/src/builder) directory, or the [`src/Builder.ts` base class](https://github.com/trxcllnt/arrow/blob/js/data-builders/js/src/builder.ts), which I tried to annotate with docstrings as I went. I also followed a similar pattern to the Arrow C++ Builders, and centralized the low-level buffer operations into a few [`BufferBuilder` classes here](https://github.com/trxcllnt/arrow/blob/js/data-builders/js/src/builder/buffer.ts).\r\n   \r\n   Creating and using Builders is also very similar to Vectors: `Builder.new({ type: DataType })` returns a new Builder for the given `type`, and you can `set()` or `append()` any of the same types that are accepted or returned by the corresponding `Vector.set()` and `Vector.get()` calls, respectively. The high-level streaming APIs also accept the same options as `Builder.new()` to help make the transition from an imperative building routine to a streaming routine as easy as possible.\r\n   \r\n   And lastly, I added a basic implementation for `Vector.from()` for all Vectors that use the corresponding Builder implementation to create a Vector from JS values for simple use-cases (and Table/RecordBatch that use the Struct or Map Builders under the hood). For example, now you can create a Table from JS objects rather easily:\r\n   \r\n   ```typescript\r\n   const { Table, Field, Map_, Int32, Utf8 } = require('apache-arrow');\r\n   const table = Table.from({\r\n     type: new Map_([new Field('int', new Int32()), new Field('str', new Utf8())]),\r\n     values: [\r\n       { 'int': 0, str: 'hello' },\r\n       { 'int': 1, str: 'world' }\r\n     ]\r\n   });\r\n   console.table([...table].map((row) => row.toJSON());\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T19:55:50.233+0000",
                    "updated": "2019-06-08T19:55:50.233+0000",
                    "started": "2019-06-08T19:55:50.232+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256444",
                    "issueId": "13226021"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/worklog/256445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "trxcllnt commented on issue #4476: ARROW-5115: [JS] Add Vector Builders and high-level stream primitives\nURL: https://github.com/apache/arrow/pull/4476#issuecomment-500156750\n \n \n   @TheNeuralBit that sounds good to me, I'm happy to schedule some time to do a walk through whenever you're free.\r\n   \r\n   I tried to model the Builders similar to the Vectors, both organizationally and in their public API. Most of the additions live in the [`src/builders`](https://github.com/trxcllnt/arrow/tree/js/data-builders/js/src/builder) directory, or the [`src/Builder.ts` base class](https://github.com/trxcllnt/arrow/blob/js/data-builders/js/src/builder.ts), which I tried to annotate with docstrings as I went. I also followed a similar pattern to the Arrow C++ Builders, and centralized the low-level buffer operations into a few [`BufferBuilder` classes here](https://github.com/trxcllnt/arrow/blob/js/data-builders/js/src/builder/buffer.ts).\r\n   \r\n   Creating and using Builders is also very similar to Vectors: `Builder.new({ type: DataType })` returns a new Builder for the given `type`, and you can `set()` or `append()` any of the same types that are accepted or returned by the corresponding `Vector.set()` and `Vector.get()` calls, respectively. The high-level streaming APIs also accept the same options as `Builder.new()` to help make the transition from an imperative building routine to a streaming routine as easy as possible.\r\n   \r\n   And lastly, I added a basic implementation for `Vector.from()` for all Vectors that use the corresponding Builder implementation to create a Vector from JS values for simple use-cases (and Table/RecordBatch that use the Struct or Map Builders under the hood). For example, now you can create a Table from JS objects rather easily:\r\n   \r\n   ```typescript\r\n   const { Table, Field, Map_, Int32, Utf8 } = require('apache-arrow');\r\n   const table = Table.from({\r\n     type: new Map_([new Field('int', new Int32()), new Field('str', new Utf8())]),\r\n     values: [\r\n       { 'int': 0, str: 'hello' },\r\n       { 'int': 1, str: 'world' }\r\n     ]\r\n   });\r\n   console.table([...table].map((row) => row.toJSON());\r\n   ```\r\n   \r\n   Also, check out the small [`csv-to-arrow-js`](https://github.com/trxcllnt/csv-to-arrow-js/blob/master/index.js#L14) for an example of using the AsyncIterable streaming API. I'm working this weekend on more docs and examples like this that we can consolidate into a better set of examples in the repo.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-08T19:59:46.530+0000",
                    "updated": "2019-06-08T19:59:46.530+0000",
                    "started": "2019-06-08T19:59:46.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "256445",
                    "issueId": "13226021"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 18000,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6285ade9[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29830e0f[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c25a0e9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4d672a14[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4eb6c1fc[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@78cc853e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@29bf4026[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@5d7cf88f[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@25bd7bfd[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3944ff01[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6a29267f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@50ab1335[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 18000,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 19 21:14:43 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-19T21:14:43.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5115/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2019-04-04T02:02:49.000+0000",
        "updated": "2019-06-19T21:14:52.000+0000",
        "timeoriginalestimate": null,
        "description": "We should implement the streaming Vector Builders in JS.",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "5h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 18000
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[JS] Implement the Vector Builders",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13226021/comment/16868011",
                    "id": "16868011",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "body": "Issue resolved by pull request 4476\n[https://github.com/apache/arrow/pull/4476]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bhulette",
                        "name": "bhulette",
                        "key": "bhulette",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Brian Hulette",
                        "active": true,
                        "timeZone": "America/Vancouver"
                    },
                    "created": "2019-06-19T21:14:43.114+0000",
                    "updated": "2019-06-19T21:14:43.114+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z01fwo:",
        "customfield_12314139": null
    }
}