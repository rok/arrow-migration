{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13407848",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848",
    "key": "ARROW-14429",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350591",
                "id": "12350591",
                "description": "",
                "name": "7.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-02-03"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12349983",
                "id": "12349983",
                "description": "",
                "name": "5.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-07-28"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [
            {
                "id": "12631374",
                "self": "https://issues.apache.org/jira/rest/api/2/issueLink/12631374",
                "type": {
                    "id": "12310000",
                    "name": "Duplicate",
                    "inward": "is duplicated by",
                    "outward": "duplicates",
                    "self": "https://issues.apache.org/jira/rest/api/2/issueLinkType/12310000"
                },
                "outwardIssue": {
                    "id": "13409890",
                    "key": "ARROW-14577",
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13409890",
                    "fields": {
                        "summary": "[C++] Enable fine grained IO for async IPC reader ",
                        "status": {
                            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                            "name": "Resolved",
                            "id": "5",
                            "statusCategory": {
                                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                                "id": 3,
                                "key": "done",
                                "colorName": "green",
                                "name": "Done"
                            }
                        },
                        "priority": {
                            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                            "name": "Major",
                            "id": "3"
                        },
                        "issuetype": {
                            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                            "id": "4",
                            "description": "An improvement or enhancement to an existing feature or task.",
                            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                            "name": "Improvement",
                            "subtask": false,
                            "avatarId": 21140
                        }
                    }
                }
            }
        ],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=westonpace",
            "name": "westonpace",
            "key": "westonpace",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Weston Pace",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
            "name": "lingkai2",
            "key": "lingkai2",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Lingkai Kong",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
            "name": "lingkai2",
            "key": "lingkai2",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Lingkai Kong",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14429/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/669612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm opened a new pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535\n\n\n   This implements two minor optimizations for the IPC file reader:\r\n   \r\n   - When reading an IPC message, try to read the entire body and header in one call. (This was already implemented for the async reader, but not the regular synchronous reader.)\r\n   - Like the Parquet reader, try to avoid a second I/O operation when reading the footer by speculatively reading extra data.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-25T15:31:24.856+0000",
                    "updated": "2021-10-25T15:31:24.856+0000",
                    "started": "2021-10-25T15:31:24.856+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "669612",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/669613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-951047283\n\n\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-25T15:31:51.213+0000",
                    "updated": "2021-10-25T15:31:51.213+0000",
                    "started": "2021-10-25T15:31:51.213+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "669613",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/669614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-951049087\n\n\n   I tested this with minio and toxiproxy set up with `toxiproxy-cli-linux-amd64 toxic add -n latency -t latency --attribute latency=100 s3`. Now, this is rather unrealistic - this is a lot more latency than you should expect from S3, unless you're doing a cross-region read - but it highlights the cost of I/O in this case.\r\n   \r\n   Median times are given below. Three methods are compared: iterating through all record batches, iterating through all batches using the generator (which also uses coalescing), and using Datasets (async scanner) to read the data as a table.\r\n   \r\n   ```\r\n   Baseline:\r\n   Iterator: 5.54072s\r\n   Generator: 0.560195s\r\n   Datasets: 1.39329s\r\n   \r\n   With the IPC message optimization:\r\n   Iterator: 2.95526s\r\n   Generator: 0.561748s\r\n   Datasets: 1.39662s\r\n   \r\n   With the IPC message optimization and the footer optimization:\r\n   Iterator: 2.84875s\r\n   Generator: 0.456949s\r\n   Datasets: 1.08955s\r\n   ```\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-25T15:33:50.574+0000",
                    "updated": "2021-10-25T15:33:50.574+0000",
                    "started": "2021-10-25T15:33:50.574+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "669614",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/670690",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kszucs commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-952879969\n\n\n   @lidavidm can we have conbench benchmarks for this case to avoid regressions?\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T12:34:25.702+0000",
                    "updated": "2021-10-27T12:34:25.702+0000",
                    "started": "2021-10-27T12:34:25.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670690",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/670703",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-952897031\n\n\n   Good point - I'll add them when I get a chance. (Probably I'll artificially add delay in-process to keep the benchmark simple.)\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-27T12:54:40.521+0000",
                    "updated": "2021-10-27T12:54:40.521+0000",
                    "started": "2021-10-27T12:54:40.521+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "670703",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/672033",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-954863081\n\n\n   I've added a unit test that counts the number of read operations, instead of a benchmark, since that's a more reliable metric to track for this instance.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-29T16:04:27.770+0000",
                    "updated": "2021-10-29T16:04:27.770+0000",
                    "started": "2021-10-29T16:04:27.770+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672033",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/672282",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r739588637\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/reader.cc\n##########\n@@ -1216,15 +1216,23 @@ class RecordBatchFileReaderImpl : public RecordBatchFileReader {\n   }\n \n   Future<> ReadFooterAsync(arrow::internal::Executor* executor) {\n+    // When reading the footer, read this much additional data in an\n+    // attempt to avoid a second I/O operation (which can be slow on a\n+    // high-latency filesystem like S3)\n\nReview comment:\n       ```suggestion\r\n       // When reading the footer, read up to this much additional data in\r\n       // an attempt to avoid a second I/O operation (which can be slow\r\n       // on a high-latency filesystem like S3)\r\n   ```\n\n##########\nFile path: cpp/src/arrow/ipc/reader.cc\n##########\n@@ -1235,19 +1243,24 @@ class RecordBatchFileReaderImpl : public RecordBatchFileReader {\n                                    \"from end of file\");\n           }\n \n-          if (memcmp(buffer->data() + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n+          const uint8_t* magic_start = buffer->data() + readahead;\n+          if (memcmp(magic_start + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n             return Status::Invalid(\"Not an Arrow file\");\n           }\n \n-          int32_t footer_length = BitUtil::FromLittleEndian(\n-              *reinterpret_cast<const int32_t*>(buffer->data()));\n-\n+          int32_t footer_length =\n+              BitUtil::FromLittleEndian(util::SafeLoadAs<int32_t>(magic_start));\n           if (footer_length <= 0 ||\n               footer_length > self->footer_offset_ - magic_size * 2 - 4) {\n             return Status::Invalid(\"File is smaller than indicated metadata size\");\n           }\n \n           // Now read the footer\n+          if (footer_length <= readahead) {\n+            return SliceBuffer(buffer, buffer->size() - file_end_size - footer_length,\n+                               footer_length);\n+          }\n+\n\nReview comment:\n       If this condition is false would it be faster to read just the remaining portion instead of rereading a part of the file?\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_test.cc\n##########\n@@ -1706,6 +1706,99 @@ TEST_F(TestFileFormat, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n TEST_F(TestFileFormatGenerator, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n+class TrackedRandomAccessFile : public io::RandomAccessFile {\n+ public:\n+  explicit TrackedRandomAccessFile(io::RandomAccessFile* delegate)\n+      : delegate_(delegate), read_(0) {}\n+\n+  Status Close() override { return delegate_->Close(); }\n+  bool closed() const override { return delegate_->closed(); }\n+  Result<int64_t> Tell() const override { return delegate_->Tell(); }\n+  Status Seek(int64_t position) override { return delegate_->Seek(position); }\n+  Result<int64_t> Read(int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->Read(nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> Read(int64_t nbytes) override {\n+    read_++;\n+    return delegate_->Read(nbytes);\n+  }\n+  bool supports_zero_copy() const override { return delegate_->supports_zero_copy(); }\n+  Result<int64_t> GetSize() override { return delegate_->GetSize(); }\n+  Result<int64_t> ReadAt(int64_t position, int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> ReadAt(int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes);\n+  }\n+  Future<std::shared_ptr<Buffer>> ReadAsync(const io::IOContext& io_context,\n+                                            int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAsync(io_context, position, nbytes);\n+  }\n\nReview comment:\n       This might double count in an implementation like `arrow::io::RandomAccessFile::ReadAsync` which (potentially) spawns a thread task and calls `self->ReadAt`.\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n+  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, to_read));\n\nReview comment:\n       Nit: `metadata` is a slightly inaccurate name now.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-30T01:05:56.077+0000",
                    "updated": "2021-10-30T01:05:56.077+0000",
                    "started": "2021-10-30T01:05:56.077+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672282",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/672284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r739589727\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_test.cc\n##########\n@@ -1706,6 +1706,99 @@ TEST_F(TestFileFormat, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n TEST_F(TestFileFormatGenerator, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n+class TrackedRandomAccessFile : public io::RandomAccessFile {\n+ public:\n+  explicit TrackedRandomAccessFile(io::RandomAccessFile* delegate)\n+      : delegate_(delegate), read_(0) {}\n+\n+  Status Close() override { return delegate_->Close(); }\n+  bool closed() const override { return delegate_->closed(); }\n+  Result<int64_t> Tell() const override { return delegate_->Tell(); }\n+  Status Seek(int64_t position) override { return delegate_->Seek(position); }\n+  Result<int64_t> Read(int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->Read(nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> Read(int64_t nbytes) override {\n+    read_++;\n+    return delegate_->Read(nbytes);\n+  }\n+  bool supports_zero_copy() const override { return delegate_->supports_zero_copy(); }\n+  Result<int64_t> GetSize() override { return delegate_->GetSize(); }\n+  Result<int64_t> ReadAt(int64_t position, int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> ReadAt(int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes);\n+  }\n+  Future<std::shared_ptr<Buffer>> ReadAsync(const io::IOContext& io_context,\n+                                            int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAsync(io_context, position, nbytes);\n+  }\n\nReview comment:\n       That should be ok because it'll call the original ReadAt instead of the overridden one.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-30T01:07:42.149+0000",
                    "updated": "2021-10-30T01:07:42.149+0000",
                    "started": "2021-10-30T01:07:42.149+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672284",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/672302",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r739600485\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/read_write_test.cc\n##########\n@@ -1706,6 +1706,99 @@ TEST_F(TestFileFormat, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n TEST_F(TestFileFormatGenerator, ReadFieldSubset) { TestReadSubsetOfFields(); }\n \n+class TrackedRandomAccessFile : public io::RandomAccessFile {\n+ public:\n+  explicit TrackedRandomAccessFile(io::RandomAccessFile* delegate)\n+      : delegate_(delegate), read_(0) {}\n+\n+  Status Close() override { return delegate_->Close(); }\n+  bool closed() const override { return delegate_->closed(); }\n+  Result<int64_t> Tell() const override { return delegate_->Tell(); }\n+  Status Seek(int64_t position) override { return delegate_->Seek(position); }\n+  Result<int64_t> Read(int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->Read(nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> Read(int64_t nbytes) override {\n+    read_++;\n+    return delegate_->Read(nbytes);\n+  }\n+  bool supports_zero_copy() const override { return delegate_->supports_zero_copy(); }\n+  Result<int64_t> GetSize() override { return delegate_->GetSize(); }\n+  Result<int64_t> ReadAt(int64_t position, int64_t nbytes, void* out) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes, out);\n+  }\n+  Result<std::shared_ptr<Buffer>> ReadAt(int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAt(position, nbytes);\n+  }\n+  Future<std::shared_ptr<Buffer>> ReadAsync(const io::IOContext& io_context,\n+                                            int64_t position, int64_t nbytes) override {\n+    read_++;\n+    return delegate_->ReadAsync(io_context, position, nbytes);\n+  }\n\nReview comment:\n       Ah, yes, this is a proxy not a parent class :facepalm: \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-10-30T03:04:54.424+0000",
                    "updated": "2021-10-30T03:04:54.424+0000",
                    "started": "2021-10-30T03:04:54.424+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672302",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/672728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r740313463\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/reader.cc\n##########\n@@ -1235,19 +1243,24 @@ class RecordBatchFileReaderImpl : public RecordBatchFileReader {\n                                    \"from end of file\");\n           }\n \n-          if (memcmp(buffer->data() + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n+          const uint8_t* magic_start = buffer->data() + readahead;\n+          if (memcmp(magic_start + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n             return Status::Invalid(\"Not an Arrow file\");\n           }\n \n-          int32_t footer_length = BitUtil::FromLittleEndian(\n-              *reinterpret_cast<const int32_t*>(buffer->data()));\n-\n+          int32_t footer_length =\n+              BitUtil::FromLittleEndian(util::SafeLoadAs<int32_t>(magic_start));\n           if (footer_length <= 0 ||\n               footer_length > self->footer_offset_ - magic_size * 2 - 4) {\n             return Status::Invalid(\"File is smaller than indicated metadata size\");\n           }\n \n           // Now read the footer\n+          if (footer_length <= readahead) {\n+            return SliceBuffer(buffer, buffer->size() - file_end_size - footer_length,\n+                               footer_length);\n+          }\n+\n\nReview comment:\n       I've updated this to just read the missing part of the footer.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-01T15:41:47.357+0000",
                    "updated": "2021-11-01T15:41:47.357+0000",
                    "started": "2021-11-01T15:41:47.357+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "672728",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/673399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r740313463\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/reader.cc\n##########\n@@ -1235,19 +1243,24 @@ class RecordBatchFileReaderImpl : public RecordBatchFileReader {\n                                    \"from end of file\");\n           }\n \n-          if (memcmp(buffer->data() + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n+          const uint8_t* magic_start = buffer->data() + readahead;\n+          if (memcmp(magic_start + sizeof(int32_t), kArrowMagicBytes, magic_size)) {\n             return Status::Invalid(\"Not an Arrow file\");\n           }\n \n-          int32_t footer_length = BitUtil::FromLittleEndian(\n-              *reinterpret_cast<const int32_t*>(buffer->data()));\n-\n+          int32_t footer_length =\n+              BitUtil::FromLittleEndian(util::SafeLoadAs<int32_t>(magic_start));\n           if (footer_length <= 0 ||\n               footer_length > self->footer_offset_ - magic_size * 2 - 4) {\n             return Status::Invalid(\"File is smaller than indicated metadata size\");\n           }\n \n           // Now read the footer\n+          if (footer_length <= readahead) {\n+            return SliceBuffer(buffer, buffer->size() - file_end_size - footer_length,\n+                               footer_length);\n+          }\n+\n\nReview comment:\n       I've updated this to just read the missing part of the footer.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-02T17:53:29.532+0000",
                    "updated": "2021-11-02T17:53:29.532+0000",
                    "started": "2021-11-02T17:53:29.531+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "673399",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/674587",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741899792\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Just to be sure, this does take padding into account?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T12:45:16.153+0000",
                    "updated": "2021-11-03T12:45:16.153+0000",
                    "started": "2021-11-03T12:45:16.152+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674587",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/674593",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741904720\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Hmm. So normally the body_length comes from CheckMetadataAndGetBodyLength which just gets the bodyLength from the Message flatbuffer. The body_length here comes from the FileBlock in the footer, which according to File.fbs should be aligned already. And in writer.cc it looks like we add the padding to the metadata length, so body_length should be OK: https://github.com/apache/arrow/blob/16af17c3327cfe624038913a7a808656082f69e0/cpp/src/arrow/ipc/writer.cc#L1234-L1236\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-03T12:51:50.064+0000",
                    "updated": "2021-11-03T12:51:50.064+0000",
                    "started": "2021-11-03T12:51:50.063+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "674593",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/675460",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741904720\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Hmm. So normally the body_length comes from CheckMetadataAndGetBodyLength which just gets the bodyLength from the Message flatbuffer. The body_length here comes from the FileBlock in the footer, which according to File.fbs should be aligned already. And in writer.cc it looks like we add the padding to the metadata length, so body_length should be OK: https://github.com/apache/arrow/blob/16af17c3327cfe624038913a7a808656082f69e0/cpp/src/arrow/ipc/writer.cc#L1234-L1236\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Hmm. So normally the body_length comes from CheckMetadataAndGetBodyLength which just gets the bodyLength from the Message flatbuffer. The body_length here comes from the FileBlock in the footer, which according to File.fbs should be aligned already. And in writer.cc it looks like we add the padding to the metadata length, so body_length should be OK: https://github.com/apache/arrow/blob/16af17c3327cfe624038913a7a808656082f69e0/cpp/src/arrow/ipc/writer.cc#L1234-L1236\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:52:52.558+0000",
                    "updated": "2021-11-04T00:52:52.558+0000",
                    "started": "2021-11-04T00:52:52.558+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675460",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/675470",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741899792\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Just to be sure, this does take padding into account?\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Just to be sure, this does take padding into account?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T00:53:49.860+0000",
                    "updated": "2021-11-04T00:53:49.860+0000",
                    "started": "2021-11-04T00:53:49.860+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675470",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/675897",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741904720\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Hmm. So normally the body_length comes from CheckMetadataAndGetBodyLength which just gets the bodyLength from the Message flatbuffer. The body_length here comes from the FileBlock in the footer, which according to File.fbs should be aligned already. And in writer.cc it looks like we add the padding to the metadata length, so body_length should be OK: https://github.com/apache/arrow/blob/16af17c3327cfe624038913a7a808656082f69e0/cpp/src/arrow/ipc/writer.cc#L1234-L1236\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:39:16.035+0000",
                    "updated": "2021-11-04T01:39:16.035+0000",
                    "started": "2021-11-04T01:39:16.034+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675897",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/675906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on a change in pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#discussion_r741899792\n\n\n\n##########\nFile path: cpp/src/arrow/ipc/message.cc\n##########\n@@ -290,7 +291,8 @@ Result<std::unique_ptr<Message>> ReadMessage(int64_t offset, int32_t metadata_le\n                            decoder.next_required_size());\n   }\n \n-  ARROW_ASSIGN_OR_RAISE(auto metadata, file->ReadAt(offset, metadata_length));\n+  int64_t to_read = body_length > 0 ? (metadata_length + body_length) : metadata_length;\n\nReview comment:\n       Just to be sure, this does take padding into account?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-04T01:39:53.980+0000",
                    "updated": "2021-11-04T01:39:53.980+0000",
                    "started": "2021-11-04T01:39:53.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "675906",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/677038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-961894760\n\n\n   @westonpace I've rebased this, but the interaction with ARROW-12683 leaves something to be desired - your PR might supersede this one.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T13:28:13.702+0000",
                    "updated": "2021-11-05T13:28:13.702+0000",
                    "started": "2021-11-05T13:28:13.701+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677038",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/677383",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-961894760\n\n\n   @westonpace I've rebased this, but the interaction with ARROW-12683 leaves something to be desired - your PR might supersede this one.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T19:44:21.328+0000",
                    "updated": "2021-11-05T19:44:21.328+0000",
                    "started": "2021-11-05T19:44:21.328+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677383",
                    "issueId": "13407848"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/worklog/677763",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11535:\nURL: https://github.com/apache/arrow/pull/11535#issuecomment-961894760\n\n\n   @westonpace I've rebased this, but the interaction with ARROW-12683 leaves something to be desired - your PR might supersede this one.\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-11-05T20:35:04.748+0000",
                    "updated": "2021-11-05T20:35:04.748+0000",
                    "started": "2021-11-05T20:35:04.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "677763",
                    "issueId": "13407848"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@8715228[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2dfcdeec[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9f93775[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@42398318[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1c038422[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@496c99aa[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@9ee5d6d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@7c13e0b[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7638845[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2a6ff0ca[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5111c5df[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5f2e9890[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Mon Jan 17 14:40:11 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-01-17T14:40:11.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14429/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-10-21T22:18:08.000+0000",
        "updated": "2022-01-17T14:40:11.000+0000",
        "timeoriginalestimate": null,
        "description": "We are using\u00a0RecordBatchFileWriter to write Arrow type directly to S3 using the S3FileSystem, then using\u00a0RecordBatchFileReader to read from S3. The write is pretty efficient, write a 50MB finishes within 0.2s. But reading that file is taking 30s, which is definitely too long. Then I did several tests:\r\n # I tried to use\u00a0S3FileSystem to read the file into bytes, it's only taking 1s. which somehow makes me believe it's an issue with\u00a0RecordBatchFileReader\r\n # Half the size (around 25MB), with\u00a0[RecordBatchFileReader|https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatchFileReader.html]\u00a0took 17s, without\u00a0[RecordBatchFileReader|https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatchFileReader.html]\u00a0took 0.28s\r\n # Double the size (around 100MB), with\u00a0[RecordBatchFileReader|https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatchFileReader.html]\u00a0took 61s, without\u00a0[RecordBatchFileReader|https://arrow.apache.org/docs/python/generated/pyarrow.RecordBatchFileReader.html]\u00a0took 2.3s\r\n # I tried to get all bytes using\u00a0S3FileSystem first, then create a reader from the bytes. Then read all context from the reader, it's only taking 0.1s.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] RecordBatchFileReader performance really bad in S3",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17432743",
                    "id": "17432743",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "From what I recall, the reader seeks around and reads each record batch and its header individually. This means separate requests to S3, for which the latency can add up. This is especially true if the record batches are relatively small or there are a lot of them, and especially true if you're reading from a different S3 region (=higher latency). As you've found, reading all the bytes up front helps.\r\n\r\nThere are optimizations for this in the datasets project - is reading the file through that interface faster? (You will have to enable the async scanner.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-21T23:03:44.563+0000",
                    "updated": "2021-10-21T23:03:44.563+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17432745",
                    "id": "17432745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Also we can and should probably optimize this in the first place - at the very least, we should be able to read each record batch together with its metadata header, instead of separately like we currently do.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-21T23:09:51.516+0000",
                    "updated": "2021-10-21T23:09:51.516+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17432750",
                    "id": "17432750",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
                        "name": "lingkai2",
                        "key": "lingkai2",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lingkai Kong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~lidavidm]\u00a0Is there a way to configure how large a\u00a0record batch is? If we can make a record batch large I guess it would mean fewer requests to S3\r\n\r\nAlso, haven't tried the\u00a0datasets project. I will give it a try to see if that is faster or not.\u00a0\r\n\r\nThanks for your help!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
                        "name": "lingkai2",
                        "key": "lingkai2",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lingkai Kong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-21T23:58:21.270+0000",
                    "updated": "2021-10-21T23:58:21.270+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17432970",
                    "id": "17432970",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~lingkai2] the size of the record batches in the file is determined when you write the file. How is the file being written?\r\n\r\nAlso I would note that if you are reading the entire file, and the file is relatively small, it will be hard to do much better than just reading the entire thing into memory first.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-22T13:15:12.484+0000",
                    "updated": "2021-10-22T13:15:12.484+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17433134",
                    "id": "17433134",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "-Oh, I forgot to mention, but arrow::io::BufferedInputStream may also help.-\r\n\r\nI forgot that the IPC reader needs a RandomAccessFile, not a BufferedInputStream, so that won't apply here.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-22T19:56:46.312+0000",
                    "updated": "2021-10-22T20:35:41.385+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17433829",
                    "id": "17433829",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "[~lingkai2] does the Datasets reader perform better?\r\n\r\nAlso see the [pull request|https://github.com/apache/arrow/pull/11535]; while the API is less convenient, the generator-based reader may be the fastest for you.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-25T15:34:29.004+0000",
                    "updated": "2021-10-25T15:34:29.004+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17433869",
                    "id": "17433869",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
                        "name": "lingkai2",
                        "key": "lingkai2",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lingkai Kong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I realize why the read from\u00a0RecordBatchFileReader is really slow now. That's because when I write, each batch size is very small. Now I call combine_chunk before I write to DBFS and the read become much faster now.\u00a0\r\n\r\nAnd for our case, the file might be quite large so we can't load all the content into memory first",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lingkai2",
                        "name": "lingkai2",
                        "key": "lingkai2",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Lingkai Kong",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-10-25T16:50:48.130+0000",
                    "updated": "2021-10-25T16:50:48.130+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17433871",
                    "id": "17433871",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Thanks for the update.\r\n\r\nAs mentioned, the PR should speed things up somewhat as well. If you are accessing random record batches in the file, this is the best it can do. However, if you are sequentially scanning through all the record batches in the file, the record batch generator in the PR is likely the fastest - it will read from S3 in chunks to avoid the latency of making requests for each record batch. (It does use more memory though - please follow up if you find that to be an issue.)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-10-25T16:53:33.206+0000",
                    "updated": "2021-10-25T16:53:33.206+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17477253",
                    "id": "17477253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "body": "[~lidavidm] [~westonpace] is this resolved by https://issues.apache.org/jira/browse/ARROW-14577 ?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kszucs",
                        "name": "kszucs",
                        "key": "kszucs",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Krisztian Szucs",
                        "active": true,
                        "timeZone": "Europe/Budapest"
                    },
                    "created": "2022-01-17T14:36:39.012+0000",
                    "updated": "2022-01-17T14:36:39.012+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13407848/comment/17477258",
                    "id": "17477258",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Yes, we can close this. [~lingkai2] please report if you do not see an improvement.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2022-01-17T14:40:11.913+0000",
                    "updated": "2022-01-17T14:40:11.913+0000"
                }
            ],
            "maxResults": 10,
            "total": 10,
            "startAt": 0
        },
        "customfield_12311820": "0|z0w2ds:",
        "customfield_12314139": null
    }
}