{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13111413",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413",
    "key": "ARROW-1712",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=1xuepanchen1",
            "name": "1xuepanchen1",
            "key": "1xuepanchen1",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10445",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10445",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10445",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10445"
            },
            "displayName": "Panchen Xue",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1712/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@187c2b0c[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@442a3141[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@578bde0d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@423e4d84[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4c68069d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@578159b4[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5ef39eff[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@6e11aac8[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@62c10579[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@3fd0bc6c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d16d90f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@1e326b8f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jan 24 03:06:50 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-01-24T03:03:57.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1712/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2017-10-23T13:39:40.000+0000",
        "updated": "2018-01-24T03:06:50.000+0000",
        "timeoriginalestimate": null,
        "description": "The {{Resize}} and {{Reserve}} methods only reserve space for the value offsets. When building binary/string arrays with a known size (or some reasonable estimate), it would be more efficient to reserve once at the beginning to prevent internal reallocations",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Add method to BinaryBuilder to reserve space for value data",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16327454",
                    "id": "16327454",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-358045671\n \n \n   @xuepanchen thank you for your contribution. We need to add a new method to `BinaryBuilder` for this use case. \r\n   \r\n   To give an example, suppose that we anticipate building an array with 1000 elements, each of which has an expected size of around 100 bytes. You would want to write something like:\r\n   \r\n   ```\r\n   RETURN_NOT_OK(builder.Reserve(1000));\r\n   RETURN_NOT_OK(builder.ReserveData(100 * 1000));\r\n   ```\r\n   \r\n   (@xhochy do you have an opinion on what to call this?)\r\n   \r\n   Please also add a method to return the capacity of the internal `value_data_builder_` and add unit tests to `array-test.cc`. Thanks!\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T17:46:59.975+0000",
                    "updated": "2018-01-16T17:46:59.975+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16327948",
                    "id": "16327948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-358134252\n \n \n   @xuepanchen note that each time you push any commits to GitHub on an open PR, it creates CI builds in our Travis CI and Appveyor queues, so small incremental pushes can impact other developers who are waiting on their builds to run. In general, it's a good practice to wait to open a PR on a WIP patch until you're ready to validate a completed patch and/or need code review. \r\n   \r\n   If you enable Travis CI and Appveyor on your fork of Arrow, you can see CI builds on your branches without having to open a PR to the Arrow repo. e.g. https://travis-ci.org/wesm/arrow/branches\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T22:50:02.007+0000",
                    "updated": "2018-01-16T22:50:02.007+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16327980",
                    "id": "16327980",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-358140381\n \n \n   @wesm thank you for the remainder. Will pay more attention next time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T23:18:06.424+0000",
                    "updated": "2018-01-16T23:18:06.424+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16327981",
                    "id": "16327981",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-358140381\n \n \n   @wesm thank you for the reminder. Will pay more attention next time.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-16T23:18:34.834+0000",
                    "updated": "2018-01-16T23:18:34.834+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16329296",
                    "id": "16329296",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162157558\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,14 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n+  return value_data_builder_.Resize(capacity * sizeof(int64_t));\n \n Review comment:\n   Why do we multiply here with `int64_t`? I would expect that `ReserveData(x)` will lead to `value_data_capacity() = x`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-17T19:39:45.793+0000",
                    "updated": "2018-01-17T19:39:45.793+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16329357",
                    "id": "16329357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162163169\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,14 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n+  return value_data_builder_.Resize(capacity * sizeof(int64_t));\n \n Review comment:\n   I think this should be `Resize(capacity + value_data_builder_.length())`. The `sizeof(int64_t)` looks like a copy-paste error from implementation of `BinaryBuilder::Resize` above (and that should be `sizeof(int32_t)` there, so we should fix that)\r\n   \r\n   We should check that `extra_capacity + length` does not exceed INT32_MAX but probably return `Status::Invalid` since overflowing a `BinaryBuilder` is likely to happen somewhat more regularly\r\n   \r\n   I note also that `BufferBuilder` and `TypedBufferBuilder<T>` don't have a `shrink_to_fit` option in their `Resize` method, that would be good to add to avoid unnecessary reallocations\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-17T20:00:40.330+0000",
                    "updated": "2018-01-17T20:00:40.330+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16329358",
                    "id": "16329358",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162163351\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,14 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n+  return value_data_builder_.Resize(capacity * sizeof(int64_t));\n \n Review comment:\n   Opened https://issues.apache.org/jira/browse/ARROW-2004\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-17T20:01:20.805+0000",
                    "updated": "2018-01-17T20:01:20.805+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16329415",
                    "id": "16329415",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162170397\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,14 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n+  return value_data_builder_.Resize(capacity * sizeof(int64_t));\n \n Review comment:\n   Thank you two for the comments.\r\n   \r\n   @xhochy you are right. I will make the change accordingly.\r\n   \r\n   @wesm I have modified BinaryBuilder::Resize to use sizeof(int32_t) in previous commit. Will change to Resize(extra_capacity + curr_length)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-17T20:32:10.757+0000",
                    "updated": "2018-01-17T20:32:10.757+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332485",
                    "id": "16332485",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-359012758\n \n \n   Update ReserveData method based on feedbacks and add test case for BinaryBuilder.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T16:15:03.348+0000",
                    "updated": "2018-01-19T16:15:03.348+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332605",
                    "id": "16332605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685206\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,6 +1154,54 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n+ \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"a\", \"bb\", \"cc\", \"ddddd\", \"eeeee\"};\n+  int64_t N = static_cast<int>(strings.size());\n+  int64_t length = 0;\n+  int64_t data_length = 0;\n+  int64_t capacity = N;\n+ \n+  ASSERT_OK(builder_->Reserve(capacity));\n+  ASSERT_OK(builder_->ReserveData(capacity));\n+  \n+  ASSERT_EQ(builder_->length(), length);\n \n Review comment:\n   In googletest, the 1st parameter passed to `ASSERT_EQ` should be the expected result, so flip the argument order here and below\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.164+0000",
                    "updated": "2018-01-19T17:40:34.164+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332606",
                    "id": "16332606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685684\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,6 +1154,54 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n+ \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"a\", \"bb\", \"cc\", \"ddddd\", \"eeeee\"};\n+  int64_t N = static_cast<int>(strings.size());\n+  int64_t length = 0;\n+  int64_t data_length = 0;\n+  int64_t capacity = N;\n+ \n+  ASSERT_OK(builder_->Reserve(capacity));\n+  ASSERT_OK(builder_->ReserveData(capacity));\n \n Review comment:\n   These reservations should be viewed as different, because the size of the offsets buffer and the data buffer grow at different rates. The way this unit test should read is:\r\n   \r\n   * Call `ReserveData` with enough space for some large-ish amount of data (say 4K bytes or so)\r\n   * Append <= N bytes incrementally\r\n   * Check that the capacity remains invariant at the end (i.e. the initial `ReserveData` made sure that no additional reallocations took place)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.215+0000",
                    "updated": "2018-01-19T17:40:34.215+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332607",
                    "id": "16332607",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162684417\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,6 +1154,54 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n+ \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"a\", \"bb\", \"cc\", \"ddddd\", \"eeeee\"};\n+  int64_t N = static_cast<int>(strings.size());\n+  int64_t length = 0;\n+  int64_t data_length = 0;\n+  int64_t capacity = N;\n+ \n+  ASSERT_OK(builder_->Reserve(capacity));\n+  ASSERT_OK(builder_->ReserveData(capacity));\n+  \n+  ASSERT_EQ(builder_->length(), length);\n+  ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\n+  ASSERT_EQ(builder_->value_data_length(), data_length);\n+  ASSERT_EQ(builder_->value_data_capacity(), capacity);\n \n Review comment:\n   Why is this not a power of 2? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.297+0000",
                    "updated": "2018-01-19T17:40:34.297+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332608",
                    "id": "16332608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685991\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,21 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  if (value_data_length() + capacity > data_capacity_) {\n+    if (value_data_length() + capacity > std::numeric_limits<int32_t>::max()) {\n+      return Status::Invalid(\"Cannot reserve capacity larger than 2^31 - 1 in length for binary data\");\n+    }    \n+    \n+    RETURN_NOT_OK(value_data_builder_.Resize(value_data_length() + capacity));\n+    data_capacity_ = value_data_length() + capacity;\n \n Review comment:\n   Not needed\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.321+0000",
                    "updated": "2018-01-19T17:40:34.321+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332609",
                    "id": "16332609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162686042\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1241,6 +1253,9 @@ Status BinaryBuilder::Append(const uint8_t* value, int32_t length) {\n   RETURN_NOT_OK(Reserve(1));\n   RETURN_NOT_OK(AppendNextOffset());\n   RETURN_NOT_OK(value_data_builder_.Append(value, length));\n+  if (data_capacity_ < value_data_length()) {\n+    data_capacity_ = value_data_length();\n+  }\n \n Review comment:\n   Remove this\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.474+0000",
                    "updated": "2018-01-19T17:40:34.474+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332610",
                    "id": "16332610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685970\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1222,9 +1222,21 @@ Status BinaryBuilder::Init(int64_t elements) {\n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n+  \n+Status BinaryBuilder::ReserveData(int64_t capacity) {\n+  if (value_data_length() + capacity > data_capacity_) {\n+    if (value_data_length() + capacity > std::numeric_limits<int32_t>::max()) {\n+      return Status::Invalid(\"Cannot reserve capacity larger than 2^31 - 1 in length for binary data\");\n+    }    \n+    \n+    RETURN_NOT_OK(value_data_builder_.Resize(value_data_length() + capacity));\n \n Review comment:\n   If you rebase on master, you can use `value_data_builder_.Reserve(capacity)` here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.600+0000",
                    "updated": "2018-01-19T17:40:34.600+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332611",
                    "id": "16332611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685815\n \n \n\n ##########\n File path: cpp/src/arrow/builder.cc\n ##########\n @@ -1208,7 +1208,7 @@ ArrayBuilder* ListBuilder::value_builder() const {\n // String and binary\n \n BinaryBuilder::BinaryBuilder(const std::shared_ptr<DataType>& type, MemoryPool* pool)\n-    : ArrayBuilder(type, pool), offsets_builder_(pool), value_data_builder_(pool) {}\n+    : ArrayBuilder(type, pool), offsets_builder_(pool), value_data_builder_(pool), data_capacity_(0) {}\n \n Review comment:\n   I don't think we need this extra member; we can just use `value_data_capacity()` wherever `data_capacity_` is currently being used\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.606+0000",
                    "updated": "2018-01-19T17:40:34.606+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332612",
                    "id": "16332612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162685073\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,6 +1154,54 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n+ \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"a\", \"bb\", \"cc\", \"ddddd\", \"eeeee\"};\n+  int64_t N = static_cast<int>(strings.size());\n+  int64_t length = 0;\n+  int64_t data_length = 0;\n+  int64_t capacity = N;\n+ \n+  ASSERT_OK(builder_->Reserve(capacity));\n+  ASSERT_OK(builder_->ReserveData(capacity));\n+  \n+  ASSERT_EQ(builder_->length(), length);\n+  ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\n+  ASSERT_EQ(builder_->value_data_length(), data_length);\n+  ASSERT_EQ(builder_->value_data_capacity(), capacity);\n+ \n+  for(const string& str : strings) {\n+    ASSERT_OK(builder_->Append(str));\n+    length++;\n+    data_length += static_cast<int>(str.size());\n+   \n+    ASSERT_EQ(builder_->length(), length);\n+    ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\n+    ASSERT_EQ(builder_->value_data_length(), data_length);\n+    if (data_length <= capacity) {\n+      ASSERT_EQ(builder_->value_data_capacity(), capacity);\n+    } else {\n+      ASSERT_EQ(builder_->value_data_capacity(), data_length);\n \n Review comment:\n   It's not clear to me why these assertions would hold true\r\n   \r\n   ```\r\n   ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\r\n   ASSERT_EQ(builder_->value_data_capacity(), capacity);\r\n   ```\r\n   \r\n   I would think that `value_data_capacity()` is always the power of 2 greater than or equal to the amount of data appended so far, i.e. `ASSERT_EQ(BitUtil::NextPower2(data_length), builder_->value_data_capacity())`\r\n   \r\n   Can you make the strings you are appending much larger, at least 10 length each? \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.657+0000",
                    "updated": "2018-01-19T17:40:34.657+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332613",
                    "id": "16332613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162686328\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -682,10 +682,13 @@ class ARROW_EXPORT BinaryBuilder : public ArrayBuilder {\n \n   Status Init(int64_t elements) override;\n   Status Resize(int64_t capacity) override;\n+  Status ReserveData(int64_t capacity);\n \n Review comment:\n   Can you add a doxygen comment, since this is a new API\r\n   \r\n   I note that the `Reserve`-type methods in this header have different semantics from their STL counterparts. They are reserving _additional_ space rather than _absolute_ space (e.g. std::vector::reserve takes an absolute length as argument)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:40:34.852+0000",
                    "updated": "2018-01-19T17:40:34.852+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332618",
                    "id": "16332618",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162686975\n \n \n\n ##########\n File path: cpp/src/arrow/builder.h\n ##########\n @@ -682,10 +682,13 @@ class ARROW_EXPORT BinaryBuilder : public ArrayBuilder {\n \n   Status Init(int64_t elements) override;\n   Status Resize(int64_t capacity) override;\n+  Status ReserveData(int64_t capacity);\n \n Review comment:\n   Can we also call the argument to `ReserveData` `size` (or `elements`) instead of `capacity` (to avoid confusion about whether we are passing an incremental value vs. absolute)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T17:43:23.534+0000",
                    "updated": "2018-01-19T17:43:23.534+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16332781",
                    "id": "16332781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xuepanchen commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r162709422\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,6 +1154,54 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n+ \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"a\", \"bb\", \"cc\", \"ddddd\", \"eeeee\"};\n+  int64_t N = static_cast<int>(strings.size());\n+  int64_t length = 0;\n+  int64_t data_length = 0;\n+  int64_t capacity = N;\n+ \n+  ASSERT_OK(builder_->Reserve(capacity));\n+  ASSERT_OK(builder_->ReserveData(capacity));\n+  \n+  ASSERT_EQ(builder_->length(), length);\n+  ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\n+  ASSERT_EQ(builder_->value_data_length(), data_length);\n+  ASSERT_EQ(builder_->value_data_capacity(), capacity);\n+ \n+  for(const string& str : strings) {\n+    ASSERT_OK(builder_->Append(str));\n+    length++;\n+    data_length += static_cast<int>(str.size());\n+   \n+    ASSERT_EQ(builder_->length(), length);\n+    ASSERT_EQ(builder_->capacity(), BitUtil::NextPower2(capacity));\n+    ASSERT_EQ(builder_->value_data_length(), data_length);\n+    if (data_length <= capacity) {\n+      ASSERT_EQ(builder_->value_data_capacity(), capacity);\n+    } else {\n+      ASSERT_EQ(builder_->value_data_capacity(), data_length);\n \n Review comment:\n   @wesm value_data_capacity() is actually always a multiple of 64 greater than or equal to the amount of data appended so far because the underlying buffer size is set to ensure that the capacity of the buffer is a multiple of 64 bytes as defined in Layout.md, i.e.\r\n   \r\n   ASSERT_EQ(BitUtil::RoundUpToMultipleOf64(data_length), builder_->value_data_capacity())\r\n   \r\n   So if you call ReserveData(capacity) at the very beginning, then we have\r\n   \r\n   ASSERT_EQ(BitUtil::RoundUpToMultipleOf64(capacity), builder_->value_data_capacity())\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-19T19:21:16.331+0000",
                    "updated": "2018-01-19T19:21:16.331+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336508",
                    "id": "16336508",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-359960791\n \n \n   @kou do you know what is causing this error?\r\n   \r\n   ```\r\n   Building dependency tree...\r\n   Reading state information...\r\n   ccache is already the newest version (3.1.9-1).\r\n   Some packages could not be installed. This may mean that you have\r\n   requested an impossible situation or if you are using the unstable\r\n   distribution that some required packages have not yet been created\r\n   or been moved out of Incoming.\r\n   The following information may help to resolve the situation:\r\n   \r\n   The following packages have unmet dependencies:\r\n    libgirepository1.0-dev : Depends: libgirepository-1.0-1 (= 1.40.0-1) but 1.40.0-1ubuntu0.2 is to be installed\r\n                             Depends: gobject-introspection (= 1.40.0-1) but it is not going to be installed\r\n                             Depends: gir1.2-glib-2.0 (= 1.40.0-1) but 1.40.0-1ubuntu0.2 is to be installed\r\n                             Depends: gir1.2-freedesktop (= 1.40.0-1) but 1.40.0-1ubuntu0.2 is to be installed\r\n   E: Unable to correct problems, you have held broken packages.\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-23T22:59:31.438+0000",
                    "updated": "2018-01-23T22:59:31.438+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336509",
                    "id": "16336509",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#discussion_r163404916\n \n \n\n ##########\n File path: cpp/src/arrow/array-test.cc\n ##########\n @@ -1154,40 +1154,44 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n     }\n   }\n }\n- \n+\n TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n-  vector<string> strings = {\"aaaaa\", \"bbbbbbbbbb\", \"ccccccccccccccc\", \"dddddddddddddddddddd\", \"eeeeeeeeee\"};\n+  vector<string> strings = {\"aaaaa\", \"bbbbbbbbbb\", \"ccccccccccccccc\", \"dddddddddd\"};\n \n Review comment:\n   In the future, you can run `make format` (which uses clang-format) to fix these long lines without having to make code changes\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-23T23:01:39.879+0000",
                    "updated": "2018-01-23T23:01:39.879+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336728",
                    "id": "16336728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "kou commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-359993584\n \n \n   @wesm I think that it's a network problem:\r\n   \r\n   https://travis-ci.org/apache/arrow/jobs/332472808#L552\r\n   \r\n   > E: Failed to fetch http://us-central1.gce.archive.ubuntu.com/ubuntu/dists/trusty-updates/main/binary-amd64/Packages.gz  Hash Sum mismatch\r\n   \r\n   We will be able to reduce the case by changing the `apt-get update` command line with the following:\r\n   \r\n   ```bash\r\n   for i in {1..3}; do\r\n     sudo -E apt-get -yq update &>> ~/apt-get-update.log && break\r\n   done\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T01:49:02.916+0000",
                    "updated": "2018-01-24T01:49:02.916+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336821",
                    "id": "16336821",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1481\n[https://github.com/apache/arrow/pull/1481]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-01-24T03:03:57.108+0000",
                    "updated": "2018-01-24T03:03:57.108+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336822",
                    "id": "16336822",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/array-test.cc b/cpp/src/arrow/array-test.cc\nindex 7ff3261ec..c53da8591 100644\n--- a/cpp/src/arrow/array-test.cc\n+++ b/cpp/src/arrow/array-test.cc\n@@ -1155,6 +1155,45 @@ TEST_F(TestBinaryBuilder, TestScalarAppend) {\n   }\n }\n \n+TEST_F(TestBinaryBuilder, TestCapacityReserve) {\n+  vector<string> strings = {\"aaaaa\", \"bbbbbbbbbb\", \"ccccccccccccccc\", \"dddddddddd\"};\n+  int N = static_cast<int>(strings.size());\n+  int reps = 15;\n+  int64_t length = 0;\n+  int64_t capacity = 1000;\n+  int64_t expected_capacity = BitUtil::RoundUpToMultipleOf64(capacity);\n+\n+  ASSERT_OK(builder_->ReserveData(capacity));\n+\n+  ASSERT_EQ(length, builder_->value_data_length());\n+  ASSERT_EQ(expected_capacity, builder_->value_data_capacity());\n+\n+  for (int j = 0; j < reps; ++j) {\n+    for (int i = 0; i < N; ++i) {\n+      ASSERT_OK(builder_->Append(strings[i]));\n+      length += static_cast<int>(strings[i].size());\n+\n+      ASSERT_EQ(length, builder_->value_data_length());\n+      ASSERT_EQ(expected_capacity, builder_->value_data_capacity());\n+    }\n+  }\n+\n+  int extra_capacity = 500;\n+  expected_capacity = BitUtil::RoundUpToMultipleOf64(length + extra_capacity);\n+\n+  ASSERT_OK(builder_->ReserveData(extra_capacity));\n+\n+  ASSERT_EQ(length, builder_->value_data_length());\n+  ASSERT_EQ(expected_capacity, builder_->value_data_capacity());\n+\n+  Done();\n+\n+  ASSERT_EQ(reps * N, result_->length());\n+  ASSERT_EQ(0, result_->null_count());\n+  ASSERT_EQ(reps * 40, result_->value_data()->size());\n+  ASSERT_EQ(expected_capacity, result_->value_data()->capacity());\n+}\n+\n TEST_F(TestBinaryBuilder, TestZeroLength) {\n   // All buffers are null\n   Done();\ndiff --git a/cpp/src/arrow/buffer.h b/cpp/src/arrow/buffer.h\nindex b50b1a1aa..44c352a93 100644\n--- a/cpp/src/arrow/buffer.h\n+++ b/cpp/src/arrow/buffer.h\n@@ -333,6 +333,7 @@ class ARROW_EXPORT TypedBufferBuilder : public BufferBuilder {\n \n   const T* data() const { return reinterpret_cast<const T*>(data_); }\n   int64_t length() const { return size_ / sizeof(T); }\n+  int64_t capacity() const { return capacity_ / sizeof(T); }\n };\n \n /// \\brief Allocate a fixed size mutable buffer from a memory pool\ndiff --git a/cpp/src/arrow/builder.cc b/cpp/src/arrow/builder.cc\nindex de132b5f6..db901526f 100644\n--- a/cpp/src/arrow/builder.cc\n+++ b/cpp/src/arrow/builder.cc\n@@ -1165,13 +1165,13 @@ Status ListBuilder::Init(int64_t elements) {\n   DCHECK_LT(elements, std::numeric_limits<int32_t>::max());\n   RETURN_NOT_OK(ArrayBuilder::Init(elements));\n   // one more then requested for offsets\n-  return offsets_builder_.Resize((elements + 1) * sizeof(int64_t));\n+  return offsets_builder_.Resize((elements + 1) * sizeof(int32_t));\n }\n \n Status ListBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n \n@@ -1216,16 +1216,26 @@ Status BinaryBuilder::Init(int64_t elements) {\n   DCHECK_LT(elements, std::numeric_limits<int32_t>::max());\n   RETURN_NOT_OK(ArrayBuilder::Init(elements));\n   // one more then requested for offsets\n-  return offsets_builder_.Resize((elements + 1) * sizeof(int64_t));\n+  return offsets_builder_.Resize((elements + 1) * sizeof(int32_t));\n }\n \n Status BinaryBuilder::Resize(int64_t capacity) {\n   DCHECK_LT(capacity, std::numeric_limits<int32_t>::max());\n   // one more then requested for offsets\n-  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int64_t)));\n+  RETURN_NOT_OK(offsets_builder_.Resize((capacity + 1) * sizeof(int32_t)));\n   return ArrayBuilder::Resize(capacity);\n }\n \n+Status BinaryBuilder::ReserveData(int64_t elements) {\n+  if (value_data_length() + elements > value_data_capacity()) {\n+    if (value_data_length() + elements > std::numeric_limits<int32_t>::max()) {\n+      return Status::Invalid(\"Cannot reserve capacity larger than 2^31 - 1 for binary\");\n+    }\n+    RETURN_NOT_OK(value_data_builder_.Reserve(elements));\n+  }\n+  return Status::OK();\n+}\n+\n Status BinaryBuilder::AppendNextOffset() {\n   const int64_t num_bytes = value_data_builder_.length();\n   if (ARROW_PREDICT_FALSE(num_bytes > kMaximumCapacity)) {\ndiff --git a/cpp/src/arrow/builder.h b/cpp/src/arrow/builder.h\nindex ce7b8cd19..d1611f60c 100644\n--- a/cpp/src/arrow/builder.h\n+++ b/cpp/src/arrow/builder.h\n@@ -682,10 +682,15 @@ class ARROW_EXPORT BinaryBuilder : public ArrayBuilder {\n \n   Status Init(int64_t elements) override;\n   Status Resize(int64_t capacity) override;\n+  /// \\brief Ensures there is enough allocated capacity to append the indicated\n+  /// number of bytes to the value data buffer without additional allocations\n+  Status ReserveData(int64_t elements);\n   Status FinishInternal(std::shared_ptr<ArrayData>* out) override;\n \n   /// \\return size of values buffer so far\n   int64_t value_data_length() const { return value_data_builder_.length(); }\n+  /// \\return capacity of values buffer\n+  int64_t value_data_capacity() const { return value_data_builder_.capacity(); }\n \n   /// Temporary access to a value.\n   ///\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T03:03:59.930+0000",
                    "updated": "2018-01-24T03:03:59.930+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13111413/comment/16336826",
                    "id": "16336826",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1481: ARROW-1712: [C++] Add method to BinaryBuilder to reserve space for value data\nURL: https://github.com/apache/arrow/pull/1481#issuecomment-360006516\n \n \n   @kou I see. These commands are initiated by Travis CI from https://github.com/apache/arrow/blob/master/.travis.yml#L21. We could install our package toolchain outside of Travis CI's built-in commands, if that might help improve the flakiness\r\n   \r\n   I opened https://issues.apache.org/jira/browse/ARROW-2021\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-01-24T03:06:50.118+0000",
                    "updated": "2018-01-24T03:06:50.118+0000"
                }
            ],
            "maxResults": 26,
            "total": 26,
            "startAt": 0
        },
        "customfield_12311820": "0|i3llbb:",
        "customfield_12314139": null
    }
}