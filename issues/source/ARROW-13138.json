{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13385061",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061",
    "key": "ARROW-13138",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12350323",
                "id": "12350323",
                "description": "",
                "name": "6.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2021-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "Kernels",
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
            "name": "aucahuasi",
            "key": "aucahuasi",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
            },
            "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=thisisnic",
            "name": "thisisnic",
            "key": "thisisnic",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=39937",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=39937",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=39937",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=39937"
            },
            "displayName": "Nicola Crane",
            "active": true,
            "timeZone": "Africa/Casablanca"
        },
        "aggregateprogress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22800,
            "total": 22800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13138/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 38,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646284",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#issuecomment-912505837\n\n\n   https://issues.apache.org/jira/browse/ARROW-13138\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T12:37:58.038+0000",
                    "updated": "2021-09-03T12:37:58.038+0000",
                    "started": "2021-09-03T12:37:58.038+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646284",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646305",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r701897054\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       Would it be possible to avoid specialization by instead making the helper functions used work with timestamps and dates? For instance, you could modify GetInputTimezone to be `GetInputTimezone<InType>` where it would always return an empty string for `InType == Date32Type`.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_test.cc\n##########\n@@ -98,24 +136,32 @@ class ScalarTemporalTest : public ::testing::Test {\n \n namespace compute {\n \n-TEST_F(ScalarTemporalTest, TestTemporalComponentExtraction) {\n-  auto unit = timestamp(TimeUnit::NANO);\n-  CheckScalarUnary(\"year\", unit, times, int64(), year);\n-  CheckScalarUnary(\"month\", unit, times, int64(), month);\n-  CheckScalarUnary(\"day\", unit, times, int64(), day);\n-  CheckScalarUnary(\"day_of_week\", unit, times, int64(), day_of_week);\n-  CheckScalarUnary(\"day_of_year\", unit, times, int64(), day_of_year);\n-  CheckScalarUnary(\"iso_year\", unit, times, int64(), iso_year);\n-  CheckScalarUnary(\"iso_week\", unit, times, int64(), iso_week);\n-  CheckScalarUnary(\"iso_calendar\", ArrayFromJSON(unit, times), iso_calendar);\n-  CheckScalarUnary(\"quarter\", unit, times, int64(), quarter);\n-  CheckScalarUnary(\"hour\", unit, times, int64(), hour);\n-  CheckScalarUnary(\"minute\", unit, times, int64(), minute);\n-  CheckScalarUnary(\"second\", unit, times, int64(), second);\n-  CheckScalarUnary(\"millisecond\", unit, times, int64(), millisecond);\n-  CheckScalarUnary(\"microsecond\", unit, times, int64(), microsecond);\n-  CheckScalarUnary(\"nanosecond\", unit, times, int64(), nanosecond);\n-  CheckScalarUnary(\"subsecond\", unit, times, float64(), subsecond);\n+TEST_F(ScalarTemporalTest, TestTemporalComponentExtractionPERCY) {\n\nReview comment:\n       Don't forget to change this back :)\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -670,26 +833,36 @@ std::shared_ptr<ScalarFunction> MakeTemporal(\n   auto func =\n       std::make_shared<ScalarFunction>(name, Arity::Unary(), doc, default_options);\n \n+  {\n\nReview comment:\n       Frankly I think kernels like `hour` should just not work on dates - it's not meaningful.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       nit: since this is for dates only, maybe have the base `struct Strftime` have no implementation, and implement both dates and timestamps as specializations?\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       Actually, given that the regular strftime kernel won't format timestamps without timezones, I wonder if it's meaningful to have strftime work on dates. I would say if you want a string representation of a date, you should cast, since strftime would let you do misleading things like trying to extract the hour from a date.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       (I suppose you'd also need to change functions to templates to be able to specialize things like that...)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T13:42:41.326+0000",
                    "updated": "2021-09-03T13:42:41.326+0000",
                    "started": "2021-09-03T13:42:41.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646305",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646323",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r701926571\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -670,26 +833,36 @@ std::shared_ptr<ScalarFunction> MakeTemporal(\n   auto func =\n       std::make_shared<ScalarFunction>(name, Arity::Unary(), doc, default_options);\n \n+  {\n\nReview comment:\n       Make sense, pandas doesn't has that behavior too\r\n   ```python\r\n   pd.to_datetime(\"2019-01-03\", format='%Y-%m-%d', errors='coerce').date().hour()\r\n   AttributeError: 'datetime.date' object has no attribute 'hour'\r\n   ```\r\n   I'll remove the support of date32/64 for hour, min, sec ...\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T14:16:14.215+0000",
                    "updated": "2021-09-03T14:16:14.215+0000",
                    "started": "2021-09-03T14:16:14.214+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646323",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646325",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r701929188\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       I think you are right. Do you know if we have tests for casting date32/64 to strings?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T14:19:44.589+0000",
                    "updated": "2021-09-03T14:19:44.589+0000",
                    "started": "2021-09-03T14:19:44.589+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646325",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646332",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r701932384\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       We do, they're a bit thin though: https://github.com/apache/arrow/blob/5ead37593472c42f61c76396dde7dcb8954bde70/cpp/src/arrow/compute/kernels/scalar_cast_test.cc#L1245\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T14:23:58.825+0000",
                    "updated": "2021-09-03T14:23:58.825+0000",
                    "started": "2021-09-03T14:23:58.825+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646332",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646359",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702001646\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       Thanks @lidavidm !\r\n   \r\n   I think the provided implementation (using specialization) is good enough.\r\n   Please note that this function is returning a const ref string:\r\n   `const std::string& GetInputTimezone`\r\n   So the compiler will throw an error if we want to return local empty strings.\r\n   And if I change the declaration to return a `string` (without const ref) we will be copying the timezones instead of using the refs.\r\n   \r\n   Also, for the case of `ISOCalendar` with `TimestampType` we had this code:\r\n   `string timezone = GetInputTimezone`\r\n   and we had been performing a copy.\r\n   So I changed that to\r\n   `const auto& timezone = GetInputTimezone`\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T15:48:03.525+0000",
                    "updated": "2021-09-03T15:48:03.525+0000",
                    "started": "2021-09-03T15:48:03.524+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646359",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646378",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "rok commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702040864\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       > Actually, given that the regular strftime kernel won't format timestamps without timezones, I wonder if it's meaningful to have strftime work on dates.\r\n   \r\n   There's work to have Strftime work on timestamps without timezones (assuming UTC)\r\n   https://github.com/apache/arrow/pull/10998. It's a philosophical discussion if it's correct or not but it will be available.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T16:53:19.762+0000",
                    "updated": "2021-09-03T16:53:19.762+0000",
                    "started": "2021-09-03T16:53:19.761+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646378",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646388",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702051882\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       Hmm. I take it back then. Python actually supports this too: https://docs.python.org/3/library/datetime.html#datetime.date.strftime\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:14:38.051+0000",
                    "updated": "2021-09-03T17:14:38.051+0000",
                    "started": "2021-09-03T17:14:38.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646388",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646389",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702052328\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       Sorry for the back-and-forth @aucahuasi. However, it might be prudent to split strftime support into a separate JIRA to minimize conflicts with the existing PR and so we can evaluate how best to share the implementation (to avoid too much code duplication).\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:15:32.530+0000",
                    "updated": "2021-09-03T17:15:32.530+0000",
                    "started": "2021-09-03T17:15:32.530+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646389",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646397",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702057037\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       We could get around that with a static string somewhere, or by returning `const std::string*`. Or the actual implementation could be factored out, and the date kernel could call it with a literal string. At the very least, I'm not super enthused about essentially copy-pasting this kernel.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       Instead of a bool, I think it'd be cleaner to split the date kernel registration into a separate function:\r\n   \r\n   ```cpp\r\n   template <\r\n       template <typename...> class Op,\r\n       template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\r\n       class ExecTemplate,\r\n       typename OutType>\r\n   std::shared_ptr<ScalarFunction> AddDateKernels(ScalarFunction* func, const std::shared_ptr<arrow::DataType>& out_type, KernelInit init = nullptr) {\r\n     {\r\n       auto exec = ExecTemplate<Op, days, Date32Type, OutType>::Exec;\r\n       DCHECK_OK(func->AddKernel({date32()}, out_Type, std::move(exec), init);\r\n     }\r\n     {\r\n       auto exec = ExecTemplate<Op, std::chrono::milliseconds, Date64Type, OutType>::Exec;\r\n       DCHECK_OK(func->AddKernel({date64()}, out_Type, std::move(exec), init);\r\n     }\r\n   }\r\n   ```\r\n   \r\n   Then you can just call (for instance) `AddDateKernels<Year, TemporalComponentExtract, Int64Type>(year.get(), int64());` below. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T17:24:45.032+0000",
                    "updated": "2021-09-03T17:24:45.032+0000",
                    "started": "2021-09-03T17:24:45.032+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646397",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646448",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702130421\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       No worries @lidavidm :)\r\n   Indeed, it makes sense to have a new jira. I can create the ticket if there is none.\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T19:51:55.291+0000",
                    "updated": "2021-09-03T19:51:55.291+0000",
                    "started": "2021-09-03T19:51:55.291+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646448",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702131385\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       Sure, that's a good idea, I can try to have a single implementation.\r\n   Where should I put the empty static string? in which file?\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T19:54:19.854+0000",
                    "updated": "2021-09-03T19:54:19.854+0000",
                    "started": "2021-09-03T19:54:19.854+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646449",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/646450",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r702132912\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       I don't think there's a JIRA so please do file one.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       It would go in this file, though FWIW, it would probably be easiest to just factor things into functions since these are all static methods anyways. \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-03T19:57:54.939+0000",
                    "updated": "2021-09-03T19:57:54.939+0000",
                    "started": "2021-09-03T19:57:54.939+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "646450",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647076",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703008283\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -466,8 +492,90 @@ struct Nanosecond {\n // Convert timestamps to a string representation with an arbitrary format\n \n #ifndef _WIN32\n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct Strftime {\n\nReview comment:\n       Here is the jira ticket for strftime, thanks @lidavidm @rok \r\n   https://issues.apache.org/jira/browse/ARROW-13916\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-06T16:44:21.560+0000",
                    "updated": "2021-09-06T16:44:21.560+0000",
                    "started": "2021-09-06T16:44:21.559+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647076",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647151",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703105055\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       @lidavidm I think this last version reuse the kernel logic and it specializes only the parts related to the timestamp logic. Please let me know if if good enough.\r\n   TODO: I need to fix the some R tests (I'll tackle this tomorrow)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T00:33:32.882+0000",
                    "updated": "2021-09-07T00:33:32.882+0000",
                    "started": "2021-09-07T00:33:32.882+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647151",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647152",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703112886\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       Thanks, but I suggest to keep the provided implementation in this PR:\r\n   - It requires less code/It change less parts.\r\n   - It integrates well into the `MakeTemporal*` functions.\r\n   - It is setting up the date kernels (optionally) at the moment of creating the function.\r\n   Also, I think that if I add `AddDateKernels` we would need 2 versions: one for MakeTemporal and other for MakeSimpleUnaryTemporal.\r\n   So I think it makes sense to keep the current code. Let me know what do you think here @lidavidm \n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       Thanks, but I suggest to keep the provided implementation in this PR:\r\n   - It requires less code/It change less parts.\r\n   - It integrates well into the `MakeTemporal*` functions.\r\n   - It is setting up the date kernels (optionally) at the moment of creating the function.\r\n   \r\n   Also, I think that if I add `AddDateKernels` we would need 2 versions: one for MakeTemporal and other for MakeSimpleUnaryTemporal.\r\n   So I think it makes sense to keep the current code. Let me know what do you think here @lidavidm \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T01:09:04.661+0000",
                    "updated": "2021-09-07T01:09:04.661+0000",
                    "started": "2021-09-07T01:09:04.661+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647152",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647155",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703105055\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,8 +701,58 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n-template <typename Duration>\n+template <typename Duration, typename InType>\n struct ISOCalendar {\n\nReview comment:\n       @lidavidm I think this last version reuse the kernel logic and it specializes only the parts related to the timestamp logic. Please let me know if it is good enough.\r\n   TODO: I need to fix the some R tests (I'll tackle this tomorrow)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T01:12:52.294+0000",
                    "updated": "2021-09-07T01:12:52.294+0000",
                    "started": "2021-09-07T01:12:52.294+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647155",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647156",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "aucahuasi commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703112886\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       Thanks, but I suggest to keep the provided implementation in this PR:\r\n   - It requires less code/It change less parts.\r\n   - It integrates well into the `MakeTemporal*` functions.\r\n   - It is setting up the date kernels (optionally) at the moment of creating the function.\r\n   \r\n   Also, I think that if I add `AddDateKernels` we would need 2 versions: one for `MakeTemporal` and other for `MakeSimpleUnaryTemporal`.\r\n   So I think it makes sense to keep the current code. Let me know what do you think here @lidavidm \n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T01:13:36.693+0000",
                    "updated": "2021-09-07T01:13:36.693+0000",
                    "started": "2021-09-07T01:13:36.693+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647156",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on a change in pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#discussion_r703512991\n\n\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -588,20 +614,85 @@ inline std::array<int64_t, 3> GetIsoCalendar(int64_t arg, Localizer&& localizer)\n           static_cast<int64_t>(weekday(ymd).iso_encoding())};\n }\n \n+template <typename Duration, typename InType>\n+struct ISOCalendarWrapper {\n+  static Status get(const Scalar& in, std::array<int64_t, 3>& iso_calendar) {\n\nReview comment:\n       I think this factorization is good, however, just a nit: methods should use UpperCamelCase unless they're const getters so this should be called Get.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       Hmm, it's reasonable. In that case, below, can we do the following, so it's clear what the bare boolean parameter is for?\r\n   \r\n   ```\r\n     auto quarter = MakeTemporal<Quarter, TemporalComponentExtract, Int64Type>(\r\n         /*enable_date=*/true, \"quarter\", int64(), &quarter_doc);\r\n   ```\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal.cc\n##########\n@@ -660,36 +736,46 @@ struct ISOCalendar {\n \n template <\n     template <typename...> class Op,\n-    template <template <typename...> class OpExec, typename Duration, typename OutType>\n+    template <template <typename...> class OpExec, typename Duration, typename InType, typename OutType>\n     class ExecTemplate,\n     typename OutType>\n-std::shared_ptr<ScalarFunction> MakeTemporal(\n+std::shared_ptr<ScalarFunction> MakeTemporal(bool enable_date,\n\nReview comment:\n       I will note though, a struct like this can collapse MakeTemporal and MakeSimpleUnaryTemporal into one function:\r\n   \r\n   ```cpp\r\n   template <template <typename...> class Op, typename Duration, typename InType>\r\n   struct SimpleUnaryTemporal {\r\n     static Status Exec(KernelContext* ctx, const ExecBatch& batch, Datum* out) {\r\n       return SimpleUnary<Op<Duration, InType>>(ctx, batch, out);\r\n     }\r\n   };\r\n   ```\r\n   \r\n   You would then replace OutType with `typename... Args` in `MakeTemporal` and you could replace `MakeSimpleUnaryTemporal<Foo>` with `MakeTemporal<Foo, SimpleUnaryTemporal>`. Then you wouldn't need two versions of `AddDateKernels`.\r\n   \r\n   Also note that the function creation is only done once on initialization, so it doesn't really matter whether it's done in the same function or not.\n\n##########\nFile path: cpp/src/arrow/compute/kernels/scalar_temporal_test.cc\n##########\n@@ -98,24 +136,33 @@ class ScalarTemporalTest : public ::testing::Test {\n \n namespace compute {\n \n-TEST_F(ScalarTemporalTest, TestTemporalComponentExtraction) {\n-  auto unit = timestamp(TimeUnit::NANO);\n-  CheckScalarUnary(\"year\", unit, times, int64(), year);\n-  CheckScalarUnary(\"month\", unit, times, int64(), month);\n-  CheckScalarUnary(\"day\", unit, times, int64(), day);\n-  CheckScalarUnary(\"day_of_week\", unit, times, int64(), day_of_week);\n-  CheckScalarUnary(\"day_of_year\", unit, times, int64(), day_of_year);\n-  CheckScalarUnary(\"iso_year\", unit, times, int64(), iso_year);\n-  CheckScalarUnary(\"iso_week\", unit, times, int64(), iso_week);\n-  CheckScalarUnary(\"iso_calendar\", ArrayFromJSON(unit, times), iso_calendar);\n-  CheckScalarUnary(\"quarter\", unit, times, int64(), quarter);\n-  CheckScalarUnary(\"hour\", unit, times, int64(), hour);\n-  CheckScalarUnary(\"minute\", unit, times, int64(), minute);\n-  CheckScalarUnary(\"second\", unit, times, int64(), second);\n-  CheckScalarUnary(\"millisecond\", unit, times, int64(), millisecond);\n-  CheckScalarUnary(\"microsecond\", unit, times, int64(), microsecond);\n-  CheckScalarUnary(\"nanosecond\", unit, times, int64(), nanosecond);\n-  CheckScalarUnary(\"subsecond\", unit, times, float64(), subsecond);\n+TEST_F(ScalarTemporalTest, TestTemporalComponentExtractionAllTypes) {\n+  std::vector<std::shared_ptr<DataType>> units = {date32(), date64(),\n+                                                  timestamp(TimeUnit::NANO)};\n+  std::vector<const char*> samples = {date32s, date64s, times};\n+  assert(units.size() == samples.size());\n\nReview comment:\n       Usually we use DCHECK for these sorts of checks (e.g. `DCHECK_EQ(units.size(), samples.size())`)\n\n\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T13:36:45.545+0000",
                    "updated": "2021-09-07T13:36:45.545+0000",
                    "started": "2021-09-07T13:36:45.544+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647371",
                    "issueId": "13385061"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/worklog/647372",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "lidavidm commented on pull request #11075:\nURL: https://github.com/apache/arrow/pull/11075#issuecomment-914313916\n\n\n   For the failed R test, it looks like it expected `year(date)` to fail but of course that's no longer the case. Seems this can be changed to `expect_dplyr_equal`: https://github.com/apache/arrow/blob/2ef0edc529c86a22f055d9003ea8a4c1e7585511/r/tests/testthat/test-dplyr-lubridate.R#L37-L48\n\n\n-- \nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nTo unsubscribe, e-mail: github-unsubscribe@arrow.apache.org\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-09-07T13:38:03.375+0000",
                    "updated": "2021-09-07T13:38:03.375+0000",
                    "started": "2021-09-07T13:38:03.374+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "647372",
                    "issueId": "13385061"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
            "id": "2",
            "description": "A new feature of the product, which has yet to be developed.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
            "name": "New Feature",
            "subtask": false,
            "avatarId": 21141
        },
        "timespent": 22800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@ba87b72[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@551f12bb[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33936b15[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1e342d16[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@205ff089[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1cac1fcf[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@34cf048c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@b2cc39e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5428b1ca[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@28868ee7[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6421141f[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@9fc0b36[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22800,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Sep 09 12:27:29 UTC 2021",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-09-09T12:27:29.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-13138/watchers",
            "watchCount": 5,
            "isWatching": false
        },
        "created": "2021-06-22T03:18:47.000+0000",
        "updated": "2021-09-09T16:28:34.000+0000",
        "timeoriginalestimate": null,
        "description": "ARROW-11759 implemented extraction of datetime components for timestamp objects; please can we have the equivalent extraction functions implemented for date objects too?",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Implement kernel to extract datetime components (year, month, day, etc) from date type objects",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/comment/17407581",
                    "id": "17407581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "I'll work on this issue.\r\n\r\nI closed my duplicated ticket https://issues.apache.org/jira/browse/ARROW-13788\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-08-31T18:22:46.889+0000",
                    "updated": "2021-08-31T18:22:46.889+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/comment/17409253",
                    "id": "17409253",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "PR\u00a0https://github.com/apache/arrow/pull/11075",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=aucahuasi",
                        "name": "aucahuasi",
                        "key": "aucahuasi",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=aucahuasi&avatarId=47450",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=aucahuasi&avatarId=47450",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=aucahuasi&avatarId=47450",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=aucahuasi&avatarId=47450"
                        },
                        "displayName": "Percy Camilo Trive\u00f1o Aucahuasi",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2021-09-03T03:57:07.883+0000",
                    "updated": "2021-09-03T03:57:07.883+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13385061/comment/17412540",
                    "id": "17412540",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 11075\n[https://github.com/apache/arrow/pull/11075]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=lidavidm",
                        "name": "lidavidm",
                        "key": "lidavidm",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "David Li",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2021-09-09T12:27:29.330+0000",
                    "updated": "2021-09-09T12:27:29.330+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z0s5wg:",
        "customfield_12314139": null
    }
}