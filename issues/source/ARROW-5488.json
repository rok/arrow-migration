{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13237197",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197",
    "key": "ARROW-5488",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/1",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/blocker.svg",
            "name": "Blocker",
            "id": "1"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333008",
                "id": "12333008",
                "name": "R"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
            "name": "romainfrancois",
            "key": "romainfrancois",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
            },
            "displayName": "Romain Francois",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 38400,
            "total": 38400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 38400,
            "total": 38400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5488/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 66,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/253769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471\n \n \n   This is very much a work in progress. The idea is to replace the code generation that is usually done by `Rcpp::compileAttributes()` with something custom. This is driven by the `data-raw/codegen.R` file, which I'll polish. I'm opening this right now for feedback opportunities. \r\n   \r\n   All of the `.cpp` files are guarded by : \r\n   \r\n   ```\r\n   #if defined(ARROW_R_WITH_ARROW)\r\n   ... \r\n   #endif\r\n   ```\r\n   \r\n   And `ARROW_R_WITH_ARROW` is defined via the configure file, if the library was indeed used. \r\n   \r\n   For example, this function: \r\n   \r\n   ```cpp\r\n   // [[arrow::export]]\r\n   std::shared_ptr<arrow::Column> ipc___feather___TableReader__GetColumn(\r\n       const std::unique_ptr<arrow::ipc::feather::TableReader>& reader, int i) {\r\n     std::shared_ptr<arrow::Column> column;\r\n     STOP_IF_NOT_OK(reader->GetColumn(i, &column));\r\n     return column;\r\n   }\r\n   ```\r\n   \r\n   triggers generation of this in the `generated.cpp` file: \r\n   \r\n   ```cpp\r\n   #if defined(ARROW_R_WITH_ARROW)\r\n   std::string ipc___feather___TableReader__GetColumnName(const std::unique_ptr<arrow::ipc::feather::TableReader>& reader, int i);\r\n   SEXP _arrow_ipc___feather___TableReader__GetColumnName(SEXP reader_sexp, SEXP i_sexp){\r\n     BEGIN_RCPP\r\n     Rcpp::traits::input_parameter<const std::unique_ptr<arrow::ipc::feather::TableReader>&>::type reader(reader_sexp);\r\n   Rcpp::traits::input_parameter<int>::type i(i_sexp);Rcpp::Shield<SEXP> rcpp_result_gen(Rcpp::wrap(ipc___feather___TableReader__GetColumnName( reader, i)));\r\n   return rcpp_result_gen;\r\n     END_RCPP\r\n   }\r\n   #else\r\n   SEXP _arrow_ipc___feather___TableReader__GetColumnName(SEXP reader_sexp, SEXP i_sexp){\r\n     BEGIN_RCPP\r\n     Rcpp::stop(\"arrow C++ library not available\");\r\n     END_RCPP\r\n   }\r\n   #endif\r\n   ```\r\n   \r\n   So the generated R api `SEXP`y functions only call the real thing when the c++ library is available, otherwise they just throw an error. \r\n   \r\n   and this in the `generated.R` file: \r\n   \r\n   ```r\r\n   ipc___feather___TableReader__GetColumnName <- function(reader, i) {\r\n       .Call(`_arrow_ipc___feather___TableReader__GetColumnName` , reader, i )\r\n   }\r\n   ```\r\n   \r\n   This also needed some extra care in test functions so that the tests only run if Arrow is available. \r\n   \r\n   @wesm comment from https://issues.apache.org/jira/browse/ARROW-5488 might be more practical and closer to what @jjallaire mentioned about how the `RcppParallel` package does it with Intel tbb:\r\n   https://github.com/RcppCore/RcppParallel/blob/master/R/hooks.R\r\n   \r\n   > One possibility is to bundle the Arrow header files with the CRAN package and build against them, but do not include libarrow and libparquet when linking. When the library is loaded, the libraries must be loaded in-process via dlopen before loading the Rcpp extensions. The C++ libraries can be installed then after the fact\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T14:23:39.129+0000",
                    "updated": "2019-06-04T14:23:39.129+0000",
                    "started": "2019-06-04T14:23:39.128+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253769",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/253994",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-498819482\n \n \n   So what would occur if:\r\n   \r\n   * User installs the package without the C++ library available\r\n   * User then installs the Arrow C++ libraries\r\n   \r\n   Is the installed R package broken until it is reinstalled? If the Arrow C++ headers are bundled privately with the R package then it should be able to build against them, and you can omit `-larrow -lparquet` at link time. The question is whether you can get `library(arrow)` to do a dynload of `libarrow.so` prior to attempting to load the Rcpp extensions\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T19:57:07.216+0000",
                    "updated": "2019-06-04T19:57:07.216+0000",
                    "started": "2019-06-04T19:57:07.214+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "253994",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254019",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-498836282\n \n \n   Correct, under this approach, the R package would not find the C++ library if it were installed after the R package were installed. That said, when we discussed this approach before, we proposed adding an `arrow::install_arrow()` function that the error message would suggest that you run, and this function could, after installing the C++ library, reinstall the R package itself to fix it. So the user experience either with this approach or with the bundling of headers like you suggest would be the same: if you install the R package without Arrow C++ present, when you try to use the package, you'll be told to call `arrow::install_arrow()`, the result of which will be a functioning C++/R arrow environment.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-04T20:44:05.667+0000",
                    "updated": "2019-06-04T20:44:05.667+0000",
                    "started": "2019-06-04T20:44:05.666+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254019",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-498958635\n \n \n   @wesm I'm going to try the approach of bundling headers in `inst/include` perhaps only when they're not found otherwise. \r\n   \r\n   I'm just a little worried about code duplication and bloat for the R package, but this is less problematic as if we were bundling all of arrow (*.h and *.cpp). \r\n   \r\n   If we are successful here, then I guess we can do something similar to what @jjallaire did with `RcppParallel`, i.e. not using `@useDynLib` as per usual but rather first dynamically load the arrow lib and then load the library of the package, i.e.: https://github.com/RcppCore/RcppParallel/blob/master/R/hooks.R#L5\r\n   \r\n   ```r\r\n   .onLoad <- function(libname, pkgname) {\r\n      \r\n      # load tbb and tbbmalloc on supported platforms   \r\n      tbb <- tbbLibPath()\r\n      if (!is.null(tbb)) {\r\n         if (!file.exists(tbb)) {\r\n            warning(paste(\"TBB library\", tbb, \"not found.\"))\r\n         } else {\r\n            dllInfo <<- dyn.load(tbb, local = FALSE, now = TRUE)\r\n         }\r\n      }\r\n      tbbMalloc <- tbbLibPath(\"malloc\")\r\n      if (!is.null(tbbMalloc)) {\r\n         if (!file.exists(tbbMalloc)) {\r\n            warning(paste(\"TBB malloc library\", tbbMalloc, \"not found.\"))\r\n         } else {\r\n            mallocDllInfo <<- dyn.load(tbbMalloc, local = FALSE, now = TRUE)\r\n         }\r\n      }\r\n      \r\n      # load the package library\r\n      library.dynam(\"RcppParallel\", pkgname, libname)\r\n      \r\n      # set default thread options\r\n      numThreads <- \"auto\"\r\n      numThreadsEnv <- Sys.getenv(\"RCPP_PARALLEL_NUM_THREADS\", unset = NA)\r\n      if (!is.na(numThreadsEnv))\r\n         setThreadOptions(numThreads = as.integer(numThreadsEnv))\r\n      else\r\n         setThreadOptions(numThreads = \"auto\")\r\n   }\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T06:41:48.423+0000",
                    "updated": "2019-06-05T06:41:48.423+0000",
                    "started": "2019-06-05T06:41:48.423+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254223",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-498959487\n \n \n   That's quite a few files, but I guess it's worth a shot, it should be a nicer story to tell. \r\n   \r\n   ``` r\r\n   fs::dir_ls(\"~/git/apache/arrow/cpp/src/arrow\", glob = \"*.h\", recurse = TRUE)\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/adapters/orc/adapter.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/adapters/orc/adapter_util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/adapters/tensorflow/convert.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/allocator.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_adaptive.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_base.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_binary.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_decimal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_dict.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_nested.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_primitive.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_time.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/builder_union.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array/concatenate.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/array.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/buffer-builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/buffer.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compare.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/benchmark-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/context.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/expression.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernel.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/aggregate.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/boolean.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/cast.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/compare.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/count.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/filter.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/generated/cast-codegen-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/hash.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/mean.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/sum-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/sum.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/take.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/kernels/util-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/logical_type.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/operation.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/operations/cast.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/operations/literal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/test-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/compute/type_fwd.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/chunker.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/column-builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/converter.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/options.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/parser.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/reader.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/csv/test-common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/columnar-row-set.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/operation.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/service.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/session.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/thrift-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/types.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/dbi/hiveserver2/util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/extension_type.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/filesystem.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/localfs.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/mockfs.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/path-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/test-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/filesystem/util-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/client.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/client_auth.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/customize_protobuf.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/platform.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/protocol-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/serialization-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/server.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/server_auth.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/test-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/types.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/flight/visibility.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/gpu/cuda_api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/gpu/cuda_arrow_ipc.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/gpu/cuda_common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/gpu/cuda_context.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/gpu/cuda_memory.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/buffered.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/compressed.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/file.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/hdfs-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/hdfs.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/interfaces.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/memory.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/mman.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/readahead.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/io/test-common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/dictionary.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/feather-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/feather.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/json-integration.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/json-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/json-simple.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/message.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/metadata-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/reader.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/test-common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/ipc/writer.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/chunked-builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/chunker.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/converter.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/options.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/parser.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/rapidjson-defs.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/reader.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/json/test-common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/memory_pool-test.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/memory_pool.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/pretty_print.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/arrow_to_pandas.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/benchmark.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/config.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/decimal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/deserialize.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/flight.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/helpers.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/inference.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/init.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/io.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/iterators.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/numpy-internal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/numpy_convert.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/numpy_interop.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/numpy_to_arrow.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/platform.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/pyarrow.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/pyarrow_api.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/pyarrow_lib.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/python_to_arrow.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/serialize.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/type_traits.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/util/datetime.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/python/visibility.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/record_batch.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/scalar.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/sparse_tensor.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/status.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/stl.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/table.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/table_builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/tensor.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/testing/gtest_common.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/testing/gtest_util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/testing/random.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/testing/util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/type.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/type_fwd.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/type_traits.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/basic_decimal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/bit-stream-utils.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/bit-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/bpacking.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/checked_cast.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compiler-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_brotli.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_bz2.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_lz4.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_snappy.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_zlib.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/compression_zstd.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/cpu-info.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/decimal.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/hash-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/hashing.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/int-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/io-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/key_value_metadata.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/lazy.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/logging.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/macros.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/memory.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/neon-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/parallel.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/parsing.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/rle-encoding.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/sse-util.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/stl.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/stopwatch.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/string.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/string_builder.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/string_view.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/task-group.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/thread-pool.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/trie.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/type_traits.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/uri.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/utf8.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/variant.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/visibility.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/util/windows_compatibility.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime/date.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime/ios.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime/tz.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime/tz_private.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime/visibility.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/datetime.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/vendored/xxhash/xxhash.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/visitor.h\r\n   #> /Users/romainfrancois/git/apache/arrow/cpp/src/arrow/visitor_inline.h\r\n   ```\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T06:45:11.108+0000",
                    "updated": "2019-06-05T06:45:11.108+0000",
                    "started": "2019-06-05T06:45:11.107+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254224",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jjallaire commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-499051856\n \n \n   I easily might be missing something here, so take my comments w/ a grain of salt if my mental picture is incomplete. \r\n   \r\n   I'm wondering a couple of things about including the headers:\r\n   \r\n   1) I realize that we can optionally omit  omit `-larrow` `-lparquet` when we know Arrow isn't installed, but wouldn't our C++ library still have unresolved symbols and as a result yield build errors? (or perhaps there is a way to suppress those)\r\n   \r\n   2) I would guess that we strongly prefer to compile against the headers from the same version of Arrow that we are linking against (otherwise there can be skew/incompatibility). I guess we could only build against those headers in the \"arrow not installed\" scenario, but in that case I'm not sure what it's buying us.\r\n   \r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T11:53:30.135+0000",
                    "updated": "2019-06-05T11:53:30.135+0000",
                    "started": "2019-06-05T11:53:30.134+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254324",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254371",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4479: ARROW-5488: [R] bundling headers with the R package\nURL: https://github.com/apache/arrow/pull/4479\n \n \n   `configure` no longer need to deal with `PKG_CFLAGS` because the headers are coming from `inst/include`\r\n   \r\n   This is an alternative experiment to #4471 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T13:22:35.787+0000",
                    "updated": "2019-06-05T13:22:35.787+0000",
                    "started": "2019-06-05T13:22:35.786+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254371",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254396",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4479: ARROW-5488: [R] bundling headers with the R package\nURL: https://github.com/apache/arrow/pull/4479#discussion_r290763967\n \n \n\n ##########\n File path: r/R/zzz.R\n ##########\n @@ -15,6 +15,19 @@\n # specific language governing permissions and limitations\n # under the License.\n \n-#' @useDynLib arrow, .registration = TRUE\n #' @importFrom Rcpp sourceCpp\n NULL\n+\n+NAMESPACE <- environment()\n+\n+.onLoad <- function(libname, pkgname) {\n \n Review comment:\n   @jimhester @jjallaire I'm doing this, inspired from what RcppParallel does, so that I could load the package library after e.g. the dependent Arrow and Parquet libraries, or perhaps gracefully fail at runtime when these are not available\r\n   \r\n   but it seems that this does not play nicely with `load_all()` : \r\n   \r\n   Is that a known thing ?\r\n   \r\n   ```\r\n   \u276f devtools::load_all()\r\n   Loading arrow\r\n   Error in find.package(package, lib.loc, verbose = verbose) : \r\n     there is no package called \u2018arrow\u2019\r\n   \u276f traceback()\r\n   7: stop(packageNotFoundError(bad, lib.loc, sys.call()))\r\n   6: find.package(package, lib.loc, verbose = verbose)\r\n   5: library.dynam(\"arrow\", pkgname, libname) at zzz.R#24\r\n   4: nsenv[[f_name]](dirname(ns_path), package)\r\n   3: run_pkg_hook(package, \"load\")\r\n   2: pkgload::load_all(path = path, reset = reset, recompile = recompile, \r\n          export_all = export_all, helpers = helpers, quiet = quiet, \r\n          ...)\r\n   1: devtools::load_all()\r\n   ```\r\n   \r\n   `devtools::document()` fails too and leaves a dirty NAMESPACE\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T14:21:48.467+0000",
                    "updated": "2019-06-05T14:21:48.467+0000",
                    "started": "2019-06-05T14:21:48.466+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254396",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254399",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jjallaire commented on issue #4479: ARROW-5488: [R] bundling headers with the R package\nURL: https://github.com/apache/arrow/pull/4479#issuecomment-499105805\n \n \n   That's correct, it indeed doesn't play nicely with `load_all()`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T14:25:26.629+0000",
                    "updated": "2019-06-05T14:25:26.629+0000",
                    "started": "2019-06-05T14:25:26.629+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254399",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254400",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "wesm commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-499106855\n \n \n   @jjallaire \r\n   \r\n   On #1, on Linux I believe if the symbols that the Rcpp library are available in process (e.g. having been loaded with dlopen earlier) then they'll be resolved correctly (this will only work on Linux, though)? I might be wrong about this. \r\n   \r\n   On #2, yes if the user has some other version of the shared libraries installed then ABI mismatch will most likely cause symbol resolution failure more often than a flat out crash. The shared libraries have ABI tags (e.g. `libarrow.so.13`) so we can check for this if it becomes a problem\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T14:27:58.015+0000",
                    "updated": "2019-06-05T14:27:58.015+0000",
                    "started": "2019-06-05T14:27:58.015+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254400",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254404",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jjallaire commented on issue #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#issuecomment-499109527\n \n \n   @wesm My worry though is that when we are building/testing on CRAN, we won't have loaded the symbols w/ `dlopen` (since Arrow won't be on the build servers), so there will be a link failure. My hope is that when on systems w/o Arrow (inevitable on CRAN) we still build, link, and run tests \"successfully\". In this mode the package is effectively a shim that tells you to call `install_arrow()` after which point you'll be good to go (which is basically the experience we have now for Spark and TF).\r\n   \r\n   w/r/t ABI issues, I'm wondering if we are always better off building against the headers that match the library (i.e. I'm not sure what including the headers in the package buys us). Forgive me for being dense if it's implicit in some previous discussion!\r\n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T14:34:08.547+0000",
                    "updated": "2019-06-05T14:34:08.547+0000",
                    "started": "2019-06-05T14:34:08.547+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254404",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254434",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4479: ARROW-5488: [R] bundling headers with the R package\nURL: https://github.com/apache/arrow/pull/4479\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T15:21:58.274+0000",
                    "updated": "2019-06-05T15:21:58.274+0000",
                    "started": "2019-06-05T15:21:58.274+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254434",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254435",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on issue #4479: ARROW-5488: [R] bundling headers with the R package\nURL: https://github.com/apache/arrow/pull/4479#issuecomment-499130199\n \n \n   closing this for now in favor of #4471\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T15:22:01.377+0000",
                    "updated": "2019-06-05T15:22:01.377+0000",
                    "started": "2019-06-05T15:22:01.376+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254435",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254528",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r290850245\n \n \n\n ##########\n File path: r/tests/testthat/test-field.R\n ##########\n @@ -18,6 +18,8 @@\n context(\"arrow::Field\")\n \n test_that(\"field() factory\", {\n+  skip_if(!arrow_available(), \"arrow C++ library not available\")\n \n Review comment:\n   This is not necessary given helper-arrow.R, right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T18:09:23.682+0000",
                    "updated": "2019-06-05T18:09:23.682+0000",
                    "started": "2019-06-05T18:09:23.681+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254528",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254529",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r290850545\n \n \n\n ##########\n File path: r/src/table.cpp\n ##########\n @@ -15,33 +15,45 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+#include \"./arrow_types.h\"\n+#if defined(ARROW_R_WITH_ARROW)\n+\n #include <arrow/io/file.h>\n #include <arrow/ipc/reader.h>\n #include <arrow/ipc/writer.h>\n-#include \"./arrow_types.h\"\n \n using Rcpp::DataFrame;\n \n-// [[Rcpp::export]]\n+// [[arrow::export]]\n+std::shared_ptr<arrow::Table> Table__from_dataframe(DataFrame tbl) {\n+  auto rb = RecordBatch__from_dataframe(tbl);\n+\n+  std::shared_ptr<arrow::Table> out;\n+  STOP_IF_NOT_OK(arrow::Table::FromRecordBatches({std::move(rb)}, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+>>>>>>> Workaround so that the R package still checks without the C++ library.\n \n Review comment:\n   Is this `>>>>>` line valid?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T18:09:24.044+0000",
                    "updated": "2019-06-05T18:09:24.044+0000",
                    "started": "2019-06-05T18:09:24.044+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254529",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254530",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r290867839\n \n \n\n ##########\n File path: r/data-raw/codegen.R\n ##########\n @@ -0,0 +1,160 @@\n+# pak::pkg_install(\"romainfrancois/decor\")\n \n Review comment:\n   When does data-raw/codegen.R get called? Can you please update the README with developer instructions (and if necessary/appropriate, add Suggests dependencies to DESCRIPTION)?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T18:09:24.398+0000",
                    "updated": "2019-06-05T18:09:24.398+0000",
                    "started": "2019-06-05T18:09:24.397+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254530",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254531",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r290850876\n \n \n\n ##########\n File path: r/src/table.cpp\n ##########\n @@ -15,33 +15,45 @@\n // specific language governing permissions and limitations\n // under the License.\n \n+#include \"./arrow_types.h\"\n+#if defined(ARROW_R_WITH_ARROW)\n+\n #include <arrow/io/file.h>\n #include <arrow/ipc/reader.h>\n #include <arrow/ipc/writer.h>\n-#include \"./arrow_types.h\"\n \n using Rcpp::DataFrame;\n \n-// [[Rcpp::export]]\n+// [[arrow::export]]\n+std::shared_ptr<arrow::Table> Table__from_dataframe(DataFrame tbl) {\n+  auto rb = RecordBatch__from_dataframe(tbl);\n+\n+  std::shared_ptr<arrow::Table> out;\n+  STOP_IF_NOT_OK(arrow::Table::FromRecordBatches({std::move(rb)}, &out));\n+  return out;\n+}\n+\n+// [[arrow::export]]\n+>>>>>>> Workaround so that the R package still checks without the C++ library.\n \n Review comment:\n   Ah this is from a merge conflict. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T18:09:24.482+0000",
                    "updated": "2019-06-05T18:09:24.482+0000",
                    "started": "2019-06-05T18:09:24.481+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254531",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/254532",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r290850967\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -48,33 +49,55 @@ arrow::ArrayVector RecordBatch__columns(\n   return res;\n }\n \n-// [[Rcpp::export]]\n+// [[arrow::export]]\n std::shared_ptr<arrow::Array> RecordBatch__column(\n     const std::shared_ptr<arrow::RecordBatch>& batch, int i) {\n   return batch->column(i);\n }\n \n+<<<<<<< HEAD\n \n Review comment:\n   Another merge conflict.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-05T18:09:25.906+0000",
                    "updated": "2019-06-05T18:09:25.906+0000",
                    "started": "2019-06-05T18:09:25.905+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "254532",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/255031",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r291124918\n \n \n\n ##########\n File path: r/data-raw/codegen.R\n ##########\n @@ -0,0 +1,160 @@\n+# pak::pkg_install(\"romainfrancois/decor\")\n \n Review comment:\n   Sure. Will do that when I'm sure this is solid. \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T10:45:50.254+0000",
                    "updated": "2019-06-06T10:45:50.254+0000",
                    "started": "2019-06-06T10:45:50.252+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255031",
                    "issueId": "13237197"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/worklog/255043",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "romainfrancois commented on pull request #4471: ARROW-5488: [R] Workaround when C++ lib not available\nURL: https://github.com/apache/arrow/pull/4471#discussion_r291128527\n \n \n\n ##########\n File path: r/src/recordbatch.cpp\n ##########\n @@ -48,33 +49,55 @@ arrow::ArrayVector RecordBatch__columns(\n   return res;\n }\n \n-// [[Rcpp::export]]\n+// [[arrow::export]]\n std::shared_ptr<arrow::Array> RecordBatch__column(\n     const std::shared_ptr<arrow::RecordBatch>& batch, int i) {\n   return batch->column(i);\n }\n \n+<<<<<<< HEAD\n \n Review comment:\n   \u2705 \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-06-06T10:57:45.930+0000",
                    "updated": "2019-06-06T10:57:45.930+0000",
                    "started": "2019-06-06T10:57:45.930+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "255043",
                    "issueId": "13237197"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 38400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6b9830ed[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@31a664e6[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@15ad7ec8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@17aeb9cf[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26461a48[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@58543cd0[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@26f1422c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@44f3e7fc[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@52712170[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@2bba2552[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7f6e22b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@5ce1392e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 38400,
        "customfield_12312520": null,
        "customfield_12312521": "Wed Jun 12 07:13:09 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-06-12T07:13:09.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5488/watchers",
            "watchCount": 3,
            "isWatching": false
        },
        "created": "2019-06-03T09:22:54.000+0000",
        "updated": "2019-06-12T07:13:14.000+0000",
        "timeoriginalestimate": null,
        "description": "As a way to get to CRAN, we need some way for the package still compile and install and test (although do nothing useful) even when the c++ lib is not available.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "10h 40m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 38400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[R] Workaround when C++ lib not available",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/comment/16854674",
                    "id": "16854674",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Would this involve compiling the C++ lib from source in that case?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2019-06-03T14:52:15.721+0000",
                    "updated": "2019-06-03T14:52:15.721+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/comment/16854686",
                    "id": "16854686",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "One possibility is to bundle the Arrow header files with the CRAN package and build against them, but do not include {{libarrow}} and {{libparquet}} when linking. When the library is loaded, the libraries must be loaded in-process via {{dlopen}} before loading the Rcpp extensions. The C++ libraries can be installed then after the fact",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-06-03T15:06:17.797+0000",
                    "updated": "2019-06-03T15:06:29.014+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/comment/16855730",
                    "id": "16855730",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "That sounds easier than what I am currently trying to do :)\r\n\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-04T14:04:33.942+0000",
                    "updated": "2019-06-04T14:04:33.942+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13237197/comment/16861818",
                    "id": "16861818",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Issue resolved by pull request 4471\n[https://github.com/apache/arrow/pull/4471]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=romainfrancois",
                        "name": "romainfrancois",
                        "key": "romainfrancois",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=romainfrancois&avatarId=35092",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=romainfrancois&avatarId=35092",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=romainfrancois&avatarId=35092",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=romainfrancois&avatarId=35092"
                        },
                        "displayName": "Romain Francois",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-06-12T07:13:09.054+0000",
                    "updated": "2019-06-12T07:13:09.054+0000"
                }
            ],
            "maxResults": 4,
            "total": 4,
            "startAt": 0
        },
        "customfield_12311820": "0|z03cns:",
        "customfield_12314139": null
    }
}