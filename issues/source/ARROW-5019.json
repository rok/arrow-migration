{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13224155",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155",
    "key": "ARROW-5019",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": 172800,
        "timeestimate": 77400,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12334712",
                "id": "12334712",
                "name": "C#"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 77400,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
            "name": "eerhardt",
            "key": "eerhardt",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
            },
            "displayName": "Eric Erhardt",
            "active": true,
            "timeZone": "America/North_Dakota/New_Salem"
        },
        "aggregateprogress": {
            "progress": 95400,
            "total": 172800,
            "percent": 55
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 95400,
            "total": 172800,
            "percent": 55
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5019/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 16,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/219382",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052\n \n \n   Allow ArrowStreamWriter to write to a non-seekable stream, like a network stream.\r\n   \r\n   @chutchinson @stephentoub @pgovind \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T16:00:15.956+0000",
                    "updated": "2019-03-27T16:00:15.956+0000",
                    "started": "2019-03-27T16:00:15.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219382",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/219386",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=eerhardt",
                        "name": "eerhardt",
                        "key": "eerhardt",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=eerhardt&avatarId=37925",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=eerhardt&avatarId=37925",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=eerhardt&avatarId=37925",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=eerhardt&avatarId=37925"
                        },
                        "displayName": "Eric Erhardt",
                        "active": true,
                        "timeZone": "America/North_Dakota/New_Salem"
                    },
                    "comment": "",
                    "created": "2019-03-27T16:01:42.088+0000",
                    "updated": "2019-03-27T16:01:42.088+0000",
                    "started": "2019-03-27T16:01:00.000+0000",
                    "timeSpent": "1d",
                    "timeSpentSeconds": 86400,
                    "id": "219386",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221537",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#issuecomment-478780853\n \n \n   @chutchinson @stephentoub - any feedback here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-01T23:16:44.470+0000",
                    "updated": "2019-04-01T23:16:44.470+0000",
                    "started": "2019-04-01T23:16:44.470+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221537",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221928",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271454150\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -228,63 +214,55 @@ public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen)\n \n             // Serialize record batch\n \n+            StartingWritingRecordBatch();\n+\n             var recordBatchOffset = Flatbuf.RecordBatch.CreateRecordBatch(Builder, recordBatch.Length,\n                 fieldNodesVectorOffset,\n                 buffersVectorOffset);\n \n-            var metadataOffset = BaseStream.Position;\n-\n-            await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n+            long metadataLength = await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n                 recordBatchOffset, recordBatchBuilder.TotalLength,\n                 cancellationToken).ConfigureAwait(false);\n \n-            var metadataLength = BaseStream.Position - metadataOffset;\n-\n             // Write buffer data\n \n-            var lengthOffset = BaseStream.Position;\n+            long bodyLength = 0;\n \n             for (var i = 0; i < buffers.Count; i++)\n             {\n                 if (buffers[i].DataBuffer.IsEmpty)\n                     continue;\n \n-                \n                 await WriteBufferAsync(buffers[i].DataBuffer, cancellationToken).ConfigureAwait(false);\n+                bodyLength += buffers[i].DataBuffer.Length;\n             }\n \n             // Write padding so the record batch message body length is a multiple of 8 bytes\n \n-            var bodyLength = Convert.ToInt32(BaseStream.Position - lengthOffset);\n-            var bodyPaddingLength = CalculatePadding(bodyLength);\n+            int bodyPaddingLength = CalculatePadding(bodyLength);\n \n             await WritePaddingAsync(bodyPaddingLength).ConfigureAwait(false);\n \n-            return new Block(\n-                offset: Convert.ToInt32(metadataOffset),\n-                length: bodyLength + bodyPaddingLength, \n-                metadataLength: Convert.ToInt32(metadataLength));\n+            FinishedWritingRecordBatch(bodyLength + bodyPaddingLength, metadataLength);\n+        }\n+\n+        private protected virtual void StartingWritingRecordBatch()\n+        {\n+        }\n+\n+        private protected virtual void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n         }\n \n         public virtual Task WriteRecordBatchAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default)\n         {\n             return WriteRecordBatchInternalAsync(recordBatch, cancellationToken);\n         }\n-    \n-        public Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n+\n+        public async Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n         {\n-            byte[] buffer = null;\n-            try\n-            {\n-                var span = arrowBuffer.Span;\n-                buffer = ArrayPool<byte>.Shared.Rent(span.Length);\n-                span.CopyTo(buffer);\n-                return BaseStream.WriteAsync(buffer, 0, span.Length, cancellationToken);\n-            }\n-            finally\n-            {\n-                ArrayPool<byte>.Shared.Return(buffer);\n-            }\n+            await BaseStream.WriteAsync(arrowBuffer.Memory, cancellationToken)\n+                .ConfigureAwait(false);\n \n Review comment:\n   This can just be:\r\n   ```C#\r\n   public Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default) =>\r\n       BaseStream.WriteAsync(arrowBuffer.Memory, cancellationToken);\r\n   ```\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T19:06:53.057+0000",
                    "updated": "2019-04-02T19:06:53.057+0000",
                    "started": "2019-04-02T19:06:53.056+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221928",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221930",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271454380\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -368,8 +353,14 @@ private protected async ValueTask WriteFlatBufferAsync(CancellationToken cancell\n             await BaseStream.WriteAsync(segment, cancellationToken).ConfigureAwait(false);\n         }\n \n-        protected int CalculatePadding(int offset, int alignment = 8) =>\n-            BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+        protected int CalculatePadding(long offset, int alignment = 8)\n+        {\n+            long result = BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+            checked\n+            {\n+                return (int)result;\n+            }\n \n Review comment:\n   How come this uses checked with a cast, but earlier we use Convert.ToInt32?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T19:07:28.355+0000",
                    "updated": "2019-04-02T19:07:28.355+0000",
                    "started": "2019-04-02T19:07:28.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221930",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221931",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271454513\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -359,6 +342,8 @@ await WriteMessageAsync(Flatbuf.MessageHeader.Schema, schemaOffset, 0, cancellat\n \n             await BaseStream.WriteAsync(messageData, cancellationToken).ConfigureAwait(false);\n             await WritePaddingAsync(messagePaddingLength).ConfigureAwait(false);\n+\n+            return 4 + messageData.Length + messagePaddingLength;\n \n Review comment:\n   Some other places are doing checked operations; do we want/need to do so everywhere?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T19:07:53.808+0000",
                    "updated": "2019-04-02T19:07:53.808+0000",
                    "started": "2019-04-02T19:07:53.807+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221931",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221932",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271454771\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowFileWriter.cs\n ##########\n @@ -67,10 +70,27 @@ public override async Task WriteRecordBatchAsync(RecordBatch recordBatch, Cancel\n \n             cancellationToken.ThrowIfCancellationRequested();\n \n-            var block = await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n+            await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n                 .ConfigureAwait(false);\n+        }\n+\n+        private protected override void StartingWritingRecordBatch()\n+        {\n+            _currentRecordBatchOffset = BaseStream.Position;\n+        }\n+\n+        private protected override void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n+            Debug.Assert(_currentRecordBatchOffset > 0);\n \n Review comment:\n   It can't be == 0?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T19:08:41.774+0000",
                    "updated": "2019-04-02T19:08:41.774+0000",
                    "started": "2019-04-02T19:08:41.774+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221932",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271477437\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -228,63 +214,55 @@ public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen)\n \n             // Serialize record batch\n \n+            StartingWritingRecordBatch();\n+\n             var recordBatchOffset = Flatbuf.RecordBatch.CreateRecordBatch(Builder, recordBatch.Length,\n                 fieldNodesVectorOffset,\n                 buffersVectorOffset);\n \n-            var metadataOffset = BaseStream.Position;\n-\n-            await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n+            long metadataLength = await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n                 recordBatchOffset, recordBatchBuilder.TotalLength,\n                 cancellationToken).ConfigureAwait(false);\n \n-            var metadataLength = BaseStream.Position - metadataOffset;\n-\n             // Write buffer data\n \n-            var lengthOffset = BaseStream.Position;\n+            long bodyLength = 0;\n \n             for (var i = 0; i < buffers.Count; i++)\n             {\n                 if (buffers[i].DataBuffer.IsEmpty)\n                     continue;\n \n-                \n                 await WriteBufferAsync(buffers[i].DataBuffer, cancellationToken).ConfigureAwait(false);\n+                bodyLength += buffers[i].DataBuffer.Length;\n             }\n \n             // Write padding so the record batch message body length is a multiple of 8 bytes\n \n-            var bodyLength = Convert.ToInt32(BaseStream.Position - lengthOffset);\n-            var bodyPaddingLength = CalculatePadding(bodyLength);\n+            int bodyPaddingLength = CalculatePadding(bodyLength);\n \n             await WritePaddingAsync(bodyPaddingLength).ConfigureAwait(false);\n \n-            return new Block(\n-                offset: Convert.ToInt32(metadataOffset),\n-                length: bodyLength + bodyPaddingLength, \n-                metadataLength: Convert.ToInt32(metadataLength));\n+            FinishedWritingRecordBatch(bodyLength + bodyPaddingLength, metadataLength);\n+        }\n+\n+        private protected virtual void StartingWritingRecordBatch()\n+        {\n+        }\n+\n+        private protected virtual void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n         }\n \n         public virtual Task WriteRecordBatchAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default)\n         {\n             return WriteRecordBatchInternalAsync(recordBatch, cancellationToken);\n         }\n-    \n-        public Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n+\n+        public async Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n         {\n-            byte[] buffer = null;\n-            try\n-            {\n-                var span = arrowBuffer.Span;\n-                buffer = ArrayPool<byte>.Shared.Rent(span.Length);\n-                span.CopyTo(buffer);\n-                return BaseStream.WriteAsync(buffer, 0, span.Length, cancellationToken);\n-            }\n-            finally\n-            {\n-                ArrayPool<byte>.Shared.Return(buffer);\n-            }\n+            await BaseStream.WriteAsync(arrowBuffer.Memory, cancellationToken)\n+                .ConfigureAwait(false);\n \n Review comment:\n   It can't just yet because `BaseStream.WriteAsync` returns a `ValueTask`.  When we implement https://issues.apache.org/jira/projects/ARROW/issues/ARROW-4717, then it can be written that way.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:14:59.544+0000",
                    "updated": "2019-04-02T20:14:59.544+0000",
                    "started": "2019-04-02T20:14:59.543+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221958",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221961",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271479613\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowFileWriter.cs\n ##########\n @@ -67,10 +70,27 @@ public override async Task WriteRecordBatchAsync(RecordBatch recordBatch, Cancel\n \n             cancellationToken.ThrowIfCancellationRequested();\n \n-            var block = await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n+            await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n                 .ConfigureAwait(false);\n+        }\n+\n+        private protected override void StartingWritingRecordBatch()\n+        {\n+            _currentRecordBatchOffset = BaseStream.Position;\n+        }\n+\n+        private protected override void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n+            Debug.Assert(_currentRecordBatchOffset > 0);\n \n Review comment:\n   It can't because there is always a schema header that needs to get written before any Record Batch can be written.\r\n   \r\n   Do you think I should add this to a comment?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:21:04.077+0000",
                    "updated": "2019-04-02T20:21:04.077+0000",
                    "started": "2019-04-02T20:21:04.076+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221961",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271480087\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -368,8 +353,14 @@ private protected async ValueTask WriteFlatBufferAsync(CancellationToken cancell\n             await BaseStream.WriteAsync(segment, cancellationToken).ConfigureAwait(false);\n         }\n \n-        protected int CalculatePadding(int offset, int alignment = 8) =>\n-            BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+        protected int CalculatePadding(long offset, int alignment = 8)\n+        {\n+            long result = BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+            checked\n+            {\n+                return (int)result;\n+            }\n \n Review comment:\n   I think the other one was there before, and I just kept it. Do you have a preference on which to use? (I guess I would have picked checked with cast)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:22:28.097+0000",
                    "updated": "2019-04-02T20:22:28.097+0000",
                    "started": "2019-04-02T20:22:28.097+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221962",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221963",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271480175\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -359,6 +342,8 @@ await WriteMessageAsync(Flatbuf.MessageHeader.Schema, schemaOffset, 0, cancellat\n \n             await BaseStream.WriteAsync(messageData, cancellationToken).ConfigureAwait(false);\n             await WritePaddingAsync(messagePaddingLength).ConfigureAwait(false);\n+\n+            return 4 + messageData.Length + messagePaddingLength;\n \n Review comment:\n   Yes, here is a good place too. I'll add `checked` here.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:22:43.805+0000",
                    "updated": "2019-04-02T20:22:43.805+0000",
                    "started": "2019-04-02T20:22:43.804+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221963",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221974",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271483952\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -368,8 +353,14 @@ private protected async ValueTask WriteFlatBufferAsync(CancellationToken cancell\n             await BaseStream.WriteAsync(segment, cancellationToken).ConfigureAwait(false);\n         }\n \n-        protected int CalculatePadding(int offset, int alignment = 8) =>\n-            BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+        protected int CalculatePadding(long offset, int alignment = 8)\n+        {\n+            long result = BitUtility.RoundUpToMultiplePowerOfTwo(offset, alignment) - offset;\n+            checked\n+            {\n+                return (int)result;\n+            }\n \n Review comment:\n   > I guess I would have picked checked with cast\r\n   \r\n   +1\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:32:56.319+0000",
                    "updated": "2019-04-02T20:32:56.319+0000",
                    "started": "2019-04-02T20:32:56.319+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221974",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221975",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271484156\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowFileWriter.cs\n ##########\n @@ -67,10 +70,27 @@ public override async Task WriteRecordBatchAsync(RecordBatch recordBatch, Cancel\n \n             cancellationToken.ThrowIfCancellationRequested();\n \n-            var block = await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n+            await WriteRecordBatchInternalAsync(recordBatch, cancellationToken)\n                 .ConfigureAwait(false);\n+        }\n+\n+        private protected override void StartingWritingRecordBatch()\n+        {\n+            _currentRecordBatchOffset = BaseStream.Position;\n+        }\n+\n+        private protected override void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n+            Debug.Assert(_currentRecordBatchOffset > 0);\n \n Review comment:\n   Thanks.  A comment or message in the assert seems useful.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:33:26.018+0000",
                    "updated": "2019-04-02T20:33:26.018+0000",
                    "started": "2019-04-02T20:33:26.017+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221975",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/221977",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stephentoub commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#discussion_r271484451\n \n \n\n ##########\n File path: csharp/src/Apache.Arrow/Ipc/ArrowStreamWriter.cs\n ##########\n @@ -228,63 +214,55 @@ public ArrowStreamWriter(Stream baseStream, Schema schema, bool leaveOpen)\n \n             // Serialize record batch\n \n+            StartingWritingRecordBatch();\n+\n             var recordBatchOffset = Flatbuf.RecordBatch.CreateRecordBatch(Builder, recordBatch.Length,\n                 fieldNodesVectorOffset,\n                 buffersVectorOffset);\n \n-            var metadataOffset = BaseStream.Position;\n-\n-            await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n+            long metadataLength = await WriteMessageAsync(Flatbuf.MessageHeader.RecordBatch,\n                 recordBatchOffset, recordBatchBuilder.TotalLength,\n                 cancellationToken).ConfigureAwait(false);\n \n-            var metadataLength = BaseStream.Position - metadataOffset;\n-\n             // Write buffer data\n \n-            var lengthOffset = BaseStream.Position;\n+            long bodyLength = 0;\n \n             for (var i = 0; i < buffers.Count; i++)\n             {\n                 if (buffers[i].DataBuffer.IsEmpty)\n                     continue;\n \n-                \n                 await WriteBufferAsync(buffers[i].DataBuffer, cancellationToken).ConfigureAwait(false);\n+                bodyLength += buffers[i].DataBuffer.Length;\n             }\n \n             // Write padding so the record batch message body length is a multiple of 8 bytes\n \n-            var bodyLength = Convert.ToInt32(BaseStream.Position - lengthOffset);\n-            var bodyPaddingLength = CalculatePadding(bodyLength);\n+            int bodyPaddingLength = CalculatePadding(bodyLength);\n \n             await WritePaddingAsync(bodyPaddingLength).ConfigureAwait(false);\n \n-            return new Block(\n-                offset: Convert.ToInt32(metadataOffset),\n-                length: bodyLength + bodyPaddingLength, \n-                metadataLength: Convert.ToInt32(metadataLength));\n+            FinishedWritingRecordBatch(bodyLength + bodyPaddingLength, metadataLength);\n+        }\n+\n+        private protected virtual void StartingWritingRecordBatch()\n+        {\n+        }\n+\n+        private protected virtual void FinishedWritingRecordBatch(long bodyLength, long metadataLength)\n+        {\n         }\n \n         public virtual Task WriteRecordBatchAsync(RecordBatch recordBatch, CancellationToken cancellationToken = default)\n         {\n             return WriteRecordBatchInternalAsync(recordBatch, cancellationToken);\n         }\n-    \n-        public Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n+\n+        public async Task WriteBufferAsync(ArrowBuffer arrowBuffer, CancellationToken cancellationToken = default)\n         {\n-            byte[] buffer = null;\n-            try\n-            {\n-                var span = arrowBuffer.Span;\n-                buffer = ArrayPool<byte>.Shared.Rent(span.Length);\n-                span.CopyTo(buffer);\n-                return BaseStream.WriteAsync(buffer, 0, span.Length, cancellationToken);\n-            }\n-            finally\n-            {\n-                ArrayPool<byte>.Shared.Return(buffer);\n-            }\n+            await BaseStream.WriteAsync(arrowBuffer.Memory, cancellationToken)\n+                .ConfigureAwait(false);\n \n Review comment:\n   Gotcha. Ok.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-02T20:34:13.912+0000",
                    "updated": "2019-04-02T20:34:13.912+0000",
                    "started": "2019-04-02T20:34:13.911+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "221977",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/222740",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "eerhardt commented on issue #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052#issuecomment-479711136\n \n \n   @wesm @kou - I believe all feedback has been addressed and this is ready to be merged.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-04T01:03:44.743+0000",
                    "updated": "2019-04-04T01:03:44.743+0000",
                    "started": "2019-04-04T01:03:44.742+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "222740",
                    "issueId": "13224155"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/worklog/222769",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "kou commented on pull request #4052: ARROW-5019: [C#] ArrowStreamWriter doesn't work on a non-seekable stream\nURL: https://github.com/apache/arrow/pull/4052\n \n \n   \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-04-04T02:35:30.884+0000",
                    "updated": "2019-04-04T02:35:30.884+0000",
                    "started": "2019-04-04T02:35:30.884+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "222769",
                    "issueId": "13224155"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 95400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@75fd4863[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5b62fba4[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@563f48f5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@1acc264d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6892cb8e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@544fb0ee[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@789b2272[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@31e8d62[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7d2ee834[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@54cfefbf[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7566dfe6[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@26439b5[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 95400,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Apr 04 02:35:40 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-04-04T02:35:40.000+0000",
        "workratio": 55,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-5019/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-03-26T21:53:57.000+0000",
        "updated": "2019-04-04T02:35:40.000+0000",
        "timeoriginalestimate": 172800,
        "description": "When writing to a non-seekable .NET Stream (like a network/socket stream), ArrowStreamWriter will throw an exception:\r\n\r\n\u00a0\r\n{code:java}\r\nException thrown: 'System.NotSupportedException' in System.Net.Sockets.dll\r\nThis stream does not support seek operations.\r\n{code}\r\nThe reason this throws is because we are using `BastStream.Position` in the writer to calculate the length of bytes that we've written to the stream. We don't need to use the Position in order to calculate the lengths. We should be able to write an Arrow RecordBatch to a NetworkStream directly. Today, we need to write to a MemoryStream, and then copy the MemoryStream to the NetworkStream.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "originalEstimate": "48h",
            "remainingEstimate": "21.5h",
            "timeSpent": "26.5h",
            "originalEstimateSeconds": 172800,
            "remainingEstimateSeconds": 77400,
            "timeSpentSeconds": 95400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C#] ArrowStreamWriter doesn't work on a non-seekable stream",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13224155/comment/16809447",
                    "id": "16809447",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "body": "Issue resolved by pull request 4052\n[https://github.com/apache/arrow/pull/4052]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=kou",
                        "name": "kou",
                        "key": "kou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=kou&avatarId=30762",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=kou&avatarId=30762",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=kou&avatarId=30762",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=kou&avatarId=30762"
                        },
                        "displayName": "Kouhei Sutou",
                        "active": true,
                        "timeZone": "Asia/Tokyo"
                    },
                    "created": "2019-04-04T02:35:40.250+0000",
                    "updated": "2019-04-04T02:35:40.250+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z014qg:",
        "customfield_12314139": null
    }
}