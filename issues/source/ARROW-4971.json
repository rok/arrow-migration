{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13222859",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859",
    "key": "ARROW-4971",
    "fields": {
        "parent": {
            "id": "13178285",
            "key": "ARROW-3040",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13178285",
            "fields": {
                "summary": "[Go] add support for comparing Arrays",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/5",
                    "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
                    "name": "Resolved",
                    "id": "5",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                        "id": 3,
                        "key": "done",
                        "colorName": "green",
                        "name": "Done"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12344925",
                "id": "12344925",
                "description": "",
                "name": "0.14.0",
                "archived": false,
                "released": true,
                "releaseDate": "2019-07-04"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
            "name": "alexandreyc",
            "key": "alexandreyc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alexandre Crayssac",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12333772",
                "id": "12333772",
                "name": "Go"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
            "name": "alexandreyc",
            "key": "alexandreyc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alexandre Crayssac",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
            "name": "alexandreyc",
            "key": "alexandreyc",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Alexandre Crayssac",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4971/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/216262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#issuecomment-474886975\n \n \n   I added a flag to allow for ignoring metadata during comparison.\r\n   \r\n   PTAL\r\n   \r\n   @sbinet @stuartcarnie \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-20T15:32:22.998+0000",
                    "updated": "2019-03-20T15:32:22.998+0000",
                    "started": "2019-03-20T15:32:22.997+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "216262",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219313",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269580417\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   shouldn't we return `left == right` here? if both `left` and `right` are `nil`, they'd logically test equal. right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:27:58.952+0000",
                    "updated": "2019-03-27T14:27:58.952+0000",
                    "started": "2019-03-27T14:27:58.951+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219313",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219314",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269581194\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n+\tcase left.ID() != right.ID():\n+\t\treturn false\n+\t}\n+\n+\t// StructType is the only type that has metadata.\n+\tl, ok := left.(*StructType)\n+\tif !ok || checkMetadata {\n+\t\treturn reflect.DeepEqual(left, right)\n+\t}\n+\n+\tr := right.(*StructType)\n+\tswitch {\n+\tcase len(l.fields) != len(r.fields):\n+\t\treturn false\n+\tcase !reflect.DeepEqual(l.index, r.index):\n+\t\treturn false\n+\t}\n+\tfor i, _ := range l.fields {\n \n Review comment:\n   `s/i, _/i/`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:27:59.004+0000",
                    "updated": "2019-03-27T14:27:59.004+0000",
                    "started": "2019-03-27T14:27:59.003+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219314",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219315",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269580570\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n+\tcase left.ID() != right.ID():\n+\t\treturn false\n+\t}\n+\n+\t// StructType is the only type that has metadata.\n+\tl, ok := left.(*StructType)\n+\tif !ok || checkMetadata {\n \n Review comment:\n   shouldn't this read `!checkMetadata` here?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:27:59.033+0000",
                    "updated": "2019-03-27T14:27:59.033+0000",
                    "started": "2019-03-27T14:27:59.033+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219315",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219316",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269584860\n \n \n\n ##########\n File path: go/arrow/compare_test.go\n ##########\n @@ -0,0 +1,245 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"testing\"\n+)\n+\n+func TestTypeEquals(t *testing.T) {\n+\ttests := []struct {\n+\t\tleft, right   DataType\n+\t\twant          bool\n+\t\tcheckMetadata bool\n+\t}{\n+\t\t{\n+\t\t\tnil, nil, false, false,\n+\t\t},\n+\t\t{\n+\t\t\tnil, PrimitiveTypes.Uint8, false, false,\n+\t\t},\n+\t\t{\n+\t\t\tPrimitiveTypes.Float32, nil, false, false,\n+\t\t},\n+\t\t{\n+\t\t\tPrimitiveTypes.Float64, PrimitiveTypes.Int32, false, false,\n+\t\t},\n+\t\t{\n+\t\t\tNull, Null, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&Time32Type{Unit: Second}, &Time32Type{Unit: Second}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&Time32Type{Unit: Millisecond}, &Time32Type{Unit: Second}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&Time64Type{Unit: Nanosecond}, &Time64Type{Unit: Nanosecond}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&Time64Type{Unit: Nanosecond}, &Time64Type{Unit: Microsecond}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&TimestampType{Unit: Second, TimeZone: \"UTC\"}, &TimestampType{Unit: Second, TimeZone: \"UTC\"}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&TimestampType{Unit: Microsecond, TimeZone: \"UTC\"}, &TimestampType{Unit: Millisecond, TimeZone: \"UTC\"}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&TimestampType{Unit: Second, TimeZone: \"UTC\"}, &TimestampType{Unit: Second, TimeZone: \"CET\"}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&TimestampType{Unit: Second, TimeZone: \"UTC\"}, &TimestampType{Unit: Nanosecond, TimeZone: \"CET\"}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{PrimitiveTypes.Uint64}, &ListType{PrimitiveTypes.Uint64}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{PrimitiveTypes.Uint64}, &ListType{PrimitiveTypes.Uint32}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{&Time32Type{Unit: Millisecond}}, &ListType{&Time32Type{Unit: Millisecond}}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{&Time32Type{Unit: Millisecond}}, &ListType{&Time32Type{Unit: Second}}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{&ListType{PrimitiveTypes.Uint16}}, &ListType{&ListType{PrimitiveTypes.Uint16}}, true, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{&ListType{PrimitiveTypes.Uint16}}, &ListType{&ListType{PrimitiveTypes.Uint8}}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&ListType{&ListType{&ListType{PrimitiveTypes.Uint16}}}, &ListType{&ListType{PrimitiveTypes.Uint8}}, false, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\tfalse, true,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\tfalse, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f0\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f0\": 0},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\tfalse, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 0},\n+\t\t\t},\n+\t\t\tfalse, true,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\ttrue, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\ttrue, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t\tmeta:  MetadataFrom(map[string]string{\"k1\": \"v1\"}),\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t\tmeta:  MetadataFrom(map[string]string{\"k1\": \"v1\"}),\n+\t\t\t},\n+\t\t\ttrue, true,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t\tmeta:  MetadataFrom(map[string]string{\"k1\": \"v1\"}),\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint32, Nullable: true},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0},\n+\t\t\t\tmeta:  MetadataFrom(map[string]string{\"k1\": \"v2\"}),\n+\t\t\t},\n+\t\t\ttrue, false,\n+\t\t},\n+\t\t{\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true, Metadata: MetadataFrom(map[string]string{\"k1\": \"v1\"})},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\t&StructType{\n+\t\t\t\tfields: []Field{\n+\t\t\t\t\tField{Name: \"f1\", Type: PrimitiveTypes.Uint16, Nullable: true, Metadata: MetadataFrom(map[string]string{\"k1\": \"v2\"})},\n+\t\t\t\t\tField{Name: \"f2\", Type: PrimitiveTypes.Float32, Nullable: false},\n+\t\t\t\t},\n+\t\t\t\tindex: map[string]int{\"f1\": 0, \"f2\": 1},\n+\t\t\t},\n+\t\t\tfalse, true,\n+\t\t},\n+\t}\n+\n+\tfor _, test := range tests {\n+\t\tgot := TypeEquals(test.left, test.right, test.checkMetadata)\n \n Review comment:\n   perhaps use a sub-test?\r\n   _ie:_\r\n   ```go\r\n   for _, test := range tests {\r\n       t.Run(\"\", func(t*testing.T) {\r\n            ...\r\n       })\r\n   }\r\n   ```\r\n   and replace the use of `t.Errorf(...)` with `t.Fatalf(...)`.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:27:59.036+0000",
                    "updated": "2019-03-27T14:27:59.036+0000",
                    "started": "2019-03-27T14:27:59.035+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219316",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219317",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269589806\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n \n Review comment:\n   I'd be tempted to use (abuse?) the \"functional option\" pattern instead of this extra boolean:\r\n   ```go\r\n   type typeEqConfig struct {\r\n       metadata bool\r\n   }\r\n   \r\n   type TypeEqualsOption func(*typeEqConfig)\r\n   \r\n   func CheckMetadata() TypeEqualsOption {\r\n       return func(cfg *typeEqConfig)\r\n   }\r\n   \r\n   func TypeEquals(left, right DataType, opts ...TypeEqualsOption) bool {\r\n       var cfg typeEqConfig\r\n       for _, o := range opts {\r\n           o(&cfg)\r\n       }\r\n   \r\n       // ...\r\n   }\r\n   ```\r\n   \r\n   this would allow the following user code:\r\n   ```go\r\n   ok1 := arrow.TypeEquals(type1, type2)\r\n   ok2 := arrow.TypeEquals(type1, type2, arrow.CheckMetaData())\r\n   ```\r\n   \r\n   I am not completely sold on this either.\r\n   \r\n   WDYT?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:27:59.109+0000",
                    "updated": "2019-03-27T14:27:59.109+0000",
                    "started": "2019-03-27T14:27:59.108+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219317",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219328",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269602609\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   I agree with your logic but the idea was that two nil types are \"undefined\" so they're not equal. Like I don't consider two NULL values to be equal but it's a matter of convention. I will update the return statement to your suggestion.\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:50:22.206+0000",
                    "updated": "2019-03-27T14:50:22.206+0000",
                    "started": "2019-03-27T14:50:22.205+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219328",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269604308\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n+\tcase left.ID() != right.ID():\n+\t\treturn false\n+\t}\n+\n+\t// StructType is the only type that has metadata.\n+\tl, ok := left.(*StructType)\n+\tif !ok || checkMetadata {\n \n Review comment:\n   I don't think so.\r\n   \r\n   If we want to check for metadata then a DeepEqual comparison is the most direct way to do it. Right?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T14:53:52.289+0000",
                    "updated": "2019-03-27T14:53:52.289+0000",
                    "started": "2019-03-27T14:53:52.288+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219330",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219335",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269611529\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   ah, so you consider `nil` `DataType`s to behave like `NaN`s?\r\n   \r\n   ok. I must say I am not sure what the arrow specs in this area :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:06:09.929+0000",
                    "updated": "2019-03-27T15:06:09.929+0000",
                    "started": "2019-03-27T15:06:09.928+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219335",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219339",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269615336\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   looking at:\r\n   https://github.com/apache/arrow/blob/master/cpp/src/arrow/type.cc#L110\r\n   \r\n   it would seem C++ agrees with your original implementation.\r\n   it's of course constrained by the fact in C++ the feature is implemented as a method on a type rather than a function taking 2 args (so in C++ there's no possibilty to have both args to be `nullptr_t`.)\r\n   \r\n   oh well...\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:13:04.644+0000",
                    "updated": "2019-03-27T15:13:04.644+0000",
                    "started": "2019-03-27T15:13:04.643+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219339",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269616435\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n+\tcase left.ID() != right.ID():\n+\t\treturn false\n+\t}\n+\n+\t// StructType is the only type that has metadata.\n+\tl, ok := left.(*StructType)\n+\tif !ok || checkMetadata {\n \n Review comment:\n   right. booleans are tricky. (you're always off by a bit, but it usually has dire consequences...)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:15:11.220+0000",
                    "updated": "2019-03-27T15:15:11.220+0000",
                    "started": "2019-03-27T15:15:11.219+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219340",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219345",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269618329\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   Hum... I was looking at https://github.com/apache/arrow/blob/8ccf48181a42a1a08d2a172dd1c958f82599ad9f/cpp/src/arrow/compare.cc#L1046 and it seems to suggest the opposite \ud83e\udd14\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:18:44.803+0000",
                    "updated": "2019-03-27T15:18:44.803+0000",
                    "started": "2019-03-27T15:18:44.802+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219345",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219351",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269620968\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   if my C++ isn't completely rusty, you can't have `&left` nor `&right` being `nullptr` (as they're both references.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:23:49.494+0000",
                    "updated": "2019-03-27T15:23:49.494+0000",
                    "started": "2019-03-27T15:23:49.492+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219351",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219357",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269622620\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,58 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, checkMetadata bool) bool {\n+\tswitch {\n+\tcase left == nil || right == nil:\n+\t\treturn false\n \n Review comment:\n   Oh yes you're right. Mine is completely rusty :)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T15:26:53.288+0000",
                    "updated": "2019-03-27T15:26:53.288+0000",
                    "started": "2019-03-27T15:26:53.287+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219357",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219403",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#issuecomment-477231947\n \n \n   Should be good now!\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-27T16:13:10.050+0000",
                    "updated": "2019-03-27T16:13:10.050+0000",
                    "started": "2019-03-27T16:13:10.050+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219403",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219905",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269931282\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+type typeEqualsConfig struct {\n+\tmetadata bool\n+}\n+\n+type TypeEqualsOption func(*typeEqualsConfig)\n+\n+func CheckMetadata() TypeEqualsOption {\n \n Review comment:\n   we could perhaps add a bit of documentation :)\r\n   (especially somehow link it to the `TypeEquals` function.)\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-28T10:12:36.911+0000",
                    "updated": "2019-03-28T10:12:36.911+0000",
                    "started": "2019-03-28T10:12:36.910+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219905",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219906",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269931879\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+type typeEqualsConfig struct {\n+\tmetadata bool\n+}\n+\n+type TypeEqualsOption func(*typeEqualsConfig)\n+\n+func CheckMetadata() TypeEqualsOption {\n+\treturn func(cfg *typeEqualsConfig) {\n+\t\tcfg.metadata = true\n+\t}\n+}\n+\n+// TypeEquals checks if two DataType are the same, optionally checking metadata\n+// equality for STRUCT types.\n+func TypeEquals(left DataType, right DataType, opts ...TypeEqualsOption) bool {\n \n Review comment:\n   perhaps simplify into:\r\n   `left, right DataType,`\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-28T10:12:37.051+0000",
                    "updated": "2019-03-28T10:12:37.051+0000",
                    "started": "2019-03-28T10:12:37.051+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219906",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219907",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sbinet commented on pull request #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#discussion_r269931613\n \n \n\n ##########\n File path: go/arrow/compare.go\n ##########\n @@ -0,0 +1,75 @@\n+// Licensed to the Apache Software Foundation (ASF) under one\n+// or more contributor license agreements.  See the NOTICE file\n+// distributed with this work for additional information\n+// regarding copyright ownership.  The ASF licenses this file\n+// to you under the Apache License, Version 2.0 (the\n+// \"License\"); you may not use this file except in compliance\n+// with the License.  You may obtain a copy of the License at\n+//\n+// http://www.apache.org/licenses/LICENSE-2.0\n+//\n+// Unless required by applicable law or agreed to in writing, software\n+// distributed under the License is distributed on an \"AS IS\" BASIS,\n+// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+// See the License for the specific language governing permissions and\n+// limitations under the License.\n+\n+package arrow\n+\n+import (\n+\t\"reflect\"\n+)\n+\n+type typeEqualsConfig struct {\n+\tmetadata bool\n+}\n+\n+type TypeEqualsOption func(*typeEqualsConfig)\n \n Review comment:\n   perhaps add a bit of documentation also there?\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-28T10:12:37.113+0000",
                    "updated": "2019-03-28T10:12:37.113+0000",
                    "started": "2019-03-28T10:12:37.113+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219907",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/219962",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "alexandreyc commented on issue #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#issuecomment-477582780\n \n \n   Done\n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-28T12:55:27.983+0000",
                    "updated": "2019-03-28T12:55:27.983+0000",
                    "started": "2019-03-28T12:55:27.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "219962",
                    "issueId": "13222859"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/worklog/220122",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "stuartcarnie commented on issue #3981: ARROW-4971: [Go] Add type equality test function\nURL: https://github.com/apache/arrow/pull/3981#issuecomment-477676605\n \n \n   @sbinet it looks good to me, if there is likely to only be one option for equality checks, I might have considered two APIs to distinguish `TypeEquals` from a deeper equals, but I don't feel strongly enough about it to suggest a change.\r\n   \r\n   LGTM \ud83d\udc4d \n \n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2019-03-28T16:42:15.172+0000",
                    "updated": "2019-03-28T16:42:15.172+0000",
                    "started": "2019-03-28T16:42:15.171+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "220122",
                    "issueId": "13222859"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@6e0611b2[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74b433a[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@161bf28e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4b9431e4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@ed374ba[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@31afe715[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@78e9ec2c[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1298f9c4[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@77b3989[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@49a2e13c[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7e9deca8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@2b9e7c66[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Mar 29 15:34:02 UTC 2019",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2019-03-29T15:34:02.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-4971/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2019-03-20T14:24:14.000+0000",
        "updated": "2019-03-29T21:06:43.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Go] DataType equality",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/comment/16797249",
                    "id": "16797249",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
                        "name": "alexandreyc",
                        "key": "alexandreyc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Alexandre Crayssac",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "https://github.com/apache/arrow/pull/3981",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=alexandreyc",
                        "name": "alexandreyc",
                        "key": "alexandreyc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Alexandre Crayssac",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2019-03-20T15:02:56.578+0000",
                    "updated": "2019-03-20T15:02:56.578+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13222859/comment/16805110",
                    "id": "16805110",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 3981\n[https://github.com/apache/arrow/pull/3981]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2019-03-29T15:34:02.807+0000",
                    "updated": "2019-03-29T15:34:02.807+0000"
                }
            ],
            "maxResults": 2,
            "total": 2,
            "startAt": 0
        },
        "customfield_12311820": "0|z00wsg:",
        "customfield_12314139": null
    }
}