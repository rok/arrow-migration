{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13475074",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074",
    "key": "ARROW-17306",
    "fields": {
        "parent": {
            "id": "13292730",
            "key": "ARROW-8163",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13292730",
            "fields": {
                "summary": "[C++][Dataset] Allow FileSystemDataset's file list to be lazy",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/3",
                    "description": "This issue is being actively worked on at the moment by the assignee.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
                    "name": "In Progress",
                    "id": "3",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                        "id": 4,
                        "key": "indeterminate",
                        "colorName": "yellow",
                        "name": "In Progress"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
                    "id": "4",
                    "description": "An improvement or enhancement to an existing feature or task.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
                    "name": "Improvement",
                    "subtask": false,
                    "avatarId": 21140
                }
            }
        },
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12351947",
                "id": "12351947",
                "description": "",
                "name": "10.0.0",
                "archived": false,
                "released": true,
                "releaseDate": "2022-10-26"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=psolodovnikov",
            "name": "psolodovnikov",
            "key": "JIRAUSER292918",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Pavel Solodovnikov",
            "active": true,
            "timeZone": "Europe/Moscow"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=psolodovnikov",
            "name": "psolodovnikov",
            "key": "JIRAUSER292918",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Pavel Solodovnikov",
            "active": true,
            "timeZone": "Europe/Moscow"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=psolodovnikov",
            "name": "psolodovnikov",
            "key": "JIRAUSER292918",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34050",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34050",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34050",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34050"
            },
            "displayName": "Pavel Solodovnikov",
            "active": true,
            "timeZone": "Europe/Moscow"
        },
        "aggregateprogress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 40800,
            "total": 40800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17306/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 68,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/797948",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson opened a new pull request, #13796:\nURL: https://github.com/apache/arrow/pull/13796\n\n   This header makes use of `int8_t`, which is defined in `<cstdint>`\r\n   system header.\r\n   \r\n   Introduce a helper class `AsyncStatSelector`, which contains\r\n   an optimized specialization for `GetFileInfoGenerator` in the\r\n   `LocalFileSystem` class.\r\n   \r\n   There are two variants of async discovery functions suported:\r\n   1. `DiscoverPartitionFiles`, which parallelizes traversal of\r\n      individual directories so that each directory results are\r\n      yielded as a separate `FileInfoGenerator` via an underlying\r\n      `DiscoveryImplIterator`, which delivers items in chunks\r\n      (default size is `kBatchSize == 1K` items).\r\n   2. `DiscoverPartitionsFlattened`, which forwards execution to\r\n      the `DiscoverPartitionFiles`, with the difference that the\r\n      results from individual sub-directory iterators are merged\r\n      into the single FileInfoGenerator stream.\r\n   \r\n   The implementation makes use of additional attributes in\r\n   `FileSelector`, such as `partitions_readahead`, which can be used\r\n   to tune algorithm behavior and adjust how many directories\r\n   can be processed in parallel. This option is disabled\r\n   by default, so that individual partitions are processed in\r\n   serial manner via `MakeConcatenatedGenerator` under the hood.\r\n   \r\n   Tests: unit(release)\r\n   \r\n   Signed-off-by: Pavel Solodovnikov <pavel.al.solodovnikov@gmail.com>\r\n   Co-Authored-by: Igor Seliverstov <iseliverstov@querifylabs.com>\n\n\n",
                    "created": "2022-08-04T10:56:13.919+0000",
                    "updated": "2022-08-04T10:56:13.919+0000",
                    "started": "2022-08-04T10:56:13.919+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797948",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/797957",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#issuecomment-1205155201\n\n   https://issues.apache.org/jira/browse/ARROW-17306\n\n\n",
                    "created": "2022-08-04T11:56:06.040+0000",
                    "updated": "2022-08-04T11:56:06.040+0000",
                    "started": "2022-08-04T11:56:06.040+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797957",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/797958",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#issuecomment-1205155383\n\n   Force-pushed the branch to fix some build issues on macOS and Windows.\r\n   \r\n   Changelog can be found here: https://github.com/apache/arrow/compare/b6714018c4384cd00f0b9a4e92d804671d1d381b..3f2b141dea8ded351d41d687245917821295277a?diff=unified\n\n\n",
                    "created": "2022-08-04T11:56:16.780+0000",
                    "updated": "2022-08-04T11:56:16.780+0000",
                    "started": "2022-08-04T11:56:16.779+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797958",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798491",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#issuecomment-1206657139\n\n   I believe appveyor failures don't have anything to do with my patches... Also, \"Dev / Source Merge Script\" jobs seem to fail due to some issues related to 10.0.0 freeze?\n\n\n",
                    "created": "2022-08-05T16:54:01.749+0000",
                    "updated": "2022-08-05T16:54:01.749+0000",
                    "started": "2022-08-05T16:54:01.748+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798491",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798534",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939107262\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   Hmm...this makes sense but we haven't used `util::optional` in public interfaces that I know of.  Typically we do something like `int32_t partitions_readahead = kDefaultPartitionsReadahead`.  Although, the downside is that we usually end up having to repeat the default in python.  Curious if @pitrou has any opinion here.\r\n   \r\n   Also, I don't think \"partitions\" is the correct terminology to be using here.  The `FileSelector` is to be understood in the context of \"filesystems\" which is a more generic abstraction than partitions.  Perhaps `directory_readahead`?\n\n\n\n",
                    "created": "2022-08-05T19:20:53.239+0000",
                    "updated": "2022-08-05T19:20:53.239+0000",
                    "started": "2022-08-05T19:20:53.238+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798534",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798535",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#issuecomment-1206785495\n\n   Agreed that the test failures are unrealted.  The Appveyor issues appears to be addressed already by https://github.com/apache/arrow/pull/13795\n\n\n",
                    "created": "2022-08-05T19:21:02.802+0000",
                    "updated": "2022-08-05T19:21:02.802+0000",
                    "started": "2022-08-05T19:21:02.801+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798535",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798595",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939491544\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   Are there any practical reasons why you do avoid optionals in public APIs? Does Arrow try to maintain strict ABI stability across multiple releases? If not, then I guess it should be completely fine.\r\n   \r\n   Regarding `directory_readahead`: I agree, the term `partitions` does not belong to this level of abstraction. I'll change it to `directory_readahead`, then.\n\n\n\n",
                    "created": "2022-08-06T06:31:10.382+0000",
                    "updated": "2022-08-06T06:31:10.382+0000",
                    "started": "2022-08-06T06:31:10.382+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798595",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798602",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939501739\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   We don't have any ABI guarantees. But when there is a well-known default value, it doesn't make sense to pass an optional, IMHO.\n\n\n\n",
                    "created": "2022-08-06T08:23:01.518+0000",
                    "updated": "2022-08-06T08:23:01.518+0000",
                    "started": "2022-08-06T08:23:01.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798602",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798603",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939501843\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   However, I also don't understand why this is an attribute of `FileSelector`. This sounds more like an implementation-specific know that should probably be in `LocalFileSystemOptions`.\n\n\n\n",
                    "created": "2022-08-06T08:24:11.534+0000",
                    "updated": "2022-08-06T08:24:11.534+0000",
                    "started": "2022-08-06T08:24:11.534+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798603",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798604",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939501892\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   (I'm also curious why this needs to be exposed at all)\n\n\n\n",
                    "created": "2022-08-06T08:24:36.509+0000",
                    "updated": "2022-08-06T08:24:36.509+0000",
                    "started": "2022-08-06T08:24:36.509+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798604",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798605",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939502452\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   I don't think delivering items in fixed-size chunks is a worthwhile goal, on the countrary.\r\n   The purpose of an async API such as `GetFileInfoGenerator` is to deliver results to the consumer as soon as they arrive. So when you get the contents of a 5-file directory, emit them ASAP as a single chunk. When you get the contents of a 999999-file directory, emit them ASAP as a single chunk.\r\n   \r\n   The consumer may want to normalize batch size if that makes sense for them, but it might not (for example if you simply print files on stdout, why would you enforce a batch size?).\r\n   \r\n   This will also simplify the producer implementation :-)\n\n\n\n",
                    "created": "2022-08-06T08:30:27.203+0000",
                    "updated": "2022-08-06T08:30:27.203+0000",
                    "started": "2022-08-06T08:30:27.203+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798605",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798606",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939502452\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   I don't think delivering items in fixed-size chunks is a worthwhile goal, on the contrary.\r\n   The purpose of an async API such as `GetFileInfoGenerator` is to deliver results to the consumer as soon as they arrive. So when you get the contents of a 5-file directory, emit them ASAP as a single chunk. When you get the contents of a 999999-file directory, emit them ASAP as a single chunk.\r\n   \r\n   The consumer may want to normalize batch size if that makes sense for them, but it might not (for example if you simply print files on stdout, why would you enforce a batch size?).\r\n   \r\n   This will also simplify the producer implementation :-)\n\n\n\n",
                    "created": "2022-08-06T08:31:46.938+0000",
                    "updated": "2022-08-06T08:31:46.938+0000",
                    "started": "2022-08-06T08:31:46.938+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798606",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798608",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939504438\n\n\n##########\ncpp/src/arrow/filesystem/filesystem.h:\n##########\n@@ -132,6 +133,9 @@ struct ARROW_EXPORT FileSelector {\n   bool recursive;\n   /// The maximum number of subdirectories to recurse into.\n   int32_t max_recursion;\n+  /// How many partitions should be processed in parallel. May not be supported by all\n+  /// implementations of `GetFileSystemGenerator`.\n+  util::optional<int32_t> partitions_readahead;\n\nReview Comment:\n   >We don't have any ABI guarantees. But when there is a well-known default value, it doesn't make sense to pass an optional, IMHO. \r\n   \r\n   Maybe you are right, this can be supplied a reasonable default value, so no need to make it optional.\r\n   \r\n   > However, I also don't understand why this is an attribute of FileSelector. This sounds more like an implementation-specific know that should probably be in LocalFileSystemOptions.\r\n   \r\n   Well, I don't have a strong opinion on this one. Don't see anything wrong about it being a part of FileSelector (which is exactly designed to specify details of file selection algorithms). Though, since this option is only applicable for `LocalFileSystem`, maybe it makes sense to hide it behind `LocalFileSystemOptions` thing.\r\n   \r\n   > (I'm also curious why this needs to be exposed at all)\r\n   \r\n   To be able to fine-tune the behavior if the default doesn't work well in a particular case, or better performance can be achieved with another value. For example, various filesystems have varying capabilities regarding parallel IO, e.g. XFS, which is the only FS I know of, that is capable of truly async IO.\n\n\n\n",
                    "created": "2022-08-06T08:52:34.326+0000",
                    "updated": "2022-08-06T08:52:34.326+0000",
                    "started": "2022-08-06T08:52:34.326+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798608",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939504882\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   > I don't think delivering items in fixed-size chunks is a worthwhile goal, on the contrary.\r\n   The purpose of an async API such as GetFileInfoGenerator is to deliver results to the consumer as soon as they arrive. So when you get the contents of a 5-file directory, emit them ASAP as a single chunk. When you get the contents of a 999999-file directory, emit them ASAP as a single chunk.\r\n   \r\n   This is exactly what this impl does. Each directory iterator has its own chunk tracking and flushes the chunks either as they are filled up (to `kBatchSize` entries) or the iterator is exhausted (in this case `current_chunk_.size()` would be less than `kBatchSize`). So I see there no problem at all, although the chunk size should be a configurable option, too.\r\n   \r\n   Also, I just noticed that I always reserve `kBatchSize` elements for a chunk, regardless of how much elements are left unprocessed. In such case the allocation size can optimized by checking against `child_fns_.size() - idx_`. I'll fix that one. \n\n\n\n",
                    "created": "2022-08-06T08:57:19.909+0000",
                    "updated": "2022-08-06T08:57:19.909+0000",
                    "started": "2022-08-06T08:57:19.908+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798609",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798610",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939505349\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   If we yield on every new item in the queue, more work will be just wasted on moving back and forth between IO and CPU threads, AFAIU, so internal chunking makes perfect sense. Moreover, it's naturally supported by the signature of `GetFileInfoGenerator`, which is supposed to deliver items in some chunks (though, without indication of batch sizes).\r\n   \r\n   If consumer wants a flattened view (e.g. `AsyncGenerator<FileInfo>`), it would want use more primitives from `async_generator.h` anyway.\n\n\n\n",
                    "created": "2022-08-06T09:02:25.584+0000",
                    "updated": "2022-08-06T09:02:25.584+0000",
                    "started": "2022-08-06T09:02:25.584+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798610",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798611",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939508943\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   I'm not really following you. What use is the chunk size here? If you just got 100000 elements from the kernel, while yield every 1000 of them, for example?\n\n\n\n",
                    "created": "2022-08-06T09:41:54.956+0000",
                    "updated": "2022-08-06T09:41:54.956+0000",
                    "started": "2022-08-06T09:41:54.956+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798611",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798612",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939511196\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   Getting just directory entries (`linux_dirent`) from linux kernel is extremely fast, even though we use regular `readdir`, which fetches the items one-by-one, and don't use `getdents` syscall directly, which is capable of yielding multiple entries at once and should be even faster.\r\n   \r\n   For example, on my machine, fetching contents of a directory with 10M files completes in less than 2 seconds, which is acceptable, I think.\r\n   \r\n   The most time-consuming part is `stat`-ing individual files, which should be done sequentially by arrow code and there isn't really a _get 100000 items from the kernel_ option, so the batching resides on our part, too.\n\n\n\n",
                    "created": "2022-08-06T10:09:18.700+0000",
                    "updated": "2022-08-06T10:09:18.700+0000",
                    "started": "2022-08-06T10:09:18.699+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798612",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798613",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939511196\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   Getting just directory entries (`linux_dirent`) from linux kernel is extremely fast, even though we use regular `readdir`, which fetches the items one-by-one, and don't use `getdents` syscall directly, which is capable of yielding multiple entries at once and should be even faster.\r\n   \r\n   For example, on my machine, fetching contents of a directory with 10M files completes in less than 2 seconds, which is acceptable, I think.\r\n   \r\n   The most time-consuming part is `stat`-ing individual files, which should be done sequentially by arrow code and there isn't really a _get 100000 items from the kernel_ option, so the batching resides on our part, too.\r\n   \r\n   So, the \"chunk\" is a vector of `FileInfo`:s, which is the result of `stat`-ing these files. The directory iterator caches dirents on the first call upon its initialization, there's no additional overhead after that.  \n\n\n\n",
                    "created": "2022-08-06T10:11:38.586+0000",
                    "updated": "2022-08-06T10:11:38.586+0000",
                    "started": "2022-08-06T10:11:38.585+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798613",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798614",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939512826\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   Ah, I had forgotten about the `stat`ing, my bad.\n\n\n\n",
                    "created": "2022-08-06T10:26:35.846+0000",
                    "updated": "2022-08-06T10:26:35.846+0000",
                    "started": "2022-08-06T10:26:35.846+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798614",
                    "issueId": "13475074"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/worklog/798615",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ManManson commented on code in PR #13796:\nURL: https://github.com/apache/arrow/pull/13796#discussion_r939513586\n\n\n##########\ncpp/src/arrow/filesystem/localfs.cc:\n##########\n@@ -309,6 +313,202 @@ Result<std::vector<FileInfo>> LocalFileSystem::GetFileInfo(const FileSelector& s\n   return results;\n }\n \n+namespace {\n+\n+/// Workhorse for streaming async implementation of `GetFileInfo`\n+/// (`GetFileInfoGenerator`).\n+///\n+/// There are two variants of async discovery functions suported:\n+/// 1. `DiscoverPartitionFiles`, which parallelizes traversal of individual directories\n+///    so that each directory results are yielded as a separate `FileInfoGenerator` via\n+///    an underlying `DiscoveryImplIterator`, which delivers items in chunks (default size\n+///    is `kBatchSize == 1K` items).\n\nReview Comment:\n   I'll extend the comments to clarify these things :)\n\n\n\n",
                    "created": "2022-08-06T10:35:16.042+0000",
                    "updated": "2022-08-06T10:35:16.042+0000",
                    "started": "2022-08-06T10:35:16.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798615",
                    "issueId": "13475074"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 40800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@21301053[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@64e7d659[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@f5c98b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@5553d21b[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6c5f2cf7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@3f7e4c46[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@540ce23e[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@1f0421ae[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@aa99e2d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@47f8ff42[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@74d6f891[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@4a61aef4[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 40800,
        "customfield_12312520": null,
        "customfield_12312521": "Fri Aug 19 23:28:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": [
            "C++"
        ],
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2022-08-18T19:17:06.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17306/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2022-08-04T09:25:39.000+0000",
        "updated": "2022-08-19T23:28:27.000+0000",
        "timeoriginalestimate": null,
        "description": "At the moment, `LocalFileSystem` does not have a separate optimized implementation of `GetFileInfoGenerator` with a fallback to the generic `FileSystem::GetFileInfoGenerator`, which simply queues the synchronous version of `GetFileInfo(FileSelector)` to the background thread and waits for its completion before yielding.\r\n\r\nThis generally defeats all the purpose of `GetFileInfoGenerator` so that we cannot really use it to push down the `FileInfo` items to whatever consumer \"on the fly\" (e.g. `FileSystemDatasetFactory` and `FileSystemDataset`, correspondingly).\r\n\r\nProvide a fair implementation so that it yields more than one time and allows to retrieve the data in chunks, so that the resulting `FileInfoGenerator` is usable for the purpose of streaming processing of data.\r\n\r\n\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "11h 20m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 40800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Provide an optimized`GetFileInfoGenerator` specialization for `LocalFileSystem`",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/comment/17575171",
                    "id": "17575171",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "+1. Specializing this method was the entire purpose of creating it!",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-08-04T09:38:37.903+0000",
                    "updated": "2022-08-04T09:38:37.903+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/comment/17581497",
                    "id": "17581497",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Issue resolved by pull request 13796\n[https://github.com/apache/arrow/pull/13796]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-08-18T19:17:06.793+0000",
                    "updated": "2022-08-18T19:17:06.793+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13475074/comment/17582079",
                    "id": "17582079",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I get a build error for localfs_benchmark.cc\r\n\r\n\u00a0\r\n\r\nhere's a MINOR PR if someone can review it: https://github.com/apache/arrow/pull/13932",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=octalene",
                        "name": "octalene",
                        "key": "octalene",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=octalene&avatarId=51083",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=octalene&avatarId=51083",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=octalene&avatarId=51083",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=octalene&avatarId=51083"
                        },
                        "displayName": "Aldrin Montana",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2022-08-19T23:28:27.765+0000",
                    "updated": "2022-08-19T23:28:27.765+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|z17gl4:",
        "customfield_12314139": null
    }
}