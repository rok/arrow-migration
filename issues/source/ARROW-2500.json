{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13154615",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615",
    "key": "ARROW-2500",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/2",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/critical.svg",
            "name": "Critical",
            "id": "2"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341352",
                "id": "12341352",
                "name": "0.8.0",
                "archived": false,
                "released": true,
                "releaseDate": "2017-12-18"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=bomeng",
            "name": "bomeng",
            "key": "bomeng",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bomeng&avatarId=25943",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bomeng&avatarId=25943",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bomeng&avatarId=25943",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bomeng&avatarId=25943"
            },
            "displayName": "Bo Meng",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328933",
                "id": "12328933",
                "name": "Java"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=elahrvivaz",
            "name": "elahrvivaz",
            "key": "elahrvivaz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Emilio Lahr-Vivaz",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=elahrvivaz",
            "name": "elahrvivaz",
            "key": "elahrvivaz",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
            },
            "displayName": "Emilio Lahr-Vivaz",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 11400,
            "total": 11400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2500/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 26,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99273",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "bomeng opened a new pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008\n \n \n   Fix the issue of getNullCount() does not return the correct result in certain cases. \r\n   \r\n   For example, validityBuffer is 0b10110, while valueCount=3, the null count should be 1, but currently it returns 0.\r\n   \r\n   Fix approach:\r\n   1. Based on the valueCount, modify the last byte by mask the remaining bits to be all 1's.\r\n   0b10110 will become 0b11111110\r\n   2. Count how many 1 in the byte by using bitCount()\r\n   3. Use 8 * sizeInBytes - count to get the total 0's\r\n   \r\n   Test: \r\n   Added 2 tests to the existing test classes;\r\n   Created 1 new file to purposely test BitVectorHelper.java, since it has some public static method and we may add more testes in the future.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-07T23:37:51.157+0000",
                    "updated": "2018-05-07T23:37:51.157+0000",
                    "started": "2018-05-07T23:37:51.157+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99273",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186815664\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -140,22 +140,18 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     }\n     int count = 0;\n     final int sizeInBytes = getValidityBufferSize(valueCount);\n+    int remainder = valueCount % 8;\n \n-    for (int i = 0; i < sizeInBytes; ++i) {\n-      final byte byteValue = validityBuffer.getByte(i);\n-      /* Java uses two's complement binary representation, hence 11111111_b which is -1\n-       * when converted to Int will have 32bits set to 1. Masking the MSB and then\n-       * adding it back solves the issue.\n-       */\n-      count += Integer.bitCount(byteValue & 0x7F) - (byteValue >> 7);\n+    for (int i = 0; i < sizeInBytes; i++) {\n+      byte byteValue = validityBuffer.getByte(i);\n+      if (i == sizeInBytes - 1 && remainder != 0) {\n+        // making the remaining bits all 1s\n+        byte mask = (byte)(0xFF << remainder);\n+        byteValue = (byte) (byteValue | mask);\n+      }\n+      count += Integer.bitCount(byteValue & 0xFF);\n \n Review comment:\n   This looks ok by me because it will cast up to an integer and only keep the 8 original bits, I do think we need better test coverage for this though\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.719+0000",
                    "updated": "2018-05-08T18:10:32.719+0000",
                    "started": "2018-05-08T18:10:32.719+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99658",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186816648\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/TestBitVectorHelper.java\n ##########\n @@ -0,0 +1,39 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.arrow.vector;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.junit.Test;\n+\n+import io.netty.buffer.ArrowBuf;\n+import io.netty.buffer.PooledByteBufAllocatorL;\n+\n+public class TestBitVectorHelper {\n+    @Test\n+    public void testGetNullCount() throws Exception {\n+        ArrowBuf validityBuffer = new ArrowBuf(\n+                null, null, new PooledByteBufAllocatorL().empty,\n+                null, null, 0, 3, true);\n+        validityBuffer.setByte(0, 22);\n \n Review comment:\n   could you add some comments on this test, since it is not straightforward that you have a value count of 3, but have bits set beyond that?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.721+0000",
                    "updated": "2018-05-08T18:10:32.721+0000",
                    "started": "2018-05-08T18:10:32.721+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99659",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99660",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186814860\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -140,22 +140,18 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     }\n     int count = 0;\n     final int sizeInBytes = getValidityBufferSize(valueCount);\n+    int remainder = valueCount % 8;\n \n Review comment:\n   nit: make this final to be consistent\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.722+0000",
                    "updated": "2018-05-08T18:10:32.722+0000",
                    "started": "2018-05-08T18:10:32.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99660",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186818192\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n \n Review comment:\n   use `isNull` method instead of `getObject`\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.723+0000",
                    "updated": "2018-05-08T18:10:32.723+0000",
                    "started": "2018-05-08T18:10:32.722+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99661",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99662",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186817389\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowFile.java\n ##########\n @@ -708,6 +711,56 @@ public void testWriteReadVarBin() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+    File file = new File(\"target/mytest_nulls_multibatch.arrow\");\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (FileOutputStream fileOutputStream = new FileOutputStream(file);\n+           VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowFileWriter writer = new ArrowFileWriter(root, new MapDictionaryProvider(), fileOutputStream.getChannel());) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n \n Review comment:\n   You should be able to put the body of this in BaseFileTest and then use the same thing for ArrowFileReader and ArrowStreamReader\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.729+0000",
                    "updated": "2018-05-08T18:10:32.729+0000",
                    "started": "2018-05-08T18:10:32.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99662",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186817820\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n+      assertEquals(read.getObject(1), Integer.valueOf(1));\n \n Review comment:\n   you can just use the `get` method that returns an integer\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.764+0000",
                    "updated": "2018-05-08T18:10:32.764+0000",
                    "started": "2018-05-08T18:10:32.763+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99663",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/99664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r186815073\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -140,22 +140,18 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     }\n     int count = 0;\n     final int sizeInBytes = getValidityBufferSize(valueCount);\n+    int remainder = valueCount % 8;\n \n-    for (int i = 0; i < sizeInBytes; ++i) {\n-      final byte byteValue = validityBuffer.getByte(i);\n-      /* Java uses two's complement binary representation, hence 11111111_b which is -1\n-       * when converted to Int will have 32bits set to 1. Masking the MSB and then\n-       * adding it back solves the issue.\n-       */\n-      count += Integer.bitCount(byteValue & 0x7F) - (byteValue >> 7);\n+    for (int i = 0; i < sizeInBytes; i++) {\n+      byte byteValue = validityBuffer.getByte(i);\n+      if (i == sizeInBytes - 1 && remainder != 0) {\n \n Review comment:\n   To make things optimal, how about removing this block from the loop and doing it after, if needed?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-08T18:10:32.765+0000",
                    "updated": "2018-05-08T18:10:32.765+0000",
                    "started": "2018-05-08T18:10:32.764+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "99664",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100215",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#issuecomment-387843375\n \n \n   LGTM pending CI, would like to check with @elahrvivaz @siddharthteotia @icexelloss for any other comments\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-09T19:06:08.479+0000",
                    "updated": "2018-05-09T19:06:08.479+0000",
                    "started": "2018-05-09T19:06:08.478+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100215",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100681",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "elahrvivaz commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187390827\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n+      assertEquals(read.getObject(1), Integer.valueOf(1));\n \n Review comment:\n   these were from my original test - we use getObject as we don't care about the runtime type of the value, and we need to wrap the primitive anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T16:53:59.727+0000",
                    "updated": "2018-05-10T16:53:59.727+0000",
                    "started": "2018-05-10T16:53:59.726+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100681",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100682",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "elahrvivaz commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187391139\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n \n Review comment:\n   this was also from my original test, we use getObject as if we use isNull it would just get checked a second time in getObject anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T16:55:10.466+0000",
                    "updated": "2018-05-10T16:55:10.466+0000",
                    "started": "2018-05-10T16:55:10.465+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100682",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100683",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "elahrvivaz commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187391139\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n \n Review comment:\n   this was also from my original test, we use `getObject` as if we use `isNull` it would just get checked a second time in `getObject` anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T16:55:27.213+0000",
                    "updated": "2018-05-10T16:55:27.213+0000",
                    "started": "2018-05-10T16:55:27.212+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100683",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "elahrvivaz commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187390827\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +99,56 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n+        writer.start();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setNull(3);\n+        vector.setSafe(4, 1);\n+        vector.setValueCount(5);\n+        root.setRowCount(5);\n+        writer.writeBatch();\n+\n+        vector.setNull(0);\n+        vector.setSafe(1, 1);\n+        vector.setSafe(2, 2);\n+        vector.setValueCount(3);\n+        root.setRowCount(3);\n+        writer.writeBatch();\n+      }\n+    }\n+\n+    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\n+\n+    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\n+      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\n+\n+      reader.loadNextBatch();\n+\n+      assertEquals(read.getValueCount(), 5);\n+      assertNull(read.getObject(0));\n+      assertEquals(read.getObject(1), Integer.valueOf(1));\n \n Review comment:\n   these were from my original test - we use `getObject` as we don't care about the runtime type of the value, and we need to wrap the primitive anyway.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T16:55:37.448+0000",
                    "updated": "2018-05-10T16:55:37.448+0000",
                    "started": "2018-05-10T16:55:37.448+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100684",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100714",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on issue #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#issuecomment-388131887\n \n \n   Thanks for testing @elahrvivaz!  I'll commit this later today if no more comments.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T17:52:49.177+0000",
                    "updated": "2018-05-10T17:52:49.177+0000",
                    "started": "2018-05-10T17:52:49.176+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100714",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100898",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187485403\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowFile.java\n ##########\n @@ -18,6 +18,8 @@\n \n package org.apache.arrow.vector.ipc;\n \n+import static org.junit.Assert.assertEquals;\n+\n \n Review comment:\n   I don't think this is used anymore\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:52.981+0000",
                    "updated": "2018-05-10T23:45:52.981+0000",
                    "started": "2018-05-10T23:45:52.980+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100898",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100899",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187485645\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowFile.java\n ##########\n @@ -26,23 +28,23 @@\n import java.io.IOException;\n import java.io.OutputStream;\n import java.util.ArrayList;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n import com.google.common.collect.ImmutableList;\n import com.google.common.collect.ImmutableMap;\n import com.google.common.collect.Lists;\n-\n \n Review comment:\n   nit: unrelated change\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:53.211+0000",
                    "updated": "2018-05-10T23:45:53.211+0000",
                    "started": "2018-05-10T23:45:53.210+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100899",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100900",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187486678\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowFile.java\n ##########\n @@ -708,6 +710,25 @@ public void testWriteReadVarBin() throws IOException {\n     }\n   }\n \n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+    File file = new File(\"target/mytest_nulls_multibatch.arrow\");\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (FileOutputStream fileOutputStream = new FileOutputStream(file);\n+           VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowFileWriter writer = new ArrowFileWriter(root, new MapDictionaryProvider(), fileOutputStream.getChannel());) {\n \n Review comment:\n   the second argument `provider` is usually null if there is no Dictionary being used\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:53.217+0000",
                    "updated": "2018-05-10T23:45:53.217+0000",
                    "started": "2018-05-10T23:45:53.217+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100900",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100901",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187486963\n \n \n\n ##########\n File path: java/vector/src/test/java/org/apache/arrow/vector/ipc/TestArrowStream.java\n ##########\n @@ -99,4 +98,24 @@ public void testReadWrite() throws IOException {\n       }\n     }\n   }\n+\n+  @Test\n+  public void testReadWriteMultipleBatches() throws IOException {\n+    ByteArrayOutputStream os = new ByteArrayOutputStream();\n+\n+    try (IntVector vector = new IntVector(\"foo\", allocator);) {\n+      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\n+      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\n+           ArrowStreamWriter writer = new ArrowStreamWriter(root, new DictionaryProvider.MapDictionaryProvider(), Channels.newChannel(os));) {\n \n Review comment:\n   Same thing here, `provider` can just be null and you can just put the output stream directly in the constructor like this and avoid importing Channels:\r\n   ```\r\n   ArrowStreamWriter writer = new ArrowStreamWriter(root, null, out)\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:53.280+0000",
                    "updated": "2018-05-10T23:45:53.280+0000",
                    "started": "2018-05-10T23:45:53.279+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100901",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100902",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187489144\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -140,22 +140,23 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     }\n     int count = 0;\n     final int sizeInBytes = getValidityBufferSize(valueCount);\n+    final int remainder = valueCount % 8;\n \n-    for (int i = 0; i < sizeInBytes; ++i) {\n-      final byte byteValue = validityBuffer.getByte(i);\n-      /* Java uses two's complement binary representation, hence 11111111_b which is -1\n-       * when converted to Int will have 32bits set to 1. Masking the MSB and then\n-       * adding it back solves the issue.\n-       */\n-      count += Integer.bitCount(byteValue & 0x7F) - (byteValue >> 7);\n+    for (int i = 0; i < sizeInBytes - 1; i++) {\n+      byte byteValue = validityBuffer.getByte(i);\n+      count += Integer.bitCount(byteValue & 0xFF);\n+    }\n+\n+    // handling with the last byte\n+    byte byteValue = validityBuffer.getByte(sizeInBytes - 1);\n+    if (remainder != 0) {\n+      // making the remaining bits all 1s if it is not fully filled\n+      byte mask = (byte)(0xFF << remainder);\n \n Review comment:\n   nit: space after (byte)\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:53.292+0000",
                    "updated": "2018-05-10T23:45:53.292+0000",
                    "started": "2018-05-10T23:45:53.292+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100902",
                    "issueId": "13154615"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/worklog/100903",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "BryanCutler commented on a change in pull request #2008: ARROW-2500: [Java] IPC Writers/readers are not always setting validity bits correctly\nURL: https://github.com/apache/arrow/pull/2008#discussion_r187489111\n \n \n\n ##########\n File path: java/vector/src/main/java/org/apache/arrow/vector/BitVectorHelper.java\n ##########\n @@ -140,22 +140,23 @@ public static int getNullCount(final ArrowBuf validityBuffer, final int valueCou\n     }\n     int count = 0;\n     final int sizeInBytes = getValidityBufferSize(valueCount);\n+    final int remainder = valueCount % 8;\n \n-    for (int i = 0; i < sizeInBytes; ++i) {\n-      final byte byteValue = validityBuffer.getByte(i);\n-      /* Java uses two's complement binary representation, hence 11111111_b which is -1\n-       * when converted to Int will have 32bits set to 1. Masking the MSB and then\n-       * adding it back solves the issue.\n-       */\n-      count += Integer.bitCount(byteValue & 0x7F) - (byteValue >> 7);\n+    for (int i = 0; i < sizeInBytes - 1; i++) {\n \n Review comment:\n   it's minor, but to be slightly more optimized maybe avoid the `- 1` in the loop condition and do something like:\r\n   ```\r\n   final int sizeInBytesMinus1 = sizeInBytes - 1;\r\n   for (int i = 0; i < sizeInBytesMinus1; ++i) {\r\n       ...\r\n   ```\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2018-05-10T23:45:53.306+0000",
                    "updated": "2018-05-10T23:45:53.306+0000",
                    "started": "2018-05-10T23:45:53.306+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "100903",
                    "issueId": "13154615"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/1",
            "id": "1",
            "description": "A problem which impairs or prevents the functions of the product.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21133&avatarType=issuetype",
            "name": "Bug",
            "subtask": false,
            "avatarId": 21133
        },
        "timespent": 11400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@303b9ecb[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@113458d7[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33073c3a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@c6286d[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@56452dce[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@386b53e1[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@32874e3a[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@3339d47[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ce7fbb2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@1ef15b94[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@168f20ee[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@9495edd[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 11400,
        "customfield_12312520": null,
        "customfield_12312521": "Fri May 11 17:05:00 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-05-11T17:05:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2500/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2018-04-23T21:00:04.000+0000",
        "updated": "2018-05-12T07:44:26.000+0000",
        "timeoriginalestimate": null,
        "description": "When writing multiple batches to a Stream/File Writer, the first validity bit can get garbled between writing and reading. I couldn't pinpoint the exact issue, but I was able to re-create it with a fairly simple unit test.\r\n\r\nin TestArrowStream.java:\r\n\r\n{code:java}\r\n  @Test\r\n  public void testReadWriteMultipleBatches() throws IOException {\r\n\r\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\r\n\r\n    try (IntVector vector = new IntVector(\"foo\", allocator);) {\r\n      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\r\n      try (VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\r\n           ArrowStreamWriter writer = new ArrowStreamWriter(root, new MapDictionaryProvider(), Channels.newChannel(os));) {\r\n        writer.start();\r\n\r\n        vector.setNull(0);\r\n        vector.setSafe(1, 1);\r\n        vector.setSafe(2, 2);\r\n        vector.setNull(3);\r\n        vector.setSafe(4, 1);\r\n        vector.setValueCount(5);\r\n        root.setRowCount(5);\r\n        writer.writeBatch();\r\n\r\n        vector.setNull(0);\r\n        vector.setSafe(1, 1);\r\n        vector.setSafe(2, 2);\r\n        vector.setValueCount(3);\r\n        root.setRowCount(3);\r\n        writer.writeBatch();\r\n      }\r\n    }\r\n\r\n    ByteArrayInputStream in = new ByteArrayInputStream(os.toByteArray());\r\n\r\n    try (ArrowStreamReader reader = new ArrowStreamReader(in, allocator);) {\r\n      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\r\n\r\n      reader.loadNextBatch();\r\n\r\n      assertEquals(read.getValueCount(), 5);\r\n      assertNull(read.getObject(0));\r\n      assertEquals(read.getObject(1), Integer.valueOf(1));\r\n      assertEquals(read.getObject(2), Integer.valueOf(2));\r\n      assertNull(read.getObject(3));\r\n      assertEquals(read.getObject(4), Integer.valueOf(1));\r\n\r\n      reader.loadNextBatch();\r\n\r\n      assertEquals(read.getValueCount(), 3);\r\n      assertNull(read.getObject(0));\r\n      assertEquals(read.getObject(1), Integer.valueOf(1));\r\n      assertEquals(read.getObject(2), Integer.valueOf(2));\r\n    }\r\n  }\r\n{code}\r\n\r\nin TestArrowFile.java:\r\n\r\n{code}\r\n @Test\r\n  public void testReadWriteMultipleBatches() throws IOException {\r\n    File file = new File(\"target/mytest_nulls_multibatch.arrow\");\r\n\r\n    try (IntVector vector = new IntVector(\"foo\", allocator);) {\r\n      Schema schema = new Schema(Collections.singletonList(vector.getField()), null);\r\n      try (FileOutputStream fileOutputStream = new FileOutputStream(file);\r\n           VectorSchemaRoot root = new VectorSchemaRoot(schema, Collections.singletonList((FieldVector) vector), vector.getValueCount());\r\n           ArrowFileWriter writer = new ArrowFileWriter(root, new MapDictionaryProvider(), fileOutputStream.getChannel());) {\r\n        writer.start();\r\n\r\n        vector.setNull(0);\r\n        vector.setSafe(1, 1);\r\n        vector.setSafe(2, 2);\r\n        vector.setNull(3);\r\n        vector.setSafe(4, 1);\r\n        vector.setValueCount(5);\r\n        root.setRowCount(5);\r\n        writer.writeBatch();\r\n\r\n        vector.setNull(0);\r\n        vector.setSafe(1, 1);\r\n        vector.setSafe(2, 2);\r\n        vector.setValueCount(3);\r\n        root.setRowCount(3);\r\n        writer.writeBatch();\r\n      }\r\n    }\r\n\r\n    try (FileInputStream fileInputStream = new FileInputStream(file);\r\n         ArrowFileReader reader = new ArrowFileReader(fileInputStream.getChannel(), allocator);) {\r\n      IntVector read = (IntVector) reader.getVectorSchemaRoot().getFieldVectors().get(0);\r\n\r\n      reader.loadNextBatch();\r\n\r\n      assertEquals(read.getValueCount(), 5);\r\n      assertNull(read.getObject(0));\r\n      assertEquals(read.getObject(1), Integer.valueOf(1));\r\n      assertEquals(read.getObject(2), Integer.valueOf(2));\r\n      assertNull(read.getObject(3));\r\n      assertEquals(read.getObject(4), Integer.valueOf(1));\r\n\r\n      reader.loadNextBatch();\r\n\r\n      assertEquals(read.getValueCount(), 3);\r\n      assertNull(read.getObject(0));\r\n      assertEquals(read.getObject(1), Integer.valueOf(1));\r\n      assertEquals(read.getObject(2), Integer.valueOf(2));\r\n    }\r\n  }\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 11400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Java] IPC Writers/readers are not always setting validity bits correctly",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/comment/16449781",
                    "id": "16449781",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=elahrvivaz",
                        "name": "elahrvivaz",
                        "key": "elahrvivaz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Emilio Lahr-Vivaz",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Note: this didn't seem to occur in 0.6.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=elahrvivaz",
                        "name": "elahrvivaz",
                        "key": "elahrvivaz",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "Emilio Lahr-Vivaz",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-04-24T12:50:51.302+0000",
                    "updated": "2018-04-24T12:50:51.302+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/comment/16466427",
                    "id": "16466427",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bomeng",
                        "name": "bomeng",
                        "key": "bomeng",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bomeng&avatarId=25943",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bomeng&avatarId=25943",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bomeng&avatarId=25943",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bomeng&avatarId=25943"
                        },
                        "displayName": "Bo Meng",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "I will be working on this.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bomeng",
                        "name": "bomeng",
                        "key": "bomeng",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bomeng&avatarId=25943",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bomeng&avatarId=25943",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bomeng&avatarId=25943",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bomeng&avatarId=25943"
                        },
                        "displayName": "Bo Meng",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-05-07T20:19:49.291+0000",
                    "updated": "2018-05-07T20:19:49.291+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13154615/comment/16472279",
                    "id": "16472279",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "body": "Issue resolved by pull request 2008\n[https://github.com/apache/arrow/pull/2008]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=bryanc",
                        "name": "bryanc",
                        "key": "bryanc",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=bryanc&avatarId=23479",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=bryanc&avatarId=23479",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=bryanc&avatarId=23479",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=bryanc&avatarId=23479"
                        },
                        "displayName": "Bryan Cutler",
                        "active": true,
                        "timeZone": "America/Los_Angeles"
                    },
                    "created": "2018-05-11T17:05:00.526+0000",
                    "updated": "2018-05-11T17:05:00.526+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3sx6v:",
        "customfield_12314139": null
    }
}