{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13348093",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093",
    "key": "ARROW-11045",
    "fields": {
        "fixVersions": [],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/2",
            "id": "2",
            "description": "The problem described is an issue which will never be fixed.",
            "name": "Won't Fix"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/6",
            "description": "The issue is considered finished, the resolution is correct. Issues which are not closed can be reopened.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/closed.png",
            "name": "Closed",
            "id": "6",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=jorgecarleitao",
            "name": "jorgecarleitao",
            "key": "jorgecarleitao",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=jorgecarleitao&avatarId=43827",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=jorgecarleitao&avatarId=43827",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=jorgecarleitao&avatarId=43827",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=jorgecarleitao&avatarId=43827"
            },
            "displayName": "Jorge Leit\u00e3o",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 13800,
            "total": 13800,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11045/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 23,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/528744",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #9027:\nURL: https://github.com/apache/arrow/pull/9027\n\n\n   This PR addresses a performance issue in how we allocate and reallocate the `MutableBuffer` by migrating the relevant parts of rust's std `alloc` lib into this crate.\r\n   \r\n   # Problem\r\n   \r\n   The following is the result of 4 runs:\r\n   \r\n   mutable                 time:   [929.26 us 931.88 us 935.42 us]                    \r\n   mutable prepared        time:   [1.0682 ms 1.0693 ms 1.0709 ms]                              \r\n   from_slice              time:   [4.4857 ms 4.5043 ms 4.5247 ms]                        \r\n   from_slice prepared     time:   [1.4358 ms 1.4406 ms 1.4467 ms]                                 \r\n   \r\n   1. start with an empty `MutableBuffer` and grow it (`realloc + memcopy`)\r\n   2. start with a mutable with the correct capacity and grow (i.e. no `realloc + memcopy`)\r\n   3. do the same as 1. with a `Vec<u8>` (`realloc + memcopy`) and at the end of all use `Buffer::from` (a `memcopy`)\r\n   4. same as 2 and at the end of all use `Buffer::from` (`memcopy to vec + memcopy to Buffer`)\r\n   \r\n   The fact that there is no difference between 1 and 2 but a 3.5x difference between 3 and 4 shows that we are doing something wrong. The fact that 1 is as fast as 2 shows that we are doing something wrong.\r\n   \r\n   # This PR\r\n   \r\n   This PR rewrites our current allocator code to a code very close to the code used by `std` allocator. The core reason we do this is that we benefit from cache-line aligned allocated buffers [ref](https://github.com/apache/arrow/pull/8796#issuecomment-748470192), but Rust's custom allocator's API is `unstable` (and thus only available in nightly).\r\n   \r\n   The code in this PR is not very complex and I assume that it was already well though through from rust's std team. I did the necessary modifications for our use-case:\r\n   * always allocate aligned\r\n   * always allocate in chunks of 64 bytes\r\n   * always allocate initialized to zero (`std::alloc::alloc_zeroed`)\r\n   \r\n   Benchmarks for `take`:\r\n   \r\n   ```bash\r\n   git checkout master\r\n   cargo bench --bench take_kernels --features simd\r\n   git checkout alloc\r\n   cargo bench --bench take_kernels --features simd\r\n   ```\r\n   \r\n   |  benchmark | variation (%) |\r\n   |-------------- | -------------- | \r\n   | take i32 nulls 1024 | 5.9 | \r\n   | take i32 1024 | 4.4 | \r\n   | take i32 512 | 2.1 | \r\n   | take str 512 | 2.1 | \r\n   | take i32 nulls 512 | 1.6 | \r\n   | take str 1024 | 1.0 | \r\n   | take bool nulls 1024 | -1.5 | \r\n   | take bool nulls 512 | -2.4 | \r\n   | take bool 512 | -6.8 | \r\n   | take bool 1024 | -8.3 | \r\n   | take str null values 1024 | -10.6 | \r\n   | take str null values null indices 1024 | -18.9 | \r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-28T09:59:02.836+0000",
                    "updated": "2020-12-28T09:59:02.836+0000",
                    "started": "2020-12-28T09:59:02.836+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528744",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/528745",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9027:\nURL: https://github.com/apache/arrow/pull/9027#issuecomment-751658624\n\n\n   https://issues.apache.org/jira/browse/ARROW-11045\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-28T10:04:11.923+0000",
                    "updated": "2020-12-28T10:04:11.923+0000",
                    "started": "2020-12-28T10:04:11.922+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528745",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/528809",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao closed pull request #9027:\nURL: https://github.com/apache/arrow/pull/9027\n\n\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-28T14:35:27.998+0000",
                    "updated": "2020-12-28T14:35:27.998+0000",
                    "started": "2020-12-28T14:35:27.998+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "528809",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529445",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao opened a new pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044\n\n\n   This PR addresses a performance issue in how we allocate and reallocate the `MutableBuffer`.\r\n   \r\n   # Problem\r\n   \r\n   See #9032\r\n   \r\n   # This PR\r\n   \r\n   This PR changes `MutableBuffer::reserve` to call `std::alloc::alloc` instead of `std::alloc::alloc_zeroed`, which improves performance when building buffers with unknown sizes (such as strings and nested types).\r\n   \r\n   This required changing some calls of `MutableBuffer` that assumed a zero initialized buffer even when `reserve` was used.\r\n   It also changed `reserve`'s signature to `reserve(additional)` instead of `reserve(new_len)`, which is the notation used throughout Rust's std library.\r\n   \r\n   This is a draft as it is built on top of 2 PRs.\r\n   \r\n   ```\r\n   critcmp master-simd-e1b38cdaa4f2a7d35e2e576463e12b38875f29f3 alloc2-simd-88fc0ae819c24239ac9363fa462f9c6e1ddfd9fc -t 10\r\n   ```\r\n   \r\n   ```\r\n   group                                 alloc2-simd-88fc0ae819c24239ac9363fa462f9c6e1ddfd9fc    master-simd-e1b38cdaa4f2a7d35e2e576463e12b38875f29f3\r\n   -----                                 ----------------------------------------------------    ----------------------------------------------------\r\n   add 512                               1.00   549.1\u00b117.26ns        ? B/sec                     1.14  624.4\u00b1118.72ns        ? B/sec\r\n   buffer_bit_ops or                     1.00    369.3\u00b17.51ns        ? B/sec                     1.16   427.1\u00b120.25ns        ? B/sec\r\n   cast float32 to int32 512             1.00      3.3\u00b10.09\u00b5s        ? B/sec                     1.21      4.0\u00b10.09\u00b5s        ? B/sec\r\n   cast float64 to float32 512           1.00      3.0\u00b10.06\u00b5s        ? B/sec                     1.24      3.7\u00b10.11\u00b5s        ? B/sec\r\n   cast float64 to uint64 512            1.00      3.6\u00b10.33\u00b5s        ? B/sec                     1.22      4.4\u00b10.29\u00b5s        ? B/sec\r\n   cast int32 to float32 512             1.00      2.9\u00b10.10\u00b5s        ? B/sec                     1.15      3.4\u00b10.09\u00b5s        ? B/sec\r\n   cast int32 to float64 512             1.00      2.9\u00b10.06\u00b5s        ? B/sec                     1.14      3.3\u00b10.06\u00b5s        ? B/sec\r\n   cast int32 to uint32 512              1.00      4.0\u00b10.09\u00b5s        ? B/sec                     1.23      4.9\u00b10.12\u00b5s        ? B/sec\r\n   concat str 1024                       1.00      8.4\u00b10.26\u00b5s        ? B/sec                     1.14      9.6\u00b10.22\u00b5s        ? B/sec\r\n   equal_nulls_512                       1.00      3.3\u00b10.07\u00b5s        ? B/sec                     1.22      4.0\u00b10.10\u00b5s        ? B/sec\r\n   filter context u8 high selectivity    1.00      3.7\u00b10.09\u00b5s        ? B/sec                     1.27      4.6\u00b10.13\u00b5s        ? B/sec\r\n   filter u8 high selectivity            1.00     10.8\u00b10.47\u00b5s        ? B/sec                     1.10     11.9\u00b10.49\u00b5s        ? B/sec\r\n   like_utf8 scalar equals               1.00    149.9\u00b16.36\u00b5s        ? B/sec                     1.12    167.3\u00b13.45\u00b5s        ? B/sec\r\n   like_utf8 scalar starts with          1.00   338.2\u00b112.26\u00b5s        ? B/sec                     1.15    388.4\u00b17.62\u00b5s        ? B/sec\r\n   min string 512                        1.13      6.0\u00b10.17\u00b5s        ? B/sec                     1.00      5.3\u00b10.09\u00b5s        ? B/sec\r\n   nlike_utf8 scalar starts with         1.00   367.8\u00b139.16\u00b5s        ? B/sec                     1.16    425.4\u00b19.38\u00b5s        ? B/sec\r\n   subtract 512                          1.00   567.9\u00b110.77ns        ? B/sec                     1.21  686.0\u00b1209.80ns        ? B/sec\r\n   sum 512                               1.32     67.8\u00b10.59ns        ? B/sec                     1.00     51.3\u00b10.70ns        ? B/sec\r\n   take str 1024                         1.19      6.1\u00b10.10\u00b5s        ? B/sec                     1.00      5.1\u00b10.03\u00b5s        ? B/sec\r\n   take str 512                          1.12      3.9\u00b10.09\u00b5s        ? B/sec                     1.00      3.4\u00b10.07\u00b5s        ? B/sec\r\n   take str null indices 1024            1.18      6.1\u00b10.16\u00b5s        ? B/sec                     1.00      5.2\u00b10.11\u00b5s        ? B/sec\r\n   take str null indices 512             1.12      3.9\u00b10.09\u00b5s        ? B/sec                     1.00      3.5\u00b10.03\u00b5s        ? B/sec\r\n   take str null values 1024             1.19      6.1\u00b10.51\u00b5s        ? B/sec                     1.00      5.2\u00b10.11\u00b5s        ? B/sec\r\n   ```\r\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T10:07:46.869+0000",
                    "updated": "2020-12-30T10:07:46.869+0000",
                    "started": "2020-12-30T10:07:46.869+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529445",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529449",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-752403701\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T10:16:06.228+0000",
                    "updated": "2020-12-30T10:16:06.228+0000",
                    "started": "2020-12-30T10:16:06.227+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529449",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529473",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "Dandandan commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550162644\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -180,65 +187,62 @@ pub unsafe fn free_aligned(ptr: *mut u8, size: usize) {\n ///\n /// * new_size, when rounded up to the nearest multiple of [ALIGNMENT], must not overflow (i.e.,\n /// the rounded value must be less than usize::MAX).\n-pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, new_size: usize) -> *mut u8 {\n-    if ptr == BYPASS_PTR.as_ptr() {\n+pub unsafe fn reallocate(\n+    ptr: NonNull<u8>,\n+    old_size: usize,\n+    new_size: usize,\n+) -> NonNull<u8> {\n+    if ptr == BYPASS_PTR {\n         return allocate_aligned(new_size);\n     }\n \n     if new_size == 0 {\n         free_aligned(ptr, old_size);\n-        return BYPASS_PTR.as_ptr();\n+        return BYPASS_PTR;\n     }\n \n     ALLOCATIONS.fetch_add(\n         new_size as isize - old_size as isize,\n         std::sync::atomic::Ordering::SeqCst,\n     );\n-    let new_ptr = std::alloc::realloc(\n-        ptr,\n+    let raw_ptr = std::alloc::realloc(\n+        ptr.as_ptr(),\n         Layout::from_size_align_unchecked(old_size, ALIGNMENT),\n         new_size,\n     );\n-\n-    if !new_ptr.is_null() && new_size > old_size {\n-        new_ptr.add(old_size).write_bytes(0, new_size - old_size);\n+    let ptr = NonNull::new(raw_ptr).unwrap_or_else(|| {\n+        handle_alloc_error(Layout::from_size_align_unchecked(new_size, ALIGNMENT))\n+    });\n+\n+    if new_size > old_size {\n+        ptr.as_ptr()\n+            .add(old_size)\n+            .write_bytes(0, new_size - old_size);\n\nReview comment:\n       Shouldn't we be able to remove initializing with 0 here as well?\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T11:31:58.525+0000",
                    "updated": "2020-12-30T11:31:58.525+0000",
                    "started": "2020-12-30T11:31:58.525+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529473",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529483",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550168432\n\n\n\n##########\nFile path: rust/arrow/src/memory.rs\n##########\n@@ -180,65 +187,62 @@ pub unsafe fn free_aligned(ptr: *mut u8, size: usize) {\n ///\n /// * new_size, when rounded up to the nearest multiple of [ALIGNMENT], must not overflow (i.e.,\n /// the rounded value must be less than usize::MAX).\n-pub unsafe fn reallocate(ptr: *mut u8, old_size: usize, new_size: usize) -> *mut u8 {\n-    if ptr == BYPASS_PTR.as_ptr() {\n+pub unsafe fn reallocate(\n+    ptr: NonNull<u8>,\n+    old_size: usize,\n+    new_size: usize,\n+) -> NonNull<u8> {\n+    if ptr == BYPASS_PTR {\n         return allocate_aligned(new_size);\n     }\n \n     if new_size == 0 {\n         free_aligned(ptr, old_size);\n-        return BYPASS_PTR.as_ptr();\n+        return BYPASS_PTR;\n     }\n \n     ALLOCATIONS.fetch_add(\n         new_size as isize - old_size as isize,\n         std::sync::atomic::Ordering::SeqCst,\n     );\n-    let new_ptr = std::alloc::realloc(\n-        ptr,\n+    let raw_ptr = std::alloc::realloc(\n+        ptr.as_ptr(),\n         Layout::from_size_align_unchecked(old_size, ALIGNMENT),\n         new_size,\n     );\n-\n-    if !new_ptr.is_null() && new_size > old_size {\n-        new_ptr.add(old_size).write_bytes(0, new_size - old_size);\n+    let ptr = NonNull::new(raw_ptr).unwrap_or_else(|| {\n+        handle_alloc_error(Layout::from_size_align_unchecked(new_size, ALIGNMENT))\n+    });\n+\n+    if new_size > old_size {\n+        ptr.as_ptr()\n+            .add(old_size)\n+            .write_bytes(0, new_size - old_size);\n\nReview comment:\n       Good finding. I removed it and added it back in one of the rebases \ud83e\udd26\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2020-12-30T11:53:40.361+0000",
                    "updated": "2020-12-30T11:53:40.361+0000",
                    "started": "2020-12-30T11:53:40.361+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529483",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529938",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-752403701\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T06:47:03.161+0000",
                    "updated": "2021-01-01T06:47:03.161+0000",
                    "started": "2021-01-01T06:47:03.160+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529938",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/529946",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-753276971\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-01T07:18:47.630+0000",
                    "updated": "2021-01-01T07:18:47.630+0000",
                    "started": "2021-01-01T07:18:47.630+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "529946",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530140",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-753442623\n\n\n   @nevi-me , there is a failing test in parquet that I am unable to fix. I think that we may be creating bitmap buffers that are too large.\r\n   \r\n   My current hypothesis is that the buffer `old_bitmap` at `consume_bitmap_buffer` is not being resized in the same way the other buffer in `consume_rep_levels` is, which is causing it to be too large. Do you agree with this (before I proceed to patch it)?\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T07:25:16.338+0000",
                    "updated": "2021-01-02T07:25:16.338+0000",
                    "started": "2021-01-02T07:25:16.338+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530140",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530141",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] removed a comment on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-753276971\n\n\n   <!--\n     Licensed to the Apache Software Foundation (ASF) under one\n     or more contributor license agreements.  See the NOTICE file\n     distributed with this work for additional information\n     regarding copyright ownership.  The ASF licenses this file\n     to you under the Apache License, Version 2.0 (the\n     \"License\"); you may not use this file except in compliance\n     with the License.  You may obtain a copy of the License at\n   \n       http://www.apache.org/licenses/LICENSE-2.0\n   \n     Unless required by applicable law or agreed to in writing,\n     software distributed under the License is distributed on an\n     \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n     KIND, either express or implied.  See the License for the\n     specific language governing permissions and limitations\n     under the License.\n   -->\n   \n   Thanks for opening a pull request!\n   \n   Could you open an issue for this pull request on JIRA?\n   https://issues.apache.org/jira/browse/ARROW\n   \n   Then could you also rename pull request title in the following format?\n   \n       ARROW-${JIRA_ID}: [${COMPONENT}] ${SUMMARY}\n   \n   See also:\n   \n     * [Other pull requests](https://github.com/apache/arrow/pulls/)\n     * [Contribution Guidelines - How to contribute patches](https://arrow.apache.org/docs/developers/contributing.html#how-to-contribute-patches)\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T07:25:29.239+0000",
                    "updated": "2021-01-02T07:25:29.239+0000",
                    "started": "2021-01-02T07:25:29.239+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530141",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530180",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "codecov-io commented on pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#issuecomment-753464089\n\n\n   # [Codecov](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=h1) Report\n   > Merging [#9044](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=desc) (ff3efa0) into [master](https://codecov.io/gh/apache/arrow/commit/eb17687510e8388cf6e19620d72b03a80cf151de?el=desc) (eb17687) will **decrease** coverage by `0.00%`.\n   > The diff coverage is `93.51%`.\n   \n   [![Impacted file tree graph](https://codecov.io/gh/apache/arrow/pull/9044/graphs/tree.svg?width=650&height=150&src=pr&token=LpTCFbqVT1)](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=tree)\n   \n   ```diff\n   @@            Coverage Diff             @@\n   ##           master    #9044      +/-   ##\n   ==========================================\n   - Coverage   82.57%   82.56%   -0.01%     \n   ==========================================\n     Files         203      203              \n     Lines       50036    49875     -161     \n   ==========================================\n   - Hits        41316    41180     -136     \n   + Misses       8720     8695      -25     \n   ```\n   \n   \n   | [Impacted Files](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=tree) | Coverage \u0394 | |\n   |---|---|---|\n   | [rust/arrow/src/array/array\\_list.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfbGlzdC5ycw==) | `92.72% <\u00f8> (-0.38%)` | :arrow_down: |\n   | [rust/arrow/src/bytes.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnl0ZXMucnM=) | `53.12% <\u00f8> (-5.21%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/aggregate.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2FnZ3JlZ2F0ZS5ycw==) | `74.93% <\u00f8> (-0.07%)` | :arrow_down: |\n   | [rust/arrow/src/compute/kernels/comparison.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvY29tcHV0ZS9rZXJuZWxzL2NvbXBhcmlzb24ucnM=) | `95.91% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/datatypes.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvZGF0YXR5cGVzLnJz) | `75.02% <\u00f8> (\u00f8)` | |\n   | [rust/arrow/src/array/builder.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYnVpbGRlci5ycw==) | `85.42% <86.84%> (+1.42%)` | :arrow_up: |\n   | [rust/arrow/src/buffer.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYnVmZmVyLnJz) | `97.38% <94.87%> (-0.84%)` | :arrow_down: |\n   | [rust/arrow/src/array/array\\_primitive.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvYXJyYXlfcHJpbWl0aXZlLnJz) | `92.28% <100.00%> (-0.04%)` | :arrow_down: |\n   | [rust/arrow/src/array/raw\\_pointer.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvcmF3X3BvaW50ZXIucnM=) | `100.00% <100.00%> (\u00f8)` | |\n   | [rust/arrow/src/array/transform/list.rs](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree#diff-cnVzdC9hcnJvdy9zcmMvYXJyYXkvdHJhbnNmb3JtL2xpc3QucnM=) | `83.33% <100.00%> (-0.54%)` | :arrow_down: |\n   | ... and [15 more](https://codecov.io/gh/apache/arrow/pull/9044/diff?src=pr&el=tree-more) | |\n   \n   ------\n   \n   [Continue to review full report at Codecov](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=continue).\n   > **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n   > `\u0394 = absolute <relative> (impact)`, `\u00f8 = not affected`, `? = missing data`\n   > Powered by [Codecov](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=footer). Last update [eb17687...ff3efa0](https://codecov.io/gh/apache/arrow/pull/9044?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n   \n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T11:46:35.443+0000",
                    "updated": "2021-01-02T11:46:35.443+0000",
                    "started": "2021-01-02T11:46:35.443+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530180",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530235",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550906779\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       Is there any reason to change the API in this PR? don't see how it could be related to the performance issue.\r\n   Also better to split it to make PR easier to review. We also need to update the doc.\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -774,16 +756,16 @@ impl MutableBuffer {\n     /// `new_len` will be zeroed out.\n     ///\n     /// If `new_len` is less than `len`, the buffer will be truncated.\n-    pub fn resize(&mut self, new_len: usize) {\n+    pub fn resize(&mut self, new_len: usize, value: u8) {\n\nReview comment:\n       we could have another method with `value` = 0 since this seems to be the dominate use case (it might enable future optimizations for the special case as well).\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T18:21:13.091+0000",
                    "updated": "2021-01-02T18:21:13.091+0000",
                    "started": "2021-01-02T18:21:13.091+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530235",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530240",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550908549\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       I agree that it makes it more difficult. The signature is related to performance, though:\r\n   \r\n   It was difficult to reason with `reserve(new_len)` when `Vec::reserve` and `RawVec::reserve` uses `additional` (and I was basing this PR on that). This PR fixes a bug in one `Builder` that was calling `reserve(1)` in `append`, when it should be calling `reserve(self.len + 1)`. I also spent 4hs tracking a bug because of this difference (I was using `reserve(additional)` when its signature was `reserve(new_len)`.\r\n   \r\n   I can try to split that to another PR, though. IMO this PR will still need to be based on that PR.\r\n   \n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T18:38:29.983+0000",
                    "updated": "2021-01-02T18:38:29.983+0000",
                    "started": "2021-01-02T18:38:29.982+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530240",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530242",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550909617\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -774,16 +756,16 @@ impl MutableBuffer {\n     /// `new_len` will be zeroed out.\n     ///\n     /// If `new_len` is less than `len`, the buffer will be truncated.\n-    pub fn resize(&mut self, new_len: usize) {\n+    pub fn resize(&mut self, new_len: usize, value: u8) {\n\nReview comment:\n       I based this signature on `Vec::resize`. I.e. I am assuming here that we use `MutableBuffer` as a special `Vec<u8>` that uses our custom allocator, and offer users an API that they are used to (`Vec`).\r\n   \r\n   The main use-case for `value: 255u8` is when we want to allocate and grow a set bitmap to later unset bits. We did not offer that before, which is the reason `MutableArrayData` does not do that (even though is most likely more efficient for many use-cases).\r\n   \r\n   Note that even though rust `std::RawVec` offers a `with_capacity_zeroed`, `std::Vec` does not expose that as a public API: `resize` and `resize_with` are the public APIs to resize a vec, and none of them uses `std::alloc::alloc_zeroed`, i.e. they also just call `std::ptr::write_bytes`.\r\n   \r\n   I agree with you that `resize(len, 0)` can potentially be optimized when the mutable buffer has zero capacity by calling `std::alloc::alloc_zeroed` instead of `std::ptr::write_bytes`.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T18:51:52.299+0000",
                    "updated": "2021-01-02T18:51:52.299+0000",
                    "started": "2021-01-02T18:51:52.299+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530242",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/530252",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r550913080\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       I think originally we referred [C++ impl](https://github.com/apache/arrow/blob/master/cpp/src/arrow/buffer.h#L436) for the signature design to make it consistent. Since `buffer` module is public, we'll need to be careful when making any breaking change on API.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-02T19:31:07.698+0000",
                    "updated": "2021-01-02T19:31:07.698+0000",
                    "started": "2021-01-02T19:31:07.698+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "530252",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/533466",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r554457330\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       Yap, and I think it was a good decision back then, when the goal was to port C++ code to Rust. I understand your concern. \r\n   \r\n   However, IMO we should not keep using C++-motivated APIs because it was historically like that. `additional` is the standard in virtually every container in Rust (`HashMap`, `Vec`, `tokio::bytes::Bytes`). IMO this change will need to be made at some point, and delaying it will only cause more pain in the future.\r\n   \r\n   In this particular instance, it was motivated by an already existing confusion on our own code base, which IMO evidences that rust developers expect `additional`. Most people that use this API are probably passing `additional` to it already.\r\n   \r\n   Regardless, we are bumping the major version, so there is already no expectation of backward compatibility as far as cargo and semver is concerned. My goal here is to make `MutableBuffer` as close as possible to `Vec` so that people can use them without even thinking that they are using a special allocation.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-09T18:28:11.731+0000",
                    "updated": "2021-01-09T18:28:11.731+0000",
                    "started": "2021-01-09T18:28:11.731+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533466",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/533468",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r554458285\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       Thanks, if we're going to bump the major version then I'm fine with the compatibility issue. I don't have strong opinion on this so either is fine to me. IMO a good documentation should be suffice for developers to understand what the method does.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-09T18:37:33.462+0000",
                    "updated": "2021-01-09T18:37:33.462+0000",
                    "started": "2021-01-09T18:37:33.462+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533468",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/533623",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "sunchao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r554458285\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       Thanks, if we're going to bump the major version then I'm fine with the compatibility issue. I don't have strong opinion on this so either is fine to me. IMO a good documentation should be suffice for developers to understand what the method does.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-10T04:02:48.362+0000",
                    "updated": "2021-01-10T04:02:48.362+0000",
                    "started": "2021-01-10T04:02:48.362+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533623",
                    "issueId": "13348093"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13348093/worklog/533641",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "jorgecarleitao commented on a change in pull request #9044:\nURL: https://github.com/apache/arrow/pull/9044#discussion_r554457330\n\n\n\n##########\nFile path: rust/arrow/src/buffer.rs\n##########\n@@ -756,15 +738,15 @@ impl MutableBuffer {\n     /// also ensure the new capacity will be a multiple of 64 bytes.\n     ///\n     /// Returns the new capacity for this buffer.\n-    pub fn reserve(&mut self, capacity: usize) -> usize {\n-        if capacity > self.capacity {\n-            let new_capacity = bit_util::round_upto_multiple_of_64(capacity);\n-            let new_capacity = cmp::max(new_capacity, self.capacity * 2);\n+    pub fn reserve(&mut self, additional: usize) {\n\nReview comment:\n       Yap, and I think it was a good decision back then, when the goal was to port C++ code to Rust. I understand your concern. \r\n   \r\n   However, IMO we should not keep using C++-motivated APIs because it was historically like that. `additional` is the standard in virtually every container in Rust (`HashMap`, `Vec`, `tokio::bytes::Bytes`). IMO this change will need to be made at some point, and delaying it will only cause more pain in the future.\r\n   \r\n   In this particular instance, it was motivated by an already existing confusion on our own code base, which IMO evidences that rust developers expect `additional`. Most people that use this API are probably passing `additional` to it already.\r\n   \r\n   Regardless, we are bumping the major version, so there is already no expectation of backward compatibility as far as cargo and semver is concerned. My goal here is to make `MutableBuffer` as close as possible to `Vec` so that people can use them without even thinking that they are using a special allocation.\n\n\n\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on to GitHub and use the\nURL above to go to the specific comment.\n\nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "created": "2021-01-10T04:04:51.874+0000",
                    "updated": "2021-01-10T04:04:51.874+0000",
                    "started": "2021-01-10T04:04:51.873+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "533641",
                    "issueId": "13348093"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 13800,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@53382a7d[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b133d2[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@1648bd9[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@f451784[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6ce068f2[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1607e073[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33989b29[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@14c643e9[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b0e1e7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@52236d11[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@2515f5af[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@3ea23ef[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 13800,
        "customfield_12312520": null,
        "customfield_12312521": "2020-12-28 09:12:54.0",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2021-07-19T19:35:59.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-11045/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2020-12-28T09:12:54.000+0000",
        "updated": "2021-07-19T19:35:59.000+0000",
        "timeoriginalestimate": null,
        "description": null,
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "3h 50m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 13800
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Rust] Improve performance allocator",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [],
            "maxResults": 0,
            "total": 0,
            "startAt": 0
        },
        "customfield_12311820": "0|z0lvao:",
        "customfield_12314139": null
    }
}