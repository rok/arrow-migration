{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13472993",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993",
    "key": "ARROW-17190",
    "fields": {
        "parent": {
            "id": "13472876",
            "key": "ARROW-17183",
            "self": "https://issues.apache.org/jira/rest/api/2/issue/13472876",
            "fields": {
                "summary": "[C++] Adding ExecNode with Sort and Fetch capability",
                "status": {
                    "self": "https://issues.apache.org/jira/rest/api/2/status/1",
                    "description": "The issue is open and ready for the assignee to start work on it.",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/open.png",
                    "name": "Open",
                    "id": "1",
                    "statusCategory": {
                        "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/2",
                        "id": 2,
                        "key": "new",
                        "colorName": "blue-gray",
                        "name": "To Do"
                    }
                },
                "priority": {
                    "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
                    "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
                    "name": "Major",
                    "id": "3"
                },
                "issuetype": {
                    "self": "https://issues.apache.org/jira/rest/api/2/issuetype/2",
                    "id": "2",
                    "description": "A new feature of the product, which has yet to be developed.",
                    "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21141&avatarType=issuetype",
                    "name": "New Feature",
                    "subtask": false,
                    "avatarId": 21141
                }
            }
        },
        "fixVersions": [],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
            "name": "vibhatha",
            "key": "vibhatha",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
            },
            "displayName": "Vibhatha Lakmal Abeykoon",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "aggregateprogress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 14400,
            "total": 14400,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17190/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 24,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/794742",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha opened a new pull request, #13700:\nURL: https://github.com/apache/arrow/pull/13700\n\n   This PR includes an initial version of the Fetch node. The objective of the PR is explained in detail [here](https://issues.apache.org/jira/browse/ARROW-17183). \r\n   Includes the following:\r\n   \r\n   Ability Fetch records with an offset and a limit with or without sorting.\r\n   \r\n   Fetch without sort just fetches the top records received at the Fetch node after collecting all records in memory. This is a sub-optimial solution and requires more optimization and recorded the requirement [here](https://issues.apache.org/jira/browse/ARROW-17196).\n\n\n",
                    "created": "2022-07-25T07:20:05.042+0000",
                    "updated": "2022-07-25T07:20:05.042+0000",
                    "started": "2022-07-25T07:20:05.042+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794742",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/794774",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#issuecomment-1193757075\n\n   https://issues.apache.org/jira/browse/ARROW-17190\n\n\n",
                    "created": "2022-07-25T08:40:40.666+0000",
                    "updated": "2022-07-25T08:40:40.666+0000",
                    "started": "2022-07-25T08:40:40.665+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794774",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/794775",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#issuecomment-1193757123\n\n   :warning: Ticket **has no components in JIRA**, make sure you assign one.\n\n\n",
                    "created": "2022-07-25T08:40:42.954+0000",
                    "updated": "2022-07-25T08:40:42.954+0000",
                    "started": "2022-07-25T08:40:42.954+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794775",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/794776",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#issuecomment-1193757150\n\n   :warning: Ticket **has not been started in JIRA**, please click 'Start Progress'.\n\n\n",
                    "created": "2022-07-25T08:40:44.380+0000",
                    "updated": "2022-07-25T08:40:44.380+0000",
                    "started": "2022-07-25T08:40:44.379+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "794776",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/795324",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "nealrichardson commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r930125712\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n\nReview Comment:\n   If I just want to select a range of rows, why accumulate all batches? In R how we've implemented `head()` now is to kill the plan after we've collected enough rows: https://github.com/apache/arrow/blob/master/r/R/query-engine.R#L241\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   How is FetchAndSort different from TopK?\n\n\n\n",
                    "created": "2022-07-26T15:45:12.136+0000",
                    "updated": "2022-07-26T15:45:12.136+0000",
                    "started": "2022-07-26T15:45:12.136+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "795324",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/795330",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r930155940\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   TopK is giving the highest K values (when sorted in descending order) right?\r\n   Fetch should be able to just pick sorted or unsorted data with an offset. So when offset=0, and it is sorted in descending order, we get TopK. I assume the Fetch node can be the most generalized node in that sense. \r\n   \r\n   The main issue with this implementation is that, it is not optimized. There is another effort to optimize in such a way that it doesn't accumulate all the data in-memory when a Fetch operation is done with no sorting. \n\n\n\n",
                    "created": "2022-07-26T16:08:03.633+0000",
                    "updated": "2022-07-26T16:08:03.633+0000",
                    "started": "2022-07-26T16:08:03.632+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "795330",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/795333",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r930164341\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n\nReview Comment:\n   We need to optimize this further. I created separate [ticket](https://issues.apache.org/jira/browse/ARROW-17196) for that. This effort is mainly to support the Substrait integration. \n\n\n\n",
                    "created": "2022-07-26T16:11:38.898+0000",
                    "updated": "2022-07-26T16:11:38.898+0000",
                    "started": "2022-07-26T16:11:38.898+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "795333",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/797428",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r936075098\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n\nReview Comment:\n   This shouldn't be a subclass of `FunctionOptions`.  `FunctionOptions` is only needed for kernel functions.  Fetch is an exec node.  Just take all these fields and put them in `FetchSinkNodeOptions` directly.\n\n\n\n##########\ncpp/src/arrow/compute/api_vector.cc:\n##########\n@@ -157,6 +157,11 @@ static auto kPartitionNthOptionsType = GetFunctionOptionsType<PartitionNthOption\n static auto kSelectKOptionsType = GetFunctionOptionsType<SelectKOptions>(\n     DataMember(\"k\", &SelectKOptions::k),\n     DataMember(\"sort_keys\", &SelectKOptions::sort_keys));\n+static auto kFetchOptionsType = GetFunctionOptionsType<FetchOptions>(\n\nReview Comment:\n   You can remove this whole block once fetch options is no longer a child of `FunctionOptions`.\n\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n+ public:\n+  explicit FetchOptions(int64_t offset = 0, int64_t count = 0,\n+                        std::vector<SortKey> sort_keys = {}, bool sort_first = true);\n+  static constexpr char const kTypeName[] = \"FetchOptions\";\n+\n+  /// The number of `offset` elements to skip.\n+  int64_t offset;\n+  /// The number of `count` elements to select.\n+  int64_t count;\n\nReview Comment:\n   ```suggestion\r\n     /// The number of rows to skip.\r\n     int64_t offset;\r\n     /// The number of rows to select.\r\n     int64_t count;\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n+ public:\n+  explicit FetchOptions(int64_t offset = 0, int64_t count = 0,\n+                        std::vector<SortKey> sort_keys = {}, bool sort_first = true);\n+  static constexpr char const kTypeName[] = \"FetchOptions\";\n+\n+  /// The number of `offset` elements to skip.\n+  int64_t offset;\n+  /// The number of `count` elements to select.\n+  int64_t count;\n+  /// Column key(s) to order by and how to order by these sort keys.\n\nReview Comment:\n   Do I have to specify sort keys?\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n+/// select the rows with an offset and a limit.\n+class ARROW_EXPORT FetchSinkNodeOptions : public SinkNodeOptions {\n\nReview Comment:\n   Can we specify sort options (e.g. nulls first or last?)\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n\nReview Comment:\n   We already have [ARROW-14202](https://issues.apache.org/jira/browse/ARROW-14202) which is pretty similar to ARROW-17196.  I'm not sure if a new JIRA is needed. CC @ArianaVillegas who has done some initial thinking about ARROW-14202 and was thinking about implementing it at  some point.\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   @nealrichardson this isn't much different than the hacky end-of-plan-only top-k that we have today (and rely on for tpc-h testing).  We're mostly just extending that a little so we can adapt that to Substrait.\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   Do we still need TopK now that there is a fetch node?  Couldn't `TopK` just be a fetch node with `offset == 0`?\n\n\n\n",
                    "created": "2022-08-02T22:36:43.354+0000",
                    "updated": "2022-08-02T22:36:43.354+0000",
                    "started": "2022-08-02T22:36:43.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797428",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/797591",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r936614494\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   I was also thinking about `TopK` it is merely a special case or we could say default of `Fetch`. I am bit concerned about the way I included the `SortOptions`. If we can agree upon that change, we could replace the rest with `Fetch`. \n\n\n\n",
                    "created": "2022-08-03T12:41:31.687+0000",
                    "updated": "2022-08-03T12:41:31.687+0000",
                    "started": "2022-08-03T12:41:31.687+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "797591",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/798048",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r937890784\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n+ public:\n+  explicit FetchOptions(int64_t offset = 0, int64_t count = 0,\n+                        std::vector<SortKey> sort_keys = {}, bool sort_first = true);\n+  static constexpr char const kTypeName[] = \"FetchOptions\";\n+\n+  /// The number of `offset` elements to skip.\n+  int64_t offset;\n+  /// The number of `count` elements to select.\n+  int64_t count;\n+  /// Column key(s) to order by and how to order by these sort keys.\n\nReview Comment:\n   Yes.\n\n\n\n",
                    "created": "2022-08-04T14:51:38.343+0000",
                    "updated": "2022-08-04T14:51:38.343+0000",
                    "started": "2022-08-04T14:51:38.343+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798048",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/798049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r937891236\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n+ public:\n+  explicit FetchOptions(int64_t offset = 0, int64_t count = 0,\n+                        std::vector<SortKey> sort_keys = {}, bool sort_first = true);\n+  static constexpr char const kTypeName[] = \"FetchOptions\";\n+\n+  /// The number of `offset` elements to skip.\n+  int64_t offset;\n+  /// The number of `count` elements to select.\n+  int64_t count;\n+  /// Column key(s) to order by and how to order by these sort keys.\n\nReview Comment:\n   WDYT?\n\n\n\n",
                    "created": "2022-08-04T14:52:03.372+0000",
                    "updated": "2022-08-04T14:52:03.372+0000",
                    "started": "2022-08-04T14:52:03.371+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798049",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/798050",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r937891973\n\n\n##########\ncpp/src/arrow/compute/api_vector.h:\n##########\n@@ -174,6 +174,23 @@ class ARROW_EXPORT SelectKOptions : public FunctionOptions {\n   std::vector<SortKey> sort_keys;\n };\n \n+/// \\brief Fetch options\n+class ARROW_EXPORT FetchOptions : public FunctionOptions {\n+ public:\n+  explicit FetchOptions(int64_t offset = 0, int64_t count = 0,\n+                        std::vector<SortKey> sort_keys = {}, bool sort_first = true);\n+  static constexpr char const kTypeName[] = \"FetchOptions\";\n+\n+  /// The number of `offset` elements to skip.\n+  int64_t offset;\n+  /// The number of `count` elements to select.\n+  int64_t count;\n+  /// Column key(s) to order by and how to order by these sort keys.\n\nReview Comment:\n   Btw, the default is no sort_keys. You specify it only if you need sorting. By default it is not sorted if the keys are not provided.\n\n\n\n",
                    "created": "2022-08-04T14:52:38.464+0000",
                    "updated": "2022-08-04T14:52:38.464+0000",
                    "started": "2022-08-04T14:52:38.464+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "798050",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/799045",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r940504541\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,33 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n+/// select the rows with an offset and a limit.\n+class ARROW_EXPORT FetchSinkNodeOptions : public SinkNodeOptions {\n+ public:\n+  explicit FetchSinkNodeOptions(\n+      int64_t offset, int64_t count,\n+      std::function<Future<util::optional<ExecBatch>>()>* generator,\n+      SortOptions sort_options, bool sort_first = false)\n+      : SinkNodeOptions(generator),\n+        offset(offset),\n+        count(count),\n+        sort_options(sort_options),\n+        sort_first(sort_first) {}\n+\n+  /// The number of rows to skip.\n+  int64_t offset;\n+  /// The number of rows to select.\n+  int64_t count;\n+  /// Sort options\n+  SortOptions sort_options;\n+  /// Determine sort or fetch precedence.\n+  bool sort_first;\n\nReview Comment:\n   I was thinking about this some more.  I don't think it will ever make sense to fetch first.\r\n   \r\n   In the long term (when we have better support for ordered execution), fetch and sort will be separate nodes, and we should reject any plan that has a fetch node when there is no current ordering (e.g. immediately after a hash-join).\r\n   \r\n   In the short term I don't see any benefit to adding support for fetch->sort since there is never a valid incoming ordering in our current exec plan.\n\n\n\n",
                    "created": "2022-08-08T17:47:48.937+0000",
                    "updated": "2022-08-08T17:47:48.937+0000",
                    "started": "2022-08-08T17:47:48.936+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "799045",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/800659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r945924080\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,33 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n+/// select the rows with an offset and a limit.\n+class ARROW_EXPORT FetchSinkNodeOptions : public SinkNodeOptions {\n+ public:\n+  explicit FetchSinkNodeOptions(\n+      int64_t offset, int64_t count,\n+      std::function<Future<util::optional<ExecBatch>>()>* generator,\n+      SortOptions sort_options, bool sort_first = false)\n+      : SinkNodeOptions(generator),\n+        offset(offset),\n+        count(count),\n+        sort_options(sort_options),\n+        sort_first(sort_first) {}\n+\n+  /// The number of rows to skip.\n+  int64_t offset;\n+  /// The number of rows to select.\n+  int64_t count;\n+  /// Sort options\n+  SortOptions sort_options;\n+  /// Determine sort or fetch precedence.\n+  bool sort_first;\n\nReview Comment:\n   I see your point. I will update the code. \n\n\n\n",
                    "created": "2022-08-15T16:27:06.331+0000",
                    "updated": "2022-08-15T16:27:06.331+0000",
                    "started": "2022-08-15T16:27:06.331+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "800659",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/802474",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r951443446\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n+/// select the rows with an offset and a limit.\n+class ARROW_EXPORT FetchSinkNodeOptions : public SinkNodeOptions {\n\nReview Comment:\n   `SortOptions` are now added.\n\n\n\n",
                    "created": "2022-08-22T13:30:23.636+0000",
                    "updated": "2022-08-22T13:30:23.636+0000",
                    "started": "2022-08-22T13:30:23.636+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "802474",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/803972",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "westonpace commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r955465913\n\n\n##########\ncpp/examples/arrow/execution_plan_documentation_examples.cc:\n##########\n@@ -231,15 +231,21 @@ arrow::Result<BatchesWithSchema> MakeSortTestBasicBatches() {\n arrow::Result<BatchesWithSchema> MakeGroupableBatches(int multiplicity = 1) {\n   BatchesWithSchema out;\n   auto fields = {arrow::field(\"i32\", arrow::int32()), arrow::field(\"str\", arrow::utf8())};\n-  ARROW_ASSIGN_OR_RAISE(auto b1_int, GetArrayDataSample<arrow::Int32Type>({12, 7, 3}));\n-  ARROW_ASSIGN_OR_RAISE(auto b2_int, GetArrayDataSample<arrow::Int32Type>({-2, -1, 3}));\n-  ARROW_ASSIGN_OR_RAISE(auto b3_int, GetArrayDataSample<arrow::Int32Type>({5, 3, -8}));\n-  ARROW_ASSIGN_OR_RAISE(auto b1_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"alpha\", \"beta\", \"alpha\"}));\n-  ARROW_ASSIGN_OR_RAISE(auto b2_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"alpha\", \"gamma\", \"alpha\"}));\n-  ARROW_ASSIGN_OR_RAISE(auto b3_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"gamma\", \"beta\", \"alpha\"}));\n+  ARROW_ASSIGN_OR_RAISE(auto b1_int,\n+                        GetArrayDataSample<arrow::Int32Type>({12, 7, 3, 15, 10, 0, 11}));\n+  ARROW_ASSIGN_OR_RAISE(auto b2_int,\n+                        GetArrayDataSample<arrow::Int32Type>({2, 1, 3, 12, 10, 11, 12}));\n\nReview Comment:\n   Is there a reason you got rid of all the negative numbers?\n\n\n\n##########\ncpp/src/arrow/compute/exec/options.h:\n##########\n@@ -430,6 +430,23 @@ class ARROW_EXPORT SelectKSinkNodeOptions : public SinkNodeOptions {\n   SelectKOptions select_k_options;\n };\n \n+/// \\brief Make a node which selects a range of rows passed through it\n+///\n+/// All batches pushed to this node will be accumulated, then selected, by the given\n+/// fields. Then sorted batches will be forwarded to the generator in sorted order and\n\nReview Comment:\n   Let's think about the long term for just a bit.  Once we have ordered execution I think we will only need two nodes, \"sort\", and \"fetch\".  Right now, we have three, \"order_by_sink\", \"fetch_sink\", and \"select_k_sink\".  So one of them will need to go away at some point and all of them will no longer be sink nodes and sorting behavior will need to be removed from \"fetch\".\r\n   \r\n   Given that there is probably significant change coming to these nodes anyways I'm not sure how much bike shedding I want to do right now.  I think the fetch options you have today are fine.  In the future we will simply drop `FetchSinkNodeOptions::sort_options` and rename `FetchSinkNodeOptions` to `FetchNodeOptions` (and it will no longer extend `SinkNodeOptions`).\n\n\n\n##########\ncpp/src/arrow/compute/exec/order_by_impl.cc:\n##########\n@@ -86,6 +86,45 @@ class SelectKBasicImpl : public SortBasicImpl {\n   const SelectKOptions options_;\n };\n \n+class FetchBasicImpl : public SortBasicImpl {\n+ public:\n+  FetchBasicImpl(ExecContext* ctx, const std::shared_ptr<Schema>& output_schema,\n+                 int64_t offset, int64_t count, SortOptions sort_options)\n+      : SortBasicImpl(ctx, output_schema),\n+        offset_(offset),\n+        count_(count),\n+        sort_options_(sort_options) {}\n+\n+  Result<Datum> DoFinish() override {\n+    std::unique_lock<std::mutex> lock(mutex_);\n+    ARROW_ASSIGN_OR_RAISE(auto table,\n+                          Table::FromRecordBatches(output_schema_, std::move(batches_)));\n+    if (sort_options_.sort_keys.size() > 0) {\n+      ARROW_ASSIGN_OR_RAISE(auto indices,\n+                            SortIndices(table, std::move(sort_options_), ctx_));\n+      ARROW_ASSIGN_OR_RAISE(auto sorted_table,\n+                            Take(table, indices, TakeOptions::NoBoundsCheck(), ctx_));\n+      return sorted_table.table()->Slice(offset_, count_);\n\nReview Comment:\n   It would be slightly more efficient to slice the sorted indices and then take the sliced sorted indices.\n\n\n\n##########\ncpp/src/arrow/compute/exec/sink_node.cc:\n##########\n@@ -505,6 +505,36 @@ struct OrderBySinkNode final : public SinkNode {\n     return ValidateCommonOrderOptions(options);\n   }\n \n+  // A sink node that receives inputs and then\n+  // fetch records (sort or unsorted) with an offset.\n+  static Result<ExecNode*> MakeFetch(ExecPlan* plan, std::vector<ExecNode*> inputs,\n+                                     const ExecNodeOptions& options) {\n+    RETURN_NOT_OK(ValidateExecNodeInputs(plan, inputs, 1, \"OrderBySinkNode\"));\n+\n+    const auto& sink_options = checked_cast<const FetchSinkNodeOptions&>(options);\n+    if (sink_options.backpressure.should_apply_backpressure()) {\n+      return Status::Invalid(\"Backpressure cannot be applied to an OrderBySinkNode\");\n+    }\n+    RETURN_NOT_OK(ValidateFetchOptions(sink_options));\n+    ARROW_ASSIGN_OR_RAISE(\n+        std::unique_ptr<OrderByImpl> impl,\n+        OrderByImpl::MakeFetch(plan->exec_context(), inputs[0]->output_schema(),\n+                               sink_options.offset, sink_options.count,\n+                               sink_options.sort_options));\n+    return plan->EmplaceNode<OrderBySinkNode>(plan, std::move(inputs), std::move(impl),\n+                                              sink_options.generator);\n+  }\n+\n+  static Status ValidateFetchOptions(const FetchSinkNodeOptions& options) {\n+    if (options.count < 0) {\n+      return Status::Invalid(\"count must be > 0\");\n+    }\n+    if (options.offset < 0) {\n+      return Status::Invalid(\"offset must be > 0\");\n+    }\n\nReview Comment:\n   ```suggestion\r\n       if (options.count < 1) {\r\n         return Status::Invalid(\"count must be > 0\");\r\n       }\r\n       if (options.offset < 0) {\r\n         return Status::Invalid(\"offset must be >= 0\");\r\n       }\r\n   ```\n\n\n\n##########\ncpp/src/arrow/compute/exec/plan_test.cc:\n##########\n@@ -1481,5 +1481,62 @@ TEST(ExecPlan, SourceEnforcesBatchLimit) {\n   }\n }\n \n+TEST(ExecPlanExecution, SortAndFetch) {\n\nReview Comment:\n   Can you add a test where the fetch offset is greater than 0?\n\n\n\n",
                    "created": "2022-08-26T14:47:39.813+0000",
                    "updated": "2022-08-26T14:47:39.813+0000",
                    "started": "2022-08-26T14:47:39.813+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "803972",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/805089",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r959149860\n\n\n##########\ncpp/src/arrow/compute/exec/order_by_impl.cc:\n##########\n@@ -86,6 +86,45 @@ class SelectKBasicImpl : public SortBasicImpl {\n   const SelectKOptions options_;\n };\n \n+class FetchBasicImpl : public SortBasicImpl {\n+ public:\n+  FetchBasicImpl(ExecContext* ctx, const std::shared_ptr<Schema>& output_schema,\n+                 int64_t offset, int64_t count, SortOptions sort_options)\n+      : SortBasicImpl(ctx, output_schema),\n+        offset_(offset),\n+        count_(count),\n+        sort_options_(sort_options) {}\n+\n+  Result<Datum> DoFinish() override {\n+    std::unique_lock<std::mutex> lock(mutex_);\n+    ARROW_ASSIGN_OR_RAISE(auto table,\n+                          Table::FromRecordBatches(output_schema_, std::move(batches_)));\n+    if (sort_options_.sort_keys.size() > 0) {\n+      ARROW_ASSIGN_OR_RAISE(auto indices,\n+                            SortIndices(table, std::move(sort_options_), ctx_));\n+      ARROW_ASSIGN_OR_RAISE(auto sorted_table,\n+                            Take(table, indices, TakeOptions::NoBoundsCheck(), ctx_));\n+      return sorted_table.table()->Slice(offset_, count_);\n\nReview Comment:\n   Thanks for noting this. Changes included. \n\n\n\n",
                    "created": "2022-08-31T04:26:45.514+0000",
                    "updated": "2022-08-31T04:26:45.514+0000",
                    "started": "2022-08-31T04:26:45.514+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805089",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/805091",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r959154531\n\n\n##########\ncpp/src/arrow/compute/exec/plan_test.cc:\n##########\n@@ -1481,5 +1481,62 @@ TEST(ExecPlan, SourceEnforcesBatchLimit) {\n   }\n }\n \n+TEST(ExecPlanExecution, SortAndFetch) {\n\nReview Comment:\n   Updated the test case.\n\n\n\n",
                    "created": "2022-08-31T04:40:06.747+0000",
                    "updated": "2022-08-31T04:40:06.747+0000",
                    "started": "2022-08-31T04:40:06.747+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805091",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/805092",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#issuecomment-1232454753\n\n   @westonpace Re: https://github.com/apache/arrow/pull/13700#discussion_r956123416\r\n   \r\n   I think this should probably go for a JIRA and list the possible changes. Later on, child tasks can be added. \r\n   \r\n   WDYT?\n\n\n",
                    "created": "2022-08-31T04:41:54.402+0000",
                    "updated": "2022-08-31T04:41:54.402+0000",
                    "started": "2022-08-31T04:41:54.402+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805092",
                    "issueId": "13472993"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/worklog/805093",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "vibhatha commented on code in PR #13700:\nURL: https://github.com/apache/arrow/pull/13700#discussion_r959157793\n\n\n##########\ncpp/examples/arrow/execution_plan_documentation_examples.cc:\n##########\n@@ -231,15 +231,21 @@ arrow::Result<BatchesWithSchema> MakeSortTestBasicBatches() {\n arrow::Result<BatchesWithSchema> MakeGroupableBatches(int multiplicity = 1) {\n   BatchesWithSchema out;\n   auto fields = {arrow::field(\"i32\", arrow::int32()), arrow::field(\"str\", arrow::utf8())};\n-  ARROW_ASSIGN_OR_RAISE(auto b1_int, GetArrayDataSample<arrow::Int32Type>({12, 7, 3}));\n-  ARROW_ASSIGN_OR_RAISE(auto b2_int, GetArrayDataSample<arrow::Int32Type>({-2, -1, 3}));\n-  ARROW_ASSIGN_OR_RAISE(auto b3_int, GetArrayDataSample<arrow::Int32Type>({5, 3, -8}));\n-  ARROW_ASSIGN_OR_RAISE(auto b1_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"alpha\", \"beta\", \"alpha\"}));\n-  ARROW_ASSIGN_OR_RAISE(auto b2_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"alpha\", \"gamma\", \"alpha\"}));\n-  ARROW_ASSIGN_OR_RAISE(auto b3_str, GetBinaryArrayDataSample<arrow::StringType>(\n-                                         {\"gamma\", \"beta\", \"alpha\"}));\n+  ARROW_ASSIGN_OR_RAISE(auto b1_int,\n+                        GetArrayDataSample<arrow::Int32Type>({12, 7, 3, 15, 10, 0, 11}));\n+  ARROW_ASSIGN_OR_RAISE(auto b2_int,\n+                        GetArrayDataSample<arrow::Int32Type>({2, 1, 3, 12, 10, 11, 12}));\n\nReview Comment:\n   No I think, I added more samples and wanted a rough pattern. Negative numbers wouldn't harm. Do you want me to revert this? \n\n\n\n",
                    "created": "2022-08-31T04:49:17.518+0000",
                    "updated": "2022-08-31T04:49:17.518+0000",
                    "started": "2022-08-31T04:49:17.518+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "805093",
                    "issueId": "13472993"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/7",
            "id": "7",
            "description": "The sub-task of the issue",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21146&avatarType=issuetype",
            "name": "Sub-task",
            "subtask": true,
            "avatarId": 21146
        },
        "timespent": 14400,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@261f5875[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3739e8ff[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e01c78b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@4687aea4[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@30bf9880[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@5de9a25e[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6de41bf7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@16ed7a61[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5a5a9ba4[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4a3129e3[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7c7b8f1[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@7a84e41a[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 14400,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Jul 23 01:15:27 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-17190/watchers",
            "watchCount": 1,
            "isWatching": false
        },
        "created": "2022-07-23T01:11:35.000+0000",
        "updated": "2022-09-19T13:39:53.000+0000",
        "timeoriginalestimate": null,
        "description": "The goal of the fetch node is to skip some records and select the given amount of records.\u00a0\r\n\r\nThis will be implemented as discussed in the parent issue.\u00a0",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "4h",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 14400
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Create a Fetch Node",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13472993/comment/17570223",
                    "id": "17570223",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "In addition, it would be better to include the sort-ability as an optional feature. This would avoid adding another node just to take care of sort and fetch operation. Here we can also give a flag to decide the order of things, fetch and sort or sort and fetch. Node name could be just `Fetch`.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=vibhatha",
                        "name": "vibhatha",
                        "key": "vibhatha",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34044",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34044",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34044",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34044"
                        },
                        "displayName": "Vibhatha Lakmal Abeykoon",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-07-23T01:15:27.233+0000",
                    "updated": "2022-07-23T01:15:27.233+0000"
                }
            ],
            "maxResults": 1,
            "total": 1,
            "startAt": 0
        },
        "customfield_12311820": "0|z173rs:",
        "customfield_12314139": null
    }
}