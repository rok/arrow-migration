{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13106412",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412",
    "key": "ARROW-1632",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
            "name": "uwe",
            "key": "xhochy",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
            },
            "displayName": "Uwe Korn",
            "active": true,
            "timeZone": "Europe/Berlin"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
            "name": "wesm",
            "key": "wesmckinn",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
            },
            "displayName": "Wes McKinney",
            "active": true,
            "timeZone": "America/New_York"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1632/votes",
            "votes": 1,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@31c1a184[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@606a0d69[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3e943b7b[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@ea56885[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@53ae5b56[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@7a5beae6[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@650b4935[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@404fe451[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@619a63e5[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@4433b9ea[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7b4e02b8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@449c1cec[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Thu Mar 01 04:35:00 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-03-01T04:35:00.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-1632/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2017-10-02T13:59:44.000+0000",
        "updated": "2018-03-01T04:35:00.000+0000",
        "timeoriginalestimate": null,
        "description": "Currently this is all or nothing",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[Python] Permit categorical conversions in Table.to_pandas on a per-column basis",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16356687",
                    "id": "16356687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Keeping this in 0.9 for now, I will have a look if I can get it done in time.\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-02-08T09:06:40.993+0000",
                    "updated": "2018-02-08T09:06:40.993+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16368224",
                    "id": "16368224",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy opened a new pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620\n \n \n   This is failing due to the first entry of the indices being uninitialised memory in the pandas series. On the C++ side, everything looks good. Would be nice if someone could have a look, I\u2018m out of ideas.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-17T14:41:03.565+0000",
                    "updated": "2018-02-17T14:41:03.565+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16368401",
                    "id": "16368401",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on issue #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#issuecomment-366478567\n \n \n   Foumd the problem. We did not hold a reference to the index array in the case that we did not need to copy it. Ready for review now\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-17T23:14:49.877+0000",
                    "updated": "2018-02-17T23:14:49.877+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369657",
                    "id": "16369657",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169205821\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (categorical_columns.size() > 0) {\n \n Review comment:\n   Any reason not to use `!categorical_columns.empty()`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:36:11.630+0000",
                    "updated": "2018-02-20T02:36:11.630+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369658",
                    "id": "16369658",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169205931\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (categorical_columns.size() > 0) {\n+    FunctionContext ctx;\n+    for (int64_t i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        DictionaryEncode(&ctx, Datum(col.data()), &out);\n+        std::shared_ptr<ChunkedArray> array = out.chunked_array();\n+        std::shared_ptr<Field> field = std::make_shared<Field>(\n \n Review comment:\n   Do we have a top level `::arrow::field` function that does this? If not, then this call should use `auto` since `Field` is already mentioned in the call to `make_shared`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:37:13.068+0000",
                    "updated": "2018-02-20T02:37:13.068+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369659",
                    "id": "16369659",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169205957\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (categorical_columns.size() > 0) {\n+    FunctionContext ctx;\n+    for (int64_t i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        DictionaryEncode(&ctx, Datum(col.data()), &out);\n+        std::shared_ptr<ChunkedArray> array = out.chunked_array();\n+        std::shared_ptr<Field> field = std::make_shared<Field>(\n+            col.name(), array->type(), col.field()->nullable(), col.field()->metadata());\n+        std::shared_ptr<Column> column = std::make_shared<Column>(field, array);\n \n Review comment:\n   This should use `auto` as well.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:37:34.394+0000",
                    "updated": "2018-02-20T02:37:34.394+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369661",
                    "id": "16369661",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169206390\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -986,7 +987,8 @@ class CategoricalBlock : public PandasBlock {\n     // Sniff the first chunk\n     const std::shared_ptr<Array> arr_first = data.chunk(0);\n     const auto& dict_arr_first = static_cast<const DictionaryArray&>(*arr_first);\n-    const auto& indices_first = static_cast<const ArrayType&>(*dict_arr_first.indices());\n+    const std::shared_ptr<ArrayType> indices_first =\n \n Review comment:\n   This can use `auto`.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:41:54.845+0000",
                    "updated": "2018-02-20T02:41:54.845+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369663",
                    "id": "16369663",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169206499\n \n \n\n ##########\n File path: python/pyarrow/includes/libarrow.pxd\n ##########\n @@ -883,6 +883,7 @@ cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n                                   object py_ref, PyObject** out)\n \n     CStatus ConvertTableToPandas(PandasOptions options,\n+                                 unordered_set[c_string] categorical_columns,\n \n Review comment:\n   Should this be `const unordered_set[c_string]&`?\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:43:10.963+0000",
                    "updated": "2018-02-20T02:43:10.963+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16369664",
                    "id": "16369664",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "cpcloud commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169206589\n \n \n\n ##########\n File path: python/pyarrow/table.pxi\n ##########\n @@ -746,17 +746,22 @@ cdef class RecordBatch:\n \n \n def table_to_blocks(PandasOptions options, Table table, int nthreads,\n-                    MemoryPool memory_pool):\n+                    MemoryPool memory_pool, categories):\n     cdef:\n         PyObject* result_obj\n         shared_ptr[CTable] c_table = table.sp_table\n         CMemoryPool* pool\n+        unordered_set[c_string] categorical_columns\n+\n+    if categories is not None:\n+        categorical_columns = [tobytes(cat) for cat in categories]\n \n Review comment:\n   Can you make this a `set` comprehension? It's misleading to have a Python `list` automatically turned into a C++ `unordered_set` IMO.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T02:44:02.672+0000",
                    "updated": "2018-02-20T02:44:02.672+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16370677",
                    "id": "16370677",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169481823\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (!categorical_columns.empty()) {\n+    FunctionContext ctx;\n+    for (int i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        DictionaryEncode(&ctx, Datum(col.data()), &out);\n+        std::shared_ptr<ChunkedArray> array = out.chunked_array();\n+        auto field = std::make_shared<Field>(\n+            col.name(), array->type(), col.field()->nullable(), col.field()->metadata());\n+        auto column = std::make_shared<Column>(field, array);\n+        current_table->RemoveColumn(i, &current_table);\n+        current_table->AddColumn(i, column, &current_table);\n \n Review comment:\n   Need to check Status in these two lines\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T22:33:08.211+0000",
                    "updated": "2018-02-20T22:33:08.211+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16370678",
                    "id": "16370678",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169482473\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.h\n ##########\n @@ -64,6 +66,16 @@ ARROW_EXPORT\n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out);\n \n+/// Convert a whole table as efficiently as possible to a pandas.DataFrame.\n+///\n+/// Explicitly name columns that should be a categorical\n+/// This option is only used on conversions that are applied to a table.\n+ARROW_EXPORT\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n \n Review comment:\n   At some point we might want to put `categorical_columns` in the Options data structure\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T22:33:08.216+0000",
                    "updated": "2018-02-20T22:33:08.216+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16370679",
                    "id": "16370679",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169481917\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (!categorical_columns.empty()) {\n+    FunctionContext ctx;\n+    for (int i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        DictionaryEncode(&ctx, Datum(col.data()), &out);\n \n Review comment:\n   check Status\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T22:33:08.216+0000",
                    "updated": "2018-02-20T22:33:08.216+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16370680",
                    "id": "16370680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r169481886\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.cc\n ##########\n @@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (!categorical_columns.empty()) {\n+    FunctionContext ctx;\n+    for (int i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        DictionaryEncode(&ctx, Datum(col.data()), &out);\n+        std::shared_ptr<ChunkedArray> array = out.chunked_array();\n+        auto field = std::make_shared<Field>(\n \n Review comment:\n   can also use `::arrow::field` here\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-20T22:33:08.218+0000",
                    "updated": "2018-02-20T22:33:08.218+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16372194",
                    "id": "16372194",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm commented on issue #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#issuecomment-367511649\n \n \n   rebased\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-21T23:18:05.439+0000",
                    "updated": "2018-02-21T23:18:05.439+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16378895",
                    "id": "16378895",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy commented on a change in pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620#discussion_r170985309\n \n \n\n ##########\n File path: cpp/src/arrow/python/arrow_to_pandas.h\n ##########\n @@ -64,6 +66,16 @@ ARROW_EXPORT\n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out);\n \n+/// Convert a whole table as efficiently as possible to a pandas.DataFrame.\n+///\n+/// Explicitly name columns that should be a categorical\n+/// This option is only used on conversions that are applied to a table.\n+ARROW_EXPORT\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n \n Review comment:\n   I was looking at doing that but the options structure also makes sense on a per-column basis (and we use it for that) bur the column list is only useful in the Table case.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-02-27T16:37:22.022+0000",
                    "updated": "2018-02-27T16:37:22.022+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16381501",
                    "id": "16381501",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "wesm closed pull request #1620: ARROW-1632: [Python] Permit categorical conversions in Table.to_pandas on a per-column basis\nURL: https://github.com/apache/arrow/pull/1620\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.cc b/cpp/src/arrow/python/arrow_to_pandas.cc\nindex 125892afe..aefd4d76d 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.cc\n+++ b/cpp/src/arrow/python/arrow_to_pandas.cc\n@@ -60,6 +60,7 @@ using internal::kNanosecondsInDay;\n using internal::kPandasTimestampNull;\n \n using compute::Datum;\n+using compute::FunctionContext;\n \n // ----------------------------------------------------------------------\n // Utility code\n@@ -986,7 +987,8 @@ class CategoricalBlock : public PandasBlock {\n     // Sniff the first chunk\n     const std::shared_ptr<Array> arr_first = data.chunk(0);\n     const auto& dict_arr_first = static_cast<const DictionaryArray&>(*arr_first);\n-    const auto& indices_first = static_cast<const ArrayType&>(*dict_arr_first.indices());\n+    const auto indices_first =\n+        std::static_pointer_cast<ArrayType>(dict_arr_first.indices());\n \n     auto CheckIndices = [](const ArrayType& arr, int64_t dict_length) {\n       const T* values = arr.raw_values();\n@@ -1000,8 +1002,8 @@ class CategoricalBlock : public PandasBlock {\n       return Status::OK();\n     };\n \n-    if (!needs_copy_ && data.num_chunks() == 1 && indices_first.null_count() == 0) {\n-      RETURN_NOT_OK(CheckIndices(indices_first, dict_arr_first.dictionary()->length()));\n+    if (!needs_copy_ && data.num_chunks() == 1 && indices_first->null_count() == 0) {\n+      RETURN_NOT_OK(CheckIndices(*indices_first, dict_arr_first.dictionary()->length()));\n       RETURN_NOT_OK(AllocateNDArrayFromIndices<T>(npy_type, indices_first));\n     } else {\n       if (options_.zero_copy_only) {\n@@ -1011,7 +1013,7 @@ class CategoricalBlock : public PandasBlock {\n              << \"but only zero-copy conversions allowed.\";\n         } else {\n           ss << \"Needed to copy \" << data.num_chunks() << \" chunks with \"\n-             << indices_first.null_count()\n+             << indices_first->null_count()\n              << \" indices nulls, but zero_copy_only was True\";\n         }\n         return Status::Invalid(ss.str());\n@@ -1109,10 +1111,11 @@ class CategoricalBlock : public PandasBlock {\n \n  protected:\n   template <typename T>\n-  Status AllocateNDArrayFromIndices(int npy_type, const PrimitiveArray& indices) {\n+  Status AllocateNDArrayFromIndices(int npy_type,\n+                                    const std::shared_ptr<PrimitiveArray>& indices) {\n     npy_intp block_dims[1] = {num_rows_};\n \n-    const T* in_values = GetPrimitiveValues<T>(indices);\n+    const T* in_values = GetPrimitiveValues<T>(*indices);\n     void* data = const_cast<T*>(in_values);\n \n     PyAcquireGIL lock;\n@@ -1127,6 +1130,22 @@ class CategoricalBlock : public PandasBlock {\n                                                nullptr, data, NPY_ARRAY_CARRAY, nullptr);\n     RETURN_IF_PYERROR();\n \n+    // Add a reference to the underlying Array. Otherwise the array may be\n+    // deleted once we leave the block conversion.\n+    auto capsule = new ArrowCapsule{{indices}};\n+    PyObject* base = PyCapsule_New(reinterpret_cast<void*>(capsule), \"arrow\",\n+                                   &ArrowCapsule_Destructor);\n+    if (base == nullptr) {\n+      delete capsule;\n+      RETURN_IF_PYERROR();\n+    }\n+\n+    if (PyArray_SetBaseObject(reinterpret_cast<PyArrayObject*>(block_arr), base) == -1) {\n+      // Error occurred, trust that SetBaseObject set the error state\n+      Py_XDECREF(base);\n+      return Status::OK();\n+    }\n+\n     npy_intp placement_dims[1] = {num_columns_};\n     PyObject* placement_arr = PyArray_SimpleNew(1, placement_dims, NPY_INT64);\n     RETURN_IF_PYERROR();\n@@ -1771,7 +1790,33 @@ Status ConvertColumnToPandas(PandasOptions options, const std::shared_ptr<Column\n \n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out) {\n-  DataFrameBlockCreator helper(options, table, pool);\n+  return ConvertTableToPandas(options, std::unordered_set<std::string>(), table, nthreads,\n+                              pool, out);\n+}\n+\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out) {\n+  std::shared_ptr<Table> current_table = table;\n+  if (!categorical_columns.empty()) {\n+    FunctionContext ctx;\n+    for (int i = 0; i < table->num_columns(); i++) {\n+      const Column& col = *table->column(i);\n+      if (categorical_columns.count(col.name())) {\n+        Datum out;\n+        RETURN_NOT_OK(DictionaryEncode(&ctx, Datum(col.data()), &out));\n+        std::shared_ptr<ChunkedArray> array = out.chunked_array();\n+        auto field = std::make_shared<Field>(\n+            col.name(), array->type(), col.field()->nullable(), col.field()->metadata());\n+        auto column = std::make_shared<Column>(field, array);\n+        RETURN_NOT_OK(current_table->RemoveColumn(i, &current_table));\n+        RETURN_NOT_OK(current_table->AddColumn(i, column, &current_table));\n+      }\n+    }\n+  }\n+\n+  DataFrameBlockCreator helper(options, current_table, pool);\n   return helper.Convert(nthreads, out);\n }\n \ndiff --git a/cpp/src/arrow/python/arrow_to_pandas.h b/cpp/src/arrow/python/arrow_to_pandas.h\nindex 1e4864637..0541b0f9a 100644\n--- a/cpp/src/arrow/python/arrow_to_pandas.h\n+++ b/cpp/src/arrow/python/arrow_to_pandas.h\n@@ -25,6 +25,7 @@\n \n #include <memory>\n #include <string>\n+#include <unordered_set>\n \n #include \"arrow/util/visibility.h\"\n \n@@ -40,6 +41,7 @@ class Table;\n namespace py {\n \n struct PandasOptions {\n+  /// If true, we will convert all string columns to categoricals\n   bool strings_to_categorical;\n   bool zero_copy_only;\n \n@@ -64,6 +66,16 @@ ARROW_EXPORT\n Status ConvertTableToPandas(PandasOptions options, const std::shared_ptr<Table>& table,\n                             int nthreads, MemoryPool* pool, PyObject** out);\n \n+/// Convert a whole table as efficiently as possible to a pandas.DataFrame.\n+///\n+/// Explicitly name columns that should be a categorical\n+/// This option is only used on conversions that are applied to a table.\n+ARROW_EXPORT\n+Status ConvertTableToPandas(PandasOptions options,\n+                            const std::unordered_set<std::string>& categorical_columns,\n+                            const std::shared_ptr<Table>& table, int nthreads,\n+                            MemoryPool* pool, PyObject** out);\n+\n }  // namespace py\n }  // namespace arrow\n \ndiff --git a/python/pyarrow/includes/common.pxd b/python/pyarrow/includes/common.pxd\nindex f323feaff..256327734 100644\n--- a/python/pyarrow/includes/common.pxd\n+++ b/python/pyarrow/includes/common.pxd\n@@ -23,6 +23,7 @@ from libcpp.memory cimport shared_ptr, unique_ptr, make_shared\n from libcpp.string cimport string as c_string\n from libcpp.vector cimport vector\n from libcpp.unordered_map cimport unordered_map\n+from libcpp.unordered_set cimport unordered_set\n \n from cpython cimport PyObject\n cimport cpython\ndiff --git a/python/pyarrow/includes/libarrow.pxd b/python/pyarrow/includes/libarrow.pxd\nindex 8da126aaf..f7361f055 100644\n--- a/python/pyarrow/includes/libarrow.pxd\n+++ b/python/pyarrow/includes/libarrow.pxd\n@@ -882,10 +882,12 @@ cdef extern from \"arrow/python/api.h\" namespace \"arrow::py\" nogil:\n                                   const shared_ptr[CColumn]& arr,\n                                   object py_ref, PyObject** out)\n \n-    CStatus ConvertTableToPandas(PandasOptions options,\n-                                 const shared_ptr[CTable]& table,\n-                                 int nthreads, CMemoryPool* pool,\n-                                 PyObject** out)\n+    CStatus ConvertTableToPandas(\n+        PandasOptions options,\n+        const unordered_set[c_string]& categorical_columns,\n+        const shared_ptr[CTable]& table,\n+        int nthreads, CMemoryPool* pool,\n+        PyObject** out)\n \n     void c_set_default_memory_pool \\\n         \" arrow::py::set_default_memory_pool\"(CMemoryPool* pool)\\\ndiff --git a/python/pyarrow/pandas_compat.py b/python/pyarrow/pandas_compat.py\nindex 6d4bf5e78..0bc47fc0d 100644\n--- a/python/pyarrow/pandas_compat.py\n+++ b/python/pyarrow/pandas_compat.py\n@@ -490,7 +490,7 @@ def _make_datetimetz(tz):\n \n \n def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n-                          categoricals=None):\n+                          categories=None):\n     from pyarrow.compat import DatetimeTZDtype\n \n     index_columns = []\n@@ -564,7 +564,8 @@ def table_to_blockmanager(options, table, memory_pool, nthreads=1,\n                 block_table.schema.get_field_index(raw_name)\n             )\n \n-    blocks = _table_to_blocks(options, block_table, nthreads, memory_pool)\n+    blocks = _table_to_blocks(options, block_table, nthreads, memory_pool,\n+                              categories)\n \n     # Construct the row index\n     if len(index_arrays) > 1:\n@@ -651,12 +652,12 @@ def _reconstruct_columns_from_metadata(columns, column_indexes):\n     )\n \n \n-def _table_to_blocks(options, block_table, nthreads, memory_pool):\n+def _table_to_blocks(options, block_table, nthreads, memory_pool, categories):\n     # Part of table_to_blockmanager\n \n     # Convert an arrow table to Block from the internal pandas API\n     result = pa.lib.table_to_blocks(options, block_table, nthreads,\n-                                    memory_pool)\n+                                    memory_pool, categories)\n \n     # Defined above\n     return [_reconstruct_block(item) for item in result]\ndiff --git a/python/pyarrow/table.pxi b/python/pyarrow/table.pxi\nindex e14d4739f..178df5767 100644\n--- a/python/pyarrow/table.pxi\n+++ b/python/pyarrow/table.pxi\n@@ -746,17 +746,22 @@ cdef class RecordBatch:\n \n \n def table_to_blocks(PandasOptions options, Table table, int nthreads,\n-                    MemoryPool memory_pool):\n+                    MemoryPool memory_pool, categories):\n     cdef:\n         PyObject* result_obj\n         shared_ptr[CTable] c_table = table.sp_table\n         CMemoryPool* pool\n+        unordered_set[c_string] categorical_columns\n+\n+    if categories is not None:\n+        categorical_columns = {tobytes(cat) for cat in categories}\n \n     pool = maybe_unbox_memory_pool(memory_pool)\n     with nogil:\n         check_status(\n             libarrow.ConvertTableToPandas(\n-                options, c_table, nthreads, pool, &result_obj\n+                options, categorical_columns, c_table, nthreads, pool,\n+                &result_obj\n             )\n         )\n \n@@ -1012,7 +1017,7 @@ cdef class Table:\n         return result\n \n     def to_pandas(self, nthreads=None, strings_to_categorical=False,\n-                  memory_pool=None, zero_copy_only=False):\n+                  memory_pool=None, zero_copy_only=False, categories=None):\n         \"\"\"\n         Convert the arrow::Table to a pandas DataFrame\n \n@@ -1029,6 +1034,8 @@ cdef class Table:\n         zero_copy_only : boolean, default False\n             Raise an ArrowException if this function call would require copying\n             the underlying data\n+        categories: list, default empty\n+            List of columns that should be returned as pandas.Categorical\n \n         Returns\n         -------\n@@ -1036,6 +1043,7 @@ cdef class Table:\n         \"\"\"\n         cdef:\n             PandasOptions options\n+\n         options = PandasOptions(\n             strings_to_categorical=strings_to_categorical,\n             zero_copy_only=zero_copy_only)\n@@ -1043,7 +1051,7 @@ cdef class Table:\n         if nthreads is None:\n             nthreads = cpu_count()\n         mgr = pdcompat.table_to_blockmanager(options, self, memory_pool,\n-                                             nthreads)\n+                                             nthreads, categories)\n         return pd.DataFrame(mgr)\n \n     def to_pydict(self):\ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 6e68dd961..986aeffca 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -1027,6 +1027,24 @@ def test_table_empty_str(self):\n         expected2 = pd.DataFrame({'strings': pd.Categorical(values)})\n         tm.assert_frame_equal(result2, expected2, check_dtype=True)\n \n+    def test_selective_categoricals(self):\n+        values = ['', '', '', '', '']\n+        df = pd.DataFrame({'strings': values})\n+        field = pa.field('strings', pa.string())\n+        schema = pa.schema([field])\n+        table = pa.Table.from_pandas(df, schema=schema)\n+        expected_str = pd.DataFrame({'strings': values})\n+        expected_cat = pd.DataFrame({'strings': pd.Categorical(values)})\n+\n+        result1 = table.to_pandas(categories=['strings'])\n+        tm.assert_frame_equal(result1, expected_cat, check_dtype=True)\n+        result2 = table.to_pandas(categories=[])\n+        tm.assert_frame_equal(result2, expected_str, check_dtype=True)\n+        result3 = table.to_pandas(categories=('strings',))\n+        tm.assert_frame_equal(result3, expected_cat, check_dtype=True)\n+        result4 = table.to_pandas(categories=tuple())\n+        tm.assert_frame_equal(result4, expected_str, check_dtype=True)\n+\n     def test_table_str_to_categorical_without_na(self):\n         values = ['a', 'a', 'b', 'b', 'c']\n         df = pd.DataFrame({'strings': values})\n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-03-01T04:34:50.611+0000",
                    "updated": "2018-03-01T04:34:50.611+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13106412/comment/16381502",
                    "id": "16381502",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "body": "Issue resolved by pull request 1620\n[https://github.com/apache/arrow/pull/1620]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=wesm",
                        "name": "wesm",
                        "key": "wesmckinn",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=wesmckinn&avatarId=29931",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=wesmckinn&avatarId=29931",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=wesmckinn&avatarId=29931",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=wesmckinn&avatarId=29931"
                        },
                        "displayName": "Wes McKinney",
                        "active": true,
                        "timeZone": "America/New_York"
                    },
                    "created": "2018-03-01T04:35:00.618+0000",
                    "updated": "2018-03-01T04:35:00.618+0000"
                }
            ],
            "maxResults": 17,
            "total": 17,
            "startAt": 0
        },
        "customfield_12311820": "0|i3krzr:",
        "customfield_12314139": null
    }
}