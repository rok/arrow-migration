{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13149995",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149995",
    "key": "ARROW-2390",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12342562",
                "id": "12342562",
                "description": "",
                "name": "0.10.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-08-06"
            }
        ],
        "resolution": {
            "self": "https://issues.apache.org/jira/rest/api/2/resolution/1",
            "id": "1",
            "description": "A fix for this issue is checked into the tree and tested.",
            "name": "Fixed"
        },
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": null,
        "customfield_12312330": null,
        "versions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12341707",
                "id": "12341707",
                "description": "",
                "name": "0.9.0",
                "archived": false,
                "released": true,
                "releaseDate": "2018-03-19"
            }
        ],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/5",
            "description": "A resolution has been taken, and it is awaiting verification by reporter. From here issues are either reopened, or are closed.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/resolved.png",
            "name": "Resolved",
            "id": "5",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/3",
                "id": 3,
                "key": "done",
                "colorName": "green",
                "name": "Done"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            },
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328936",
                "id": "12328936",
                "name": "Python"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": null,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
            "name": "apitrou",
            "key": "pitrou",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
            },
            "displayName": "Antoine Pitrou",
            "active": true,
            "timeZone": "Europe/Paris"
        },
        "aggregateprogress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 0,
            "total": 0
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2390/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 0,
            "worklogs": []
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/5",
            "id": "5",
            "description": "General wishlist item.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Wish",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": null,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@32a7f1ff[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@580b4d9[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@6cebd0cf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@6ccd97f7[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@342dfaf[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@1572842a[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@27ad43e3[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@275f0ace[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@3275162d[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@33a7879d[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@7ed86851[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@210e043e[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": null,
        "customfield_12312520": null,
        "customfield_12312521": "Sat Apr 21 13:24:28 UTC 2018",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": "2018-04-21T13:24:28.000+0000",
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-2390/watchers",
            "watchCount": 2,
            "isWatching": false
        },
        "created": "2018-04-04T13:11:17.000+0000",
        "updated": "2018-04-21T13:24:28.000+0000",
        "timeoriginalestimate": null,
        "description": "Current {{CheckPyError}} always chooses an \"unknown error\" status. But it could inspect the Python exception and choose, e.g. \"type error\" for a {{TypeError}} exception, etc.\r\n\r\nSee also ARROW-2389",
        "customfield_10010": null,
        "timetracking": {},
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++/Python] CheckPyError() could inspect exception type",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149995/comment/16444368",
                    "id": "16444368",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "pitrou opened a new pull request #1916: ARROW-2390: [C++/Python] Map Python exceptions to Arrow status codes\nURL: https://github.com/apache/arrow/pull/1916\n \n \n   Instead of always returning an \"unknown error\" status code when a Python exception is raised, we can easily discriminate and return e.g. a TypeError status code when a Python TypeError is raised, etc.\n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-19T16:49:05.563+0000",
                    "updated": "2018-04-19T16:49:05.563+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149995/comment/16446798",
                    "id": "16446798",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "body": "Issue resolved by pull request 1916\n[https://github.com/apache/arrow/pull/1916]",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=uwe",
                        "name": "uwe",
                        "key": "xhochy",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=xhochy&avatarId=30652",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=xhochy&avatarId=30652",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=xhochy&avatarId=30652",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=xhochy&avatarId=30652"
                        },
                        "displayName": "Uwe Korn",
                        "active": true,
                        "timeZone": "Europe/Berlin"
                    },
                    "created": "2018-04-21T13:24:28.555+0000",
                    "updated": "2018-04-21T13:24:28.555+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13149995/comment/16446799",
                    "id": "16446799",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "xhochy closed pull request #1916: ARROW-2390: [C++/Python] Map Python exceptions to Arrow status codes\nURL: https://github.com/apache/arrow/pull/1916\n \n \n   \n\nThis is a PR merged from a forked repository.\nAs GitHub hides the original diff on merge, it is displayed below for\nthe sake of provenance:\n\nAs this is a foreign pull request (from a fork), the diff is supplied\nbelow (as it won't show otherwise due to GitHub magic):\n\ndiff --git a/cpp/src/arrow/python/common.cc b/cpp/src/arrow/python/common.cc\nindex bd13f29177..a565d003fe 100644\n--- a/cpp/src/arrow/python/common.cc\n+++ b/cpp/src/arrow/python/common.cc\n@@ -98,6 +98,23 @@ Status CheckPyError(StatusCode code) {\n \n     std::string message;\n     RETURN_NOT_OK(internal::PyObject_StdStringStr(exc_value, &message));\n+\n+    if (code == StatusCode::UnknownError) {\n+      // Try to match the Python exception type with an appropriate Status code\n+      if (PyErr_GivenExceptionMatches(exc_type, PyExc_MemoryError)) {\n+        code = StatusCode::OutOfMemory;\n+      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_KeyError)) {\n+        code = StatusCode::KeyError;\n+      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_TypeError)) {\n+        code = StatusCode::TypeError;\n+      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_ValueError)) {\n+        code = StatusCode::Invalid;\n+      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_EnvironmentError)) {\n+        code = StatusCode::IOError;\n+      } else if (PyErr_GivenExceptionMatches(exc_type, PyExc_NotImplementedError)) {\n+        code = StatusCode::NotImplemented;\n+      }\n+    }\n     return Status(code, message);\n   }\n   return Status::OK();\ndiff --git a/cpp/src/arrow/python/python-test.cc b/cpp/src/arrow/python/python-test.cc\nindex 3ea814ff44..81d3fea46b 100644\n--- a/cpp/src/arrow/python/python-test.cc\n+++ b/cpp/src/arrow/python/python-test.cc\n@@ -77,6 +77,52 @@ TEST(OwnedRefNoGIL, TestMoves) {\n   ASSERT_EQ(Py_REFCNT(v), 1);\n }\n \n+TEST(CheckPyError, TestStatus) {\n+  PyAcquireGIL lock;\n+  Status st;\n+\n+  auto check_error = [](Status& st, const char* expected_message = \"some error\") {\n+    st = CheckPyError();\n+    ASSERT_EQ(st.message(), expected_message);\n+    ASSERT_FALSE(PyErr_Occurred());\n+  };\n+\n+  for (PyObject* exc_type : {PyExc_Exception, PyExc_SyntaxError}) {\n+    PyErr_SetString(exc_type, \"some error\");\n+    check_error(st);\n+    ASSERT_TRUE(st.IsUnknownError());\n+  }\n+\n+  PyErr_SetString(PyExc_TypeError, \"some error\");\n+  check_error(st);\n+  ASSERT_TRUE(st.IsTypeError());\n+\n+  PyErr_SetString(PyExc_ValueError, \"some error\");\n+  check_error(st);\n+  ASSERT_TRUE(st.IsInvalid());\n+\n+  PyErr_SetString(PyExc_KeyError, \"some error\");\n+  check_error(st, \"'some error'\");\n+  ASSERT_TRUE(st.IsKeyError());\n+\n+  for (PyObject* exc_type : {PyExc_OSError, PyExc_IOError}) {\n+    PyErr_SetString(exc_type, \"some error\");\n+    check_error(st);\n+    ASSERT_TRUE(st.IsIOError());\n+  }\n+\n+  PyErr_SetString(PyExc_NotImplementedError, \"some error\");\n+  check_error(st);\n+  ASSERT_TRUE(st.IsNotImplemented());\n+\n+  // No override if a specific status code is given\n+  PyErr_SetString(PyExc_TypeError, \"some error\");\n+  st = CheckPyError(StatusCode::SerializationError);\n+  ASSERT_TRUE(st.IsSerializationError());\n+  ASSERT_EQ(st.message(), \"some error\");\n+  ASSERT_FALSE(PyErr_Occurred());\n+}\n+\n class DecimalTest : public ::testing::Test {\n  public:\n   DecimalTest() : lock_(), decimal_constructor_() {\n@@ -221,7 +267,7 @@ TEST(BuiltinConversionTest, TestMixedTypeFails) {\n   ASSERT_EQ(PyList_SetItem(list, 1, integer), 0);\n   ASSERT_EQ(PyList_SetItem(list, 2, doub), 0);\n \n-  ASSERT_RAISES(UnknownError, ConvertPySequence(list, pool, &arr));\n+  ASSERT_RAISES(TypeError, ConvertPySequence(list, pool, &arr));\n }\n \n TEST_F(DecimalTest, FromPythonDecimalRescaleNotTruncateable) {\ndiff --git a/python/pyarrow/tests/test_convert_builtin.py b/python/pyarrow/tests/test_convert_builtin.py\nindex f21e5670e2..a18d183567 100644\n--- a/python/pyarrow/tests/test_convert_builtin.py\n+++ b/python/pyarrow/tests/test_convert_builtin.py\n@@ -316,7 +316,7 @@ def test_sequence_utf8_to_unicode():\n \n     # test a non-utf8 unicode string\n     val = (u'ma\u00f1ana').encode('utf-16-le')\n-    with pytest.raises(pa.ArrowException):\n+    with pytest.raises(pa.ArrowInvalid):\n         pa.array([val], type=pa.string())\n \n \n@@ -496,7 +496,7 @@ def test_sequence_mixed_nesting_levels():\n \n def test_sequence_mixed_types_fails():\n     data = ['a', 1, 2.0]\n-    with pytest.raises(pa.ArrowException):\n+    with pytest.raises(pa.ArrowTypeError):\n         pa.array(data)\n \n \ndiff --git a/python/pyarrow/tests/test_convert_pandas.py b/python/pyarrow/tests/test_convert_pandas.py\nindex 6970975ccd..c43c29db60 100644\n--- a/python/pyarrow/tests/test_convert_pandas.py\n+++ b/python/pyarrow/tests/test_convert_pandas.py\n@@ -291,10 +291,10 @@ def test_dictionary_indices_boundscheck(self):\n             batch = pa.RecordBatch.from_arrays([arr], ['foo'])\n             table = pa.Table.from_batches([batch, batch, batch])\n \n-            with pytest.raises(pa.ArrowException):\n+            with pytest.raises(pa.ArrowInvalid):\n                 arr.to_pandas()\n \n-            with pytest.raises(pa.ArrowException):\n+            with pytest.raises(pa.ArrowInvalid):\n                 table.to_pandas()\n \n     def test_unicode_with_unicode_column_and_index(self):\n@@ -1238,7 +1238,7 @@ def test_array_of_bytes_to_strings(self):\n     # cannot be converted to utf-8\n     def test_array_of_bytes_to_strings_bad_data(self):\n         with pytest.raises(\n-                pa.lib.ArrowException,\n+                pa.lib.ArrowInvalid,\n                 message=\"Unknown error: 'utf-8' codec can't decode byte 0x80 \"\n                 \"in position 0: invalid start byte\"):\n             pa.array(np.array([b'\\x80\\x81'], dtype=object), pa.string())\n@@ -1321,12 +1321,12 @@ def test_decimal_128_to_pandas(self):\n     def test_decimal_fails_with_truncation(self):\n         data1 = [decimal.Decimal('1.234')]\n         type1 = pa.decimal128(10, 2)\n-        with pytest.raises(pa.ArrowException):\n+        with pytest.raises(pa.ArrowInvalid):\n             pa.array(data1, type=type1)\n \n         data2 = [decimal.Decimal('1.2345')]\n         type2 = pa.decimal128(10, 3)\n-        with pytest.raises(pa.ArrowException):\n+        with pytest.raises(pa.ArrowInvalid):\n             pa.array(data2, type=type2)\n \n     def test_decimal_with_different_precisions(self):\n@@ -1737,33 +1737,29 @@ def test_zero_copy_dictionaries(self):\n         tm.assert_series_equal(pd.Series(result), pd.Series(values),\n                                check_names=False)\n \n+    def check_zero_copy_failure(self, arr):\n+        with pytest.raises(pa.ArrowInvalid):\n+            arr.to_pandas(zero_copy_only=True)\n+\n     def test_zero_copy_failure_on_object_types(self):\n-        with pytest.raises(pa.ArrowException):\n-            pa.array(['A', 'B', 'C']).to_pandas(zero_copy_only=True)\n+        self.check_zero_copy_failure(pa.array(['A', 'B', 'C']))\n \n     def test_zero_copy_failure_with_int_when_nulls(self):\n-        with pytest.raises(pa.ArrowException):\n-            pa.array([0, 1, None]).to_pandas(zero_copy_only=True)\n+        self.check_zero_copy_failure(pa.array([0, 1, None]))\n \n     def test_zero_copy_failure_with_float_when_nulls(self):\n-        with pytest.raises(pa.ArrowException):\n-            pa.array([0.0, 1.0, None]).to_pandas(zero_copy_only=True)\n+        self.check_zero_copy_failure(pa.array([0.0, 1.0, None]))\n \n     def test_zero_copy_failure_on_bool_types(self):\n-        with pytest.raises(pa.ArrowException):\n-            pa.array([True, False]).to_pandas(zero_copy_only=True)\n+        self.check_zero_copy_failure(pa.array([True, False]))\n \n     def test_zero_copy_failure_on_list_types(self):\n-        arr = np.array([[1, 2], [8, 9]], dtype=object)\n-\n-        with pytest.raises(pa.ArrowException):\n-            pa.array(arr).to_pandas(zero_copy_only=True)\n+        arr = pa.array([[1, 2], [8, 9]], type=pa.list_(pa.int64()))\n+        self.check_zero_copy_failure(arr)\n \n     def test_zero_copy_failure_on_timestamp_types(self):\n         arr = np.array(['2007-07-13'], dtype='datetime64[ns]')\n-\n-        with pytest.raises(pa.ArrowException):\n-            pa.array(arr).to_pandas(zero_copy_only=True)\n+        self.check_zero_copy_failure(pa.array(arr))\n \n \n class TestConvertMisc(object):\n@@ -1843,11 +1839,11 @@ def test_empty_category(self):\n \n     def test_mixed_types_fails(self):\n         data = pd.DataFrame({'a': ['a', 1, 2.0]})\n-        with pytest.raises(pa.ArrowException):\n+        with pytest.raises(pa.ArrowTypeError):\n             pa.Table.from_pandas(data)\n \n         data = pd.DataFrame({'a': [1, True]})\n-        with pytest.raises(pa.ArrowException):\n+        with pytest.raises(pa.ArrowTypeError):\n             pa.Table.from_pandas(data)\n \n     def test_strided_data_import(self):\ndiff --git a/python/pyarrow/tests/test_serialization.py b/python/pyarrow/tests/test_serialization.py\nindex ba32330b61..f288611a9b 100644\n--- a/python/pyarrow/tests/test_serialization.py\n+++ b/python/pyarrow/tests/test_serialization.py\n@@ -592,7 +592,7 @@ def test_serialize_to_components_invalid_cases():\n         'data': [buf]\n     }\n \n-    with pytest.raises(pa.ArrowException):\n+    with pytest.raises(pa.ArrowInvalid):\n         pa.deserialize_components(components)\n \n     components = {\n@@ -601,7 +601,7 @@ def test_serialize_to_components_invalid_cases():\n         'data': [buf, buf]\n     }\n \n-    with pytest.raises(pa.ArrowException):\n+    with pytest.raises(pa.ArrowInvalid):\n         pa.deserialize_components(components)\n \n \ndiff --git a/python/pyarrow/tests/test_table.py b/python/pyarrow/tests/test_table.py\nindex 5303cb2190..57be9b2eac 100644\n--- a/python/pyarrow/tests/test_table.py\n+++ b/python/pyarrow/tests/test_table.py\n@@ -234,7 +234,7 @@ def test_recordbatchlist_schema_equals():\n     batch1 = pa.RecordBatch.from_pandas(data1)\n     batch2 = pa.RecordBatch.from_pandas(data2)\n \n-    with pytest.raises(pa.ArrowException):\n+    with pytest.raises(pa.ArrowInvalid):\n         pa.Table.from_batches([batch1, batch2])\n \n \n\n\n \n\n----------------------------------------------------------------\nThis is an automated message from the Apache Git Service.\nTo respond to the message, please log on GitHub and use the\nURL above to go to the specific comment.\n \nFor queries about this service, please contact Infrastructure at:\nusers@infra.apache.org\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2018-04-21T13:24:28.889+0000",
                    "updated": "2018-04-21T13:24:28.889+0000"
                }
            ],
            "maxResults": 3,
            "total": 3,
            "startAt": 0
        },
        "customfield_12311820": "0|i3s4tz:",
        "customfield_12314139": null
    }
}