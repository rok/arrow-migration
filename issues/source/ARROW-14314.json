{
    "expand": "operations,versionedRepresentations,editmeta,changelog,renderedFields",
    "id": "13406438",
    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438",
    "key": "ARROW-14314",
    "fields": {
        "fixVersions": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/version/12352360",
                "id": "12352360",
                "description": "",
                "name": "11.0.0",
                "archived": false,
                "released": false
            }
        ],
        "resolution": null,
        "customfield_12312322": null,
        "customfield_12312323": null,
        "customfield_12312320": null,
        "customfield_12310420": "9223372036854775807",
        "customfield_12312321": null,
        "customfield_12312328": null,
        "customfield_12312329": null,
        "customfield_12312326": null,
        "customfield_12310300": null,
        "customfield_12312327": null,
        "customfield_12312324": null,
        "customfield_12312720": null,
        "customfield_12312325": null,
        "lastViewed": null,
        "priority": {
            "self": "https://issues.apache.org/jira/rest/api/2/priority/3",
            "iconUrl": "https://issues.apache.org/jira/images/icons/priorities/major.svg",
            "name": "Major",
            "id": "3"
        },
        "labels": [
            "kernel",
            "pull-request-available"
        ],
        "customfield_12312333": null,
        "customfield_12312334": null,
        "customfield_12313422": "false",
        "customfield_12310310": "0.0",
        "customfield_12312331": null,
        "customfield_12312332": null,
        "aggregatetimeoriginalestimate": null,
        "timeestimate": 0,
        "customfield_12312330": null,
        "versions": [],
        "customfield_12311120": null,
        "customfield_12313826": null,
        "customfield_12312339": null,
        "issuelinks": [],
        "customfield_12313825": null,
        "assignee": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
            "name": "ArianaVillegas",
            "key": "JIRAUSER280694",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
            },
            "displayName": "Ariana Villegas",
            "active": true,
            "timeZone": "Etc/UTC"
        },
        "customfield_12312337": null,
        "customfield_12313823": null,
        "customfield_12312338": null,
        "customfield_12311920": null,
        "customfield_12313822": null,
        "customfield_12312335": null,
        "customfield_12313821": null,
        "customfield_12312336": null,
        "customfield_12313820": null,
        "status": {
            "self": "https://issues.apache.org/jira/rest/api/2/status/3",
            "description": "This issue is being actively worked on at the moment by the assignee.",
            "iconUrl": "https://issues.apache.org/jira/images/icons/statuses/inprogress.png",
            "name": "In Progress",
            "id": "3",
            "statusCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/statuscategory/4",
                "id": 4,
                "key": "indeterminate",
                "colorName": "yellow",
                "name": "In Progress"
            }
        },
        "components": [
            {
                "self": "https://issues.apache.org/jira/rest/api/2/component/12328935",
                "id": "12328935",
                "name": "C++"
            }
        ],
        "customfield_12312026": null,
        "customfield_12312023": null,
        "customfield_12312024": null,
        "aggregatetimeestimate": 0,
        "customfield_12312022": null,
        "customfield_12310921": null,
        "customfield_12310920": "9223372036854775807",
        "customfield_12312823": null,
        "creator": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "subtasks": [],
        "reporter": {
            "self": "https://issues.apache.org/jira/rest/api/2/user?username=npr",
            "name": "npr",
            "key": "npr",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=34045",
                "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=34045",
                "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=34045",
                "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=34045"
            },
            "displayName": "Neal Richardson",
            "active": true,
            "timeZone": "America/Los_Angeles"
        },
        "aggregateprogress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313520": null,
        "customfield_12310250": null,
        "progress": {
            "progress": 22200,
            "total": 22200,
            "percent": 100
        },
        "customfield_12313924": null,
        "votes": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14314/votes",
            "votes": 0,
            "hasVoted": false
        },
        "worklog": {
            "startAt": 0,
            "maxResults": 20,
            "total": 37,
            "worklogs": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/779210",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "github-actions[bot] commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1149048739\n\n   https://issues.apache.org/jira/browse/ARROW-14314\n\n\n",
                    "created": "2022-06-07T18:56:46.565+0000",
                    "updated": "2022-06-07T18:56:46.565+0000",
                    "started": "2022-06-07T18:56:46.564+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779210",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/779620",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1150273364\n\n   @pitrou This is a first draft. I got a couple of questions:\r\n   \r\n   - Should we be able to deduce the type of indices array? Or is it ok work with UInt64Array?\r\n   - Is there a way to cast values dictionary based on dictionary type?\n\n\n",
                    "created": "2022-06-08T18:49:27.425+0000",
                    "updated": "2022-06-08T18:49:27.425+0000",
                    "started": "2022-06-08T18:49:27.425+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779620",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/779904",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151035902\n\n   > @pitrou This is a first draft. I got a couple of questions:\r\n   > \r\n   >     * Should we be able to deduce the type of indices array? Or is it ok work with UInt64Array?\r\n   \r\n   We should support all indices types, that is all integer types.\r\n   \r\n   >     * Is there a way to cast values dictionary based on dictionary type?\r\n   \r\n   I'm not sure I understand the question. Which type would you cast the values to? (and/or can give you a concrete example?)\n\n\n",
                    "created": "2022-06-09T12:03:49.303+0000",
                    "updated": "2022-06-09T12:03:49.303+0000",
                    "started": "2022-06-09T12:03:49.302+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "779904",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780000",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151241093\n\n   > I'm not sure I understand the question. Which type would you cast the values to? (and/or can give you a concrete example?)\r\n   \r\n   Sure, for example, if we have a dictionary d, we'll have an indices array, a values array, and a dictionary type with indices and values types.\r\n   ```\r\n   indices = dict_array.indices();\r\n   values = dict_array.dictionary();\r\n   dict_type = dict_array.dict_type();\r\n   indices_type = dict_type->index_type();\r\n   values_type = dict_type->value_type();\r\n   ``` \r\n   And, I want to know whether it's possible to cast indices into an array of indices_type or not. The main reason I want to cast the indices array is to use `GetView`. Or can I get an `uint64_t` from a `Scalar`?\r\n   \r\n   And another question (OOT), can we build and array from a dictionary array? Something like this:\r\n   ```\r\n   values = [ b, null, c, a]\r\n   indices = [0, null, 1, 0, 2, 3]\r\n   \r\n   final_array = [b, null, null, b, c, a]\r\n   ```\n\n\n",
                    "created": "2022-06-09T15:04:51.355+0000",
                    "updated": "2022-06-09T15:04:51.355+0000",
                    "started": "2022-06-09T15:04:51.354+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780000",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780038",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151344861\n\n   > And, I want to know whether it's possible to cast indices into an array of indices_type or not\r\n   \r\n   Ah, yes, of course. Just use `checked_cast` with the right concrete array type.\r\n   \r\n   \n\n\n",
                    "created": "2022-06-09T16:24:34.729+0000",
                    "updated": "2022-06-09T16:24:34.729+0000",
                    "started": "2022-06-09T16:24:34.728+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780038",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780041",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151347327\n\n   > And another question (OOT), can we build and array from a dictionary array?\r\n   \r\n   You can, for example by using the take function (`take(values, indices)`).\n\n\n",
                    "created": "2022-06-09T16:27:07.206+0000",
                    "updated": "2022-06-09T16:27:07.206+0000",
                    "started": "2022-06-09T16:27:07.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780041",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151363802\n\n   At the end, to avoid doing cast, I'm using stoull to get the index. Should I add test with other types of values on dictionary?\n\n\n",
                    "created": "2022-06-09T16:45:40.054+0000",
                    "updated": "2022-06-09T16:45:40.054+0000",
                    "started": "2022-06-09T16:45:40.053+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780049",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780053",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151370079\n\n   You certainly don't want to go through `GetScalar` or string conversion as that will exhibit very bad performance.\n\n\n",
                    "created": "2022-06-09T16:53:19.942+0000",
                    "updated": "2022-06-09T16:53:19.942+0000",
                    "started": "2022-06-09T16:53:19.942+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780053",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780054",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151372579\n\n   Got it, so which is the best way of getting the index?\n\n\n",
                    "created": "2022-06-09T16:56:08.426+0000",
                    "updated": "2022-06-09T16:56:08.426+0000",
                    "started": "2022-06-09T16:56:08.426+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780054",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/780055",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1151374775\n\n   You would probably have to cast the indices to the concrete array type :-)\n\n\n",
                    "created": "2022-06-09T16:58:42.251+0000",
                    "updated": "2022-06-09T16:58:42.251+0000",
                    "started": "2022-06-09T16:58:42.251+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "780055",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/783049",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1160624398\n\n   @pitrou I cast index array to concrete type :)\n\n\n",
                    "created": "2022-06-20T16:06:43.405+0000",
                    "updated": "2022-06-20T16:06:43.405+0000",
                    "started": "2022-06-20T16:06:43.404+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "783049",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786576",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911013587\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_sort_test.cc:\n##########\n@@ -352,6 +352,17 @@ TEST(ArraySortIndicesFunction, Array) {\n   expected = ArrayFromJSON(uint64(), \"[2, 4, 6, 1, 0, 3, 5]\");\n   ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {arr}, &options));\n   AssertDatumsEqual(expected, actual, /*verbose=*/true);\n+\n+  // Dictionary Array\n+  auto dict_arr = DictArrayFromJSON(dictionary(uint64(), utf8()), \"[0, null, 1, 0, 2, 3]\",\n+                                    \"[ \\\"b\\\", null, \\\"c\\\", \\\"a\\\"]\");\n+  expected = ArrayFromJSON(uint64(), \"[5, 0, 3, 4, 1, 2]\");\n+  ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}));\n+  AssertDatumsEqual(expected, actual, /*verbose=*/true);\n+\n+  expected = ArrayFromJSON(uint64(), \"[1, 2, 4, 0, 3, 5]\");\n+  ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}, &options));\n+  AssertDatumsEqual(expected, actual, /*verbose=*/true);\n\nReview Comment:\n   ```suggestion\r\n   }\r\n   \r\n   TEST(ArraySortIndicesFunction, DictionaryArray) {\r\n     // Dictionary Array ([\"b\", null, null, null, \"b\", \"c\", \"a\"])\r\n     auto dict_arr =\r\n         DictArrayFromJSON(dictionary(uint64(), utf8()), \"[0, null, 1, null, 0, 2, 3]\",\r\n                           \"[ \\\"b\\\", null, \\\"c\\\", \\\"a\\\"]\");\r\n     auto expected = ArrayFromJSON(uint64(), \"[6, 0, 4, 5, 1, 2, 3]\");\r\n     ASSERT_OK_AND_ASSIGN(auto actual, CallFunction(\"array_sort_indices\", {dict_arr}));\r\n     AssertDatumsEqual(expected, actual, /*verbose=*/true);\r\n   \r\n     ArraySortOptions options{SortOrder::Ascending, NullPlacement::AtStart};\r\n     expected = ArrayFromJSON(uint64(), \"[1, 2, 3, 6, 0, 4, 5]\");\r\n     ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}, &options));\r\n     AssertDatumsEqual(expected, actual, /*verbose=*/true);\r\n   \r\n     options.order = SortOrder::Descending;\r\n     expected = ArrayFromJSON(uint64(), \"[1, 2, 3, 5, 0, 4, 6]\");\r\n     ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}, &options));\r\n     AssertDatumsEqual(expected, actual, /*verbose=*/true);\r\n   \r\n     options.null_placement = NullPlacement::AtEnd;\r\n     expected = ArrayFromJSON(uint64(), \"[5, 0, 4, 6, 1, 2, 3]\");\r\n     ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}, &options));\r\n     AssertDatumsEqual(expected, actual, /*verbose=*/true);\r\n   ```\n\n\n\n",
                    "created": "2022-06-30T13:15:48.156+0000",
                    "updated": "2022-06-30T13:15:48.156+0000",
                    "started": "2022-06-30T13:15:48.156+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786576",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786578",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911021587\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_sort_test.cc:\n##########\n@@ -352,6 +352,17 @@ TEST(ArraySortIndicesFunction, Array) {\n   expected = ArrayFromJSON(uint64(), \"[2, 4, 6, 1, 0, 3, 5]\");\n   ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {arr}, &options));\n   AssertDatumsEqual(expected, actual, /*verbose=*/true);\n+\n+  // Dictionary Array\n+  auto dict_arr = DictArrayFromJSON(dictionary(uint64(), utf8()), \"[0, null, 1, 0, 2, 3]\",\n+                                    \"[ \\\"b\\\", null, \\\"c\\\", \\\"a\\\"]\");\n+  expected = ArrayFromJSON(uint64(), \"[5, 0, 3, 4, 1, 2]\");\n+  ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}));\n+  AssertDatumsEqual(expected, actual, /*verbose=*/true);\n+\n+  expected = ArrayFromJSON(uint64(), \"[1, 2, 4, 0, 3, 5]\");\n+  ASSERT_OK_AND_ASSIGN(actual, CallFunction(\"array_sort_indices\", {dict_arr}, &options));\n+  AssertDatumsEqual(expected, actual, /*verbose=*/true);\n\nReview Comment:\n   Also, the tests should probably try all possible dictionary index types, not just `uint64`.\n\n\n\n",
                    "created": "2022-06-30T13:22:53.546+0000",
                    "updated": "2022-06-30T13:22:53.546+0000",
                    "started": "2022-06-30T13:22:53.545+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786578",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786579",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911022350\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n+        auto tmp_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(i));\n+        auto tmp_val = values->GetScalar(tmp_idx);\n+        if (cur_val != tmp_val) {\n+          cur = i;\n+          cur_val = tmp_val;\n+        }\n+        sort_order[tmp_idx] = cur;\n+      }\n+\n+      std::stable_sort(\n+          this->p.non_nulls_begin, this->p.non_nulls_end,\n+          [&](uint64_t left, uint64_t right) {\n+            const auto lhs = GetView::LogicalValue(indices_array.GetView(left - offset));\n+            const auto rhs = GetView::LogicalValue(indices_array.GetView(right - offset));\n+            return sort_order[lhs] < sort_order[rhs];\n+          });\n+\n+      return Status::OK();\n+    }\n+\n+    Result<NullPartitionResult> Make(const std::shared_ptr<DataType>& index_type) {\n+      RETURN_NOT_OK(VisitTypeInline(*index_type, this));\n+      return std::move(p);\n+    }\n+  };\n+\n+ public:\n+  NullPartitionResult operator()(uint64_t* indices_begin, uint64_t* indices_end,\n+                                 const Array& array, int64_t offset,\n+                                 const ArraySortOptions& options) {\n+    const auto& dict_array = checked_cast<const DictionaryArray&>(array);\n+    const auto& values = dict_array.dictionary();\n+    const auto& indices = dict_array.indices();\n+    const auto& index_type = dict_array.dict_type()->index_type();\n+\n+    NullPartitionResult p = PartitionNulls<DictionaryArray, StablePartitioner>(\n+        indices_begin, indices_end, dict_array, offset, options.null_placement);\n+    auto indices_array =\n+        CallFunction(\"array_sort_indices\", {values}, &options).ValueOrDie().make_array();\n+\n+    const auto& indices_values = checked_cast<const UInt64Array&>(*indices_array);\n\nReview Comment:\n   This will fail if `index_type` is not `UInt64Type`. You should instead do the appropriate cast in `SortInternal` above.\n\n\n\n",
                    "created": "2022-06-30T13:23:43.706+0000",
                    "updated": "2022-06-30T13:23:43.706+0000",
                    "started": "2022-06-30T13:23:43.706+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786579",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786580",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911029964\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n\nReview Comment:\n   I don't understand what this loop is doing, can you elaborate?\r\n   IIRC, the plan was to first sort the dictionary values, then to get a sort order based on that. I don't see where the dictionary values get sorted...\n\n\n\n",
                    "created": "2022-06-30T13:30:29.723+0000",
                    "updated": "2022-06-30T13:30:29.723+0000",
                    "started": "2022-06-30T13:30:29.723+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786580",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786581",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911033985\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n\nReview Comment:\n   Note that we now have a Rank kernel which should make this easier, for example in Python:\r\n   ```python\r\n   >>> pc.rank([\"b\", None, \"b\", \"a\", None, \"c\"], tiebreaker=\"dense\")\r\n   <pyarrow.lib.UInt64Array object at 0x7ff8a7378dc0>\r\n   [\r\n     2,\r\n     4,\r\n     2,\r\n     1,\r\n     4,\r\n     3\r\n   ]\r\n   ```\r\n   \n\n\n\n",
                    "created": "2022-06-30T13:34:15.207+0000",
                    "updated": "2022-06-30T13:34:15.207+0000",
                    "started": "2022-06-30T13:34:15.206+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786581",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786582",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r911036210\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n+        auto tmp_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(i));\n+        auto tmp_val = values->GetScalar(tmp_idx);\n+        if (cur_val != tmp_val) {\n+          cur = i;\n+          cur_val = tmp_val;\n+        }\n+        sort_order[tmp_idx] = cur;\n+      }\n+\n+      std::stable_sort(\n+          this->p.non_nulls_begin, this->p.non_nulls_end,\n+          [&](uint64_t left, uint64_t right) {\n+            const auto lhs = GetView::LogicalValue(indices_array.GetView(left - offset));\n+            const auto rhs = GetView::LogicalValue(indices_array.GetView(right - offset));\n+            return sort_order[lhs] < sort_order[rhs];\n+          });\n+\n+      return Status::OK();\n+    }\n+\n+    Result<NullPartitionResult> Make(const std::shared_ptr<DataType>& index_type) {\n+      RETURN_NOT_OK(VisitTypeInline(*index_type, this));\n+      return std::move(p);\n+    }\n+  };\n+\n+ public:\n+  NullPartitionResult operator()(uint64_t* indices_begin, uint64_t* indices_end,\n+                                 const Array& array, int64_t offset,\n+                                 const ArraySortOptions& options) {\n+    const auto& dict_array = checked_cast<const DictionaryArray&>(array);\n+    const auto& values = dict_array.dictionary();\n+    const auto& indices = dict_array.indices();\n+    const auto& index_type = dict_array.dict_type()->index_type();\n+\n+    NullPartitionResult p = PartitionNulls<DictionaryArray, StablePartitioner>(\n+        indices_begin, indices_end, dict_array, offset, options.null_placement);\n+    auto indices_array =\n+        CallFunction(\"array_sort_indices\", {values}, &options).ValueOrDie().make_array();\n+\n+    const auto& indices_values = checked_cast<const UInt64Array&>(*indices_array);\n+    DictionaryInternal visitor = {p, values, indices, indices_values, options, offset};\n+\n+    return visitor.Make(index_type).ValueOrDie();\n\nReview Comment:\n   Ideally we wouldn't abort on error but simply bubble the error up. This may require adding a separate initialization method to ArraySort implementations.\n\n\n\n",
                    "created": "2022-06-30T13:36:15.489+0000",
                    "updated": "2022-06-30T13:36:15.489+0000",
                    "started": "2022-06-30T13:36:15.489+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786582",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/786583",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "pitrou commented on PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#issuecomment-1171230531\n\n   @ArianaVillegas I'm sorry for the delay (was on a trip then got sick :-(). I posted a couple comments; I don't know if they make sense to you, feel free to ask for more guidance if needed!\n\n\n",
                    "created": "2022-06-30T13:36:53.161+0000",
                    "updated": "2022-06-30T13:36:53.161+0000",
                    "started": "2022-06-30T13:36:53.161+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "786583",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/787687",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r913235196\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n+        auto tmp_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(i));\n+        auto tmp_val = values->GetScalar(tmp_idx);\n+        if (cur_val != tmp_val) {\n+          cur = i;\n+          cur_val = tmp_val;\n+        }\n+        sort_order[tmp_idx] = cur;\n+      }\n+\n+      std::stable_sort(\n+          this->p.non_nulls_begin, this->p.non_nulls_end,\n+          [&](uint64_t left, uint64_t right) {\n+            const auto lhs = GetView::LogicalValue(indices_array.GetView(left - offset));\n+            const auto rhs = GetView::LogicalValue(indices_array.GetView(right - offset));\n+            return sort_order[lhs] < sort_order[rhs];\n+          });\n+\n+      return Status::OK();\n+    }\n+\n+    Result<NullPartitionResult> Make(const std::shared_ptr<DataType>& index_type) {\n+      RETURN_NOT_OK(VisitTypeInline(*index_type, this));\n+      return std::move(p);\n+    }\n+  };\n+\n+ public:\n+  NullPartitionResult operator()(uint64_t* indices_begin, uint64_t* indices_end,\n+                                 const Array& array, int64_t offset,\n+                                 const ArraySortOptions& options) {\n+    const auto& dict_array = checked_cast<const DictionaryArray&>(array);\n+    const auto& values = dict_array.dictionary();\n+    const auto& indices = dict_array.indices();\n+    const auto& index_type = dict_array.dict_type()->index_type();\n+\n+    NullPartitionResult p = PartitionNulls<DictionaryArray, StablePartitioner>(\n+        indices_begin, indices_end, dict_array, offset, options.null_placement);\n+    auto indices_array =\n+        CallFunction(\"array_sort_indices\", {values}, &options).ValueOrDie().make_array();\n+\n+    const auto& indices_values = checked_cast<const UInt64Array&>(*indices_array);\n\nReview Comment:\n   I think this should work because it is sorting values array, and as far as I know the output array is of UInt64 type. Probably I should change `indices_array` to `values_array` to avoid confusion.\n\n\n\n",
                    "created": "2022-07-04T19:12:25.616+0000",
                    "updated": "2022-07-04T19:12:25.616+0000",
                    "started": "2022-07-04T19:12:25.616+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787687",
                    "issueId": "13406438"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/worklog/787698",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=githubbot",
                        "name": "githubbot",
                        "key": "githubbot",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?avatarId=10452",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&avatarId=10452",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&avatarId=10452",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&avatarId=10452"
                        },
                        "displayName": "ASF GitHub Bot",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "comment": "ArianaVillegas commented on code in PR #13334:\nURL: https://github.com/apache/arrow/pull/13334#discussion_r913265623\n\n\n##########\ncpp/src/arrow/compute/kernels/vector_array_sort.cc:\n##########\n@@ -172,6 +173,85 @@ class ArrayCompareSorter {\n   }\n };\n \n+template <>\n+class ArrayCompareSorter<DictionaryType> {\n+  struct DictionaryInternal {\n+    NullPartitionResult p;\n+    const std::shared_ptr<Array>& values;\n+    const std::shared_ptr<Array>& indices;\n+    const UInt64Array& indices_values;\n+    const ArraySortOptions& options;\n+    int64_t offset;\n+\n+    Status Visit(const DataType& index_type) {\n+      return Status::TypeError(\"Dictionary sorting not supported for index type \",\n+                               index_type.ToString());\n+    }\n+\n+    template <typename IndexType>\n+    enable_if_t<is_integer_type<IndexType>::value, Status> Visit(\n+        const IndexType& index_type) {\n+      return SortInternal<IndexType>();\n+    }\n+\n+    template <typename IndexType>\n+    Status SortInternal() {\n+      using ArrayType = typename TypeTraits<IndexType>::ArrayType;\n+      using GetView = GetViewType<IndexType>;\n+      const auto& indices_array = checked_cast<const ArrayType&>(*indices);\n+\n+      std::vector<uint64_t> sort_order(indices_values.length());\n+      uint64_t cur = 0;\n+      auto cur_idx = GetViewType<UInt64Type>::LogicalValue(indices_values.GetView(cur));\n+      auto cur_val = values->GetScalar(cur_idx);\n+      for (int i = 0; i < indices_values.length(); i++) {\n\nReview Comment:\n   This loop is assigning the same label to the same values. And I think I can use rank instead of that loop, I'll go for that change.\n\n\n\n",
                    "created": "2022-07-04T21:03:23.385+0000",
                    "updated": "2022-07-04T21:03:23.385+0000",
                    "started": "2022-07-04T21:03:23.385+0000",
                    "timeSpent": "10m",
                    "timeSpentSeconds": 600,
                    "id": "787698",
                    "issueId": "13406438"
                }
            ]
        },
        "customfield_12313920": null,
        "issuetype": {
            "self": "https://issues.apache.org/jira/rest/api/2/issuetype/4",
            "id": "4",
            "description": "An improvement or enhancement to an existing feature or task.",
            "iconUrl": "https://issues.apache.org/jira/secure/viewavatar?size=xsmall&avatarId=21140&avatarType=issuetype",
            "name": "Improvement",
            "subtask": false,
            "avatarId": 21140
        },
        "timespent": 22200,
        "customfield_12314020": "{summaryBean=com.atlassian.jira.plugin.devstatus.rest.SummaryBean@4fd707a3[summary={pullrequest=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@5c8c3161[overall=PullRequestOverallBean{stateCount=0, state='OPEN', details=PullRequestOverallDetails{openCount=0, mergedCount=0, declinedCount=0}},byInstanceType={}], build=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@4cf9fbb8[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BuildOverallBean@71c3dc7f[failedBuildCount=0,successfulBuildCount=0,unknownBuildCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], review=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@38189300[overall=com.atlassian.jira.plugin.devstatus.summary.beans.ReviewsOverallBean@23ace2b2[stateCount=0,state=<null>,dueDate=<null>,overDue=false,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], deployment-environment=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@208be944[overall=com.atlassian.jira.plugin.devstatus.summary.beans.DeploymentOverallBean@4f44f90e[topEnvironments=[],showProjects=false,successfulCount=0,count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], repository=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@33b8e375[overall=com.atlassian.jira.plugin.devstatus.summary.beans.CommitOverallBean@77c52ec2[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}], branch=com.atlassian.jira.plugin.devstatus.rest.SummaryItemBean@8fb38b7[overall=com.atlassian.jira.plugin.devstatus.summary.beans.BranchOverallBean@601f3c2f[count=0,lastUpdated=<null>,lastUpdatedTimestamp=<null>],byInstanceType={}]},errors=[],configErrors=[]], devSummaryJson={\"cachedValue\":{\"errors\":[],\"configErrors\":[],\"summary\":{\"pullrequest\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":\"OPEN\",\"details\":{\"openCount\":0,\"mergedCount\":0,\"declinedCount\":0,\"total\":0},\"open\":true},\"byInstanceType\":{}},\"build\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"failedBuildCount\":0,\"successfulBuildCount\":0,\"unknownBuildCount\":0},\"byInstanceType\":{}},\"review\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"stateCount\":0,\"state\":null,\"dueDate\":null,\"overDue\":false,\"completed\":false},\"byInstanceType\":{}},\"deployment-environment\":{\"overall\":{\"count\":0,\"lastUpdated\":null,\"topEnvironments\":[],\"showProjects\":false,\"successfulCount\":0},\"byInstanceType\":{}},\"repository\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}},\"branch\":{\"overall\":{\"count\":0,\"lastUpdated\":null},\"byInstanceType\":{}}}},\"isStale\":false}}",
        "customfield_12314141": null,
        "customfield_12314140": null,
        "project": {
            "self": "https://issues.apache.org/jira/rest/api/2/project/12319525",
            "id": "12319525",
            "key": "ARROW",
            "name": "Apache Arrow",
            "projectTypeKey": "software",
            "avatarUrls": {
                "48x48": "https://issues.apache.org/jira/secure/projectavatar?pid=12319525&avatarId=10011",
                "24x24": "https://issues.apache.org/jira/secure/projectavatar?size=small&pid=12319525&avatarId=10011",
                "16x16": "https://issues.apache.org/jira/secure/projectavatar?size=xsmall&pid=12319525&avatarId=10011",
                "32x32": "https://issues.apache.org/jira/secure/projectavatar?size=medium&pid=12319525&avatarId=10011"
            },
            "projectCategory": {
                "self": "https://issues.apache.org/jira/rest/api/2/projectCategory/13960",
                "id": "13960",
                "description": "Apache Arrow",
                "name": "Arrow"
            }
        },
        "aggregatetimespent": 22200,
        "customfield_12312520": null,
        "customfield_12312521": "Thu May 19 17:09:11 UTC 2022",
        "customfield_12314422": null,
        "customfield_12314421": null,
        "customfield_12314146": null,
        "customfield_12314420": null,
        "customfield_12314145": null,
        "customfield_12314144": null,
        "customfield_12314143": null,
        "resolutiondate": null,
        "workratio": -1,
        "customfield_12312923": null,
        "customfield_12312920": null,
        "customfield_12312921": null,
        "watches": {
            "self": "https://issues.apache.org/jira/rest/api/2/issue/ARROW-14314/watchers",
            "watchCount": 4,
            "isWatching": false
        },
        "created": "2021-10-13T20:55:28.000+0000",
        "updated": "2022-10-20T04:59:21.000+0000",
        "timeoriginalestimate": null,
        "description": "From R, taking the stock {{mtcars}} dataset and giving it a dictionary type column:\r\n\r\n{code}\r\nmtcars %>% \r\n  mutate(cyl = as.factor(cyl)) %>% \r\n  Table$create() %>% \r\n  arrange(cyl) %>% \r\n  collect()\r\n\r\nError: Type error: Sorting not supported for type dictionary<values=string, indices=int8, ordered=0>\r\n../src/arrow/compute/kernels/vector_array_sort.cc:427  VisitTypeInline(type, this)\r\n../src/arrow/compute/kernels/vector_sort.cc:148  GetArraySorter(*physical_type_)\r\n../src/arrow/compute/kernels/vector_sort.cc:1206  sorter.Sort()\r\n../src/arrow/compute/api_vector.cc:259  CallFunction(\"sort_indices\", {datum}, &options, ctx)\r\n../src/arrow/compute/exec/order_by_impl.cc:53  SortIndices(table, options_, ctx_)\r\n../src/arrow/compute/exec/sink_node.cc:292  impl_->DoFinish()\r\n../src/arrow/compute/exec/exec_plan.cc:297  iterator_.Next()\r\n../src/arrow/record_batch.cc:318  ReadNext(&batch)\r\n../src/arrow/record_batch.cc:329  ReadAll(&batches)\r\n{code}",
        "customfield_10010": null,
        "timetracking": {
            "remainingEstimate": "0h",
            "timeSpent": "6h 10m",
            "remainingEstimateSeconds": 0,
            "timeSpentSeconds": 22200
        },
        "customfield_12314523": null,
        "customfield_12314127": null,
        "customfield_12314522": null,
        "customfield_12314126": null,
        "customfield_12314521": null,
        "customfield_12314125": null,
        "customfield_12314520": null,
        "customfield_12314124": null,
        "attachment": [],
        "customfield_12312340": null,
        "customfield_12314123": null,
        "customfield_12312341": null,
        "customfield_12312220": null,
        "customfield_12314122": null,
        "customfield_12314121": null,
        "customfield_12314120": null,
        "customfield_12314129": null,
        "customfield_12314524": null,
        "customfield_12314128": null,
        "summary": "[C++] Sorting dictionary array not implemented",
        "customfield_12314130": null,
        "customfield_12310291": null,
        "customfield_12310290": null,
        "customfield_12314138": null,
        "customfield_12314137": null,
        "environment": null,
        "customfield_12314136": null,
        "customfield_12314135": null,
        "customfield_12311020": null,
        "customfield_12314134": null,
        "duedate": null,
        "customfield_12314132": null,
        "customfield_12314131": null,
        "comment": {
            "comments": [
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17445377",
                    "id": "17445377",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "It should be possible to do this efficiently:\r\n\r\n* generate an array of ordinals from the dictionary values: for example {{[\"c\", \"a\", \"b\"]}} would generate {{[2, 0, 1]}}, while {{[\"c\", \"a\", \"b\", \"b\"]}} would generate {{[3, 0, 1, 1]}} (notice that equal values should give the same ordinal, for stability)\r\n* generate a dense array by indexing the computed ordinals with the generated indices\r\n* sort the dense array\r\n\r\nOne complication is to deal with nulls inside the dictionary values, so that stability is enforced for them as well.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2021-11-17T17:12:02.569+0000",
                    "updated": "2021-11-17T17:12:02.569+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17534326",
                    "id": "17534326",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "cc [~ArianaVillegas] if you like playing with algorithms.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-10T13:04:03.442+0000",
                    "updated": "2022-05-10T13:04:03.442+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17536350",
                    "id": "17536350",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou]\u00a0I have a couple of questions about this issue:\r\n * Currently, how are nulls handled in a dictionary array?\r\n * Can we do something like this?\r\n ** Given the following dictionary:\r\n{code:java}\r\noriginal_array: ['a', 'c', 'b', 'b', 'a']\r\n\r\nvalues: ['a', 'c', 'b']\r\nindices: [0, 1, 2, 2, 0]{code}\r\n\r\n * \r\n ** Get sort_indices of values, replace indices and values\r\n{code:java}\r\nvalues_sorted_idx: [0, 2, 1]\r\n\r\nindices: [0, 2, 1, 1, 0]\r\nvalues: ['a', 'b', 'c']{code}\r\n\r\n * \r\n ** And finally, sort the indices\r\n{code:java}\r\nindices: [0, 0, 1, 1, 2]\r\n{code}\r\n\r\nAnd, if I remember correctly, current sort_indices handles nulls and send them to the end of the array. Please let me know if I'm misunderstanding something.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-12T21:28:00.268+0000",
                    "updated": "2022-05-12T21:28:57.762+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17537492",
                    "id": "17537492",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~ArianaVillegas] Nulls in a dictionary array can be represented in two different ways:\r\n\r\n* nulls in the dictionary values, e.g.:\r\n{code}\r\nvalues: ['a', null, 'b', 'c']\r\nindices: [0, 1, 1, 0, 2, 3]\r\n{code}\r\n* nulls in the dictionary indices, e.g.:\r\n{code}\r\nvalues: ['a', 'b', 'c']\r\nindices: [0, null, null, 0, 1, 2]\r\n{code}\r\n\r\nAlso, it can be a mixture of both, such as:\r\n{code}\r\nvalues: ['a', null, 'b', 'c']\r\nindices: [0, 1, null, 0, 2, 3]\r\n{code}\r\n\r\n(all three examples have the same value once decoded)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-16T11:34:27.209+0000",
                    "updated": "2022-05-16T11:35:12.167+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17537495",
                    "id": "17537495",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "[~ArianaVillegas] Sorting the dictionary values is not exactly enough, because you must care about stability as well.\r\nFor example this input:\r\n\r\n{code}\r\nvalues: ['c', 'a', 'b', 'b']\r\nindices: [0, 1, 3, 2, 3, 0]\r\n{code}\r\n\r\nShould generate the following sort indices:\r\n{code}\r\nsort_indices: [1, 2, 3, 4, 0, 5]\r\n{code}\r\n\r\n(note \"2, 3, 4\", *not* \"3, 2, 4)",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-16T11:41:40.633+0000",
                    "updated": "2022-05-16T11:41:40.633+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17537609",
                    "id": "17537609",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "[~apitrou], maybe this is a naive question, but why sort_indices: [1, 3, 2, 4, 0, 5] is wrong and [1, 2, 3, 4, 0, 5] is right?\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-16T15:42:01.027+0000",
                    "updated": "2022-05-16T15:42:01.027+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17537625",
                    "id": "17537625",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "Because the sort must be stable. The values at indices [2, 3, 4] all have the value \"b\", so they must stay in the same order.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-16T16:05:33.809+0000",
                    "updated": "2022-05-16T16:06:21.043+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17537728",
                    "id": "17537728",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ok, I got it.\r\n\r\n[~apitrou] In that case, I think we can do something like this:\r\n * Given the following dictionary:\r\n{code:java}\r\nvalues: ['c', 'a', 'b', 'b']\r\nindices: [0, 1, 3, 2, 3, 0]\r\n{code}\r\n\r\n * Get sort_idx from values and transform it to give the same idx to same values\r\n{code:java}\r\nvalues_sort_idx = [1, 2, 3, 0]\r\ntransformed_sort_idx = [3, 0, 1, 1]{code}\r\n\r\n * Get sort_idx from transformed indices\r\n{code:java}\r\ntransformed_indices = [3, 0, 1, 1, 1, 3]\r\nsort_indices = [1, 2, 3, 4, 0, 5]{code}\r\n\r\nWith nulls, it will work similarly:\r\n * Given the following dictionary:\r\n{code:java}\r\nvalues: ['a', null, 'b', 'c']\r\nindices: [0, 1, null, 0, 2, 3]\r\n{code}\r\n\r\n * Get sort_idx from values and transform it to give the same idx to same values\r\n{code:java}\r\nvalues_sort_idx = [0, 2, 3, 1]\r\ntransformed_sort_idx = [0, 3, 1, 2]\r\n{code}\r\n\r\n * Get sort_idx from transformed indices\r\n{code:java}\r\ntransformed_indices = [0, 3, null, 0, 1, 2]\r\nsort_indices = [0, 3, 4, 5, 1, 2]{code}\r\n\u00a0",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-16T18:52:24.621+0000",
                    "updated": "2022-05-16T18:52:40.457+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17538262",
                    "id": "17538262",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "IIUC, {{transformed_indices = take(transformed_sort_idx, indices)}} and {{sort_indices = sort_indices(transformed_indices)}} ?\r\n\r\nThe remaining problem is, what happens with the following dictionary:\r\n{code}\r\nvalues: ['a', null, 'b', 'c']\r\nindices: [0, null, 1, 0, 2, 3]\r\n{code}\r\n\r\nIt should also get {{sort_indices = [0, 3, 4, 5, 1, 2]}} as an answer. Does it?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-17T15:01:29.998+0000",
                    "updated": "2022-05-17T15:01:29.998+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17538340",
                    "id": "17538340",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "{quote}{{transformed_indices = take(transformed_sort_idx, indices)}}\u00a0and\u00a0{{sort_indices = sort_indices(transformed_indices)}}\u00a0?\r\n{quote}\r\nYes.\r\n{quote}It should also get sort_indices = [0, 3, 4, 5, 1, 2] as an answer. Does it?\r\n{quote}\r\nRight now, it doesn't, it result is: [0, 3, 4, 5, 2, 1]\r\n\r\nBut to avoid that, we can replace null values into indices, so the problem will look like this:\r\n\r\nvalues: ['a', null, 'b', 'c']\r\n\r\nindices: [0, null, null, 0, 2, 3]\r\n\r\n\u00a0\r\n\r\n[~apitrou], btw, why do we allow nulls in values? Shouldn't it be easier to have them only in indices?",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-17T17:17:16.207+0000",
                    "updated": "2022-05-17T19:46:28.584+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17538702",
                    "id": "17538702",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "bq. But to avoid that, we can replace null values into indices, so the problem will look like this:\r\n\r\nWe can indeed. Another possibility is to partition nulls away first, then work on non-null values (partitioning is how the sorting implementation already deals with null values for other data types). That might be a bit faster as well.\r\n\r\nbq. btw, why do we allow nulls in values? Shouldn't it be easier to have them only in indices?\r\n\r\nProbably for compatibility with various data sources.\r\n",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-18T10:02:40.956+0000",
                    "updated": "2022-05-18T10:02:40.956+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17539672",
                    "id": "17539672",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Where is the sorting implementation?\u00a0\r\n{quote}We can indeed. Another possibility is to partition nulls away first, then work on non-null values (partitioning is how the sorting implementation already deals with null values for other data types). That might be a bit faster as well.\r\n{quote}\r\nNice, so we'll first partition nulls away and just care about non-nulls values, and at the end just merge both.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-19T16:58:13.183+0000",
                    "updated": "2022-05-19T16:58:13.183+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17539680",
                    "id": "17539680",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "body": "You can find the sorting implementations in {{arrow/compute/kernels/vector_sort*}} as well as {{vector_array_sort.cc}}.\r\nSpecifically, the current null partitioning implementations are in {{vector_sort_internal.h}}, but none of them deals with dictionary arrays, so you'll have to add your own.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=apitrou",
                        "name": "apitrou",
                        "key": "pitrou",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=pitrou&avatarId=35049",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=pitrou&avatarId=35049",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=pitrou&avatarId=35049",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=pitrou&avatarId=35049"
                        },
                        "displayName": "Antoine Pitrou",
                        "active": true,
                        "timeZone": "Europe/Paris"
                    },
                    "created": "2022-05-19T17:04:23.321+0000",
                    "updated": "2022-05-19T17:04:23.321+0000"
                },
                {
                    "self": "https://issues.apache.org/jira/rest/api/2/issue/13406438/comment/17539684",
                    "id": "17539684",
                    "author": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "body": "Ok, I'll try to implement our idea and let you know as soon as I have something you can review.",
                    "updateAuthor": {
                        "self": "https://issues.apache.org/jira/rest/api/2/user?username=ArianaVillegas",
                        "name": "ArianaVillegas",
                        "key": "JIRAUSER280694",
                        "avatarUrls": {
                            "48x48": "https://issues.apache.org/jira/secure/useravatar?ownerId=JIRAUSER280694&avatarId=50269",
                            "24x24": "https://issues.apache.org/jira/secure/useravatar?size=small&ownerId=JIRAUSER280694&avatarId=50269",
                            "16x16": "https://issues.apache.org/jira/secure/useravatar?size=xsmall&ownerId=JIRAUSER280694&avatarId=50269",
                            "32x32": "https://issues.apache.org/jira/secure/useravatar?size=medium&ownerId=JIRAUSER280694&avatarId=50269"
                        },
                        "displayName": "Ariana Villegas",
                        "active": true,
                        "timeZone": "Etc/UTC"
                    },
                    "created": "2022-05-19T17:09:11.348+0000",
                    "updated": "2022-05-19T17:09:11.348+0000"
                }
            ],
            "maxResults": 14,
            "total": 14,
            "startAt": 0
        },
        "customfield_12311820": "0|z0vtoo:",
        "customfield_12314139": null
    }
}